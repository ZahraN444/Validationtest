{
  "openapi": "3.0.0",
  "info": {
    "title": "Autosc@nAPI",
    "contact": {},
    "version": "v1"
  },
  "servers": [
    {
      "url": "https://{defaultHost}",
      "variables": {
        "defaultHost": {
          "default": "www.example.com"
        }
      }
    }
  ],
  "paths": {
    "/api/Alarm/GetDayAlarm": {
      "get": {
        "tags": [
          "Alarm"
        ],
        "summary": "ApiAlarmGetDayAlarm_GET",
        "description": "",
        "operationId": "ApiAlarmGetDayAlarm_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Alarm/GetIdByDescription/{description}": {
      "get": {
        "tags": [
          "Alarm"
        ],
        "summary": "ApiAlarmGetIdByDescriptionByDescription_GET",
        "description": "",
        "operationId": "ApiAlarmGetIdByDescriptionByDescription_GET",
        "parameters": [
          {
            "name": "description",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Alarm/GetAlarmDetailByTransitId/{id}": {
      "get": {
        "tags": [
          "Alarm"
        ],
        "summary": "ApiAlarmGetAlarmDetailByTransitIdById_GET",
        "description": "",
        "operationId": "ApiAlarmGetAlarmDetailByTransitIdById_GET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.Alarm.Dto.SAT_AlarmDetailDto"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Alarm/AddAlarmStateAsync": {
      "post": {
        "tags": [
          "Alarm"
        ],
        "summary": "ApiAlarmAddAlarmStateAsync_POST",
        "description": "",
        "operationId": "ApiAlarmAddAlarmStateAsync_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Alarm.Dto.SAT_AlarmStateDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Alarm/GetAlarmSentById/{id}": {
      "get": {
        "tags": [
          "Alarm"
        ],
        "summary": "ApiAlarmGetAlarmSentByIdById_GET",
        "description": "",
        "operationId": "ApiAlarmGetAlarmSentByIdById_GET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Alarm.Dto.SAT_AlarmSentDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Alarm/GetAlarmState/{alarmId}": {
      "get": {
        "tags": [
          "Alarm"
        ],
        "summary": "ApiAlarmGetAlarmStateByAlarmId_GET",
        "description": "",
        "operationId": "ApiAlarmGetAlarmStateByAlarmId_GET",
        "parameters": [
          {
            "name": "alarmId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.Alarm.Dto.SAT_AlarmStateDto"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Alarm/GetAlarmHistory/{id}": {
      "get": {
        "tags": [
          "Alarm"
        ],
        "summary": "ApiAlarmGetAlarmHistoryById_GET",
        "description": "",
        "operationId": "ApiAlarmGetAlarmHistoryById_GET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Alarm.Dto.SAT_AlarmStateDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Alarm/GetAlarmsByTransitId/{id}": {
      "get": {
        "tags": [
          "Alarm"
        ],
        "summary": "ApiAlarmGetAlarmsByTransitIdById_GET",
        "description": "",
        "operationId": "ApiAlarmGetAlarmsByTransitIdById_GET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Core.Dto.SAT_AlarmDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Alarm/Search": {
      "get": {
        "tags": [
          "Alarm"
        ],
        "summary": "ApiAlarmSearch_GET",
        "description": "",
        "operationId": "ApiAlarmSearch_GET",
        "parameters": [
          {
            "name": "DateFrom",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Exported",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "UniquePlates",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "HandledState",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "Limit",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "IncludeInsurance",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IncludeInspection",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "SelectedGates",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Alarm/Export": {
      "post": {
        "tags": [
          "Alarm"
        ],
        "summary": "ApiAlarmExport_POST",
        "description": "",
        "operationId": "ApiAlarmExport_POST",
        "parameters": [
          {
            "name": "DateFrom",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Exported",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "UniquePlates",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "HandledState",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "Limit",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "IncludeInsurance",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IncludeInspection",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "SelectedGates",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/attachments/download/{guid}": {
      "get": {
        "tags": [
          "AuthorizationAttachments"
        ],
        "summary": "ApiZtlAttachmentsDownloadByGuid_GET",
        "description": "",
        "operationId": "ApiZtlAttachmentsDownloadByGuid_GET",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/attachments/{guid}": {
      "get": {
        "tags": [
          "AuthorizationAttachments"
        ],
        "summary": "ApiZtlAttachmentsByGuid_GET",
        "description": "",
        "operationId": "ApiZtlAttachmentsByGuid_GET",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorizationAttachment.Dto.AuthorizationAttachmentDto"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/attachments/upload": {
      "post": {
        "tags": [
          "AuthorizationAttachments"
        ],
        "summary": "ApiZtlAttachmentsUpload_POST",
        "description": "",
        "operationId": "ApiZtlAttachmentsUpload_POST",
        "parameters": [
          {
            "name": "ContentType",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ContentDisposition",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Headers",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "object",
              "additionalProperties": {}
            }
          },
          {
            "name": "Length",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Name",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FileName",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.FileUpload.Dto.FileUploadResult"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/Backup/DeleteAllAndStore": {
      "get": {
        "tags": [
          "Backup"
        ],
        "summary": "ApiBackupDeleteAllAndStore_GET",
        "description": "",
        "operationId": "ApiBackupDeleteAllAndStore_GET",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/Backup/CreateTablesClone": {
      "get": {
        "tags": [
          "Backup"
        ],
        "summary": "ApiBackupCreateTablesClone_GET",
        "description": "",
        "operationId": "ApiBackupCreateTablesClone_GET",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/api/redVelox/calibrations/{calibrationId}": {
      "get": {
        "tags": [
          "Calibration"
        ],
        "summary": "ApiRedVeloxCalibrationsByCalibrationId_GET",
        "description": "",
        "operationId": "ApiRedVeloxCalibrationsByCalibrationId_GET",
        "parameters": [
          {
            "name": "calibrationId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.RedVeloxCalibration.Dto.CalibrationResponse"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "Calibration"
        ],
        "summary": "ApiRedVeloxCalibrationsByCalibrationId_POST",
        "description": "",
        "operationId": "ApiRedVeloxCalibrationsByCalibrationId_POST",
        "parameters": [
          {
            "name": "calibrationId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.RedVeloxCalibration.Dto.CalibrationRequest"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Calibration"
        ],
        "summary": "ApiRedVeloxCalibrationsByCalibrationId_DELETE",
        "description": "",
        "operationId": "ApiRedVeloxCalibrationsByCalibrationId_DELETE",
        "parameters": [
          {
            "name": "calibrationId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/redVelox/calibrations/by-camera": {
      "get": {
        "tags": [
          "Calibration"
        ],
        "summary": "ApiRedVeloxCalibrationsByCamera_GET",
        "description": "",
        "operationId": "ApiRedVeloxCalibrationsByCamera_GET",
        "parameters": [
          {
            "name": "CameraIds",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "CustomerId",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CalibrationStatus",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/WSAutoscan.Application.RedVeloxCalibration.Dto.GetCalibrationsRequestStatus"
              }
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.RedVeloxCalibration.Dto.CalibrationByDeviceResponse"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/redVelox/calibrations": {
      "get": {
        "tags": [
          "Calibration"
        ],
        "summary": "ApiRedVeloxCalibrations_GET",
        "description": "",
        "operationId": "ApiRedVeloxCalibrations_GET",
        "parameters": [
          {
            "name": "CameraIds",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "CustomerId",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CalibrationStatus",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/WSAutoscan.Application.RedVeloxCalibration.Dto.GetCalibrationsRequestStatus"
              }
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.RedVeloxCalibration.Dto.CalibrationResponse"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/redVelox/calibrations/attachments/{guid}/{suiteId}": {
      "get": {
        "tags": [
          "CalibrationAttachment"
        ],
        "summary": "ApiRedVeloxCalibrationsAttachmentsByGuid_GET",
        "description": "",
        "operationId": "ApiRedVeloxCalibrationsAttachmentsByGuid_GET",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "suiteId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.RedVeloxCalibration.Dto.CalibrationAttachmentDto"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/redVelox/calibrations/attachments/download/{guid}/{suiteId}": {
      "get": {
        "tags": [
          "CalibrationAttachment"
        ],
        "summary": "ApiRedVeloxCalibrationsAttachmentsDownload_GET",
        "description": "",
        "operationId": "ApiRedVeloxCalibrationsAttachmentsDownload_GET",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "suiteId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/redVelox/calibrations/attachments/upload/{suiteId}": {
      "post": {
        "tags": [
          "CalibrationAttachment"
        ],
        "summary": "ApiRedVeloxCalibrationsAttachmentsUpload_POST",
        "description": "",
        "operationId": "ApiRedVeloxCalibrationsAttachmentsUpload_POST",
        "parameters": [
          {
            "name": "suiteId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ContentType",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ContentDisposition",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Headers",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "object",
              "additionalProperties": {}
            }
          },
          {
            "name": "Length",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Name",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FileName",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Camera/diagnostics": {
      "get": {
        "tags": [
          "Camera"
        ],
        "summary": "Usato nel monitoraggio",
        "description": "",
        "operationId": "Usatonelmonitoraggio",
        "parameters": [
          {
            "name": "refreshLastTransit",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/WSAutoscan.Core.Diagnostics.Camera.Status"
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Camera/CheckFaultFiltered": {
      "get": {
        "tags": [
          "Camera"
        ],
        "summary": "Verifica le cameere raggiungibili disponibili per l'utente",
        "description": "",
        "operationId": "Verificalecameereraggiungibilidisponibiliperl'utente",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Camera/DeleteDetectors": {
      "post": {
        "tags": [
          "Camera"
        ],
        "summary": "Cancella i detectors",
        "description": "",
        "operationId": "Cancellaidetectors",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "description": ""
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Core.Dto.DetectorsDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Camera/GetCamerasByCustomerId/{id}": {
      "get": {
        "tags": [
          "Camera"
        ],
        "summary": "Restituisce le camere disponibili per un ente",
        "description": "",
        "operationId": "Restituiscelecameredisponibiliperunente",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Diagnostics.Dto.AS_CameraDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Camera/ConnectCamera/{cameraId}": {
      "get": {
        "tags": [
          "Camera"
        ],
        "summary": "ApiCameraConnectCameraByCameraId_GET",
        "description": "",
        "operationId": "ApiCameraConnectCameraByCameraId_GET",
        "parameters": [
          {
            "name": "cameraId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.Transit.AssociationTopicDto"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Camera/ConnectCameraDttsis/{cameraId}": {
      "get": {
        "tags": [
          "Camera"
        ],
        "summary": "ApiCameraConnectCameraDttsisByCameraId_GET",
        "description": "",
        "operationId": "ApiCameraConnectCameraDttsisByCameraId_GET",
        "parameters": [
          {
            "name": "cameraId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.Transit.AssociationTopicDto"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Camera/DisconnectCameraDttsis/{cameraId}": {
      "get": {
        "tags": [
          "Camera"
        ],
        "summary": "ApiCameraDisconnectCameraDttsis_GET",
        "description": "",
        "operationId": "ApiCameraDisconnectCameraDttsis_GET",
        "parameters": [
          {
            "name": "cameraId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Camera": {
      "get": {
        "tags": [
          "Camera"
        ],
        "summary": "Restituisce il dizionario delle camera in base al suiteCode",
        "description": "",
        "operationId": "RestituisceildizionariodellecamerainbasealsuiteCode",
        "parameters": [
          {
            "name": "suite",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Diagnostics.Dto.AS_CameraDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Camera/GetDefaultParameters": {
      "get": {
        "tags": [
          "Camera"
        ],
        "summary": "Restituisce i parametri di default in base al modello e alla suite",
        "description": "",
        "operationId": "Restituisceiparametrididefaultinbasealmodelloeallasuite",
        "parameters": [
          {
            "name": "suiteId",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "cameraModel",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Camera.Dto.AS_RecordedCameraParameterDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Camera/GetCameraVeloxLimit/{cameraId}/{vehicleTypeId}/{transitId}": {
      "get": {
        "tags": [
          "Camera"
        ],
        "summary": "Restituisce i limiti di velocità di una camera",
        "description": "",
        "operationId": "Restituisceilimitidivelocitàdiunacamera",
        "parameters": [
          {
            "name": "cameraId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "vehicleTypeId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "transitId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Camera.Dto.AS_Camera_LimitDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Camera/GetAllCameras": {
      "get": {
        "tags": [
          "Camera"
        ],
        "summary": "Restituisce l'insieme delle camere disponibili per l'utente loggato",
        "description": "",
        "operationId": "Restituiscel'insiemedellecameredisponibiliperl'utenteloggato",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Diagnostics.Dto.AS_CameraDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Camera/GetCameraDetails/{id}": {
      "get": {
        "tags": [
          "Camera"
        ],
        "summary": "Restituisce i dati della camera relativa all'Id",
        "description": "",
        "operationId": "Restituisceidatidellacamerarelativaall'Id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.Diagnostics.Dto.AS_CameraDto"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Camera/GetSuitesByCameraId/{id}": {
      "get": {
        "tags": [
          "Camera"
        ],
        "summary": "Restituisce la suite relativa al cameraId - Attualmente non usato",
        "description": "",
        "operationId": "RestituiscelasuiterelativaalcameraId-Attualmentenonusato",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.User.Dto.AS_SuiteDto"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Camera/DisconnectCameraEnvClass/{cameraId}": {
      "get": {
        "tags": [
          "Camera"
        ],
        "summary": "ApiCameraDisconnectCameraEnvClass_GET",
        "description": "",
        "operationId": "ApiCameraDisconnectCameraEnvClass_GET",
        "parameters": [
          {
            "name": "cameraId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Camera/GetSuiteModulesForCamera/{userCustomerId}": {
      "get": {
        "tags": [
          "Camera"
        ],
        "summary": "Restituisce il modulo relativo ad una camera1",
        "description": "",
        "operationId": "Restituisceilmodulorelativoadunacamera1",
        "parameters": [
          {
            "name": "userCustomerId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.User.Dto.AS_SuiteDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Camera/GetSATCameras/{customerId}/{cameraId}": {
      "get": {
        "tags": [
          "Camera"
        ],
        "summary": "Restituisce l'insieme delle camera SAT disponibili per una eventuale dipendenza da parte di una camera ZTL",
        "description": "",
        "operationId": "Restituiscel'insiemedellecameraSATdisponibiliperunaeventualedipendenzadapartediunacameraZTL",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "cameraId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Diagnostics.Dto.AS_CustmerSATCameraDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Camera/AddOrUpdateCameraAsync": {
      "post": {
        "tags": [
          "Camera"
        ],
        "summary": "Aggiunge una nuova camera o modifica una esistente",
        "description": "",
        "operationId": "Aggiungeunanuovacameraomodificaunaesistente",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Diagnostics.Dto.AS_CameraDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Camera/DeleteCameraAsync": {
      "post": {
        "tags": [
          "Camera"
        ],
        "summary": "Elimina una camera esistente",
        "description": "",
        "operationId": "Eliminaunacameraesistente",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Id della camera",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "description": "Id della camera",
                "format": "int32"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Camera/GetCustomerByCameraId/{id}": {
      "get": {
        "tags": [
          "Camera"
        ],
        "summary": "Restituisce l'ente relativo al cameraId - Attualmente non usato",
        "description": "",
        "operationId": "Restituiscel'enterelativoalcameraId-Attualmentenonusato",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.Customer.Dto.AS_CustomerDto"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Camera/ConnectCameraScntt/{cameraId}": {
      "get": {
        "tags": [
          "Camera"
        ],
        "summary": "ApiCameraConnectCameraScnttByCameraId_GET",
        "description": "",
        "operationId": "ApiCameraConnectCameraScnttByCameraId_GET",
        "parameters": [
          {
            "name": "cameraId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.Transit.AssociationTopicDto"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Camera/ConnectCameraEnvClass/{cameraId}": {
      "get": {
        "tags": [
          "Camera"
        ],
        "summary": "ApiCameraConnectCameraEnvClassByCameraId_GET",
        "description": "",
        "operationId": "ApiCameraConnectCameraEnvClassByCameraId_GET",
        "parameters": [
          {
            "name": "cameraId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.Transit.AssociationTopicDto"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Camera/DisconnectCamera/{cameraId}": {
      "get": {
        "tags": [
          "Camera"
        ],
        "summary": "ApiCameraDisconnectCameraByCameraId_GET",
        "description": "",
        "operationId": "ApiCameraDisconnectCameraByCameraId_GET",
        "parameters": [
          {
            "name": "cameraId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Camera/GetAllCameraGates/{gateId}": {
      "get": {
        "tags": [
          "Camera"
        ],
        "summary": "Restituisce le camere usate da un varco - Attualmente non usato",
        "description": "",
        "operationId": "Restituiscelecamereusatedaunvarco-Attualmentenonusato",
        "parameters": [
          {
            "name": "gateId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Diagnostics.Dto.AS_CameraDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Camera/GetCameraBySitename/{sitename}": {
      "get": {
        "tags": [
          "Camera"
        ],
        "summary": "Restituisce una camera in base al sitename - Attualmente non usato",
        "description": "",
        "operationId": "Restituisceunacamerainbasealsitename-Attualmentenonusato",
        "parameters": [
          {
            "name": "sitename",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.Diagnostics.Dto.AS_CameraDto"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Camera/GetAllCameraModels": {
      "get": {
        "tags": [
          "Camera"
        ],
        "summary": "Restituisce i modelli di camere disponibili",
        "description": "",
        "operationId": "Restituisceimodellidicameredisponibili",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Diagnostics.Dto.AS_CameraModelDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Camera/CheckFault": {
      "get": {
        "tags": [
          "Camera"
        ],
        "summary": "Verifica le cameere raggiungibili",
        "description": "",
        "operationId": "Verificalecameereraggiungibili",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/api/Camera/UpdateDetectors": {
      "post": {
        "tags": [
          "Camera"
        ],
        "summary": "Aggiorna i detectors",
        "description": "",
        "operationId": "Aggiornaidetectors",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "description": ""
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Core.Dto.DetectorsDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Camera/ConnectCameraRedSpeed/{cameraId}": {
      "get": {
        "tags": [
          "Camera"
        ],
        "summary": "ApiCameraConnectCameraRedSpeedByCameraId_GET",
        "description": "",
        "operationId": "ApiCameraConnectCameraRedSpeedByCameraId_GET",
        "parameters": [
          {
            "name": "cameraId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.Transit.AssociationTopicDto"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Camera/GetSuiteModulesForCamera": {
      "get": {
        "tags": [
          "Camera"
        ],
        "summary": "Restituisce il modulo relativo ad una camera",
        "description": "",
        "operationId": "Restituisceilmodulorelativoadunacamera",
        "parameters": [
          {
            "name": "userCustomerId",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.User.Dto.AS_SuiteDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Camera/GetCameraLanes/{cameraId}/{transitId}": {
      "get": {
        "tags": [
          "Camera"
        ],
        "summary": "Restituisce le corsie relatie ad una camera",
        "description": "",
        "operationId": "Restituiscelecorsierelatieadunacamera",
        "parameters": [
          {
            "name": "cameraId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "transitId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Camera.Dto.AS_Camera_LaneDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Camera/clear-areas/{cameraId}": {
      "get": {
        "tags": [
          "Camera"
        ],
        "summary": "Restituisce le aree in chiaro relative ad una camera",
        "description": "",
        "operationId": "Restituisceleareeinchiarorelativeadunacamera",
        "parameters": [
          {
            "name": "cameraId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Camera.Dto.AS_Camera_ClearAreasDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Camera/GetLaneTypes": {
      "get": {
        "tags": [
          "Camera"
        ],
        "summary": "Restituisce i tipi di corsia",
        "description": "",
        "operationId": "Restituisceitipidicorsia",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Camera.Dto.AS_Camera_LaneTypeDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/CameraMaintenance/CurrentMaintenances": {
      "get": {
        "tags": [
          "CameraMaintenance"
        ],
        "summary": "Recupera lo stato di manutenzione attuale di tutte le camere",
        "description": "",
        "operationId": "Recuperalostatodimanutenzioneattualedituttelecamere",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/CameraMaintenance/Maintenance": {
      "post": {
        "tags": [
          "CameraMaintenance"
        ],
        "summary": "Starta la manutenzione per una determinata camera",
        "description": "",
        "operationId": "Startalamanutenzioneperunadeterminatacamera",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.CameraMaintenance.Dto.CameraMaintenanceRequestDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "get": {
        "tags": [
          "CameraMaintenanceNas"
        ],
        "summary": "Endpoint per recuperare le informazioni di manutenzione delle telecamere",
        "description": "",
        "operationId": "Endpointperrecuperareleinformazionidimanutenzionedelletelecamere",
        "parameters": [
          {
            "name": "netbiosnames",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/api/CameraMaintenance/Maintenance/{maintenanceId}": {
      "put": {
        "tags": [
          "CameraMaintenance"
        ],
        "summary": "Ferma la manutenzione per una determinata camera",
        "description": "",
        "operationId": "Fermalamanutenzioneperunadeterminatacamera",
        "parameters": [
          {
            "name": "maintenanceId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "CameraMaintenance"
        ],
        "summary": "ApiCameraMaintenanceMaintenance_DELETE",
        "description": "",
        "operationId": "ApiCameraMaintenanceMaintenance_DELETE",
        "parameters": [
          {
            "name": "maintenanceId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/CameraMaintenance/CountCurrentMaintenances": {
      "get": {
        "tags": [
          "CameraMaintenance"
        ],
        "summary": "ApiCameraMaintenanceCountCurrentMaintenances_GET",
        "description": "",
        "operationId": "ApiCameraMaintenanceCountCurrentMaintenances_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/CameraMaintenance/AllMaintenances/{cameraId}": {
      "get": {
        "tags": [
          "CameraMaintenance"
        ],
        "summary": "Recupera la history di tutte le camere",
        "description": "",
        "operationId": "Recuperalahistorydituttelecamere",
        "parameters": [
          {
            "name": "cameraId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/CameraMaintenance/UpdateMaintenanceInfo": {
      "post": {
        "tags": [
          "CameraMaintenanceNas"
        ],
        "summary": "ApiCameraMaintenanceUpdateMaintenanceInfo_POST",
        "description": "",
        "operationId": "ApiCameraMaintenanceUpdateMaintenanceInfo_POST",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.CameraMaintenance.Dto.CameraMaintenanceNasRequestDto"
                },
                "description": ""
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/api/CameraMaintenanceReport/Report/{maintenanceId}": {
      "get": {
        "tags": [
          "CameraMaintenanceReport"
        ],
        "summary": "ApiCameraMaintenanceReportReport_GET",
        "description": "",
        "operationId": "ApiCameraMaintenanceReportReport_GET",
        "parameters": [
          {
            "name": "maintenanceId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/CameraMaintenanceReport/Images/{maintenanceId}": {
      "get": {
        "tags": [
          "CameraMaintenanceReport"
        ],
        "summary": "ApiCameraMaintenanceReportImages_GET",
        "description": "",
        "operationId": "ApiCameraMaintenanceReportImages_GET",
        "parameters": [
          {
            "name": "maintenanceId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Mobile/ConnectAllSuiteCameras/{suite}": {
      "get": {
        "tags": [
          "CameraMobile"
        ],
        "summary": "Connette tutte le camere a cui l'utente puo' accedere",
        "description": "",
        "operationId": "Connettetuttelecamereacuil'utentepuo'accedere",
        "parameters": [
          {
            "name": "suite",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/WSAutoscan.Core.Enums.AS_SuiteEnum"
                },
                {}
              ]
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Mobile/DisconnectAllSuiteCameras/{suite}": {
      "get": {
        "tags": [
          "CameraMobile"
        ],
        "summary": "ApiMobileDisconnectAllSuiteCameras_GET",
        "description": "",
        "operationId": "ApiMobileDisconnectAllSuiteCameras_GET",
        "parameters": [
          {
            "name": "suite",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/WSAutoscan.Core.Enums.AS_SuiteEnum"
                },
                {}
              ]
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/CameraMobileConfiguration/CameraMobileConfiguration": {
      "post": {
        "tags": [
          "CameraMobileConfiguration"
        ],
        "summary": "ApiCameraMobileConfigurationCameraMobileConfiguration_POST",
        "description": "",
        "operationId": "ApiCameraMobileConfigurationCameraMobileConfiguration_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.CameraMobileConfiguration.Dto.CameraMobileConfigurationDto"
                },
                "description": ""
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/CameraMobileConfiguration/CameraMobileConfiguration/{configurationId}": {
      "delete": {
        "tags": [
          "CameraMobileConfiguration"
        ],
        "summary": "ApiCameraMobileConfigurationCameraMobileConfiguration_DELETE",
        "description": "",
        "operationId": "ApiCameraMobileConfigurationCameraMobileConfiguration_DELETE",
        "parameters": [
          {
            "name": "configurationId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/CameraMobileConfiguration/CameraMobileConfiguration/{gateId}": {
      "get": {
        "tags": [
          "CameraMobileConfiguration"
        ],
        "summary": "ApiCameraMobileConfigurationCameraMobileConfiguration_GET",
        "description": "",
        "operationId": "ApiCameraMobileConfigurationCameraMobileConfiguration_GET",
        "parameters": [
          {
            "name": "gateId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Customer": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "ApiCustomer_GET",
        "description": "",
        "operationId": "ApiCustomer_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Customer.Dto.AS_CustomerDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Customer/GetAllSuiteModulesFromCustomer/{customerId}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "ApiCustomerGetAllSuiteModulesFromCustomer_GET",
        "description": "",
        "operationId": "ApiCustomerGetAllSuiteModulesFromCustomer_GET",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.User.Dto.AS_SuiteDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Customer/CreateApiKeyAsync": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "ApiCustomerCreateApiKeyAsync_POST",
        "description": "",
        "operationId": "ApiCustomerCreateApiKeyAsync_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Customer.Dto.ApikeyDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.Customer.Dto.ApikeyDto"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Customer/map": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "ApiCustomerMap_GET",
        "description": "",
        "operationId": "ApiCustomerMap_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Core.Dal.CustomerNode"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Customer/GetAllCustomers": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "ApiCustomerGetAllCustomers_GET",
        "description": "",
        "operationId": "ApiCustomerGetAllCustomers_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Customer.Dto.AS_CustomerDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Customer/GetCustomerById/{id}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "ApiCustomerGetCustomerByIdById_GET",
        "description": "",
        "operationId": "ApiCustomerGetCustomerByIdById_GET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.Customer.Dto.AS_CustomerDto"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Customer/GetAllSuiteModules": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "ApiCustomerGetAllSuiteModules_GET",
        "description": "",
        "operationId": "ApiCustomerGetAllSuiteModules_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.User.Dto.AS_SuiteDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Customer/DeleteApiKeyAsync": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "ApiCustomerDeleteApiKeyAsync_POST",
        "description": "",
        "operationId": "ApiCustomerDeleteApiKeyAsync_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Customer/{id}/users": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "ApiCustomerUsersById_GET",
        "description": "",
        "operationId": "ApiCustomerUsersById_GET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sat",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.User.Dto.AS_UserDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Customer/AddOrUpdateCustomerAsync": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "ApiCustomerAddOrUpdateCustomerAsync_POST",
        "description": "",
        "operationId": "ApiCustomerAddOrUpdateCustomerAsync_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Customer.Dto.AS_CustomerDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Customer/DeleteCustomerAsync": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "ApiCustomerDeleteCustomerAsync_POST",
        "description": "",
        "operationId": "ApiCustomerDeleteCustomerAsync_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Customer/GetApiKey/{id}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "ApiCustomerGetApiKeyById_GET",
        "description": "",
        "operationId": "ApiCustomerGetApiKeyById_GET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/diagnostics/GetGlobalDiagnostics": {
      "post": {
        "tags": [
          "Diagnostics"
        ],
        "summary": "ApiDiagnosticsGetGlobalDiagnostics_POST",
        "description": "",
        "operationId": "ApiDiagnosticsGetGlobalDiagnostics_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Diagnostics.Dto.DiagnosticsSearchDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Diagnostics.Dto.StoricDto"
                  },
                  "description": ""
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Diagnostics.Dto.StoricDto"
                  },
                  "description": ""
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Diagnostics.Dto.StoricDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/diagnostics/processing-times": {
      "get": {
        "tags": [
          "Diagnostics"
        ],
        "summary": "ApiDiagnosticsProcessingTimes_GET",
        "description": "",
        "operationId": "ApiDiagnosticsProcessingTimes_GET",
        "parameters": [
          {
            "name": "tw",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 600
            }
          },
          {
            "name": "gate",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "normalize",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/api/dttsis/settings": {
      "post": {
        "tags": [
          "Dttsis"
        ],
        "summary": "ApiDttsisSettings_POST",
        "description": "",
        "operationId": "ApiDttsisSettings_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Setting.Dto.AS_DttsisSettingsUpdateDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "get": {
        "tags": [
          "Dttsis"
        ],
        "summary": "ApiDttsisSettings_GET",
        "description": "",
        "operationId": "ApiDttsisSettings_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.Setting.Dto.AS_DttsisSettingsDto"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/dttsis/GetDttsisVehicleDetection/{violationId}/{cameraId}": {
      "get": {
        "tags": [
          "Dttsis"
        ],
        "summary": "ApiDttsisGetDttsisVehicleDetection_GET",
        "description": "",
        "operationId": "ApiDttsisGetDttsisVehicleDetection_GET",
        "parameters": [
          {
            "name": "violationId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "cameraId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/dttsis/MakeDttsisVehicleCall": {
      "post": {
        "tags": [
          "Dttsis"
        ],
        "summary": "ApiDttsisMakeDttsisVehicleCall_POST",
        "description": "",
        "operationId": "ApiDttsisMakeDttsisVehicleCall_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Setting.Dto.DttsisManulCallData"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/dttsis/status": {
      "get": {
        "tags": [
          "Dttsis"
        ],
        "summary": "ApiDttsisStatus_GET",
        "description": "",
        "operationId": "ApiDttsisStatus_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.Setting.Dto.AS_DttsisServiceStatusDto"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/dttsis/credentials-lock": {
      "delete": {
        "tags": [
          "Dttsis"
        ],
        "summary": "ApiDttsisCredentialsLock_DELETE",
        "description": "",
        "operationId": "ApiDttsisCredentialsLock_DELETE",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/dttsis/VehicleType": {
      "get": {
        "tags": [
          "Dttsis"
        ],
        "summary": "ApiDttsisVehicleType_GET",
        "description": "",
        "operationId": "ApiDttsisVehicleType_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/dttsisModalityCAll/modalityCall": {
      "get": {
        "tags": [
          "DttsisModalityCall"
        ],
        "summary": "Modalita' di chiamate supportate per la dttsis",
        "description": "",
        "operationId": "Modalita'dichiamatesupportateperladttsis",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista con le modalita' di chiamata",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.DttsisModalityCall.Dto.ModalityCallDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/editreasons": {
      "get": {
        "tags": [
          "EditReasons"
        ],
        "summary": "ApiZtlEditreasons_GET",
        "description": "",
        "operationId": "ApiZtlEditreasons_GET",
        "parameters": [
          {
            "name": "textFragment",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Api.Controllers.Ztl.EditReasonsControllerEditReason"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "EditReasons"
        ],
        "summary": "ApiZtlEditreasons_POST",
        "description": "",
        "operationId": "ApiZtlEditreasons_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Api.Controllers.Ztl.EditReasonsControllerEditReason"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Api.Controllers.Ztl.EditReasonsControllerEditReason"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/editreasons/{id}": {
      "delete": {
        "tags": [
          "EditReasons"
        ],
        "summary": "ApiZtlEditreasonsById_DELETE",
        "description": "",
        "operationId": "ApiZtlEditreasonsById_DELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/features": {
      "get": {
        "tags": [
          "Feature"
        ],
        "summary": "ApiFeatures_GET",
        "description": "",
        "operationId": "ApiFeatures_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Core.AppSettings.Features"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztlpass/forniture": {
      "get": {
        "tags": [
          "Forniture"
        ],
        "summary": "ApiZtlpassForniture_GET",
        "description": "",
        "operationId": "ApiZtlpassForniture_GET",
        "parameters": [
          {
            "name": "Accepted",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Pending",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Error",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Plate",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Gate/GetGateConnectedDttsis": {
      "get": {
        "tags": [
          "Gate"
        ],
        "summary": "ApiGateGetGateConnectedDttsis_GET",
        "description": "",
        "operationId": "ApiGateGetGateConnectedDttsis_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Gate.Dto.AS_GateDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Gate/GetGateBySuiteId/{suiteId}": {
      "get": {
        "tags": [
          "Gate"
        ],
        "summary": "ApiGateGetGateBySuiteIdBySuiteId_GET",
        "description": "",
        "operationId": "ApiGateGetGateBySuiteIdBySuiteId_GET",
        "parameters": [
          {
            "name": "suiteId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Gate.Dto.AS_GateDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Gate/AvaliableGatesForToAtuhorize/{gateId}": {
      "get": {
        "tags": [
          "Gate"
        ],
        "summary": "ApiGateAvaliableGatesForToAtuhorize_GET",
        "description": "",
        "operationId": "ApiGateAvaliableGatesForToAtuhorize_GET",
        "parameters": [
          {
            "name": "gateId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Gate/GetAllGates": {
      "get": {
        "tags": [
          "Gate"
        ],
        "summary": "ApiGateGetAllGates_GET",
        "description": "",
        "operationId": "ApiGateGetAllGates_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Gate.Dto.AS_GateDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Gate/GetGateDetails/{gateId}": {
      "get": {
        "tags": [
          "Gate"
        ],
        "summary": "ApiGateGetGateDetailsByGateId_GET",
        "description": "",
        "operationId": "ApiGateGetGateDetailsByGateId_GET",
        "parameters": [
          {
            "name": "gateId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.Gate.Dto.AS_GateCompleteDto"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Gate/AddGateAsync": {
      "post": {
        "tags": [
          "Gate"
        ],
        "summary": "ApiGateAddGateAsync_POST",
        "description": "",
        "operationId": "ApiGateAddGateAsync_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Gate.Dto.AS_GateCompleteDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Gate/ConnectGateDttsis/{gateId}": {
      "get": {
        "tags": [
          "Gate"
        ],
        "summary": "ApiGateConnectGateDttsisByGateId_GET",
        "description": "",
        "operationId": "ApiGateConnectGateDttsisByGateId_GET",
        "parameters": [
          {
            "name": "gateId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.Transit.AssociationTopicDto"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Gate/DisconnectGateDttsis/{gateId}": {
      "get": {
        "tags": [
          "Gate"
        ],
        "summary": "ApiGateDisconnectGateDttsisByGateId_GET",
        "description": "",
        "operationId": "ApiGateDisconnectGateDttsisByGateId_GET",
        "parameters": [
          {
            "name": "gateId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Gate/DisconnectGateA2/{gateId}": {
      "get": {
        "tags": [
          "Gate"
        ],
        "summary": "ApiGateDisconnectGateA2ByGateId_GET",
        "description": "",
        "operationId": "ApiGateDisconnectGateA2ByGateId_GET",
        "parameters": [
          {
            "name": "gateId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Gate/DisconnectCustomerFromGatesA2": {
      "post": {
        "tags": [
          "Gate"
        ],
        "summary": "ApiGateDisconnectCustomerFromGatesA2_POST",
        "description": "",
        "operationId": "ApiGateDisconnectCustomerFromGatesA2_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Gate/GetAllGates/{customerId}": {
      "get": {
        "tags": [
          "Gate"
        ],
        "summary": "ApiGateGetAllGatesByCustomerId_GET",
        "description": "",
        "operationId": "ApiGateGetAllGatesByCustomerId_GET",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Gate.Dto.AS_GateDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Gate/UpdateGateAsync": {
      "post": {
        "tags": [
          "Gate"
        ],
        "summary": "ApiGateUpdateGateAsync_POST",
        "description": "",
        "operationId": "ApiGateUpdateGateAsync_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Gate.Dto.AS_GateCompleteDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Gate/DisconnectGatesDttsis": {
      "post": {
        "tags": [
          "Gate"
        ],
        "summary": "ApiGateDisconnectGatesDttsis_POST",
        "description": "",
        "operationId": "ApiGateDisconnectGatesDttsis_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Gate/DisconnectCustomerFromGatesDttsis": {
      "post": {
        "tags": [
          "Gate"
        ],
        "summary": "ApiGateDisconnectCustomerFromGatesDttsis_POST",
        "description": "",
        "operationId": "ApiGateDisconnectCustomerFromGatesDttsis_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Gate/ConnectGateA2/{gateId}": {
      "get": {
        "tags": [
          "Gate"
        ],
        "summary": "ApiGateConnectGateA2ByGateId_GET",
        "description": "",
        "operationId": "ApiGateConnectGateA2ByGateId_GET",
        "parameters": [
          {
            "name": "gateId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.Transit.AssociationTopicDto"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Gate/ConnectGatesA2": {
      "post": {
        "tags": [
          "Gate"
        ],
        "summary": "ApiGateConnectGatesA2_POST",
        "description": "",
        "operationId": "ApiGateConnectGatesA2_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.Gate.Dto.AS_GateDto"
                },
                "description": ""
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Gate/GetGateConnectedA2": {
      "get": {
        "tags": [
          "Gate"
        ],
        "summary": "ApiGateGetGateConnectedA2_GET",
        "description": "",
        "operationId": "ApiGateGetGateConnectedA2_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Gate.Dto.AS_GateDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Gate/ConnectGatesDttsis": {
      "post": {
        "tags": [
          "Gate"
        ],
        "summary": "ApiGateConnectGatesDttsis_POST",
        "description": "",
        "operationId": "ApiGateConnectGatesDttsis_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.Gate.Dto.AS_GateDto"
                },
                "description": ""
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Gate/DisconnectGatesA2": {
      "post": {
        "tags": [
          "Gate"
        ],
        "summary": "ApiGateDisconnectGatesA2_POST",
        "description": "",
        "operationId": "ApiGateDisconnectGatesA2_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Gate/DeleteGateAsync": {
      "post": {
        "tags": [
          "Gate"
        ],
        "summary": "ApiGateDeleteGateAsync_POST",
        "description": "",
        "operationId": "ApiGateDeleteGateAsync_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Gate/GetAllGateComplete": {
      "post": {
        "tags": [
          "Gate"
        ],
        "summary": "ApiGateGetAllGateComplete_POST",
        "description": "",
        "operationId": "ApiGateGetAllGateComplete_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Api.Controllers.CamerasFilter"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Gate.Dto.AS_GateCompleteDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Group/Search": {
      "get": {
        "tags": [
          "Group"
        ],
        "summary": "ApiGroupSearch_GET",
        "description": "",
        "operationId": "ApiGroupSearch_GET",
        "parameters": [
          {
            "name": "customer",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Group.Dto.SAT_GroupDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Group/GetAllGroupUsers/{groupId}": {
      "get": {
        "tags": [
          "Group"
        ],
        "summary": "ApiGroupGetAllGroupUsersByGroupId_GET",
        "description": "",
        "operationId": "ApiGroupGetAllGroupUsersByGroupId_GET",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Group/AddOrUpdateGroupAsync": {
      "post": {
        "tags": [
          "Group"
        ],
        "summary": "ApiGroupAddOrUpdateGroupAsync_POST",
        "description": "",
        "operationId": "ApiGroupAddOrUpdateGroupAsync_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Group.Dto.SAT_GroupUserDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Group/{groupId}": {
      "delete": {
        "tags": [
          "Group"
        ],
        "summary": "ApiGroupByGroupId_DELETE",
        "description": "",
        "operationId": "ApiGroupByGroupId_DELETE",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Group/GetAllGroups": {
      "get": {
        "tags": [
          "Group"
        ],
        "summary": "ApiGroupGetAllGroups_GET",
        "description": "",
        "operationId": "ApiGroupGetAllGroups_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Group.Dto.SAT_GroupDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Group/GetUsersNotification/{groupId}": {
      "get": {
        "tags": [
          "Group"
        ],
        "summary": "ApiGroupGetUsersNotificationByGroupId_GET",
        "description": "",
        "operationId": "ApiGroupGetUsersNotificationByGroupId_GET",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/holidays": {
      "get": {
        "tags": [
          "Holiday"
        ],
        "summary": "ApiZtlHolidays_GET",
        "description": "",
        "operationId": "ApiZtlHolidays_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Api.Controllers.Ztl.HolidayControllerHolidayDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "put": {
        "tags": [
          "Holiday"
        ],
        "summary": "ApiZtlHolidays_PUT",
        "description": "",
        "operationId": "ApiZtlHolidays_PUT",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WSAutoscan.Api.Controllers.Ztl.HolidayControllerHolidayDto"
                },
                "description": ""
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Api.Controllers.Ztl.HolidayControllerHolidayDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/holidays/{year}/easter-monday": {
      "get": {
        "tags": [
          "Holiday"
        ],
        "summary": "ApiZtlHolidaysEasterMondayByYear_GET",
        "description": "",
        "operationId": "ApiZtlHolidaysEasterMondayByYear_GET",
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/IONotification/IONotification": {
      "post": {
        "tags": [
          "IOZtlNotification"
        ],
        "summary": "Esegue una ricerca delle notifiche IO",
        "description": "",
        "operationId": "EsegueunaricercadellenotificheIO",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Parametri per la ricerca",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.IONotification.Dto.NotificationSearch"
                  },
                  {
                    "description": "Parametri per la ricerca"
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Risultato della ricerca.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.IONotification.Dto.NotificationDto"
                  },
                  "description": ""
                }
              }
            }
          },
          "401": {
            "description": "Se non si dispongono dei permessi per gestire le notifiche IO",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/IONotification/CancelIONotification": {
      "post": {
        "tags": [
          "IOZtlNotification"
        ],
        "summary": "Setta la notifica IO NON pronta per l'invio",
        "description": "",
        "operationId": "SettalanotificaIONONprontaperl'invio",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Id della notifica per cui annullare l'invio",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "description": "Id della notifica per cui annullare l'invio",
                "format": "int32"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Set riuscito correttamente",
            "headers": {},
            "content": {}
          },
          "401": {
            "description": "Se non si dispongono dei permessi per gestire le notifiche IO",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/IONotification/Statistics": {
      "get": {
        "tags": [
          "IOZtlNotification"
        ],
        "summary": "Esegue il recupero delle statistiche delle notifiche IO",
        "description": "",
        "operationId": "EsegueilrecuperodellestatistichedellenotificheIO",
        "parameters": [
          {
            "name": "Lv",
            "in": "query",
            "description": "Property di accesso per raggruppamento per cui eseguire la ricerca",
            "style": "form",
            "explode": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/WSAutoscan.Core.Dal.Ztl.IONotificationGroupingLevel"
                },
                {
                  "description": "Property di accesso per raggruppamento per cui eseguire la ricerca"
                }
              ]
            }
          },
          {
            "name": "DateFrom",
            "in": "query",
            "description": "Data di inizio per cui eseguire la ricerca",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Statistiche recuperate",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Core.Dal.Ztl.IONotificationDataPoint"
                  },
                  "description": ""
                }
              }
            }
          },
          "401": {
            "description": "Se non si dispongono dei permessi per gestire le notifiche IO",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/IONotification/SendIONotification": {
      "post": {
        "tags": [
          "IOZtlNotification"
        ],
        "summary": "Setta la notifica IO pronta per l'invio",
        "description": "",
        "operationId": "SettalanotificaIOprontaperl'invio",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Id della notifica da settare per l'invio",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "description": "Id della notifica da settare per l'invio",
                "format": "int32"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Set riuscito correttamente",
            "headers": {},
            "content": {}
          },
          "401": {
            "description": "Se non si dispongono dei permessi per gestire le notifiche IO",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/IONotification/Ping": {
      "get": {
        "tags": [
          "IOZtlNotification"
        ],
        "summary": "Esegue un ping al servizio java che si occupa dell'invio delle notifiche",
        "description": "",
        "operationId": "Esegueunpingalserviziojavachesioccupadell'inviodellenotifiche",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Chiamata al servizio java riuscito",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Se non si dispongono dei permessi per gestire le notifiche IO",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/IOZTLPermitState/PermitState": {
      "post": {
        "tags": [
          "IOZtlPermitState"
        ],
        "summary": "ApiIOZTLPermitStatePermitState_POST",
        "description": "",
        "operationId": "ApiIOZTLPermitStatePermitState_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.IOZTLPermitState.Dto.ZtlIOPermitStateChangeDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "get": {
        "tags": [
          "IOZtlPermitState"
        ],
        "summary": "ApiIOZTLPermitStatePermitState_GET",
        "description": "",
        "operationId": "ApiIOZTLPermitStatePermitState_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.IOZTLPermitState.Dto.ZtlIOPermitStateDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/IOZTLPermitStateText/PermitStateText": {
      "post": {
        "tags": [
          "IOZTLPermitStateText"
        ],
        "summary": "Salva il template del messaggio della notifica IO su database",
        "description": "",
        "operationId": "SalvailtemplatedelmessaggiodellanotificaIOsudatabase",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.IOZTLPermitStateText.Dto.GroupedPermitStateText"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Salvataggio del template del messaggio avvenuto correttamente",
            "headers": {},
            "content": {}
          },
          "401": {
            "description": "Se non si dispongono dei permessi per gestire le notifiche IO",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "get": {
        "tags": [
          "IOZTLPermitStateText"
        ],
        "summary": "Esegue una ricerca per prendere tutti i template dei messaggi delle notifiche IO per il customer dell'utente loggato",
        "description": "",
        "operationId": "EsegueunaricercaperprenderetuttiitemplatedeimessaggidellenotificheIOperilcustomerdell'utenteloggato",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Risultato della ricerca",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.IOZTLPermitStateText.Dto.GroupedPermitStateText"
                  },
                  "description": ""
                }
              }
            }
          },
          "401": {
            "description": "Se non si dispongono dei permessi per gestire le notifiche IO",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/IOZTLPermitStateText/KeyWords": {
      "get": {
        "tags": [
          "IOZTLPermitStateText"
        ],
        "summary": "Recupera i tag per i template dei messaggi IO",
        "description": "",
        "operationId": "RecuperaitagperitemplatedeimessaggiIO",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista dei tag recuperato correttamente",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.IOZTLPermitStateText.Dto.PermitTextKeyWords"
                  },
                  "description": ""
                }
              }
            }
          },
          "401": {
            "description": "Se non si dispongono dei permessi per gestire le notifiche IO",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/License/GetLicenseAsync": {
      "get": {
        "tags": [
          "License"
        ],
        "summary": "ApiLicenseGetLicenseAsync_GET",
        "description": "",
        "operationId": "ApiLicenseGetLicenseAsync_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.License.Dto.JsonLicense"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/License/RedeemLicenseAsync": {
      "post": {
        "tags": [
          "License"
        ],
        "summary": "ApiLicenseRedeemLicenseAsync_POST",
        "description": "",
        "operationId": "ApiLicenseRedeemLicenseAsync_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.License.Dto.RedeemLicenseRequestDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.License.Dto.RedeemLicenseResponseDto"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/List/GetIdByDescription/{description}": {
      "get": {
        "tags": [
          "List"
        ],
        "summary": "ApiListGetIdByDescriptionByDescription_GET",
        "description": "",
        "operationId": "ApiListGetIdByDescriptionByDescription_GET",
        "parameters": [
          {
            "name": "description",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/List/blacklists": {
      "get": {
        "tags": [
          "List"
        ],
        "summary": "ApiListBlacklists_GET",
        "description": "",
        "operationId": "ApiListBlacklists_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.List.Dto.SAT_ListDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/List/GetAllWhitelist": {
      "get": {
        "tags": [
          "List"
        ],
        "summary": "ApiListGetAllWhitelist_GET",
        "description": "",
        "operationId": "ApiListGetAllWhitelist_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.List.Dto.SAT_ListDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/List/GetListByGroup/{id}": {
      "get": {
        "tags": [
          "List"
        ],
        "summary": "ApiListGetListByGroupById_GET",
        "description": "",
        "operationId": "ApiListGetListByGroupById_GET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.List.Dto.SAT_ListDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/List/DeleteListAsync": {
      "post": {
        "tags": [
          "List"
        ],
        "summary": "ApiListDeleteListAsync_POST",
        "description": "",
        "operationId": "ApiListDeleteListAsync_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/List/GetScnttListAsync": {
      "post": {
        "tags": [
          "List"
        ],
        "summary": "ApiListGetScnttListAsync_POST",
        "description": "",
        "operationId": "ApiListGetScnttListAsync_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "boolean"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/List/GetAllList": {
      "get": {
        "tags": [
          "List"
        ],
        "summary": "ApiListGetAllList_GET",
        "description": "",
        "operationId": "ApiListGetAllList_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.List.Dto.SAT_ListDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/List/GetAllBlacklist": {
      "get": {
        "tags": [
          "List"
        ],
        "summary": "ApiListGetAllBlacklist_GET",
        "description": "",
        "operationId": "ApiListGetAllBlacklist_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.List.Dto.SAT_ListDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/List/GetAllScnttList": {
      "get": {
        "tags": [
          "List"
        ],
        "summary": "ApiListGetAllScnttList_GET",
        "description": "",
        "operationId": "ApiListGetAllScnttList_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.List.Dto.SAT_ListDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/List/GetDetailListById/{id}": {
      "get": {
        "tags": [
          "List"
        ],
        "summary": "ApiListGetDetailListByIdById_GET",
        "description": "",
        "operationId": "ApiListGetDetailListByIdById_GET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/List": {
      "get": {
        "tags": [
          "List"
        ],
        "summary": "ApiList_GET",
        "description": "",
        "operationId": "ApiList_GET",
        "parameters": [
          {
            "name": "specials",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.List.Dto.SAT_ListDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/List/AddOrUpdateListAsync": {
      "post": {
        "tags": [
          "List"
        ],
        "summary": "ApiListAddOrUpdateListAsync_POST",
        "description": "",
        "operationId": "ApiListAddOrUpdateListAsync_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.List.Dto.SAT_ListDetailDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/List/UpdateColor": {
      "post": {
        "tags": [
          "List"
        ],
        "summary": "ApiListUpdateColor_POST",
        "description": "",
        "operationId": "ApiListUpdateColor_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.List.Dto.SAT_ListDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/List/GetAllDttsisList": {
      "get": {
        "tags": [
          "List"
        ],
        "summary": "ApiListGetAllDttsisList_GET",
        "description": "",
        "operationId": "ApiListGetAllDttsisList_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.List.Dto.SAT_ListDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Log/GetTableDescription": {
      "get": {
        "tags": [
          "Log"
        ],
        "summary": "ApiLogGetTableDescription_GET",
        "description": "",
        "operationId": "ApiLogGetTableDescription_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Log/GetTableModule": {
      "get": {
        "tags": [
          "Log"
        ],
        "summary": "ApiLogGetTableModule_GET",
        "description": "",
        "operationId": "ApiLogGetTableModule_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Log/GetOperationsIdOperation/{idOperation}/{logId}": {
      "get": {
        "tags": [
          "Log"
        ],
        "summary": "ApiLogGetOperationsIdOperation_GET",
        "description": "",
        "operationId": "ApiLogGetOperationsIdOperation_GET",
        "parameters": [
          {
            "name": "idOperation",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "logId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.User.Dto.AS_LogDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Log/search": {
      "get": {
        "tags": [
          "Log"
        ],
        "summary": "ApiLogSearch_GET",
        "description": "",
        "operationId": "ApiLogSearch_GET",
        "parameters": [
          {
            "name": "User",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DateFrom",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Operation",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OperationType",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/WSAutoscan.Core.Dal.LogOperationType"
                },
                {}
              ]
            }
          },
          {
            "name": "Module",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Limit",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Plate",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AuthorizationNumber",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.User.Dto.AS_LogDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Log/GetUserLogs": {
      "get": {
        "tags": [
          "Log"
        ],
        "summary": "ApiLogGetUserLogs_GET",
        "description": "",
        "operationId": "ApiLogGetUserLogs_GET",
        "parameters": [
          {
            "name": "User",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DateFrom",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Operation",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OperationType",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/WSAutoscan.Core.Dal.LogOperationType"
                },
                {}
              ]
            }
          },
          {
            "name": "Module",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Limit",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Plate",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AuthorizationNumber",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.User.Dto.AS_LogDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Log/GetTableOperation": {
      "get": {
        "tags": [
          "Log"
        ],
        "summary": "ApiLogGetTableOperation_GET",
        "description": "",
        "operationId": "ApiLogGetTableOperation_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Login/RefreshToken": {
      "post": {
        "tags": [
          "Login"
        ],
        "summary": "Aggiorna la validità del token.",
        "description": "",
        "operationId": "Aggiornalavaliditàdeltoken.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/WSAutoscan.Application.User.Dto.LoginResultDto"
                    },
                    {
                      "description": "Risultato di un'operazione di login."
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Login/Logout": {
      "post": {
        "tags": [
          "Login"
        ],
        "summary": "Effettua il logout al sistema dell'utente.",
        "description": "",
        "operationId": "Effettuaillogoutalsistemadell'utente.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Utente per cui effettuare il logout.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.User.Dto.AS_UserMinimalDto"
                  },
                  {
                    "description": "Utente per cui effettuare il logout."
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Login/VerifyCaptcha": {
      "post": {
        "tags": [
          "Login"
        ],
        "summary": "Verifica il captcha richiesto tramite Recaptcha (Google).",
        "description": "",
        "operationId": "VerificailcaptcharichiestotramiteRecaptcha(Google).",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Messaggio \"Ok\" in caso di verifica positiva, o \"Not Found\" altrimenti.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/api/Login/RecoveryPassword": {
      "post": {
        "tags": [
          "Login"
        ],
        "summary": "Gestisce una richiesta di recupero della password per un Utente.",
        "description": "",
        "operationId": "GestisceunarichiestadirecuperodellapasswordperunUtente.",
        "parameters": [],
        "requestBody": {
          "description": "Utente per cui recuperare la password.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.User.Dto.LoginDto"
                  },
                  {
                    "description": "Utente per cui recuperare la password."
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/WSAutoscan.Application.User.Dto.ChangePasswordResultDto"
                    },
                    {
                      "description": "Risultato di un'operazione di cambio password."
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/Login/ReactivateAccount": {
      "post": {
        "tags": [
          "Login"
        ],
        "summary": "Gestisce una richiesta di ri-attivazione di un Utente.",
        "description": "",
        "operationId": "Gestisceunarichiestadiri-attivazionediunUtente.",
        "parameters": [],
        "requestBody": {
          "description": "Utente da ri-attivare.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.User.Dto.LoginDto"
                  },
                  {
                    "description": "Utente da ri-attivare."
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/WSAutoscan.Application.User.Dto.ChangePasswordResultDto"
                    },
                    {
                      "description": "Risultato di un'operazione di cambio password."
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/Login/Login": {
      "post": {
        "tags": [
          "Login"
        ],
        "summary": "Effettua il login al sistema.",
        "description": "",
        "operationId": "Effettuailloginalsistema.",
        "parameters": [],
        "requestBody": {
          "description": "Utente per cui si sta effettuando il login.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.User.Dto.LoginDto"
                  },
                  {
                    "description": "Utente per cui si sta effettuando il login."
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/WSAutoscan.Application.User.Dto.MobileLoginResultDto"
                    },
                    {
                      "description": "Risultato di un'operazione di login effettuata dalla app Autosc@n SAT."
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/Mobile/GetDttsisVehicleDetection/{violationId}/{cameraId}": {
      "get": {
        "tags": [
          "Mobile"
        ],
        "summary": "ApiMobileGetDttsisVehicleDetection_GET",
        "description": "",
        "operationId": "ApiMobileGetDttsisVehicleDetection_GET",
        "parameters": [
          {
            "name": "violationId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "cameraId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Mobile/Photos/{imageName}/{cameraId}/{suiteId}/{token}": {
      "get": {
        "tags": [
          "Mobile"
        ],
        "summary": "ApiMobilePhotosSuiteIdTokenByImageName_GET",
        "description": "",
        "operationId": "ApiMobilePhotosSuiteIdTokenByImageName_GET",
        "parameters": [
          {
            "name": "imageName",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cameraId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "suiteId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/api/Mobile/AllNations": {
      "get": {
        "tags": [
          "Mobile"
        ],
        "summary": "ApiMobileAllNations_GET",
        "description": "",
        "operationId": "ApiMobileAllNations_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Nation.Dto.NationDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Mobile/GetCameraLanes/{cameraId}/{transitId}": {
      "get": {
        "tags": [
          "Mobile"
        ],
        "summary": "ApiMobileGetCameraLanesByCameraId_GET",
        "description": "",
        "operationId": "ApiMobileGetCameraLanesByCameraId_GET",
        "parameters": [
          {
            "name": "cameraId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "transitId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Camera.Dto.AS_Camera_LaneDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Mobile/GetCameraVeloxLimit/{cameraId}/{transitId}": {
      "get": {
        "tags": [
          "Mobile"
        ],
        "summary": "ApiMobileGetCameraVeloxLimitByCameraId_GET",
        "description": "",
        "operationId": "ApiMobileGetCameraVeloxLimitByCameraId_GET",
        "parameters": [
          {
            "name": "cameraId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "transitId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Camera.Dto.AS_Camera_LimitDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Mobile/CameraMobileConfiguration/{gateId}": {
      "get": {
        "tags": [
          "MobileCameraMobileConfiguration"
        ],
        "summary": "ApiMobileCameraMobileConfiguration_GET",
        "description": "",
        "operationId": "ApiMobileCameraMobileConfiguration_GET",
        "parameters": [
          {
            "name": "gateId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Mobile/StopMobileCameraMobileConfiguration": {
      "post": {
        "tags": [
          "MobileCameraMobileConfiguration"
        ],
        "summary": "ApiMobileStopMobileCameraMobileConfiguration_POST",
        "description": "",
        "operationId": "ApiMobileStopMobileCameraMobileConfiguration_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.CameraMobileConfiguration.Dto.CameraMobileConfigurationStoppedDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Mobile/StartMobileCameraMobileConfiguration": {
      "post": {
        "tags": [
          "MobileCameraMobileConfiguration"
        ],
        "summary": "ApiMobileStartMobileCameraMobileConfiguration_POST",
        "description": "",
        "operationId": "ApiMobileStartMobileCameraMobileConfiguration_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.CameraMobileConfiguration.Dto.CameraMobileConfigurationStartedDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Mobile/MobileCameraMobileConfiguration": {
      "post": {
        "tags": [
          "MobileCameraMobileConfiguration"
        ],
        "summary": "Crea una nuova configurazione per telecamere Speed mobili.",
        "description": "",
        "operationId": "CreaunanuovaconfigurazionepertelecamereSpeedmobili.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Parametri della configurazione da creare",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.CameraMobileConfiguration.Dto.CameraMobileConfigurationDto"
                  },
                  {
                    "description": "Parametri della configurazione da creare"
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.CameraMobileConfiguration.Dto.CameraMobileConfigurationDto"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Mobile/GetCurrentStartedOperation/{configurationId}": {
      "get": {
        "tags": [
          "MobileCameraMobileConfigurationStarted"
        ],
        "summary": "ApiMobileGetCurrentStartedOperation_GET",
        "description": "",
        "operationId": "ApiMobileGetCurrentStartedOperation_GET",
        "parameters": [
          {
            "name": "configurationId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Mobile/StopManned": {
      "post": {
        "tags": [
          "MobileCameraValidatorStarted"
        ],
        "summary": "ApiMobileStopManned_POST",
        "description": "",
        "operationId": "ApiMobileStopManned_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.CameraValidatorStarted.Dto.CameraMannedStartedMinDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Mobile/StartManned": {
      "post": {
        "tags": [
          "MobileCameraValidatorStarted"
        ],
        "summary": "ApiMobileStartManned_POST",
        "description": "",
        "operationId": "ApiMobileStartManned_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.CameraValidatorStarted.Dto.CameraMannedStartedDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Mobile/credentials-lock": {
      "delete": {
        "tags": [
          "MobileDttsis"
        ],
        "summary": "ApiMobileCredentialsLock_DELETE",
        "description": "",
        "operationId": "ApiMobileCredentialsLock_DELETE",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Mobile/UserValidator/{gateId}": {
      "get": {
        "tags": [
          "MobileUser"
        ],
        "summary": "ApiMobileUserValidatorByGateId_GET",
        "description": "",
        "operationId": "ApiMobileUserValidatorByGateId_GET",
        "parameters": [
          {
            "name": "gateId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Mobile/UserValidator": {
      "get": {
        "tags": [
          "MobileUser"
        ],
        "summary": "ApiMobileUserValidator_GET",
        "description": "",
        "operationId": "ApiMobileUserValidator_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Mobile/VehicleTypes": {
      "get": {
        "tags": [
          "MobileVehicle"
        ],
        "summary": "ApiMobileVehicleTypes_GET",
        "description": "",
        "operationId": "ApiMobileVehicleTypes_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Vehicle.Dto.AS_VehicleDto"
                  },
                  "description": ""
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Vehicle.Dto.AS_VehicleDto"
                  },
                  "description": ""
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Vehicle.Dto.AS_VehicleDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Mobile/GetVehicleTypesMin": {
      "get": {
        "tags": [
          "MobileVehicle"
        ],
        "summary": "ApiMobileGetVehicleTypesMin_GET",
        "description": "",
        "operationId": "ApiMobileGetVehicleTypesMin_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Vehicle.Dto.AS_VehicleMinDto"
                  },
                  "description": ""
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Vehicle.Dto.AS_VehicleMinDto"
                  },
                  "description": ""
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Vehicle.Dto.AS_VehicleMinDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/modules": {
      "post": {
        "tags": [
          "Module"
        ],
        "summary": "ApiModules_POST",
        "description": "",
        "operationId": "ApiModules_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Modules.Dto.RedeemModuleRequestDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.Modules.Dto.RedeemModuleResponseDto"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "get": {
        "tags": [
          "Module"
        ],
        "summary": "ApiModules_GET",
        "description": "",
        "operationId": "ApiModules_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.Modules.Dto.ModulesList"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/modulo-alberghi/states": {
      "get": {
        "tags": [
          "ModuloAlberghi"
        ],
        "summary": "ApiZtlModuloAlberghiStates_GET",
        "description": "",
        "operationId": "ApiZtlModuloAlberghiStates_GET",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              }
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/WSAutoscan.Core.Enums.ZTL_AuthorizationStateEnum"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/WSAutoscan.Core.Enums.ZTL_AuthorizationStateEnum"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/WSAutoscan.Core.Enums.ZTL_AuthorizationStateEnum"
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/modulo-alberghi/permits": {
      "post": {
        "tags": [
          "ModuloAlberghi"
        ],
        "summary": "ApiZtlModuloAlberghiPermits_POST",
        "description": "",
        "operationId": "ApiZtlModuloAlberghiPermits_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Core.Dto.Ztl.ExternalPermitRequest"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/modulo-alberghi/permits/{id}": {
      "patch": {
        "tags": [
          "ModuloAlberghi"
        ],
        "summary": "ApiZtlModuloAlberghiPermitsById_PATCH",
        "description": "",
        "operationId": "ApiZtlModuloAlberghiPermitsById_PATCH",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Municipality/GetAllMunicipalities": {
      "get": {
        "tags": [
          "Municipality"
        ],
        "summary": "Esegue una ricerca per prendere tutti i comuni italiani",
        "description": "",
        "operationId": "Esegueunaricercaperprenderetuttiicomuniitaliani",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Elenco dei comuni italiani",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Municipality.Dto.MunicipalityMinDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Nas/diagnostics": {
      "get": {
        "tags": [
          "Nas"
        ],
        "summary": "ApiNasDiagnostics_GET",
        "description": "",
        "operationId": "ApiNasDiagnostics_GET",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/Nations/GetAllNations": {
      "get": {
        "tags": [
          "Nation"
        ],
        "summary": "ApiNationsGetAllNations_GET",
        "description": "",
        "operationId": "ApiNationsGetAllNations_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Nation.Dto.NationDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/pdnd/transits": {
      "get": {
        "tags": [
          "Pdnd"
        ],
        "summary": "Ricerca transiti SAT presenti su autoscan in base alla targa.",
        "description": "",
        "operationId": "RicercatransitiSATpresentisuautoscaninbaseallatarga.",
        "parameters": [
          {
            "name": "plate",
            "in": "query",
            "description": "Targa del veicolo.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ricerca avvenuta con successo con transiti.",
            "headers": {},
            "content": {}
          },
          "204": {
            "description": "Ricerca avvenuta con successo senza risultati.",
            "headers": {},
            "content": {}
          },
          "400": {
            "description": "Parametri di ricerca mancanti o errati.",
            "headers": {},
            "content": {}
          },
          "500": {
            "description": "Errore generico nella richiesta.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/api/pdnd/ztl-permit-for-disabled": {
      "get": {
        "tags": [
          "Pdnd"
        ],
        "summary": "Ricerca uno o più permessi in base ai parametri.",
        "description": "",
        "operationId": "Ricercaunoopiùpermessiinbaseaiparametri.",
        "parameters": [
          {
            "name": "plate",
            "in": "query",
            "description": "Targa del veicolo associata al permesso.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fiscalCode",
            "in": "query",
            "description": "Codice fiscale del richiedente del permesso.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "typeId",
            "in": "query",
            "description": "ID delle tipologie di autorizzazioni per cui cercare i permessi.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ricerca avvenuta con successo con permessi.",
            "headers": {},
            "content": {}
          },
          "204": {
            "description": "Ricerca avvenuta con successo senza risultati.",
            "headers": {},
            "content": {}
          },
          "400": {
            "description": "Parametri di ricerca mancanti o errati.",
            "headers": {},
            "content": {}
          },
          "500": {
            "description": "Errore generico nella richiesta.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/api/pdp/istanza-integrazione": {
      "post": {
        "tags": [
          "PdP"
        ],
        "summary": "Inserisce un'istanza di integrazione per un'istanza ZTL.",
        "description": "",
        "operationId": "Inserisceun'istanzadiintegrazioneperun'istanzaZTL.",
        "parameters": [],
        "requestBody": {
          "description": "Dati dell'istanza di integrazione.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.PdP.Dto.IntegrazioneIstanzaRequest"
                  },
                  {
                    "description": "Dati dell'istanza di integrazione."
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Risultato della creazione.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/WSAutoscan.Application.PdP.Dto.NuovaIstanzaZtlResponse"
                    },
                    {
                      "description": "Risposta alla richiesta di nuova istanza ZTL da inserire in Autosc@n."
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Se non esiste un Customer per il codice IPA specificato.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/api/pdp/standard/istanza-integrazione": {
      "post": {
        "tags": [
          "PdP"
        ],
        "summary": "Inserisce un'istanza di integrazione per un'istanza ZTL dal flusso standard.",
        "description": "",
        "operationId": "Inserisceun'istanzadiintegrazioneperun'istanzaZTLdalflussostandard.",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.PdP.Dto.StandardIntegrazioneRequest"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Risultato della creazione.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/WSAutoscan.Application.PdP.Dto.NuovaIstanzaZtlResponse"
                    },
                    {
                      "description": "Risposta alla richiesta di nuova istanza ZTL da inserire in Autosc@n."
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Se non esiste un Customer per il codice IPA specificato.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/api/pdp/istanza-ztl": {
      "post": {
        "tags": [
          "PdP"
        ],
        "summary": "Inserisce una nuova istanza ZTL.",
        "description": "",
        "operationId": "InserisceunanuovaistanzaZTL.",
        "parameters": [],
        "requestBody": {
          "description": "Dati dell'istanza ZTL.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.PdP.Dto.NuovaIstanzaZtlRequest"
                  },
                  {
                    "description": "Dati dell'istanza ZTL."
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Risultato della creazione.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/WSAutoscan.Application.PdP.Dto.NuovaIstanzaZtlResponse"
                    },
                    {
                      "description": "Risposta alla richiesta di nuova istanza ZTL da inserire in Autosc@n."
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Se non esiste un Customer per il codice IPA specificato.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/api/pdp/standard/istanza-ztl": {
      "post": {
        "tags": [
          "PdP"
        ],
        "summary": "Inserisce una nuova istanza ZTL dal flusso standard.",
        "description": "",
        "operationId": "InserisceunanuovaistanzaZTLdalflussostandard.",
        "parameters": [],
        "requestBody": {
          "description": "Dati dell'istanza ZTL standard.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.PdP.Dto.StandardNuovaIstanzaRequest"
                  },
                  {
                    "description": "Dati dell'istanza ZTL standard."
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Risultato della creazione.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/WSAutoscan.Application.PdP.Dto.NuovaIstanzaZtlResponse"
                    },
                    {
                      "description": "Risposta alla richiesta di nuova istanza ZTL da inserire in Autosc@n."
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Se non esiste un Customer per il codice IPA specificato.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/api/ztl/prescriptions": {
      "get": {
        "tags": [
          "Prescriptions"
        ],
        "summary": "ApiZtlPrescriptions_GET",
        "description": "",
        "operationId": "ApiZtlPrescriptions_GET",
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.PrescriptionCategory"
                },
                {}
              ]
            }
          },
          {
            "name": "textFragment",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "Prescriptions"
        ],
        "summary": "ApiZtlPrescriptions_POST",
        "description": "",
        "operationId": "ApiZtlPrescriptions_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/prescriptions/{id}": {
      "patch": {
        "tags": [
          "Prescriptions"
        ],
        "summary": "ApiZtlPrescriptionsById_PATCH",
        "description": "",
        "operationId": "ApiZtlPrescriptionsById_PATCH",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Prescriptions"
        ],
        "summary": "ApiZtlPrescriptionsById_DELETE",
        "description": "",
        "operationId": "ApiZtlPrescriptionsById_DELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/prescriptions/categories": {
      "get": {
        "tags": [
          "Prescriptions"
        ],
        "summary": "ApiZtlPrescriptionsCategories_GET",
        "description": "",
        "operationId": "ApiZtlPrescriptionsCategories_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Prometheus/Test": {
      "get": {
        "tags": [
          "Prometheus"
        ],
        "summary": "ApiPrometheusTest_GET",
        "description": "",
        "operationId": "ApiPrometheusTest_GET",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/Prometheus/GetAuthorizationTypes": {
      "get": {
        "tags": [
          "Prometheus"
        ],
        "summary": "ApiPrometheusGetAuthorizationTypes_GET",
        "description": "",
        "operationId": "ApiPrometheusGetAuthorizationTypes_GET",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Prometheus.Dto.ExternalAuthorizationTypeDto"
                  },
                  "description": ""
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Prometheus.Dto.ExternalAuthorizationTypeDto"
                  },
                  "description": ""
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Prometheus.Dto.ExternalAuthorizationTypeDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/Prometheus/GetAuthorizationTypesFiltered": {
      "get": {
        "tags": [
          "Prometheus"
        ],
        "summary": "ApiPrometheusGetAuthorizationTypesFiltered_GET",
        "description": "",
        "operationId": "ApiPrometheusGetAuthorizationTypesFiltered_GET",
        "parameters": [
          {
            "name": "idList",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Prometheus.Dto.ExternalAuthorizationTypeDto"
                  },
                  "description": ""
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Prometheus.Dto.ExternalAuthorizationTypeDto"
                  },
                  "description": ""
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Prometheus.Dto.ExternalAuthorizationTypeDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/Prometheus/GetAuthorizations": {
      "post": {
        "tags": [
          "Prometheus"
        ],
        "summary": "ApiPrometheusGetAuthorizations_POST",
        "description": "",
        "operationId": "ApiPrometheusGetAuthorizations_POST",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Prometheus.Dto.GetExternalAuthorizationsRequestDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.Prometheus.Dto.GetExternalAuthorizationsResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.Prometheus.Dto.GetExternalAuthorizationsResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.Prometheus.Dto.GetExternalAuthorizationsResponseDto"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/Prometheus/places/{id}/permit-count": {
      "get": {
        "tags": [
          "Prometheus"
        ],
        "summary": "ApiPrometheusPlacesPermitCountById_GET",
        "description": "",
        "operationId": "ApiPrometheusPlacesPermitCountById_GET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/Prometheus/available-templates/{permitId}": {
      "get": {
        "tags": [
          "Prometheus"
        ],
        "summary": "ApiPrometheusAvailableTemplates_GET",
        "description": "",
        "operationId": "ApiPrometheusAvailableTemplates_GET",
        "parameters": [
          {
            "name": "permitId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": ""
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": ""
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/Prometheus/GetAllPermitType/{customerId}": {
      "get": {
        "tags": [
          "Prometheus"
        ],
        "summary": "ApiPrometheusGetAllPermitType_GET",
        "description": "",
        "operationId": "ApiPrometheusGetAllPermitType_GET",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Prometheus.Dto.ExternalAuthorizationTypeDto"
                  },
                  "description": ""
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Prometheus.Dto.ExternalAuthorizationTypeDto"
                  },
                  "description": ""
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Prometheus.Dto.ExternalAuthorizationTypeDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/Prometheus/DownloadApiKey/{autoscanId}": {
      "get": {
        "tags": [
          "Prometheus"
        ],
        "summary": "ApiPrometheusDownloadApiKeyByAutoscanId_GET",
        "description": "",
        "operationId": "ApiPrometheusDownloadApiKeyByAutoscanId_GET",
        "parameters": [
          {
            "name": "autoscanId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.Prometheus.Dto.SetApikeyAsyncResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.Prometheus.Dto.SetApikeyAsyncResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.Prometheus.Dto.SetApikeyAsyncResponseDto"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/Prometheus/SendAuthorization": {
      "post": {
        "tags": [
          "Prometheus"
        ],
        "summary": "ApiPrometheusSendAuthorization_POST",
        "description": "",
        "operationId": "ApiPrometheusSendAuthorization_POST",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Prometheus.Dto.SendAuthorizationRequestDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/api/Prometheus/DeleteAuthorization/{id}": {
      "delete": {
        "tags": [
          "Prometheus"
        ],
        "summary": "ApiPrometheusDeleteAuthorizationById_DELETE",
        "description": "",
        "operationId": "ApiPrometheusDeleteAuthorizationById_DELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/api/Prometheus/GetCustomers": {
      "get": {
        "tags": [
          "Prometheus"
        ],
        "summary": "Prende tutti Customers, per popolare la select-box degli enti. Contrlla l'apikey se esiste e in caso affermativo restituisce tutti gli enti.",
        "description": "",
        "operationId": "PrendetuttiCustomers,perpopolarelaselect-boxdeglienti.Contrllal'apikeyseesisteeincasoaffermativorestituiscetuttiglienti.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Prometheus.Dto.PrometheusCustomerDto"
                  },
                  "description": ""
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Prometheus.Dto.PrometheusCustomerDto"
                  },
                  "description": ""
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Prometheus.Dto.PrometheusCustomerDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/Prometheus/SetApikey/{autoscanId}": {
      "post": {
        "tags": [
          "Prometheus"
        ],
        "summary": "ApiPrometheusSetApikeyByAutoscanId_POST",
        "description": "",
        "operationId": "ApiPrometheusSetApikeyByAutoscanId_POST",
        "parameters": [
          {
            "name": "autoscanId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.Prometheus.Dto.SetApikeyAsyncResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.Prometheus.Dto.SetApikeyAsyncResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.Prometheus.Dto.SetApikeyAsyncResponseDto"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/Prometheus/GetZonesAndGates": {
      "get": {
        "tags": [
          "Prometheus"
        ],
        "summary": "ApiPrometheusGetZonesAndGates_GET",
        "description": "",
        "operationId": "ApiPrometheusGetZonesAndGates_GET",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlSettings.Dto.ZoneMin"
                  },
                  "description": ""
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlSettings.Dto.ZoneMin"
                  },
                  "description": ""
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlSettings.Dto.ZoneMin"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/Prometheus/GetAuthorizationToModify/{requestId}": {
      "get": {
        "tags": [
          "Prometheus"
        ],
        "summary": "ApiPrometheusGetAuthorizationToModify_GET",
        "description": "",
        "operationId": "ApiPrometheusGetAuthorizationToModify_GET",
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/api/Prometheus/{pathSegments}": {
      "get": {
        "tags": [
          "Prometheus"
        ],
        "summary": "ApiPrometheusByPathSegments_GET",
        "description": "",
        "operationId": "ApiPrometheusByPathSegments_GET",
        "parameters": [
          {
            "name": "pathSegments",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/System.IO.Stream"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/System.IO.Stream"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/System.IO.Stream"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/Prometheus/CountRequestByPlaceId/{placeId}/{maxActiveRequests}": {
      "get": {
        "tags": [
          "PrometheusRequest"
        ],
        "summary": "ApiPrometheusCountRequestByPlaceId_GET",
        "description": "",
        "operationId": "ApiPrometheusCountRequestByPlaceId_GET",
        "parameters": [
          {
            "name": "placeId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxActiveRequests",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.Prometheus.Dto.CountRequestPlaceDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.Prometheus.Dto.CountRequestPlaceDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.Prometheus.Dto.CountRequestPlaceDto"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/PushNotification/AddTokenAsync": {
      "post": {
        "tags": [
          "PushNotification"
        ],
        "summary": "ApiPushNotificationAddTokenAsync_POST",
        "description": "",
        "operationId": "ApiPushNotificationAddTokenAsync_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.PushNotification.Dto.AS_PushNotificationTokenDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/PushNotification/RemoveTokenAsync": {
      "post": {
        "tags": [
          "PushNotification"
        ],
        "summary": "ApiPushNotificationRemoveTokenAsync_POST",
        "description": "",
        "operationId": "ApiPushNotificationRemoveTokenAsync_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.PushNotification.Dto.AS_PushNotificationTokenDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RecordedNoteTransits/AllBySuite/{suite}": {
      "get": {
        "tags": [
          "RecordedNoteTransits"
        ],
        "summary": "ApiRecordedNoteTransitsAllBySuiteBySuite_GET",
        "description": "",
        "operationId": "ApiRecordedNoteTransitsAllBySuiteBySuite_GET",
        "parameters": [
          {
            "name": "suite",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/WSAutoscan.Core.Enums.AS_SuiteEnum"
                },
                {}
              ]
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RecordedNoteTransits/Delete/{id}": {
      "delete": {
        "tags": [
          "RecordedNoteTransits"
        ],
        "summary": "ApiRecordedNoteTransitsDeleteById_DELETE",
        "description": "",
        "operationId": "ApiRecordedNoteTransitsDeleteById_DELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RecordedNoteTransits/Add": {
      "post": {
        "tags": [
          "RecordedNoteTransits"
        ],
        "summary": "ApiRecordedNoteTransitsAdd_POST",
        "description": "",
        "operationId": "ApiRecordedNoteTransitsAdd_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.RecordedNoteTransits.Dto.RecordedTransitNoteRequest"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Mobile/LastTransitsRed/{direction}/{cameraId}": {
      "get": {
        "tags": [
          "RedMobile"
        ],
        "summary": "ApiMobileLastTransitsRedByDirection_GET",
        "description": "",
        "operationId": "ApiMobileLastTransitsRedByDirection_GET",
        "parameters": [
          {
            "name": "direction",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/WSAutoscan.Core.Enums.TransitDirection"
                },
                {}
              ]
            }
          },
          {
            "name": "cameraId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Transit.Dto.MobileRedVeloxTransitDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Mobile/LastTransitsRed/{direction}": {
      "get": {
        "tags": [
          "RedMobile"
        ],
        "summary": "ApiMobileLastTransitsRedByDirection_GET",
        "description": "",
        "operationId": "GetApiMobileLastTransitsRedByDirection_GET",
        "parameters": [
          {
            "name": "direction",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/WSAutoscan.Core.Enums.TransitDirection"
                },
                {}
              ]
            }
          },
          {
            "name": "camerasIds",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Transit.Dto.MobileRedVeloxTransitDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Mobile/GetRedRuleExpire/{gateId}": {
      "get": {
        "tags": [
          "RedMobile"
        ],
        "summary": "ApiMobileGetRedRuleExpireByGateId_GET",
        "description": "",
        "operationId": "ApiMobileGetRedRuleExpireByGateId_GET",
        "parameters": [
          {
            "name": "gateId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.RedRule.Dto.RedExpireRuleDto"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Mobile/RedCommas": {
      "get": {
        "tags": [
          "RedMobile"
        ],
        "summary": "Recupera la lista dei Comma (dell'Art.146) per le Violazioni Red.",
        "description": "",
        "operationId": "RecuperalalistadeiComma(dell'Art.146)perleViolazioniRed.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista dei Comma.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.RedVelox.Dto.RedVelox_CommasDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Mobile/CreateRedRule": {
      "post": {
        "tags": [
          "RedMobile"
        ],
        "summary": "ApiMobileCreateRedRule_POST",
        "description": "",
        "operationId": "ApiMobileCreateRedRule_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.RedRule.Dto.CreateRedRuleMobileDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Mobile/StopRedRule": {
      "post": {
        "tags": [
          "RedMobile"
        ],
        "summary": "ApiMobileStopRedRule_POST",
        "description": "",
        "operationId": "ApiMobileStopRedRule_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.RedRule.Dto.StopRedRuleMobileDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Red/Rule/GetAllRules": {
      "get": {
        "tags": [
          "RedRule"
        ],
        "summary": "Esegue una ricerca per prendere tutte le regole del rosso",
        "description": "",
        "operationId": "Esegueunaricercaperprenderetutteleregoledelrosso",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista con tutte le regole del rosso",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.RedRule.Dto.RedRuleDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Red/Rule/{ruleId}": {
      "delete": {
        "tags": [
          "RedRule"
        ],
        "summary": "Elimina una regola del rosso",
        "description": "",
        "operationId": "Eliminaunaregoladelrosso",
        "parameters": [
          {
            "name": "ruleId",
            "in": "path",
            "description": "Id della regola da eliminare",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Regola eliminata correttamente",
            "headers": {},
            "content": {}
          },
          "401": {
            "description": "Non si dispongono dei permessi per scrivere regole del rosso",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Red/Rule/CountRules/{ruleTypeId}": {
      "get": {
        "tags": [
          "RedRule"
        ],
        "summary": "Conta il numero di regole del rosso",
        "description": "",
        "operationId": "Contailnumerodiregoledelrosso",
        "parameters": [
          {
            "name": "ruleTypeId",
            "in": "path",
            "description": "Tipologia di regole per cui effettuare il conteggio",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Numero di regole per la tipologia selezionata",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/System.Threading.Tasks.Task1System.Int32System.Private.CoreLibVersion4.0.0.0CultureneutralPublicKeyToken7cec85d7bea7798e"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Red/Rule/AddOrUpdateRuleAsync": {
      "post": {
        "tags": [
          "RedRule"
        ],
        "summary": "Aggiunge o modifica una regola del rosso",
        "description": "",
        "operationId": "Aggiungeomodificaunaregoladelrosso",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Dto della regola da aggiungere/modificare",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.RedRule.Dto.RedRuleDto"
                  },
                  {
                    "description": "Dto della regola da aggiungere/modificare"
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "La regola e' stata aggiunta/modificata correttamente",
            "headers": {},
            "content": {}
          },
          "401": {
            "description": "Non si dispongono dei permessi per scrivere regole del rosso",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Red/Rule/{ruleId}/active": {
      "put": {
        "tags": [
          "RedRule"
        ],
        "summary": "Setta lo stato di attiva o disattivo di una regola del rosso",
        "description": "",
        "operationId": "Settalostatodiattivaodisattivodiunaregoladelrosso",
        "parameters": [
          {
            "name": "ruleId",
            "in": "path",
            "description": "Id della regola",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "True se la regola e' da attivare - false se la regola e' da disattivare",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "boolean",
                "description": "True se la regola e' da attivare - false se la regola e' da disattivare"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Lo stato della regola e' stato impostato correttamente",
            "headers": {},
            "content": {}
          },
          "401": {
            "description": "Non si dispongono dei permessi per scrivere regole del rosso",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Red/RuleTypes/GetAll": {
      "get": {
        "tags": [
          "RedRuleTypes"
        ],
        "summary": "Esegue una ricerca per ottenere tutti i tipi di regola del rosso",
        "description": "",
        "operationId": "Esegueunaricercaperotteneretuttiitipidiregoladelrosso",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista dei tipi di regola del rosso",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.RedRuleTypesService.Dto.RedRuleTypeDto"
                  },
                  "description": ""
                }
              }
            }
          },
          "401": {
            "description": "Se non si dispongono dei permessi per leggere le regole del rosso",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/Transit/GetTransitsWithoutPhotos": {
      "get": {
        "tags": [
          "RedVelox"
        ],
        "summary": "Ricerca i transiti RedSpeed che non hanno una foto associata.",
        "description": "",
        "operationId": "RicercaitransitiRedSpeedchenonhannounafotoassociata.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Risultato della ricerca.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/WSAutoscan.Application.RedVelox.Dto.RedVeloxSearchResponseDto"
                    },
                    {
                      "description": "Risultato di una ricerca filtrata dei transiti RedSpeed."
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/Transit/sanctioned-interval-hint": {
      "get": {
        "tags": [
          "RedVelox"
        ],
        "summary": "Calcola l'intervallo di date che contiene tutte le violazioni RedSpeed sanzionate.",
        "description": "",
        "operationId": "Calcolal'intervallodidatechecontienetutteleviolazioniRedSpeedsanzionate.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Modifica avvenuta con successo.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Intervallo di date per le violazioni RedSpeed esportabili."
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/Transit/latest_transit/{cameraId}": {
      "get": {
        "tags": [
          "RedVelox"
        ],
        "summary": "Ricerca l'ultimo transito rilevato da una Camera RedSpeed.",
        "description": "",
        "operationId": "Ricercal'ultimotransitorilevatodaunaCameraRedSpeed.",
        "parameters": [
          {
            "name": "cameraId",
            "in": "path",
            "description": "ID della Camera.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dati dell'ultimo transito rilevato.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/WSAutoscan.Application.Transit.Dto.RedVeloxLastTransitDto"
                    },
                    {
                      "description": "Dati dell'ultimo transito RedSpeed rilevato da una Camera."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Nel caso di transito non trovato.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/Transit/UpdateTransitAsync": {
      "put": {
        "tags": [
          "RedVelox"
        ],
        "summary": "Modifica i dati di un transito RedSpeed.",
        "description": "",
        "operationId": "ModificaidatidiuntransitoRedSpeed.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Dati del transito che si intende modificare.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.RedVelox.Dto.RedVeloxUpdateRequestDto"
                  },
                  {
                    "description": "Dati del transito che si intende modificare."
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Modifica avvenuta con successo.",
            "headers": {},
            "content": {}
          },
          "400": {
            "description": "Nel caso lo stato del transito non permette modifiche dei dati.",
            "headers": {},
            "content": {}
          },
          "404": {
            "description": "Nel caso di transito non trovato.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/Transit/AllViolationType": {
      "get": {
        "tags": [
          "RedVelox"
        ],
        "summary": "Recupera la lista delle violazioni RedSpeed.",
        "description": "",
        "operationId": "RecuperalalistadelleviolazioniRedSpeed.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista dei Tipi di Violazione.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Core.Model.RedVelox.RedVelox_ViolationTypeDictionary"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/Transit/{transitId}/status": {
      "put": {
        "tags": [
          "RedVelox"
        ],
        "summary": "Modifica lo stato di un transito RedSpeed.",
        "description": "",
        "operationId": "ModificalostatodiuntransitoRedSpeed.",
        "parameters": [
          {
            "name": "transitId",
            "in": "path",
            "description": "ID del transito.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Nuovo stato del transito.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.RedVelox.Dto.RedVelox_TransitStatusDto"
                  },
                  {
                    "description": "Nuovo stato del transito."
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Risultato della ricerca.",
            "headers": {},
            "content": {}
          },
          "400": {
            "description": "Motivo per cui non è stato possibile impostare il nuovo stato.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/Transit/massiveStatus": {
      "put": {
        "tags": [
          "RedVelox"
        ],
        "summary": "Modifica lo stato di un transito RedSpeed.",
        "description": "",
        "operationId": "PutModificalostatodiuntransitoRedSpeed.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Lista dei transitId e valore dello stato da aggiornare in maniera massiva",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.RedVelox.Dto.RedVelox_MassiveTransitStatusDto"
                  },
                  {
                    "description": "Lista dei transitId e valore dello stato da aggiornare in maniera massiva"
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Risultato della ricerca.",
            "headers": {},
            "content": {}
          },
          "400": {
            "description": "Motivo per cui non è stato possibile impostare il nuovo stato.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/Transit/RedCommas": {
      "get": {
        "tags": [
          "RedVelox"
        ],
        "summary": "Recupera la lista dei Comma (dell'Art.146) per le Violazioni Red.",
        "description": "",
        "operationId": "GetRecuperalalistadeiComma(dell'Art.146)perleViolazioniRed.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista dei Comma.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.RedVelox.Dto.RedVelox_CommasDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/Transit/Search": {
      "post": {
        "tags": [
          "RedVelox"
        ],
        "summary": "Esegue una ricerca filtrata dei transiti RedSpeed.",
        "description": "",
        "operationId": "EsegueunaricercafiltratadeitransitiRedSpeed.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Parametri per la ricerca filtrata.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.RedVelox.Dto.RedVeloxSearchRequestDto"
                  },
                  {
                    "description": "Parametri per la ricerca filtrata."
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Risultato della ricerca.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/WSAutoscan.Application.RedVelox.Dto.RedVeloxSearchResponseDto"
                    },
                    {
                      "description": "Risultato di una ricerca filtrata dei transiti RedSpeed."
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Se i parametri di ricerca non sono presenti.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/Transit/GetDetail/{transitId}": {
      "get": {
        "tags": [
          "RedVelox"
        ],
        "summary": "Ottiene i dettagli di uno specifico transito RedSpeed.",
        "description": "",
        "operationId": "OttieneidettaglidiunospecificotransitoRedSpeed.",
        "parameters": [
          {
            "name": "transitId",
            "in": "path",
            "description": "ID del transito.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dettagli del transito.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/WSAutoscan.Application.RedVelox.Dto.RedVeloxDetailDto"
                    },
                    {
                      "description": "Dettaglio di un transito RedSpeed."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Nel caso di transito non trovato.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/Dashboard/ViolationDeadLineNum": {
      "get": {
        "tags": [
          "RedVeloxDashboard"
        ],
        "summary": "Ritorna il numero di violazioni italiane ed estere in scadenza",
        "description": "",
        "operationId": "Ritornailnumerodiviolazioniitalianeedestereinscadenza",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Oggetto contentente il numero dei transiti in scadenza e in scadenza estera",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/System.Threading.Tasks.Task1WSAutoscan.Application.RedVelox.Dto.ViolationDeadLineNumDtoWSAutoscan.ApplicationVersion1.0.0.0CultureneutralPublicKeyTokennull"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/Dashboard/GetViolationsStatusNum": {
      "post": {
        "tags": [
          "RedVeloxDashboard"
        ],
        "summary": "Esegue una ricerca per il numero dei transiti red/velox suddivisi per stati",
        "description": "",
        "operationId": "Esegueunaricercaperilnumerodeitransitired/veloxsuddivisiperstati",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Lista degli stati dei transiti per cui eseguire la ricerca",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "description": "Lista degli stati dei transiti per cui eseguire la ricerca"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Lista contentente il numero dei transiti divisi per stato",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.RedVelox.Dto.RedVelox_ViolationsStatusNum"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Mobile/redvelox/Disputed/{transitId}": {
      "get": {
        "tags": [
          "RedVeloxMobile"
        ],
        "summary": "Verifica se a un transito RedSpeed è nello stato stato di \"Contestato in strada\".",
        "description": "",
        "operationId": "VerificaseauntransitoRedSpeedènellostatostatodi\"Contestatoinstrada\".",
        "parameters": [
          {
            "name": "transitId",
            "in": "path",
            "description": "ID del transito.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {},
            "content": {}
          },
          "404": {
            "description": "Not Found",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Mobile/RedVeloxPhotos/{transitId}": {
      "get": {
        "tags": [
          "RedVeloxMobile"
        ],
        "summary": "ApiMobileRedVeloxPhotosByTransitId_GET",
        "description": "",
        "operationId": "ApiMobileRedVeloxPhotosByTransitId_GET",
        "parameters": [
          {
            "name": "transitId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Mobile/Disptued/{transitId}": {
      "get": {
        "tags": [
          "RedVeloxMobile"
        ],
        "summary": "ApiMobileDisptuedByTransitId_GET",
        "description": "",
        "operationId": "ApiMobileDisptuedByTransitId_GET",
        "parameters": [
          {
            "name": "transitId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": true,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Mobile/UpdateRedVeloxTransit": {
      "post": {
        "tags": [
          "RedVeloxMobile"
        ],
        "summary": "ApiMobileUpdateRedVeloxTransit_POST",
        "description": "",
        "operationId": "ApiMobileUpdateRedVeloxTransit_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.RedVelox.Dto.RedVeloxUpdateRequestDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Mobile/RedVeloxStatus": {
      "put": {
        "tags": [
          "RedVeloxMobile"
        ],
        "summary": "ApiMobileRedVeloxStatus_PUT",
        "description": "",
        "operationId": "ApiMobileRedVeloxStatus_PUT",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.RedVelox.Dto.Mobile.RedVeloxTransitStatusMobileDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Mobile/{token}/RedVeloxStatus": {
      "put": {
        "tags": [
          "RedVeloxMobile"
        ],
        "summary": "ApiMobileRedVeloxStatusByToken_PUT",
        "description": "",
        "operationId": "ApiMobileRedVeloxStatusByToken_PUT",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.RedVelox.Dto.Mobile.RedVeloxTransitStatusMobileDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/api/Mobile/RedVeloxTransit/{transiId}/{token}": {
      "get": {
        "tags": [
          "RedVeloxMobile"
        ],
        "summary": "Per ora usato solo da concilia mobile",
        "description": "",
        "operationId": "Perorausatosolodaconciliamobile",
        "parameters": [
          {
            "name": "transiId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "token",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/api/RedVelox/Settings/IsBlurEnabled": {
      "get": {
        "tags": [
          "RedVeloxSettings"
        ],
        "summary": "Indica se è attivo l'offuscamento delle immagini dei transiti.",
        "description": "",
        "operationId": "Indicaseèattivol'offuscamentodelleimmaginideitransiti.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/Settings/AddOrUpdateSettingsAsync": {
      "post": {
        "tags": [
          "RedVeloxSettings"
        ],
        "summary": "Salva i settings per il modulo RedVelox.",
        "description": "",
        "operationId": "SalvaisettingsperilmoduloRedVelox.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Settings da salvare.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.RedVelox.Dto.RedVeloxSettingsDto"
                  },
                  {
                    "description": "Settings da salvare."
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "204": {
            "description": "Se il salvataggio è avvenuto correttamente.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/Settings/GetSettings": {
      "get": {
        "tags": [
          "RedVeloxSettings"
        ],
        "summary": "Restituisce i settings per il modulo RedVelox.",
        "description": "",
        "operationId": "RestituisceisettingsperilmoduloRedVelox.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/WSAutoscan.Application.RedVelox.Dto.RedVeloxSettingsDto"
                    },
                    {
                      "description": "Impostazioni del modulo RedVelox."
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/Settings/UpdateStickerUseCase/{stickerMode}": {
      "post": {
        "tags": [
          "RedVeloxSettings"
        ],
        "summary": "ApiRedVeloxSettingsUpdateStickerUseCase_POST",
        "description": "",
        "operationId": "ApiRedVeloxSettingsUpdateStickerUseCase_POST",
        "parameters": [
          {
            "name": "stickerMode",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/redVelox/Statistic/SaveStatistics": {
      "post": {
        "tags": [
          "RedVeloxStatistic"
        ],
        "summary": "Salva su database le statistiche dei trnaisti red/velox provenienti dal nas",
        "description": "",
        "operationId": "Salvasudatabaselestatistichedeitrnaistired/veloxprovenientidalnas",
        "parameters": [],
        "requestBody": {
          "description": "Lista delle statistiche da salvare",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.RedVeloxStatistic.Dto.StatisticTransitMessageDto"
                },
                "description": "Lista delle statistiche da salvare"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Salvataggio andato a buon fine",
            "headers": {},
            "content": {}
          },
          "401": {
            "description": "Nel caso in cui sia attiva l'autenticazione nas/autoscan e non sia corretta",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/api/redVelox/Statistic/group": {
      "get": {
        "tags": [
          "RedVeloxStatistic"
        ],
        "summary": "Esegue una ricerca per le statistiche red/velox",
        "description": "",
        "operationId": "Esegueunaricercaperlestatistichered/velox",
        "parameters": [
          {
            "name": "GateId",
            "in": "query",
            "description": "Id del gate",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "From",
            "in": "query",
            "description": "Data di inizio della ricerca",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "To",
            "in": "query",
            "description": "Data di fine della ricerca",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "By",
            "in": "query",
            "description": "Livello di raggruppamento per cui si vuole eseguire la ricerca",
            "style": "form",
            "explode": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/WSAutoscan.Core.Dal.RedVeloxGroupingLevel"
                },
                {
                  "description": "Livello di raggruppamento per cui si vuole eseguire la ricerca"
                }
              ]
            }
          },
          {
            "name": "TypeId",
            "in": "query",
            "description": "Suite per cui eseguire la ricerca, red o velox",
            "style": "form",
            "explode": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/WSAutoscan.Core.Enums.AS_SuiteEnum"
                },
                {
                  "description": "Suite per cui eseguire la ricerca, red o velox"
                }
              ]
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista delle statistiche red/velox aggregate per data",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/System.Threading.Tasks.Task1System.ValueTuple3System.Collections.Generic.IEnumerable1WSAutoscan.Core.Dal.RedVeloxDataPointWSAutoscan.CoreVersion1.0.0.0CultureneutralPublicKeyTokennullSystem.Private.CoreLibVersion4.0.0.0CultureneutralPublicKeyToken7cec85d7bea7798eSystem.Collections.Generic.IEnumerable1WSAutoscan.Core.Dal.RedVeloxDataPointWSAutoscan.CoreVersion1.0.0.0CultureneutralPublicKeyTokennullSystem.Private.CoreLibVersion4.0.0.0CultureneutralPublicKeyToken7cec85d7bea7798eSystem.Collections.Generic.IEnumerable1WSAutoscan.Core.Dal.RedVeloxDataPointWSAutoscan.CoreVersion1.0.0.0CultureneutralPublicKeyTokennullSystem.Private.CoreLibVersion4.0.0.0CultureneutralPublicKeyToken7cec85d7bea7798eSystem.Private.CoreLibVersion4.0.0.0CultureneutralPublicKeyToken7cec85d7bea7798e"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/redVelox/Statistic/gates": {
      "get": {
        "tags": [
          "RedVeloxStatistic"
        ],
        "summary": "Ricerca tutti i gate red/velox a cui l'utente puo' accedere",
        "description": "",
        "operationId": "Ricercatuttiigatered/veloxacuil'utentepuo'accedere",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista dei gate red/velox a cui l'utente puo' accedere",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {},
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/redVelox/Statistic/VeloxGroup": {
      "get": {
        "tags": [
          "RedVeloxStatistic"
        ],
        "summary": "Esegue una ricerca per le velocita' medie dei transiti speed",
        "description": "",
        "operationId": "Esegueunaricercaperlevelocita'mediedeitransitispeed",
        "parameters": [
          {
            "name": "GateId",
            "in": "query",
            "description": "Id del gate",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "From",
            "in": "query",
            "description": "Data di inizio della ricerca",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "To",
            "in": "query",
            "description": "Data di fine della ricerca",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "By",
            "in": "query",
            "description": "Livello di raggruppamento per cui si vuole eseguire la ricerca",
            "style": "form",
            "explode": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/WSAutoscan.Core.Dal.RedVeloxGroupingLevel"
                },
                {
                  "description": "Livello di raggruppamento per cui si vuole eseguire la ricerca"
                }
              ]
            }
          },
          {
            "name": "TypeId",
            "in": "query",
            "description": "Suite per cui eseguire la ricerca, red o velox",
            "style": "form",
            "explode": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/WSAutoscan.Core.Enums.AS_SuiteEnum"
                },
                {
                  "description": "Suite per cui eseguire la ricerca, red o velox"
                }
              ]
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista con le velocita' medie transiti speed",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/System.Threading.Tasks.Task1Microsoft.AspNetCore.Mvc.ActionResult1System.Collections.Generic.IEnumerable1WSAutoscan.Core.Dal.VeloxAverageSpeedDataPointWSAutoscan.CoreVersion1.0.0.0CultureneutralPublicKeyTokennullSystem.Private.CoreLibVersion4.0.0.0CultureneutralPublicKeyToken7cec85d7bea7798eMicrosoft.AspNetCore.Mvc.CoreVersion2.2.5.0CultureneutralPublicKeyTokenadb9793829ddae60"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/StickerVehicle/GetAllStickerVehicle": {
      "get": {
        "tags": [
          "RedVeloxStickerVehicle"
        ],
        "summary": "ApiRedVeloxStickerVehicleGetAllStickerVehicle_GET",
        "description": "",
        "operationId": "ApiRedVeloxStickerVehicleGetAllStickerVehicle_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.RedVeloxStickerVehicle.Dto.RedVeloxStickerVehicleDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/StickerVehicle/deleteStickerToVehicle/{Id}": {
      "delete": {
        "tags": [
          "RedVeloxStickerVehicle"
        ],
        "summary": "ApiRedVeloxStickerVehicleDeleteStickerToVehicle_DELETE",
        "description": "",
        "operationId": "ApiRedVeloxStickerVehicleDeleteStickerToVehicle_DELETE",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/StickerVehicle/AddOrUpdateStickerVehicleAsync": {
      "post": {
        "tags": [
          "RedVeloxStickerVehicle"
        ],
        "summary": "ApiRedVeloxStickerVehicleAddOrUpdateStickerVehicleAsync_POST",
        "description": "",
        "operationId": "ApiRedVeloxStickerVehicleAddOrUpdateStickerVehicleAsync_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.RedVeloxStickerVehicle.Dto.RedVeloxStickerVehicleDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/TransitPhoto/UserBlurredAreas": {
      "delete": {
        "tags": [
          "RedVeloxTransitPhoto"
        ],
        "summary": "Elimina un'area offuscate dall'utente da una foto di un transito.",
        "description": "",
        "operationId": "Eliminaun'areaoffuscatedall'utentedaunafotodiuntransito.",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/json-patch+json"
              ],
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Area offuscata eliminata.",
            "headers": {},
            "content": {}
          },
          "401": {
            "description": "L'utente non è autorizzato ad accedere alla foto.",
            "headers": {},
            "content": {}
          },
          "404": {
            "description": "Il file della foto non è stato trovato.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "put": {
        "tags": [
          "RedVeloxTransitPhoto"
        ],
        "summary": "Imposta le coordinate delle aree offuscate dall'utente all'interno di una foto di un transito.",
        "description": "",
        "operationId": "Impostalecoordinatedelleareeoffuscatedall'utenteall'internodiunafotodiuntransito.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Definizione delle aree da offuscare.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.RedVeloxTransitPhoto.Dto.BlurAreaUpdateRequest"
                  },
                  {
                    "description": "Definizione delle aree da offuscare."
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Coordinate modificate.",
            "headers": {},
            "content": {}
          },
          "400": {
            "description": "Le coordinate non sono valide.",
            "headers": {},
            "content": {}
          },
          "401": {
            "description": "L'utente non è autorizzato ad accedere alla foto.",
            "headers": {},
            "content": {}
          },
          "404": {
            "description": "Il file della foto non è stato trovato.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/TransitPhoto/ClaheImageBrightness/{imageName}/{suiteId}": {
      "get": {
        "tags": [
          "RedVeloxTransitPhoto"
        ],
        "summary": "ApiRedVeloxTransitPhotoClaheImageBrightness_GET",
        "description": "",
        "operationId": "ApiRedVeloxTransitPhotoClaheImageBrightness_GET",
        "parameters": [
          {
            "name": "imageName",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "suiteId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {},
            "content": {}
          },
          "404": {
            "description": "Not Found",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/TransitPhoto/VehicleCoordinates/{imageName}": {
      "get": {
        "tags": [
          "RedVeloxTransitPhoto"
        ],
        "summary": "Recuperare le coordinate della posizione del veicolo all'interno di una foto di un transito.",
        "description": "",
        "operationId": "Recuperarelecoordinatedellaposizionedelveicoloall'internodiunafotodiuntransito.",
        "parameters": [
          {
            "name": "imageName",
            "in": "path",
            "description": "Nome della foto.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Coordinate trovate. Potrebbero non essere valide se nella foto non è stata specificata la posizione del veicolo.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/WSAutoscan.Application.RedVeloxTransitPhoto.Dto.VehicleCoordinatesDto"
                    },
                    {
                      "description": "Area che rappresenta la posizione del veicolo."
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "L'utente non è autorizzato ad accedere alla foto.",
            "headers": {},
            "content": {}
          },
          "404": {
            "description": "Il file della foto non è stato trovato.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/TransitPhoto/VehicleCoordinates/{imageName}/{cameraId}": {
      "put": {
        "tags": [
          "RedVeloxTransitPhoto"
        ],
        "summary": "Imposta le coordinate del veicolo all'interno di una foto di un transito.",
        "description": "",
        "operationId": "Impostalecoordinatedelveicoloall'internodiunafotodiuntransito.",
        "parameters": [
          {
            "name": "imageName",
            "in": "path",
            "description": "Nome della foto.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cameraId",
            "in": "path",
            "description": "ID della Camera che ha generato la foto.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Coordinate del veicolo.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.RedVeloxTransitPhoto.Dto.VehicleCoordinatesDto"
                  },
                  {
                    "description": "Coordinate del veicolo."
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Coordinate modificate.",
            "headers": {},
            "content": {}
          },
          "401": {
            "description": "L'utente non è autorizzato ad accedere alla foto.",
            "headers": {},
            "content": {}
          },
          "404": {
            "description": "Il file della foto non è stato trovato.",
            "headers": {},
            "content": {}
          },
          "400": {
            "description": "Le coordinate non sono valide.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/TransitPhoto/SetCoordinatesTransitPhoto/{imageName}/{cameraId}": {
      "put": {
        "tags": [
          "RedVeloxTransitPhoto"
        ],
        "summary": "Imposta le coordinate della targa all'interno di una foto di un transito.",
        "description": "",
        "operationId": "Impostalecoordinatedellatargaall'internodiunafotodiuntransito.",
        "parameters": [
          {
            "name": "imageName",
            "in": "path",
            "description": "Nome della foto.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cameraId",
            "in": "path",
            "description": "ID della Camera che ha generato la foto.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Coordinate della targa.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.RedVeloxTransitPhoto.Dto.PlateCoordinatesDto"
                  },
                  {
                    "description": "Coordinate della targa."
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Coordinate modificate.",
            "headers": {},
            "content": {}
          },
          "400": {
            "description": "Le coordinate non sono valide.",
            "headers": {},
            "content": {}
          },
          "401": {
            "description": "L'utente non è autorizzato ad accedere alla foto.",
            "headers": {},
            "content": {}
          },
          "404": {
            "description": "Il file della foto non è stato trovato.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/TransitPhoto/filter": {
      "put": {
        "tags": [
          "RedVeloxTransitPhoto"
        ],
        "summary": "Imposta un filtro di correzione per una foto di un transito.",
        "description": "",
        "operationId": "Impostaunfiltrodicorrezioneperunafotodiuntransito.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Filtro da applicare alla foto del transito.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.RedVeloxTransitPhoto.Dto.MediaFilterDto"
                  },
                  {
                    "description": "Filtro da applicare alla foto del transito."
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Filtro applicato.",
            "headers": {},
            "content": {}
          },
          "400": {
            "description": "Filtro non valido.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/TransitPhoto/GetImage/{imageName}/{cameraId}/{token}": {
      "get": {
        "tags": [
          "RedVeloxTransitPhoto"
        ],
        "summary": "Ricerca un media di un transito e ne ritorna il contenuto in byte.\r\nQuesto metodo non richiede che l'utente sia loggato, ma è necessario presentare\r\nun token di autenticazione valido.",
        "description": "",
        "operationId": "Ricercaunmediadiuntransitoeneritornailcontenutoinbyte.\r\nQuestometodononrichiedechel'utentesialoggato,maènecessariopresentare\r\nuntokendiautenticazionevalido.",
        "parameters": [
          {
            "name": "imageName",
            "in": "path",
            "description": "Nome del media.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cameraId",
            "in": "path",
            "description": "ID della Camera che ha generato il media.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "path",
            "description": "Token di autenticazione.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Media trovato.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "L'utente non è autorizzato ad accedere al media.",
            "headers": {},
            "content": {}
          },
          "404": {
            "description": "Il file del media non è stato trovato.",
            "headers": {},
            "content": {}
          },
          "410": {
            "description": "Il parametro imageName non corrisponde a nessun media.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/api/RedVelox/TransitPhoto/GetImageBlob/{imageName}/{cameraId}": {
      "get": {
        "tags": [
          "RedVeloxTransitPhoto"
        ],
        "summary": "Ricerca un media di un transito e ne ritorna il contenuto in byte.\r\nQuesta operazione è considerata come un 'Download' del media e perciò sarà regisrtata.",
        "description": "",
        "operationId": "Ricercaunmediadiuntransitoeneritornailcontenutoinbyte.\r\nQuestaoperazioneèconsideratacomeun'Download'delmediaeperciòsaràregisrtata.",
        "parameters": [
          {
            "name": "imageName",
            "in": "path",
            "description": "Nome del media.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cameraId",
            "in": "path",
            "description": "ID della Camera che ha generato il media.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Media trovato.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "L'utente non è autorizzato ad accedere al media.",
            "headers": {},
            "content": {}
          },
          "404": {
            "description": "Il file del media non è stato trovato.",
            "headers": {},
            "content": {}
          },
          "410": {
            "description": "Il parametro imageName non corrisponde a nessun media.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/TransitPhoto/GetCoordinatesTransitPhoto": {
      "get": {
        "tags": [
          "RedVeloxTransitPhoto"
        ],
        "summary": "Recuperare le coordinate della posizione della targa e delle riga di arresto all'interno di una foto di un transito.",
        "description": "",
        "operationId": "Recuperarelecoordinatedellaposizionedellatargaedellerigadiarrestoall'internodiunafotodiuntransito.",
        "parameters": [
          {
            "name": "imageName",
            "in": "query",
            "description": "Nome della foto.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Coordinate trovate.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.RedVeloxTransitPhoto.Dto.CoordinatesTransitPhoto"
                }
              }
            }
          },
          "401": {
            "description": "L'utente non è autorizzato ad accedere alla foto.",
            "headers": {},
            "content": {}
          },
          "404": {
            "description": "Il file della foto non è stato trovato.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/TransitPhoto/UserBlurredAreas/{imageName}": {
      "get": {
        "tags": [
          "RedVeloxTransitPhoto"
        ],
        "summary": "Recuperare le coordinate delle aree offuscate dall'utente all'interno di una foto di un transito.",
        "description": "",
        "operationId": "Recuperarelecoordinatedelleareeoffuscatedall'utenteall'internodiunafotodiuntransito.",
        "parameters": [
          {
            "name": "imageName",
            "in": "path",
            "description": "Nome della foto.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Coordinate trovate.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.RedVeloxTransitPhoto.Dto.UserBlurredAreaDto"
                  },
                  "description": ""
                }
              }
            }
          },
          "401": {
            "description": "L'utente non è autorizzato ad accedere alla foto.",
            "headers": {},
            "content": {}
          },
          "404": {
            "description": "Il file della foto non è stato trovato.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/TransitPhoto/GetImagesByTransitId/{transitId}/{cameraId}": {
      "get": {
        "tags": [
          "RedVeloxTransitPhoto"
        ],
        "summary": "Recupera i media relativi ad un transito e li restituisce in un file ZIP.",
        "description": "",
        "operationId": "RecuperaimediarelativiaduntransitoelirestituisceinunfileZIP.",
        "parameters": [
          {
            "name": "transitId",
            "in": "path",
            "description": "ID del transito.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "cameraId",
            "in": "path",
            "description": "ID della Camera che ha generato la foto.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Media trovati.",
            "headers": {},
            "content": {}
          },
          "404": {
            "description": "Non sono stati trovati i media del transito.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/Violation/DeleteExportedViolation": {
      "post": {
        "tags": [
          "RedVeloxViolation"
        ],
        "summary": "Cancella un'esportazione già effettuata dallo storico delle esportazioni",
        "description": "",
        "operationId": "Cancellaun'esportazionegiàeffettuatadallostoricodelleesportazioni",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64"
                },
                "description": ""
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/Violation/SanctioningUsers": {
      "get": {
        "tags": [
          "RedVeloxViolation"
        ],
        "summary": "ApiRedVeloxViolationSanctioningUsers_GET",
        "description": "",
        "operationId": "ApiRedVeloxViolationSanctioningUsers_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/Violation/Exports/direct": {
      "get": {
        "tags": [
          "RedVeloxViolation"
        ],
        "summary": "Esportazione diretta delle Violazioni RedSpeed.",
        "description": "",
        "operationId": "EsportazionedirettadelleViolazioniRedSpeed.",
        "parameters": [
          {
            "name": "From",
            "in": "query",
            "description": "Restringe la ricerca alle Violazioni avvenute a partire da questo istante.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "To",
            "in": "query",
            "description": "Restringe la ricerca alle Violazioni avvenute a fino a questo istante.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "GateIds",
            "in": "query",
            "description": "Restringe la ricerca alle Violazioni avvenute per questi Varchi.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "ModuleTypeId",
            "in": "query",
            "description": "Restringe la ricerca alle Violazioni avvenute per questi moduli. Valori validi: [2,3] dove 2 => RED e 3 => VELOX.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "CommaId",
            "in": "query",
            "description": "ID del Comma (dell'Art.146) per cui restringere la ricerca. Valori validi: [1,2] dove 1 => \"Comma 2\" e 2 => \"Comma 3\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "Nations",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Nationality",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "UserIds",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Se il file ZIP è stato generato correttamente.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Se non è presente nessuna Violazione RedSpeed che corrisponde al filtro.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/Violation/GetRedVeloxTodaysTransitsAndViolations": {
      "get": {
        "tags": [
          "RedVeloxViolation"
        ],
        "summary": "Restituisce un riepilogo delle Violazioni RedVelox della sola data odierna.",
        "description": "",
        "operationId": "RestituisceunriepilogodelleViolazioniRedVeloxdellasoladataodierna.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Riepilogo delle violazioni RedVelox.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/WSAutoscan.Application.RedVelox.Dto.RedVelox_DayTransitsAndViolationsDto"
                    },
                    {
                      "description": "Riepilogo delle violazioni RedSpeed."
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/Violation/GetExportedTransitsToCancel/{violationExportId}": {
      "get": {
        "tags": [
          "RedVeloxViolation"
        ],
        "summary": "ApiRedVeloxViolationGetExportedTransitsToCancel_GET",
        "description": "",
        "operationId": "ApiRedVeloxViolationGetExportedTransitsToCancel_GET",
        "parameters": [
          {
            "name": "violationExportId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/Violation/export": {
      "post": {
        "tags": [
          "RedVeloxViolation"
        ],
        "summary": "Effettua l'esportazione di una lista di Violazioni RedSpeed.",
        "description": "",
        "operationId": "Effettual'esportazionediunalistadiViolazioniRedSpeed.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Lista di ID delle violazioni RedSpeed da esportare.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64"
                },
                "description": "Lista di ID delle violazioni RedSpeed da esportare."
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Se il file ZIP è stato generato correttamente.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Se non è stato passato nessun ID delle violazioni.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/Violation/exports/{exportId}": {
      "get": {
        "tags": [
          "RedVeloxViolation"
        ],
        "summary": "Rigenera un'Esportazione RedSpeed già effettuata.",
        "description": "",
        "operationId": "Rigeneraun'EsportazioneRedSpeedgiàeffettuata.",
        "parameters": [
          {
            "name": "exportId",
            "in": "path",
            "description": "ID dell'Esportazione RedSpeed da rigenerare.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Se il file ZIP è stato generato correttamente.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/Violation/sanctioned": {
      "get": {
        "tags": [
          "RedVeloxViolation"
        ],
        "summary": "Ricerca filtrata di tutte le Violazioni RedSpeed che possono essere esportate.",
        "description": "",
        "operationId": "RicercafiltrataditutteleViolazioniRedSpeedchepossonoessereesportate.",
        "parameters": [
          {
            "name": "From",
            "in": "query",
            "description": "Restringe la ricerca alle Violazioni avvenute a partire da questo istante.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "To",
            "in": "query",
            "description": "Restringe la ricerca alle Violazioni avvenute a fino a questo istante.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "GateIds",
            "in": "query",
            "description": "Restringe la ricerca alle Violazioni avvenute per questi Varchi.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "ModuleTypeId",
            "in": "query",
            "description": "Restringe la ricerca alle Violazioni avvenute per questi moduli. Valori validi: [2,3] dove 2 => RED e 3 => VELOX.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "CommaId",
            "in": "query",
            "description": "ID del Comma (dell'Art.146) per cui restringere la ricerca. Valori validi: [1,2] dove 1 => \"Comma 2\" e 2 => \"Comma 3\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "Nations",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Nationality",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "UserIds",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista delle violazioni esportabili.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Risultato di una ricerca filtrata delle Violazioni RedSpeed esportabili."
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/Violation/exports": {
      "get": {
        "tags": [
          "RedVeloxViolation"
        ],
        "summary": "Ricerca tutte le esportazioni di Violazioni RedSpeed effettuate.",
        "description": "",
        "operationId": "RicercatutteleesportazionidiViolazioniRedSpeedeffettuate.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cronologia delle esportazioni.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/Violation/exportViolationDocument": {
      "post": {
        "tags": [
          "RedVeloxViolation"
        ],
        "summary": "Effettua l'esportazione del documento fotografico di una singola violazione RedSpeed.",
        "description": "",
        "operationId": "Effettual'esportazionedeldocumentofotograficodiunasingolaviolazioneRedSpeed.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "ID della violazione",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "description": "ID della violazione",
                "format": "int32"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Se il documento è stato creato o trovato correttamente.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Se non è stato passato l'ID della violazione.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/reports/{reportName}": {
      "post": {
        "tags": [
          "ReportPassThrough"
        ],
        "summary": "ApiReportsByReportName_POST",
        "description": "",
        "operationId": "ApiReportsByReportName_POST",
        "parameters": [
          {
            "name": "reportName",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "object",
                "additionalProperties": {}
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/reports/{pathSegments}": {
      "get": {
        "tags": [
          "ReportPassThrough"
        ],
        "summary": "ApiReportsByPathSegments_GET",
        "description": "",
        "operationId": "ApiReportsByPathSegments_GET",
        "parameters": [
          {
            "name": "pathSegments",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztlpass/ricerche": {
      "get": {
        "tags": [
          "Ricerche"
        ],
        "summary": "ApiZtlpassRicerche_GET",
        "description": "",
        "operationId": "ApiZtlpassRicerche_GET",
        "parameters": [
          {
            "name": "transitId",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RoadMap/RoadMap": {
      "post": {
        "tags": [
          "RoadMap"
        ],
        "summary": "ApiRoadMapRoadMap_POST",
        "description": "",
        "operationId": "ApiRoadMapRoadMap_POST",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.RoadMap.Dto.RoadMapDto"
                },
                "description": ""
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      },
      "get": {
        "tags": [
          "RoadMap"
        ],
        "summary": "ApiRoadMapRoadMap_GET",
        "description": "",
        "operationId": "ApiRoadMapRoadMap_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Mobile/RoadMap": {
      "get": {
        "tags": [
          "RoadMapMobile"
        ],
        "summary": "ApiMobileRoadMap_GET",
        "description": "",
        "operationId": "ApiMobileRoadMap_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Mobile/sat/Status": {
      "put": {
        "tags": [
          "SatMobile"
        ],
        "summary": "Imposta gli allarmi di un transito Sat come \"chiusi\" (o \"gestiti\").\r\nNOTA: Versione chiamata da app \"Autosc@n\".",
        "description": "",
        "operationId": "ImpostagliallarmidiuntransitoSatcome\"chiusi\"(o\"gestiti\").\r\nNOTA:Versionechiamatadaapp\"Autosc@n\".",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Dati del transito da impostare.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Transit.Dto.SatTransitStatusMobileDto"
                  },
                  {
                    "description": "Dati del transito da impostare."
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Mobile/sat/Transit/{transitId}/{token}": {
      "get": {
        "tags": [
          "SatMobile"
        ],
        "summary": "ApiMobileSatTransitByTransitIdAndToken_GET",
        "description": "",
        "operationId": "ApiMobileSatTransitByTransitIdAndToken_GET",
        "parameters": [
          {
            "name": "transitId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "token",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.Transit.Dto.MobileSatTransitDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/api/Mobile/sat/Disputed/{transitId}": {
      "get": {
        "tags": [
          "SatMobile"
        ],
        "summary": "Verifica se a un transito Sat è nello stato stato di \"Contestato in strada\".",
        "description": "",
        "operationId": "VerificaseauntransitoSatènellostatostatodi\"Contestatoinstrada\".",
        "parameters": [
          {
            "name": "transitId",
            "in": "path",
            "description": "ID del transito.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {},
            "content": {}
          },
          "404": {
            "description": "Not Found",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Mobile/sat/{token}/Status": {
      "put": {
        "tags": [
          "SatMobile"
        ],
        "summary": "Imposta gli allarmi di un transito Sat come \"chiusi\" (o \"gestiti\").\r\nNOTA: Versione chiamata da app \"Concilia mobile\".",
        "description": "",
        "operationId": "ImpostagliallarmidiuntransitoSatcome\"chiusi\"(o\"gestiti\").\r\nNOTA:Versionechiamatadaapp\"Conciliamobile\".",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Token di autenticazione.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Dati del transito da impostare.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Transit.Dto.SatTransitStatusMobileDto"
                  },
                  {
                    "description": "Dati del transito da impostare."
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {},
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/api/Sat/Report/Reports": {
      "get": {
        "tags": [
          "SatTransitAggregation"
        ],
        "summary": "Restituisce una lista con tutti i report sat disponibili",
        "description": "",
        "operationId": "Restituisceunalistacontuttiireportsatdisponibili",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Sat/Report/Report": {
      "post": {
        "tags": [
          "SatTransitAggregation"
        ],
        "summary": "ApiSatReportReport_POST",
        "description": "",
        "operationId": "ApiSatReportReport_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.SatTransitAggregation.Report.Dto.SatReportRequestDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/SatTransitDataExportLog/SatTransitDataExportLog/{logId}": {
      "get": {
        "tags": [
          "SatTransitDataExportLog"
        ],
        "summary": "ApiSatTransitDataExportLogSatTransitDataExportLog_GET",
        "description": "",
        "operationId": "ApiSatTransitDataExportLogSatTransitDataExportLog_GET",
        "parameters": [
          {
            "name": "logId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/integration/sat/transits/{transitId}/attributes": {
      "put": {
        "tags": [
          "SatTransitIntegration"
        ],
        "summary": "ApiIntegrationSatTransitsAttributes_PUT",
        "description": "",
        "operationId": "ApiIntegrationSatTransitsAttributes_PUT",
        "parameters": [
          {
            "name": "transitId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "get": {
        "tags": [
          "SatTransitIntegration"
        ],
        "summary": "ApiIntegrationSatTransitsAttributes_GET",
        "description": "",
        "operationId": "ApiIntegrationSatTransitsAttributes_GET",
        "parameters": [
          {
            "name": "transitId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/integration/sat/alarms": {
      "post": {
        "tags": [
          "SatTransitIntegration"
        ],
        "summary": "ApiIntegrationSatAlarms_POST",
        "description": "",
        "operationId": "ApiIntegrationSatAlarms_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Utility.Integration.AlarmEvent"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Scntt/SendTransitsByErrorCode/{errorCode}": {
      "post": {
        "tags": [
          "Scntt"
        ],
        "summary": "ApiScnttSendTransitsByErrorCode_POST",
        "description": "",
        "operationId": "ApiScnttSendTransitsByErrorCode_POST",
        "parameters": [
          {
            "name": "errorCode",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/Scntt/SecondSendingAlarm": {
      "post": {
        "tags": [
          "Scntt"
        ],
        "summary": "ApiScnttSecondSendingAlarm_POST",
        "description": "",
        "operationId": "ApiScnttSecondSendingAlarm_POST",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/Scntt/GetErrorDictionary": {
      "get": {
        "tags": [
          "Scntt"
        ],
        "summary": "ApiScnttGetErrorDictionary_GET",
        "description": "",
        "operationId": "ApiScnttGetErrorDictionary_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Scntt.Dto.ScnttErrorDictionaryDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Scntt/GetErrorLogs/{id}": {
      "get": {
        "tags": [
          "Scntt"
        ],
        "summary": "ApiScnttGetErrorLogsById_GET",
        "description": "",
        "operationId": "ApiScnttGetErrorLogsById_GET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Scntt.Dto.ScnttErrorLogsDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/Settings/global": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "ApiSettingsGlobal_GET",
        "description": "",
        "operationId": "ApiSettingsGlobal_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.Setting.Dto.SAT_SettingsDto"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Settings/customer": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "ApiSettingsCustomer_GET",
        "description": "",
        "operationId": "ApiSettingsCustomer_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.Setting.Dto.SAT_SettingsDto"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Settings/GetSettingsAsync/{id}": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "ApiSettingsGetSettingsAsyncById_GET",
        "description": "",
        "operationId": "ApiSettingsGetSettingsAsyncById_GET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.Setting.Dto.SAT_SettingsDto"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Settings/AddOrUpdateSettingsAsync": {
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "ApiSettingsAddOrUpdateSettingsAsync_POST",
        "description": "",
        "operationId": "ApiSettingsAddOrUpdateSettingsAsync_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Setting.Dto.SAT_SettingsDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Settings/GetScnttCredential": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "ApiSettingsGetScnttCredential_GET",
        "description": "",
        "operationId": "ApiSettingsGetScnttCredential_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Api.Controllers.SettingsControllerScnttCredentialDto"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztlpass/settings/{customerId}": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "ApiZtlpassSettingsByCustomerId_GET",
        "description": "",
        "operationId": "ApiZtlpassSettingsByCustomerId_GET",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "put": {
        "tags": [
          "Settings"
        ],
        "summary": "ApiZtlpassSettingsByCustomerId_PUT",
        "description": "",
        "operationId": "ApiZtlpassSettingsByCustomerId_PUT",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlPassLombardia.Dto.ZtlPass_SettingsDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/SMS/GetCreditASync": {
      "get": {
        "tags": [
          "SMS"
        ],
        "summary": "ApiSMSGetCreditASync_GET",
        "description": "",
        "operationId": "ApiSMSGetCreditASync_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.SMS.Dto.SMSCreditDto"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Statistic/GetListGate": {
      "get": {
        "tags": [
          "Statistic"
        ],
        "summary": "ApiStatisticGetListGate_GET",
        "description": "",
        "operationId": "ApiStatisticGetListGate_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Statistic/GetStatisticsByMonth": {
      "get": {
        "tags": [
          "Statistic"
        ],
        "summary": "ApiStatisticGetStatisticsByMonth_GET",
        "description": "",
        "operationId": "ApiStatisticGetStatisticsByMonth_GET",
        "parameters": [
          {
            "name": "month",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "gate",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "year",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "dateFrom",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "dateTo",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.Statistic.Dto.ObjectStatisticDto"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Statistic/AddMultipleStatisticAsync": {
      "post": {
        "tags": [
          "Statistic"
        ],
        "summary": "ApiStatisticAddMultipleStatisticAsync_POST",
        "description": "",
        "operationId": "ApiStatisticAddMultipleStatisticAsync_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.Statistic.Dto.SAT_StatisticDto"
                },
                "description": ""
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Statistic/GetStatisticsByYear": {
      "get": {
        "tags": [
          "Statistic"
        ],
        "summary": "ApiStatisticGetStatisticsByYear_GET",
        "description": "",
        "operationId": "ApiStatisticGetStatisticsByYear_GET",
        "parameters": [
          {
            "name": "gate",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "year",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.Statistic.Dto.ObjectStatisticDto"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Statistic/GetStatisticsByDay": {
      "get": {
        "tags": [
          "Statistic"
        ],
        "summary": "ApiStatisticGetStatisticsByDay_GET",
        "description": "",
        "operationId": "ApiStatisticGetStatisticsByDay_GET",
        "parameters": [
          {
            "name": "gate",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.Statistic.Dto.ObjectStatisticDto"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Statistic/GetYears": {
      "get": {
        "tags": [
          "Statistic"
        ],
        "summary": "ApiStatisticGetYears_GET",
        "description": "",
        "operationId": "ApiStatisticGetYears_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Statistic/AddSingleStatisticAsync": {
      "post": {
        "tags": [
          "Statistic"
        ],
        "summary": "ApiStatisticAddSingleStatisticAsync_POST",
        "description": "",
        "operationId": "ApiStatisticAddSingleStatisticAsync_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Statistic.Dto.SAT_StatisticDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Statistic/GetStatisticsBySeconds": {
      "get": {
        "tags": [
          "Statistic"
        ],
        "summary": "ApiStatisticGetStatisticsBySeconds_GET",
        "description": "",
        "operationId": "ApiStatisticGetStatisticsBySeconds_GET",
        "parameters": [
          {
            "name": "gate",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateFrom",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "dateTo",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Statistic/TransitProcessingTime": {
      "get": {
        "tags": [
          "Statistic"
        ],
        "summary": "ApiStatisticTransitProcessingTime_GET",
        "description": "",
        "operationId": "ApiStatisticTransitProcessingTime_GET",
        "parameters": [
          {
            "name": "seconds",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Statistic/GetStatisticsByDate": {
      "get": {
        "tags": [
          "Statistic"
        ],
        "summary": "ApiStatisticGetStatisticsByDate_GET",
        "description": "",
        "operationId": "ApiStatisticGetStatisticsByDate_GET",
        "parameters": [
          {
            "name": "gate",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateFrom",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "dateTo",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.Statistic.Dto.ObjectStatisticDto"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Statistic/group": {
      "get": {
        "tags": [
          "Statistic"
        ],
        "summary": "ApiStatisticGroup_GET",
        "description": "",
        "operationId": "ApiStatisticGroup_GET",
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "by",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "gateId",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Statistic/TestAggregazione": {
      "get": {
        "tags": [
          "Statistic"
        ],
        "summary": "ApiStatisticTestAggregazione_GET",
        "description": "",
        "operationId": "ApiStatisticTestAggregazione_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Statistic/years": {
      "get": {
        "tags": [
          "Statistic"
        ],
        "summary": "ApiStatisticYears_GET",
        "description": "",
        "operationId": "ApiStatisticYears_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Statistic/gates": {
      "get": {
        "tags": [
          "Statistic"
        ],
        "summary": "ApiStatisticGates_GET",
        "description": "",
        "operationId": "ApiStatisticGates_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {},
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Statistic/grouped": {
      "get": {
        "tags": [
          "Statistic"
        ],
        "summary": "ApiStatisticGrouped_GET",
        "description": "",
        "operationId": "ApiStatisticGrouped_GET",
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "by",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "gateId",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Telegram/revokeTelegramNot": {
      "post": {
        "tags": [
          "Telegram"
        ],
        "summary": "Revoca le notifiche telegram per un particolare utente",
        "description": "",
        "operationId": "Revocalenotifichetelegramperunparticolareutente",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Id dell'utente a cui revocare le notifiche telegram",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "description": "Id dell'utente a cui revocare le notifiche telegram",
                "format": "int32"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Le notifiche sono state revocate",
            "headers": {},
            "content": {}
          },
          "204": {
            "description": "Le notifiche non sono state revocate",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Telegram/ComparePhoneNumber": {
      "post": {
        "tags": [
          "Telegram"
        ],
        "summary": "Controllo il numero di telefono inviatomi dall'utente con quelli salvati su db",
        "description": "",
        "operationId": "Controlloilnumeroditelefonoinviatomidall'utenteconquellisalvatisudb",
        "parameters": [],
        "requestBody": {
          "description": "Informazioni dell'utente da controllare",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Telegram.Dto.UserToInsert"
                  },
                  {
                    "description": "Informazioni dell'utente da controllare"
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Il numero di telefono e' presente su db",
            "headers": {},
            "content": {}
          },
          "204": {
            "description": "Il numero di telefono non e' presente su db",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/api/Telegram/SendTelegramLinkEmail": {
      "post": {
        "tags": [
          "Telegram"
        ],
        "summary": "Invia una mail con il link del bot di telegram ad un utente",
        "description": "",
        "operationId": "Inviaunamailconillinkdelbotditelegramadunutente",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Id dell'utente a cui inviare la mail",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "description": "Id dell'utente a cui inviare la mail",
                "format": "int32"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "La mail e' stata inviata",
            "headers": {},
            "content": {}
          },
          "204": {
            "description": "La mail non e' stata inviata",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Transit/Get/{takeTop}": {
      "get": {
        "tags": [
          "Transit"
        ],
        "summary": "ApiTransitGetByTakeTop_GET",
        "description": "",
        "operationId": "ApiTransitGetByTakeTop_GET",
        "parameters": [
          {
            "name": "takeTop",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Transit.Dto.SAT_TransitDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Transit/GetImage/{imageName}/{cameraId}/{token}": {
      "get": {
        "tags": [
          "Transit"
        ],
        "summary": "ApiTransitGetImageTokenByImageName_GET",
        "description": "",
        "operationId": "ApiTransitGetImageTokenByImageName_GET",
        "parameters": [
          {
            "name": "imageName",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cameraId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/api/Transit/GetImageBlob/{imageName}/{cameraId}": {
      "get": {
        "tags": [
          "Transit"
        ],
        "summary": "ApiTransitGetImageBlobByImageName_GET",
        "description": "",
        "operationId": "ApiTransitGetImageBlobByImageName_GET",
        "parameters": [
          {
            "name": "imageName",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cameraId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Transit/ChangePlateAsync": {
      "post": {
        "tags": [
          "Transit"
        ],
        "summary": "ApiTransitChangePlateAsync_POST",
        "description": "",
        "operationId": "ApiTransitChangePlateAsync_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Transit.Dto.SAT_TransitChangeDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Transit/Search": {
      "post": {
        "tags": [
          "Transit"
        ],
        "summary": "ApiTransitSearch_POST",
        "description": "",
        "operationId": "ApiTransitSearch_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Transit.Dto.SAT_TransitSearchInputDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.DataAccess.Dal.TransitQueryBuilderTransitItem"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Transit/GetTransitsByIds": {
      "post": {
        "tags": [
          "Transit"
        ],
        "summary": "ApiTransitGetTransitsByIds_POST",
        "description": "",
        "operationId": "ApiTransitGetTransitsByIds_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64"
                },
                "description": ""
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Transit.Dto.SAT_TransitDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Transit/GetDayTransit": {
      "get": {
        "tags": [
          "Transit"
        ],
        "summary": "ApiTransitGetDayTransit_GET",
        "description": "",
        "operationId": "ApiTransitGetDayTransit_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Transit/CheckOnReceiveTransit": {
      "post": {
        "tags": [
          "Transit"
        ],
        "summary": "ApiTransitCheckOnReceiveTransit_POST",
        "description": "",
        "operationId": "ApiTransitCheckOnReceiveTransit_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Api.Controllers.Sat.TransitControllerPlateQuery"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Api.Controllers.Sat.TransitControllerPlateQueryResponse"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Transit/driving-license/{drivingLicense}": {
      "get": {
        "tags": [
          "Transit"
        ],
        "summary": "ApiTransitDrivingLicenseByDrivingLicense_GET",
        "description": "",
        "operationId": "ApiTransitDrivingLicenseByDrivingLicense_GET",
        "parameters": [
          {
            "name": "drivingLicense",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.Dttsis.InspectionDetails.DrivingLicenseDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Transit/GetAllTransitStatus": {
      "get": {
        "tags": [
          "Transit"
        ],
        "summary": "ApiTransitGetAllTransitStatus_GET",
        "description": "",
        "operationId": "ApiTransitGetAllTransitStatus_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Transit.Dto.ZTL_TransitStatusDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Transit/filter": {
      "put": {
        "tags": [
          "Transit"
        ],
        "summary": "ApiTransitFilter_PUT",
        "description": "",
        "operationId": "ApiTransitFilter_PUT",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Transit.Dto.ImageFilterDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "400": {
            "description": "Bad Request",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Transit/GetDetails": {
      "post": {
        "tags": [
          "Transit"
        ],
        "summary": "ApiTransitGetDetails_POST",
        "description": "",
        "operationId": "ApiTransitGetDetails_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Transit.Dto.SAT_TransitDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.Transit.Dto.SAT_TransitDetailsDto"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Transit/ChangeAdrAsync": {
      "post": {
        "tags": [
          "Transit"
        ],
        "summary": "ApiTransitChangeAdrAsync_POST",
        "description": "",
        "operationId": "ApiTransitChangeAdrAsync_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Transit.Dto.SAT_TransitChangeDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Transit/GetImageData/{imageName}/{cameraId}/{token}": {
      "get": {
        "tags": [
          "Transit"
        ],
        "summary": "ApiTransitGetImageDataTokenByImageName_GET",
        "description": "",
        "operationId": "ApiTransitGetImageDataTokenByImageName_GET",
        "parameters": [
          {
            "name": "imageName",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cameraId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/api/Transit/ChangeTrlAsync": {
      "post": {
        "tags": [
          "Transit"
        ],
        "summary": "ApiTransitChangeTrlAsync_POST",
        "description": "",
        "operationId": "ApiTransitChangeTrlAsync_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Transit.Dto.SAT_TransitChangeDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Transit/ChangeNationAsync": {
      "post": {
        "tags": [
          "Transit"
        ],
        "summary": "ApiTransitChangeNationAsync_POST",
        "description": "",
        "operationId": "ApiTransitChangeNationAsync_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Transit.Dto.SAT_TransitChangeDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Transit/GetTransitId/{plate}/{date}/{nation}": {
      "get": {
        "tags": [
          "Transit"
        ],
        "summary": "ApiTransitGetTransitIdNationByPlate_GET",
        "description": "",
        "operationId": "ApiTransitGetTransitIdNationByPlate_GET",
        "parameters": [
          {
            "name": "plate",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "nation",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Transit/trails/{plateType}/{plate}": {
      "get": {
        "tags": [
          "Transit"
        ],
        "summary": "ApiTransitTrailsByPlateTypeAndPlate_GET",
        "description": "",
        "operationId": "ApiTransitTrailsByPlateTypeAndPlate_GET",
        "parameters": [
          {
            "name": "plate",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "plateType",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/WSAutoscan.DataAccess.Dal.TransitQueryBuilderPlateType"
                },
                {}
              ]
            }
          },
          {
            "name": "since",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/System.TimeSpan"
                },
                {}
              ]
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.DataAccess.Dal.TransitQueryBuilderTransitItem"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Transit/GetImage/{imageName}/{token}": {
      "get": {
        "tags": [
          "Transit"
        ],
        "summary": "ApiTransitGetImageByImageNameAndToken_GET",
        "description": "",
        "operationId": "ApiTransitGetImageByImageNameAndToken_GET",
        "parameters": [
          {
            "name": "imageName",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/api/Transit/ChangeDetailAsync": {
      "post": {
        "tags": [
          "Transit"
        ],
        "summary": "ApiTransitChangeDetailAsync_POST",
        "description": "",
        "operationId": "ApiTransitChangeDetailAsync_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Transit.Dto.SAT_TransitChangeDetailDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Transit/GetTransitInWarning": {
      "get": {
        "tags": [
          "Transit"
        ],
        "summary": "ApiTransitGetTransitInWarning_GET",
        "description": "",
        "operationId": "ApiTransitGetTransitInWarning_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Transit/GetPhotoInWarning": {
      "get": {
        "tags": [
          "Transit"
        ],
        "summary": "ApiTransitGetPhotoInWarning_GET",
        "description": "",
        "operationId": "ApiTransitGetPhotoInWarning_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Transit/ClaheImageBrightness/{imageName}": {
      "get": {
        "tags": [
          "Transit"
        ],
        "summary": "ApiTransitClaheImageBrightness_GET",
        "description": "",
        "operationId": "ApiTransitClaheImageBrightness_GET",
        "parameters": [
          {
            "name": "imageName",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {},
            "content": {}
          },
          "404": {
            "description": "Not Found",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Transit/Export": {
      "post": {
        "tags": [
          "Transit"
        ],
        "summary": "ApiTransitExport_POST",
        "description": "",
        "operationId": "ApiTransitExport_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Api.Controllers.Sat.TransitControllerSearchParamAndCredential"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/updates/license": {
      "get": {
        "tags": [
          "Updates"
        ],
        "summary": "ApiUpdatesLicense_GET",
        "description": "",
        "operationId": "ApiUpdatesLicense_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.Updates.Dto.LicenseDataResponseDto"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/User/GetAllSatUsers": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Ottiene la lista degli utenti che hanno accesso al sat facenti parte del customer dell'utente loggato",
        "description": "",
        "operationId": "Ottienelalistadegliutentichehannoaccessoalsatfacentipartedelcustomerdell'utenteloggato",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista utenti con accesso al sat",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.User.Dto.AS_UserDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/User/AddUserAsync": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "ApiUserAddUserAsync_POST",
        "description": "",
        "operationId": "ApiUserAddUserAsync_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.User.Dto.UserDataWithPermissions"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/User/UpdateUserAsync": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "ApiUserUpdateUserAsync_POST",
        "description": "",
        "operationId": "ApiUserUpdateUserAsync_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.User.Dto.UserDataWithPermissions"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/User/ChangePasswordUserAsync": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "ApiUserChangePasswordUserAsync_POST",
        "description": "",
        "operationId": "ApiUserChangePasswordUserAsync_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.User.Dto.ChangePasswordDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/WSAutoscan.Application.User.Dto.ChangePasswordResultDto"
                    },
                    {
                      "description": "Risultato di un'operazione di cambio password."
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/User/UpdateUserMonitor": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "ApiUserUpdateUserMonitor_POST",
        "description": "",
        "operationId": "ApiUserUpdateUserMonitor_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.User.Dto.AS_User_MonitorDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/User/ResetPassword": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "ApiUserResetPassword_POST",
        "description": "",
        "operationId": "ApiUserResetPassword_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.User.Dto.ChangePasswordDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/WSAutoscan.Application.User.Dto.ChangePasswordResultDto"
                    },
                    {
                      "description": "Risultato di un'operazione di cambio password."
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/User/GetUserComplete/{userGuid}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Ottiene l'utente completo tramite il GUID passato",
        "description": "",
        "operationId": "Ottienel'utentecompletotramiteilGUIDpassato",
        "parameters": [
          {
            "name": "userGuid",
            "in": "path",
            "description": "Guid univoco dell'utente",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Utente",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/WSAutoscan.Application.User.Dto.AS_UserDto"
                    },
                    {
                      "description": "Utente completo"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/User/getAllActiveZtlUsers": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Ottiene la lista degli utenti attivi con accesso allo ztl facenti parte del customer dell'utente loggato",
        "description": "",
        "operationId": "Ottienelalistadegliutentiattiviconaccessoalloztlfacentipartedelcustomerdell'utenteloggato",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista utenti attivi con accesso allo ztl",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.User.Dto.AS_UserMinForZtlDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/User/GetUserMonitor/{userId}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "ApiUserGetUserMonitorByUserId_GET",
        "description": "",
        "operationId": "ApiUserGetUserMonitorByUserId_GET",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.User.Dto.AS_User_MonitorDto"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/User/GetAllUsers": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Ritorna tutti gli utenti appartenenti allo stesso ente di chi ha eseguito la chiamata",
        "description": "",
        "operationId": "Ritornatuttigliutentiappartenentiallostessoentedichihaeseguitolachiamata",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista degli utenti",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.User.Dto.AS_UserDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/User/GetAllActiveUsers": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Ottiene la lista di tutti gli utenti attivi facenti parte del customer dell'utente loggato",
        "description": "",
        "operationId": "Ottienelalistadituttigliutentiattivifacentipartedelcustomerdell'utenteloggato",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista di tutti gli utenti attivi",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.User.Dto.AS_UserDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/User/AddOrUpdateUserAuthorizationTypesAsync": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "ApiUserAddOrUpdateUserAuthorizationTypesAsync_POST",
        "description": "",
        "operationId": "ApiUserAddOrUpdateUserAuthorizationTypesAsync_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.User.Dto.ZTL_AuthorizationType_UserDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "204": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/User/GetLoggedUser": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "ApiUserGetLoggedUser_GET",
        "description": "",
        "operationId": "ApiUserGetLoggedUser_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/WSAutoscan.Application.User.Dto.AS_UserBasicDto"
                    },
                    {
                      "description": "Utente basic"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/User/GetUserByGuid/{guid}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "ApiUserGetUserByGuidByGuid_GET",
        "description": "",
        "operationId": "ApiUserGetUserByGuidByGuid_GET",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/WSAutoscan.Application.User.Dto.AS_UserDto"
                    },
                    {
                      "description": "Utente completo"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/User/GetRoleByUserGuid/{guid}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "ApiUserGetRoleByUserGuidByGuid_GET",
        "description": "",
        "operationId": "ApiUserGetRoleByUserGuidByGuid_GET",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.User.Dto.SAT_RoleDto"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/User/ChangePersonalData": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "ApiUserChangePersonalData_POST",
        "description": "",
        "operationId": "ApiUserChangePersonalData_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.User.Dto.PersonalData"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/User/GetPersonalData": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "ApiUserGetPersonalData_GET",
        "description": "",
        "operationId": "ApiUserGetPersonalData_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.User.Dto.PersonalData"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/User/GetAllPermissions": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "ApiUserGetAllPermissions_GET",
        "description": "",
        "operationId": "ApiUserGetAllPermissions_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.User.Dto.AS_PermissionDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/User/GetAllSuiteModule": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "ApiUserGetAllSuiteModule_GET",
        "description": "",
        "operationId": "ApiUserGetAllSuiteModule_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.User.Dto.AS_SuiteDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ValidationTransitData/{violationId}/{suite}": {
      "get": {
        "tags": [
          "ValidationTransitData"
        ],
        "summary": "ApiValidationTransitDataByViolationId_GET",
        "description": "",
        "operationId": "ApiValidationTransitDataByViolationId_GET",
        "parameters": [
          {
            "name": "violationId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "suite",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/WSAutoscan.Core.Enums.AS_SuiteEnum"
                },
                {}
              ]
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/vehicle/GetDttsisVehicleTypes": {
      "get": {
        "tags": [
          "Vehicle"
        ],
        "summary": "ApiVehicleGetDttsisVehicleTypes_GET",
        "description": "",
        "operationId": "ApiVehicleGetDttsisVehicleTypes_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/vehicle/GetAllVehicleTypes": {
      "get": {
        "tags": [
          "Vehicle"
        ],
        "summary": "ApiVehicleGetAllVehicleTypes_GET",
        "description": "",
        "operationId": "ApiVehicleGetAllVehicleTypes_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/vehicle/GetVehicleTypesMin": {
      "get": {
        "tags": [
          "Vehicle"
        ],
        "summary": "ApiVehicleGetVehicleTypesMin_GET",
        "description": "",
        "operationId": "ApiVehicleGetVehicleTypesMin_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Vehicle.Dto.AS_VehicleMinDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/vehicle/GetVehicleTypes": {
      "get": {
        "tags": [
          "Vehicle"
        ],
        "summary": "ApiVehicleGetVehicleTypes_GET",
        "description": "",
        "operationId": "ApiVehicleGetVehicleTypes_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Vehicle.Dto.AS_VehicleDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/vehicle/GetVehicleTypesByDesc": {
      "get": {
        "tags": [
          "Vehicle"
        ],
        "summary": "ApiVehicleGetVehicleTypesByDesc_GET",
        "description": "",
        "operationId": "ApiVehicleGetVehicleTypesByDesc_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Vehicle.Dto.AS_VehicleDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/vehicle/GetVehicleCamDesc": {
      "get": {
        "tags": [
          "Vehicle"
        ],
        "summary": "ApiVehicleGetVehicleCamDesc_GET",
        "description": "",
        "operationId": "ApiVehicleGetVehicleCamDesc_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Vehicle.Dto.VehicleCameraDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/vehicle/AddOrUpdateVehicleTypesAsync": {
      "post": {
        "tags": [
          "Vehicle"
        ],
        "summary": "ApiVehicleAddOrUpdateVehicleTypesAsync_POST",
        "description": "",
        "operationId": "ApiVehicleAddOrUpdateVehicleTypesAsync_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Vehicle.Dto.AS_VehicleDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/vehicle/{vehicleId}": {
      "delete": {
        "tags": [
          "Vehicle"
        ],
        "summary": "ApiVehicleByVehicleId_DELETE",
        "description": "",
        "operationId": "ApiVehicleByVehicleId_DELETE",
        "parameters": [
          {
            "name": "vehicleId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/fuellings": {
      "get": {
        "tags": [
          "Vehicle"
        ],
        "summary": "ApiFuellings_GET",
        "description": "",
        "operationId": "ApiFuellings_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_VehicleFuelling"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/environmental-classes": {
      "get": {
        "tags": [
          "Vehicle"
        ],
        "summary": "ApiEnvironmentalClasses_GET",
        "description": "",
        "operationId": "ApiEnvironmentalClasses_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_EnvironmentalClass"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Mobile/LastTransitsVelox/{direction}/{cameraId}": {
      "get": {
        "tags": [
          "VeloxMobile"
        ],
        "summary": "ApiMobileLastTransitsVeloxByDirection_GET",
        "description": "",
        "operationId": "ApiMobileLastTransitsVeloxByDirection_GET",
        "parameters": [
          {
            "name": "direction",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/WSAutoscan.Core.Enums.TransitDirection"
                },
                {}
              ]
            }
          },
          {
            "name": "cameraId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Transit.Dto.MobileRedVeloxTransitDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Mobile/StopVeloxRule": {
      "post": {
        "tags": [
          "VeloxMobile"
        ],
        "summary": "ApiMobileStopVeloxRule_POST",
        "description": "",
        "operationId": "ApiMobileStopVeloxRule_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.VeloxRule.Dto.StopVeloxRuleMobileDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Mobile/CreateVeloxRule": {
      "post": {
        "tags": [
          "VeloxMobile"
        ],
        "summary": "ApiMobileCreateVeloxRule_POST",
        "description": "",
        "operationId": "ApiMobileCreateVeloxRule_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.VeloxRule.Dto.CreateVeloxRuleMobileDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Mobile/GetVeloxRuleExpire/{gateId}": {
      "get": {
        "tags": [
          "VeloxMobile"
        ],
        "summary": "ApiMobileGetVeloxRuleExpireByGateId_GET",
        "description": "",
        "operationId": "ApiMobileGetVeloxRuleExpireByGateId_GET",
        "parameters": [
          {
            "name": "gateId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.VeloxRule.Dto.VeloxExpireRuleDto"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Mobile/VeloxTransit/{transiId}/{token}": {
      "get": {
        "tags": [
          "VeloxMobile"
        ],
        "summary": "Per ora usato solo da concilia mobile",
        "description": "",
        "operationId": "GetPerorausatosolodaconciliamobile",
        "parameters": [
          {
            "name": "transiId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "token",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/api/Mobile/LastTransitsVelox/{direction}": {
      "get": {
        "tags": [
          "VeloxMobile"
        ],
        "summary": "ApiMobileLastTransitsVeloxByDirection_GET",
        "description": "",
        "operationId": "GetApiMobileLastTransitsVeloxByDirection_GET",
        "parameters": [
          {
            "name": "direction",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/WSAutoscan.Core.Enums.TransitDirection"
                },
                {}
              ]
            }
          },
          {
            "name": "camerasIds",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Transit.Dto.MobileRedVeloxTransitDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Velox/Rule/AddOrUpdateRuleAsync": {
      "post": {
        "tags": [
          "VeloxRule"
        ],
        "summary": "Aggiunge o modifica una regola della velocita'",
        "description": "",
        "operationId": "Aggiungeomodificaunaregoladellavelocita'",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Dto della regola da aggiungere/modificare",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.VeloxRule.Dto.VeloxRuleDto"
                  },
                  {
                    "description": "Dto della regola da aggiungere/modificare"
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "La regola e' stata aggiunta/modificata correttamente",
            "headers": {},
            "content": {}
          },
          "401": {
            "description": "Non si dispongono dei permessi per scrivere regole di velocita'",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Velox/Rule/{ruleId}": {
      "delete": {
        "tags": [
          "VeloxRule"
        ],
        "summary": "Elimina una regola della velocita'",
        "description": "",
        "operationId": "Eliminaunaregoladellavelocita'",
        "parameters": [
          {
            "name": "ruleId",
            "in": "path",
            "description": "Id della regola da eliminare",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Regola eliminata correttamente",
            "headers": {},
            "content": {}
          },
          "401": {
            "description": "Non si dispongono dei permessi per scrivere regole di velocita'",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Velox/Rule/GetAllRules": {
      "get": {
        "tags": [
          "VeloxRule"
        ],
        "summary": "Esegue una ricerca per prendere tutte le regole della velocita'",
        "description": "",
        "operationId": "Esegueunaricercaperprenderetutteleregoledellavelocita'",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista con tutte le regole della velocita'",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.VeloxRule.Dto.VeloxRuleDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Velox/Rule/{ruleId}/active": {
      "put": {
        "tags": [
          "VeloxRule"
        ],
        "summary": "Setta lo stato di attiva o disattivo di una regola della velocita'",
        "description": "",
        "operationId": "Settalostatodiattivaodisattivodiunaregoladellavelocita'",
        "parameters": [
          {
            "name": "ruleId",
            "in": "path",
            "description": "Id della regola",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "True se la regola e' da attivare - false se la regola e' da disattivare",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "boolean",
                "description": "True se la regola e' da attivare - false se la regola e' da disattivare"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Lo stato della regola e' stato impostato correttamente",
            "headers": {},
            "content": {}
          },
          "401": {
            "description": "Non si dispongono dei permessi per scrivere regole di velocita'",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Velox/Rule/CountRules/{ruleTypeId}": {
      "get": {
        "tags": [
          "VeloxRule"
        ],
        "summary": "Conta il numero di regole della vlocita'",
        "description": "",
        "operationId": "Contailnumerodiregoledellavlocita'",
        "parameters": [
          {
            "name": "ruleTypeId",
            "in": "path",
            "description": "Tipologia di regole per cui effettuare il conteggio",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Numero di regole per la tipologia selezionata",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/System.Threading.Tasks.Task1System.Int32System.Private.CoreLibVersion4.0.0.0CultureneutralPublicKeyToken7cec85d7bea7798e"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Velox/RuleTypes/GetAll": {
      "get": {
        "tags": [
          "VeloxRuleTypes"
        ],
        "summary": "Esegue una ricerca per ottenere tutti i tipi di regola della velocita'",
        "description": "",
        "operationId": "Esegueunaricercaperotteneretuttiitipidiregoladellavelocita'",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista dei tipi di regola della velocita'",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.VeloxRuleTypesService.Dto.VeloxRuleTypeDto"
                  },
                  "description": ""
                }
              }
            }
          },
          "401": {
            "description": "Se non si dispongono dei permessi per leggere le regole della velocita'",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Version": {
      "get": {
        "tags": [
          "Version"
        ],
        "summary": "Prende il numero di versione del progetto",
        "description": "",
        "operationId": "Prendeilnumerodiversionedelprogetto",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return del numero di versione del progetto",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/Ztl/Authorization/GetCountUnhandledExternalPermits": {
      "get": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Conta le Autorizzazioni Esterne che non sono state ancora gestite.",
        "description": "",
        "operationId": "ContaleAutorizzazioniEsternechenonsonostateancoragestite.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "I totali delle Autorizzazioni Esterne non gestite, divisi per Stato.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.ExternalAuthorizationsStatusCount"
                  },
                  "description": ""
                }
              }
            }
          },
          "401": {
            "description": "Se l'Utente non ha il permesso di accedere alle Autorizzazioni Esterne.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/permits/GetDistinctPlaceDescriptionList": {
      "get": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Restituisce l'elenco distinto delle placeDescriptions.1",
        "description": "",
        "operationId": "Restituiscel'elencodistintodelleplaceDescriptions.1",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Authorization/{permitId}/details": {
      "get": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Richiama il dettaglio di un'Autorizzazione.",
        "description": "",
        "operationId": "Richiamaildettagliodiun'Autorizzazione.",
        "parameters": [
          {
            "name": "permitId",
            "in": "path",
            "description": "ID dell'Autorizzazione.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.PermitDetailDto"
                }
              }
            }
          },
          "401": {
            "description": "Se l'Utente non ha il permesso di lettura per le Autorizzazioni.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/permits/{permitId}/details": {
      "get": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Richiama il dettaglio di un'Autorizzazione.1",
        "description": "",
        "operationId": "Richiamaildettagliodiun'Autorizzazione.1",
        "parameters": [
          {
            "name": "permitId",
            "in": "path",
            "description": "ID dell'Autorizzazione.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.PermitDetailDto"
                }
              }
            }
          },
          "401": {
            "description": "Se l'Utente non ha il permesso di lettura per le Autorizzazioni.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Authorization/AddOrUpdateAuthorization": {
      "post": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Crea o modifica un'Autorizzazione.",
        "description": "",
        "operationId": "Creaomodificaun'Autorizzazione.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Dati dell'Autorizzazione da creare o modificare.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.AuthorizationRequestDto"
                  },
                  {
                    "description": "Dati dell'Autorizzazione da creare o modificare."
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.PermitModificationResponseDto"
                  },
                  "description": ""
                }
              }
            }
          },
          "401": {
            "description": "Se l'Utente non ha il permesso di scrittura per le Autorizzazioni.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/permits/{id}": {
      "get": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Recupera i dettagli della versione corrente di un'Autorizzazione.1",
        "description": "",
        "operationId": "Recuperaidettaglidellaversionecorrentediun'Autorizzazione.1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID dell'Autorizzazione.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.PermitVersionDto"
                }
              }
            }
          },
          "401": {
            "description": "Se l'Utente non ha il permesso di lettura per le Autorizzazioni.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/permits/ExportXlsx": {
      "post": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Genera un file '.zip' contenente un file '.xslx' che riporta i dati delle Autorizzazioni specificate.1",
        "description": "",
        "operationId": "Generaunfile'.zip'contenenteunfile'.xslx'cheriportaidatidelleAutorizzazionispecificate.1",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Lista di ID delle Autorizzazioni da esportare nel file.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64"
                },
                "description": "Lista di ID delle Autorizzazioni da esportare nel file."
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {}
          },
          "400": {
            "description": "La lista di ID è nulla.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/permits/GetExternalAuthorizations": {
      "post": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Esegue una ricerca delle Autorizzazioni Esterne.1",
        "description": "",
        "operationId": "EsegueunaricercadelleAutorizzazioniEsterne.1",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Filtri di ricerca.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.GetPermissionsRequestDto"
                  },
                  {
                    "description": "Filtri di ricerca."
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.ExternalAuthorizationDto"
                  },
                  "description": ""
                }
              }
            }
          },
          "401": {
            "description": "Se l'Utente non ha il permesso di accesso alle Autorizzazioni Esterne.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Authorization/{permitId}/printings": {
      "post": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Marca un'Autorizzazione come 'stampata'.",
        "description": "",
        "operationId": "Marcaun'Autorizzazionecome'stampata'.",
        "parameters": [
          {
            "name": "permitId",
            "in": "path",
            "description": "ID dell'Autorizzazione.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/permits/{permitId}/getChildrenOrParent": {
      "get": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Recupera le Autorizzazioni 'figlie' dei rinnovi per scadenza eseguiti su un'Autorizzazione.1",
        "description": "",
        "operationId": "RecuperaleAutorizzazioni'figlie'deirinnoviperscadenzaeseguitisuun'Autorizzazione.1",
        "parameters": [
          {
            "name": "permitId",
            "in": "path",
            "description": "ID dell'Autorizzazione.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.ZtlRenewService.Dto.ChildrenParent"
                }
              }
            }
          },
          "401": {
            "description": "Se l'Utente non ha il permesso di lettura per le Autorizzazioni.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/permits/{permitId}/print-templates": {
      "get": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Recupera gli identificativi dei Template ti stampa per un'Autorizzazione.1",
        "description": "",
        "operationId": "RecuperagliidentificativideiTemplatetistampaperun'Autorizzazione.1",
        "parameters": [
          {
            "name": "permitId",
            "in": "path",
            "description": "ID dell'Autorizzazione.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/permits/{permitId}/payments": {
      "get": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Recupera i pagamenti associati a un'Autorizzazione.1",
        "description": "",
        "operationId": "Recuperaipagamentiassociatiaun'Autorizzazione.1",
        "parameters": [
          {
            "name": "permitId",
            "in": "path",
            "description": "ID dell'Autorizzazione.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "description": ""
                }
              }
            }
          },
          "401": {
            "description": "Se l'Utente non ha il permesso di accesso alla contabilità delle Autorizzazioni.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Authorization/GetAuthorizations": {
      "post": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Esegue una ricerca delle Autorizzazioni.",
        "description": "",
        "operationId": "EsegueunaricercadelleAutorizzazioni.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Filtri di ricerca.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.GetPermissionsRequestDto"
                  },
                  {
                    "description": "Filtri di ricerca."
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.AuthorizationDto"
                  },
                  "description": ""
                }
              }
            }
          },
          "401": {
            "description": "Se l'Utente non ha il permesso di lettura per le Autorizzazioni.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/permits/GetAuthorizations": {
      "post": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Esegue una ricerca delle Autorizzazioni.1",
        "description": "",
        "operationId": "EsegueunaricercadelleAutorizzazioni.1",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Filtri di ricerca.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.GetPermissionsRequestDto"
                  },
                  {
                    "description": "Filtri di ricerca."
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.AuthorizationDto"
                  },
                  "description": ""
                }
              }
            }
          },
          "401": {
            "description": "Se l'Utente non ha il permesso di lettura per le Autorizzazioni.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Authorization/ExportExternalXlsx": {
      "post": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Genera un file '.zip' contenente un file '.xslx' che riporta i dati delle Autorizzazioni Esterne specificate.",
        "description": "",
        "operationId": "Generaunfile'.zip'contenenteunfile'.xslx'cheriportaidatidelleAutorizzazioniEsternespecificate.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Lista di ID delle Autorizzazioni Esterne da esportare nel file.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64"
                },
                "description": "Lista di ID delle Autorizzazioni Esterne da esportare nel file."
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {}
          },
          "400": {
            "description": "La lista di ID è nulla o vuota.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Authorization/ExportXlsx": {
      "post": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Genera un file '.zip' contenente un file '.xslx' che riporta i dati delle Autorizzazioni specificate.",
        "description": "",
        "operationId": "Generaunfile'.zip'contenenteunfile'.xslx'cheriportaidatidelleAutorizzazionispecificate.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Lista di ID delle Autorizzazioni da esportare nel file.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64"
                },
                "description": "Lista di ID delle Autorizzazioni da esportare nel file."
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {}
          },
          "400": {
            "description": "La lista di ID è nulla.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Authorization/GetExternalAuthorizations": {
      "post": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Esegue una ricerca delle Autorizzazioni Esterne.",
        "description": "",
        "operationId": "EsegueunaricercadelleAutorizzazioniEsterne.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Filtri di ricerca.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.GetPermissionsRequestDto"
                  },
                  {
                    "description": "Filtri di ricerca."
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.ExternalAuthorizationDto"
                  },
                  "description": ""
                }
              }
            }
          },
          "401": {
            "description": "Se l'Utente non ha il permesso di accesso alle Autorizzazioni Esterne.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Authorization/GetDistinctPlaceDescriptionList": {
      "get": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Restituisce l'elenco distinto delle placeDescriptions.",
        "description": "",
        "operationId": "Restituiscel'elencodistintodelleplaceDescriptions.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Authorization/{permitId}/getChildrenOrParent": {
      "get": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Recupera le Autorizzazioni 'figlie' dei rinnovi per scadenza eseguiti su un'Autorizzazione.",
        "description": "",
        "operationId": "RecuperaleAutorizzazioni'figlie'deirinnoviperscadenzaeseguitisuun'Autorizzazione.",
        "parameters": [
          {
            "name": "permitId",
            "in": "path",
            "description": "ID dell'Autorizzazione.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.ZtlRenewService.Dto.ChildrenParent"
                }
              }
            }
          },
          "401": {
            "description": "Se l'Utente non ha il permesso di lettura per le Autorizzazioni.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/permits/vehicle-data/{plate}": {
      "get": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Recupera i dati di un Veicolo autorizzato a partire dalla sua targa.1",
        "description": "",
        "operationId": "RecuperaidatidiunVeicoloautorizzatoapartiredallasuatarga.1",
        "parameters": [
          {
            "name": "plate",
            "in": "path",
            "description": "Targa del veicolo.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.RegisteredVehicleDto"
                    },
                    {
                      "description": "Veicolo associato a un'Autorizzazione."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Se il Veicolo non è stato trovato.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Authorization/GetAllStates": {
      "get": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Recupera tutti gli Stati che un'Autorizzazione può assumere.",
        "description": "",
        "operationId": "RecuperatuttigliStaticheun'Autorizzazionepuòassumere.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/permits/AddOrUpdateAuthorization": {
      "post": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Crea o modifica un'Autorizzazione.1",
        "description": "",
        "operationId": "Creaomodificaun'Autorizzazione.1",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Dati dell'Autorizzazione da creare o modificare.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.AuthorizationRequestDto"
                  },
                  {
                    "description": "Dati dell'Autorizzazione da creare o modificare."
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.PermitModificationResponseDto"
                  },
                  "description": ""
                }
              }
            }
          },
          "401": {
            "description": "Se l'Utente non ha il permesso di scrittura per le Autorizzazioni.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Authorization/{permitId}/payments": {
      "get": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Recupera i pagamenti associati a un'Autorizzazione.",
        "description": "",
        "operationId": "Recuperaipagamentiassociatiaun'Autorizzazione.",
        "parameters": [
          {
            "name": "permitId",
            "in": "path",
            "description": "ID dell'Autorizzazione.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "description": ""
                }
              }
            }
          },
          "401": {
            "description": "Se l'Utente non ha il permesso di accesso alla contabilità delle Autorizzazioni.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/permits/ExportExternalXlsx": {
      "post": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Genera un file '.zip' contenente un file '.xslx' che riporta i dati delle Autorizzazioni Esterne specificate.1",
        "description": "",
        "operationId": "Generaunfile'.zip'contenenteunfile'.xslx'cheriportaidatidelleAutorizzazioniEsternespecificate.1",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Lista di ID delle Autorizzazioni Esterne da esportare nel file.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64"
                },
                "description": "Lista di ID delle Autorizzazioni Esterne da esportare nel file."
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {}
          },
          "400": {
            "description": "La lista di ID è nulla o vuota.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/permits/GetCountUnhandledExternalPermits": {
      "get": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Conta le Autorizzazioni Esterne che non sono state ancora gestite.1",
        "description": "",
        "operationId": "ContaleAutorizzazioniEsternechenonsonostateancoragestite.1",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "I totali delle Autorizzazioni Esterne non gestite, divisi per Stato.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.ExternalAuthorizationsStatusCount"
                  },
                  "description": ""
                }
              }
            }
          },
          "401": {
            "description": "Se l'Utente non ha il permesso di accedere alle Autorizzazioni Esterne.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/permits/{permitId}/printings": {
      "post": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Marca un'Autorizzazione come 'stampata'.1",
        "description": "",
        "operationId": "Marcaun'Autorizzazionecome'stampata'.1",
        "parameters": [
          {
            "name": "permitId",
            "in": "path",
            "description": "ID dell'Autorizzazione.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Authorization/vehicle-data/{plate}": {
      "get": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Recupera i dati di un Veicolo autorizzato a partire dalla sua targa.",
        "description": "",
        "operationId": "RecuperaidatidiunVeicoloautorizzatoapartiredallasuatarga.",
        "parameters": [
          {
            "name": "plate",
            "in": "path",
            "description": "Targa del veicolo.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.RegisteredVehicleDto"
                    },
                    {
                      "description": "Veicolo associato a un'Autorizzazione."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Se il Veicolo non è stato trovato.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/permits/GetAllStates": {
      "get": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Recupera tutti gli Stati che un'Autorizzazione può assumere.1",
        "description": "",
        "operationId": "RecuperatuttigliStaticheun'Autorizzazionepuòassumere.1",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Authorization/{id}": {
      "get": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Recupera i dettagli della versione corrente di un'Autorizzazione.",
        "description": "",
        "operationId": "Recuperaidettaglidellaversionecorrentediun'Autorizzazione.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID dell'Autorizzazione.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.PermitVersionDto"
                }
              }
            }
          },
          "401": {
            "description": "Se l'Utente non ha il permesso di lettura per le Autorizzazioni.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Authorization/{permitId}/print-templates": {
      "get": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Recupera gli identificativi dei Template ti stampa per un'Autorizzazione.",
        "description": "",
        "operationId": "RecuperagliidentificativideiTemplatetistampaperun'Autorizzazione.",
        "parameters": [
          {
            "name": "permitId",
            "in": "path",
            "description": "ID dell'Autorizzazione.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Authorization/revocations": {
      "post": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Revoca un'Autorizzazione. L'Autorizzazione sarà valida fino alla data di revoca compresa.",
        "description": "",
        "operationId": "Revocaun'Autorizzazione.L'Autorizzazionesaràvalidafinoalladatadirevocacompresa.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Dati della revoca.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.RevokePermitDto"
                  },
                  {
                    "description": "Dati della revoca."
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {}
          },
          "401": {
            "description": "Se l'Utente non ha il permesso di scrittura per le Autorizzazioni.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Authorization/ChangeAuthorizationStatus": {
      "post": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Cambia lo stato di un'Autorizzazione.",
        "description": "",
        "operationId": "Cambialostatodiun'Autorizzazione.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Dati del cambio di stato.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.AuthorizationStatusDto"
                  },
                  {
                    "description": "Dati del cambio di stato."
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {}
          },
          "401": {
            "description": "Se l'Utente non ha il permesso di scrittura per le Autorizzazioni.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Authorization/ChangeAuthorizationsStatus": {
      "post": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Cambia lo stato di più Autorizzazioni.",
        "description": "",
        "operationId": "CambialostatodipiùAutorizzazioni.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Dati dei cambio di stato.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.AuthorizationStatusDto"
                },
                "description": "Dati dei cambio di stato."
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {}
          },
          "401": {
            "description": "Se l'Utente non ha il permesso di scrittura per le Autorizzazioni.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/permits/ChangeAuthorizationsStatus": {
      "post": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Cambia lo stato di più Autorizzazioni.1",
        "description": "",
        "operationId": "CambialostatodipiùAutorizzazioni.1",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Dati dei cambio di stato.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.AuthorizationStatusDto"
                },
                "description": "Dati dei cambio di stato."
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {}
          },
          "401": {
            "description": "Se l'Utente non ha il permesso di scrittura per le Autorizzazioni.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/permits/{permitId}": {
      "delete": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Elimina un'Autorizzazione. L'Autorizzazione non sarà più valida da subito, ed eventuali transiti non autorizzati saranno considerati come sanzionabili.1",
        "description": "",
        "operationId": "Eliminaun'Autorizzazione.L'Autorizzazionenonsaràpiùvalidadasubito,edeventualitransitinonautorizzatisarannoconsideraticomesanzionabili.1",
        "parameters": [
          {
            "name": "permitId",
            "in": "path",
            "description": "ID dell'Autorizzazione.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {}
          },
          "401": {
            "description": "Se l'Utente non ha il permesso di scrittura per le Autorizzazioni.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Authorization/Historic-details": {
      "post": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Recupera lo Storico di un'Autorizzazione a partire da una specifica Versione.",
        "description": "",
        "operationId": "RecuperaloStoricodiun'AutorizzazioneapartiredaunaspecificaVersione.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Dati della Versione dell'Autorizzazione.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.VersionDetails"
                  },
                  {
                    "description": "Dati della Versione dell'Autorizzazione."
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.PermitDetailDto"
                }
              }
            }
          },
          "401": {
            "description": "Se l'Utente non ha il permesso di lettura per le Autorizzazioni.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Authorization/massive-renewal": {
      "post": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Esegue il rinnovo massivo di più Autorizzazioni.",
        "description": "",
        "operationId": "EsegueilrinnovomassivodipiùAutorizzazioni.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Specifiche del rinnovo massivo.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.MassivePermitRenewalRequest"
                  },
                  {
                    "description": "Specifiche del rinnovo massivo."
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.AuthorizationDto"
                  },
                  "description": ""
                }
              }
            }
          },
          "401": {
            "description": "Se l'Utente non ha il permesso di scrittura per le Autorizzazioni.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Authorization/vehicle-edit-type": {
      "get": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Recupera le motivazioni per modificare un Veicolo associato a un'Autorizzazione.",
        "description": "",
        "operationId": "RecuperalemotivazionipermodificareunVeicoloassociatoaun'Autorizzazione.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.VehicleEditReasonTypeDto"
                  },
                  "description": ""
                }
              }
            }
          },
          "401": {
            "description": "Se l'Utente non ha il permesso di lettura per le Autorizzazioni.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/permits/{plate}/plate-associated-permit": {
      "get": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Recupera le Autorizzazioni associate a una targa.1",
        "description": "",
        "operationId": "RecuperaleAutorizzazioniassociateaunatarga.1",
        "parameters": [
          {
            "name": "plate",
            "in": "path",
            "description": "Targa per la quale ricercare le Autorizzazioni.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.AuthorizationDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Authorization/serial-number/{serialNumber}": {
      "get": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "ApiZtlAuthorizationSerialNumber_GET",
        "description": "",
        "operationId": "ApiZtlAuthorizationSerialNumber_GET",
        "parameters": [
          {
            "name": "serialNumber",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Authorization/duplicate": {
      "post": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Crea delle autorizzazioni duplicate.",
        "description": "",
        "operationId": "Creadelleautorizzazioniduplicate.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Dati delle autorizzazioni da duplicare.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.AuthorizationDuplicateRequestDto"
                  },
                  {
                    "description": "Dati delle autorizzazioni da duplicare."
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "400": {
            "description": "Bad Request",
            "headers": {},
            "content": {}
          },
          "500": {
            "description": "Server Error",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/permits/revocations": {
      "post": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Revoca un'Autorizzazione. L'Autorizzazione sarà valida fino alla data di revoca compresa.1",
        "description": "",
        "operationId": "Revocaun'Autorizzazione.L'Autorizzazionesaràvalidafinoalladatadirevocacompresa.1",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Dati della revoca.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.RevokePermitDto"
                  },
                  {
                    "description": "Dati della revoca."
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {}
          },
          "401": {
            "description": "Se l'Utente non ha il permesso di scrittura per le Autorizzazioni.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/permits/Historic-details": {
      "post": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Recupera lo Storico di un'Autorizzazione a partire da una specifica Versione.1",
        "description": "",
        "operationId": "RecuperaloStoricodiun'AutorizzazioneapartiredaunaspecificaVersione.1",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Dati della Versione dell'Autorizzazione.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.VersionDetails"
                  },
                  {
                    "description": "Dati della Versione dell'Autorizzazione."
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.PermitDetailDto"
                }
              }
            }
          },
          "401": {
            "description": "Se l'Utente non ha il permesso di lettura per le Autorizzazioni.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Authorization/{id}/history": {
      "get": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Recupera lo Storico completo di un'Autorizzazione.",
        "description": "",
        "operationId": "RecuperaloStoricocompletodiun'Autorizzazione.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID dell'Autorizzazione.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.AuthorizationVersionDto"
                  },
                  "description": ""
                }
              }
            }
          },
          "401": {
            "description": "Se l'Utente non ha il permesso di lettura per le Autorizzazioni.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/permits/{id}/history": {
      "get": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Recupera lo Storico completo di un'Autorizzazione.1",
        "description": "",
        "operationId": "RecuperaloStoricocompletodiun'Autorizzazione.1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID dell'Autorizzazione.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.AuthorizationVersionDto"
                  },
                  "description": ""
                }
              }
            }
          },
          "401": {
            "description": "Se l'Utente non ha il permesso di lettura per le Autorizzazioni.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Authorization/{permitId}/renewal": {
      "post": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Esegue il rinnovo di un'Autorizzazione.",
        "description": "",
        "operationId": "Esegueilrinnovodiun'Autorizzazione.",
        "parameters": [
          {
            "name": "permitId",
            "in": "path",
            "description": "ID dell'Autorizzazione.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Specifiche del rinnovo.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.PermitRenewalRequest"
                  },
                  {
                    "description": "Specifiche del rinnovo."
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.AuthorizationDto"
                  },
                  "description": ""
                }
              }
            }
          },
          "401": {
            "description": "Se l'Utente non ha il permesso di scrittura per le Autorizzazioni.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/permits/massive-renewal": {
      "post": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Esegue il rinnovo massivo di più Autorizzazioni.1",
        "description": "",
        "operationId": "EsegueilrinnovomassivodipiùAutorizzazioni.1",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Specifiche del rinnovo massivo.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.MassivePermitRenewalRequest"
                  },
                  {
                    "description": "Specifiche del rinnovo massivo."
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.AuthorizationDto"
                  },
                  "description": ""
                }
              }
            }
          },
          "401": {
            "description": "Se l'Utente non ha il permesso di scrittura per le Autorizzazioni.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/permits/FrontOfficePermitToHandle": {
      "get": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Conta le Istanze dallo Sportello che non sono state ancora gestite.1",
        "description": "",
        "operationId": "ContaleIstanzedalloSportellochenonsonostateancoragestite.1",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/permits/ChangeAuthorizationStatus": {
      "post": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Cambia lo stato di un'Autorizzazione.1",
        "description": "",
        "operationId": "Cambialostatodiun'Autorizzazione.1",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Dati del cambio di stato.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.AuthorizationStatusDto"
                  },
                  {
                    "description": "Dati del cambio di stato."
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {}
          },
          "401": {
            "description": "Se l'Utente non ha il permesso di scrittura per le Autorizzazioni.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Authorization/{permitId}": {
      "delete": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Elimina un'Autorizzazione. L'Autorizzazione non sarà più valida da subito, ed eventuali transiti non autorizzati saranno considerati come sanzionabili.",
        "description": "",
        "operationId": "Eliminaun'Autorizzazione.L'Autorizzazionenonsaràpiùvalidadasubito,edeventualitransitinonautorizzatisarannoconsideraticomesanzionabili.",
        "parameters": [
          {
            "name": "permitId",
            "in": "path",
            "description": "ID dell'Autorizzazione.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {}
          },
          "401": {
            "description": "Se l'Utente non ha il permesso di scrittura per le Autorizzazioni.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/permits/serial-number/{serialNumber}": {
      "get": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "ApiZtlPermitsSerialNumberBySerialNumber_GET",
        "description": "",
        "operationId": "ApiZtlPermitsSerialNumberBySerialNumber_GET",
        "parameters": [
          {
            "name": "serialNumber",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/permits/{permitId}/renewal": {
      "post": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Esegue il rinnovo di un'Autorizzazione.1",
        "description": "",
        "operationId": "Esegueilrinnovodiun'Autorizzazione.1",
        "parameters": [
          {
            "name": "permitId",
            "in": "path",
            "description": "ID dell'Autorizzazione.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Specifiche del rinnovo.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.PermitRenewalRequest"
                  },
                  {
                    "description": "Specifiche del rinnovo."
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.AuthorizationDto"
                  },
                  "description": ""
                }
              }
            }
          },
          "401": {
            "description": "Se l'Utente non ha il permesso di scrittura per le Autorizzazioni.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/permits/vehicle-edit-type": {
      "get": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Recupera le motivazioni per modificare un Veicolo associato a un'Autorizzazione.1",
        "description": "",
        "operationId": "RecuperalemotivazionipermodificareunVeicoloassociatoaun'Autorizzazione.1",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.VehicleEditReasonTypeDto"
                  },
                  "description": ""
                }
              }
            }
          },
          "401": {
            "description": "Se l'Utente non ha il permesso di lettura per le Autorizzazioni.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Authorization/{plate}/plate-associated-permit": {
      "get": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Recupera le Autorizzazioni associate a una targa.",
        "description": "",
        "operationId": "RecuperaleAutorizzazioniassociateaunatarga.",
        "parameters": [
          {
            "name": "plate",
            "in": "path",
            "description": "Targa per la quale ricercare le Autorizzazioni.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.AuthorizationDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Authorization/FrontOfficePermitToHandle": {
      "get": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Conta le Istanze dallo Sportello che non sono state ancora gestite.",
        "description": "",
        "operationId": "ContaleIstanzedalloSportellochenonsonostateancoragestite.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/permits/duplicate": {
      "post": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Crea delle autorizzazioni duplicate.1",
        "description": "",
        "operationId": "Creadelleautorizzazioniduplicate.1",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Dati delle autorizzazioni da duplicare.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.AuthorizationDuplicateRequestDto"
                  },
                  {
                    "description": "Dati delle autorizzazioni da duplicare."
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "400": {
            "description": "Bad Request",
            "headers": {},
            "content": {}
          },
          "500": {
            "description": "Server Error",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/authorizationExtension": {
      "get": {
        "tags": [
          "ZtlAuthorizationExtension"
        ],
        "summary": "ApiZtlAuthorizationExtension_GET",
        "description": "",
        "operationId": "ApiZtlAuthorizationExtension_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorizationExtension.Dto.AuthorizationExtensionDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "ZtlAuthorizationExtension"
        ],
        "summary": "ApiZtlAuthorizationExtension_POST",
        "description": "",
        "operationId": "ApiZtlAuthorizationExtension_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorizationExtension.Dto.AuthorizationExtensionDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "put": {
        "tags": [
          "ZtlAuthorizationExtension"
        ],
        "summary": "ApiZtlAuthorizationExtension_PUT",
        "description": "",
        "operationId": "ApiZtlAuthorizationExtension_PUT",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorizationExtension.Dto.AuthorizationExtensionDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/authorizationExtension/{extensionId}": {
      "get": {
        "tags": [
          "ZtlAuthorizationExtension"
        ],
        "summary": "ApiZtlAuthorizationExtension_GET",
        "description": "",
        "operationId": "GetApiZtlAuthorizationExtension_GET",
        "parameters": [
          {
            "name": "extensionId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorizationExtension.Dto.AuthorizationExtensionDto"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "ZtlAuthorizationExtension"
        ],
        "summary": "ApiZtlAuthorizationExtension_DELETE",
        "description": "",
        "operationId": "ApiZtlAuthorizationExtension_DELETE",
        "parameters": [
          {
            "name": "extensionId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/AuthorizationType/duration-constraints": {
      "get": {
        "tags": [
          "ZtlAuthorizationType"
        ],
        "summary": "ApiZtlAuthorizationTypeDurationConstraints_GET",
        "description": "",
        "operationId": "ApiZtlAuthorizationTypeDurationConstraints_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/AuthorizationType": {
      "post": {
        "tags": [
          "ZtlAuthorizationType"
        ],
        "summary": "ApiZtlAuthorizationType_POST",
        "description": "",
        "operationId": "ApiZtlAuthorizationType_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorizationType.Dto.ZtlAuthorizationTypeDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "get": {
        "tags": [
          "ZtlAuthorizationType"
        ],
        "summary": "ApiZtlAuthorizationType_GET",
        "description": "",
        "operationId": "ApiZtlAuthorizationType_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorizationType.Dto.ZtlAuthorizationTypeDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/AuthorizationType/{id}": {
      "get": {
        "tags": [
          "ZtlAuthorizationType"
        ],
        "summary": "ApiZtlAuthorizationTypeById_GET",
        "description": "",
        "operationId": "ApiZtlAuthorizationTypeById_GET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorizationType.Dto.ZtlAuthorizationTypeDto"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "put": {
        "tags": [
          "ZtlAuthorizationType"
        ],
        "summary": "ApiZtlAuthorizationTypeById_PUT",
        "description": "",
        "operationId": "ApiZtlAuthorizationTypeById_PUT",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorizationType.Dto.ZtlAuthorizationTypeDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "ZtlAuthorizationType"
        ],
        "summary": "ApiZtlAuthorizationTypeById_DELETE",
        "description": "",
        "operationId": "ApiZtlAuthorizationTypeById_DELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/AuthorizationType/usages": {
      "get": {
        "tags": [
          "ZtlAuthorizationType"
        ],
        "summary": "ApiZtlAuthorizationTypeUsages_GET",
        "description": "",
        "operationId": "ApiZtlAuthorizationTypeUsages_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/AuthorizationType/external-types": {
      "get": {
        "tags": [
          "ZtlAuthorizationType"
        ],
        "summary": "ApiZtlAuthorizationTypeExternalTypes_GET",
        "description": "",
        "operationId": "ApiZtlAuthorizationTypeExternalTypes_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorizationType.Dto.ZtlAuthorizationTypeDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/AuthorizationType/available-types": {
      "get": {
        "tags": [
          "ZtlAuthorizationType"
        ],
        "summary": "ApiZtlAuthorizationTypeAvailableTypes_GET",
        "description": "",
        "operationId": "ApiZtlAuthorizationTypeAvailableTypes_GET",
        "parameters": [
          {
            "name": "PermitId",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "OperationType",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "IncludeInactive",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorizationType.Dto.ZtlAuthorizationTypeDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/ZtlAuthorizedTransit/GetTransitAuthorizedList/{ztlTransitId}": {
      "get": {
        "tags": [
          "ZtlAuthorizedTransit"
        ],
        "summary": "ApiZtlZtlAuthorizedTransitGetTransitAuthorizedList_GET",
        "description": "",
        "operationId": "ApiZtlZtlAuthorizedTransitGetTransitAuthorizedList_GET",
        "parameters": [
          {
            "name": "ztlTransitId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorizedTransit.Dto.ZtlAuthorizedTransitDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Blacklist/AllBlacklist": {
      "get": {
        "tags": [
          "ZtlBlacklist"
        ],
        "summary": "Effettua una ricerca di tutte le Blacklist.",
        "description": "",
        "operationId": "EffettuaunaricercaditutteleBlacklist.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Blacklist trovate con successo.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Blacklist/BlacklistDetailById/{blacklistId}": {
      "get": {
        "tags": [
          "ZtlBlacklist"
        ],
        "summary": "Recupera i dettagli di una Blacklist.",
        "description": "",
        "operationId": "RecuperaidettaglidiunaBlacklist.",
        "parameters": [
          {
            "name": "blacklistId",
            "in": "path",
            "description": "Id della Blacklist.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dettagli della Blacklist trovati con successo.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Blacklist/DeleteBlacklistAsync": {
      "post": {
        "tags": [
          "ZtlBlacklist"
        ],
        "summary": "Elimina una Blacklist.",
        "description": "",
        "operationId": "EliminaunaBlacklist.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Id della Blacklist.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "description": "Id della Blacklist.",
                "format": "int32"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Blacklist/AddOrUpdateBlacklistAsync": {
      "post": {
        "tags": [
          "ZtlBlacklist"
        ],
        "summary": "Crea o modifica una Blacklist.",
        "description": "",
        "operationId": "CreaomodificaunaBlacklist.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Dati con cui creare o modificare la Blacklist",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlBlacklist.Dto.ZtlBlacklistDto"
                  },
                  {
                    "description": "Dati con cui creare o modificare la Blacklist"
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Common/GetDayDictionary": {
      "get": {
        "tags": [
          "ZtlCommon"
        ],
        "summary": "ApiZtlCommonGetDayDictionary_GET",
        "description": "",
        "operationId": "ApiZtlCommonGetDayDictionary_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Api.Controllers.ZtlCommonControllerZTL_DayDictionaryDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Common/GetRevalidateStatus": {
      "get": {
        "tags": [
          "ZtlCommon"
        ],
        "summary": "ApiZtlCommonGetRevalidateStatus_GET",
        "description": "",
        "operationId": "ApiZtlCommonGetRevalidateStatus_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Dashboard/global-status": {
      "get": {
        "tags": [
          "ZtlDashboard"
        ],
        "summary": "ApiZtlDashboardGlobalStatus_GET",
        "description": "",
        "operationId": "ApiZtlDashboardGlobalStatus_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlSettings.Dto.ZTL_ZtlZoneGateCameraDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/front-office-application/attachment/{guid}": {
      "get": {
        "tags": [
          "ZtlFrontOfficeApplication"
        ],
        "summary": "Scarica un file allegato ad un'istanza presentata dallo sportello telematico.",
        "description": "",
        "operationId": "Scaricaunfileallegatoadun'istanzapresentatadallosportellotelematico.",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "description": "GUID del file.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "File dell'allegato.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/front-office-application/{applicationId}": {
      "put": {
        "tags": [
          "ZtlFrontOfficeApplication"
        ],
        "summary": "Modifica un'istanza presentata dallo sportello telematico.",
        "description": "",
        "operationId": "Modificaun'istanzapresentatadallosportellotelematico.",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "ID dell'istanza.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Valori da modificare dell'istanza.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlFrontOfficeApplication.Dto.UpdateFrontOfficeApplicationDto"
                  },
                  {
                    "description": "Valori da modificare dell'istanza."
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Istanza modificata.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.ZtlFrontOfficeApplication.Dto.ZtlFrontOfficeApplicationUpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "In caso di errori nella richiesta.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/front-office-application/associate-permit": {
      "post": {
        "tags": [
          "ZtlFrontOfficeApplication"
        ],
        "summary": "ApiZtlFrontOfficeApplicationAssociatePermit_POST",
        "description": "",
        "operationId": "ApiZtlFrontOfficeApplicationAssociatePermit_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlFrontOfficeApplication.Dto.ZtlFrontOfficeAplicationAssociatePermitDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/front-office-application": {
      "get": {
        "tags": [
          "ZtlFrontOfficeApplication"
        ],
        "summary": "Ricerca filtrata delle istanze presentate dallo sportello telematico.",
        "description": "",
        "operationId": "Ricercafiltratadelleistanzepresentatedallosportellotelematico.",
        "parameters": [
          {
            "name": "DateFrom",
            "in": "query",
            "description": "Filtra le istanze con data di protocollazione a partire da a questa data.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "description": "Filtra le istanze con data di protocollazione fino a questa data.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Waiting",
            "in": "query",
            "description": "Filtra per istanze in attesa di approvazione.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Approved",
            "in": "query",
            "description": "Filtra per istanze approvate.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Rejected",
            "in": "query",
            "description": "Filtra per istanze rifiutate.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ExpiredAdditionRequested",
            "in": "query",
            "description": "Filtra per istanze in attesa di integrazione scadute",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "AdditionsRequested",
            "in": "query",
            "description": "Filtra per istanze in attesa di integrazione.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "WithAdditions",
            "in": "query",
            "description": "Filtra per istanze con integrazioni associate.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Notified",
            "in": "query",
            "description": "Filtra per istanze notificate.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ApplicationTypes",
            "in": "query",
            "description": "Filtra per tipologie di istanza.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "ProtocolNumber",
            "in": "query",
            "description": "Numero di protocollo.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ProtocolYear",
            "in": "query",
            "description": "Anno di protocollo.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FiscalCode",
            "in": "query",
            "description": "Codice Fiscale del richiedente.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Istanze ottenute.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlFrontOfficeApplication.ZtlFrontOfficeApplicationDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/front-office-application/{applicationId}/preview": {
      "get": {
        "tags": [
          "ZtlFrontOfficeApplication"
        ],
        "summary": "Genera i dati dell'Autorizzazione ZTL che verrebbe creata a partire da un'istanza presentata dallo sportello telematico.",
        "description": "",
        "operationId": "Generaidatidell'AutorizzazioneZTLcheverrebbecreataapartiredaun'istanzapresentatadallosportellotelematico.",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "ID dell'istanza.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dati dell'Autorizzazione.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.ZtlFrontOfficeApplication.Dto.ZtlFrontOfficeAuthorizationRequestDto"
                }
              }
            }
          },
          "400": {
            "description": "In caso di errori nella richiesta.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/front-office-application/application-types": {
      "get": {
        "tags": [
          "ZtlFrontOfficeApplication"
        ],
        "summary": "Recupera tutte le tipologie di istanza.",
        "description": "",
        "operationId": "Recuperatutteletipologiediistanza.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Elenco delle tipologie di istanza.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlFrontOfficeApplication.Dto.ZtlFrontOfficeApplicationTypeDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/front-office-notes/notes": {
      "post": {
        "tags": [
          "ZtlFrontOfficeNotes"
        ],
        "summary": "ApiZtlFrontOfficeNotesNotes_POST",
        "description": "",
        "operationId": "ApiZtlFrontOfficeNotesNotes_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlFrontOfficeNotes.Dto.FrontOfficeNotesRequestDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/front-office-notes/notes/{applicationId}": {
      "get": {
        "tags": [
          "ZtlFrontOfficeNotes"
        ],
        "summary": "ApiZtlFrontOfficeNotesNotes_GET",
        "description": "",
        "operationId": "ApiZtlFrontOfficeNotesNotes_GET",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/frontofficeregistry/registries": {
      "get": {
        "tags": [
          "ZtlFrontOfficeRegistry"
        ],
        "summary": "ApiFrontofficeregistryRegistries_GET",
        "description": "",
        "operationId": "ApiFrontofficeregistryRegistries_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "ZtlFrontOfficeRegistry"
        ],
        "summary": "ApiFrontofficeregistryRegistries_POST",
        "description": "",
        "operationId": "ApiFrontofficeregistryRegistries_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.ZtlFrontOfficeRegistry.Dto.ZtlFrontOfficeRegistryDto"
                },
                "description": ""
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/frontofficeregistry/registries/{year}": {
      "get": {
        "tags": [
          "ZtlFrontOfficeRegistry"
        ],
        "summary": "ApiFrontofficeregistryRegistriesByYear_GET",
        "description": "",
        "operationId": "ApiFrontofficeregistryRegistriesByYear_GET",
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/gate": {
      "get": {
        "tags": [
          "ZtlGate"
        ],
        "summary": "ApiZtlGate_GET",
        "description": "",
        "operationId": "ApiZtlGate_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Gate.Dto.ZtlGateDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/gate/available": {
      "get": {
        "tags": [
          "ZtlGate"
        ],
        "summary": "ApiZtlGateAvailable_GET",
        "description": "",
        "operationId": "ApiZtlGateAvailable_GET",
        "parameters": [
          {
            "name": "zoneId",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/gate/{gateId}/operating-times": {
      "get": {
        "tags": [
          "ZtlGate"
        ],
        "summary": "ApiZtlGateOperatingTimesByGateId_GET",
        "description": "",
        "operationId": "ApiZtlGateOperatingTimesByGateId_GET",
        "parameters": [
          {
            "name": "gateId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/api/ztl/gate/{gateId}/unoperating-times": {
      "get": {
        "tags": [
          "ZtlGate"
        ],
        "summary": "ApiZtlGateUnoperatingTimesByGateId_GET",
        "description": "",
        "operationId": "ApiZtlGateUnoperatingTimesByGateId_GET",
        "parameters": [
          {
            "name": "gateId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/api/ztl/gate/unoperating-times": {
      "get": {
        "tags": [
          "ZtlGate"
        ],
        "summary": "ApiZtlGateUnoperatingTimes_GET",
        "description": "",
        "operationId": "ApiZtlGateUnoperatingTimes_GET",
        "parameters": [
          {
            "name": "gates",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "monthRange",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/api/ztl/gate/operating-times": {
      "get": {
        "tags": [
          "ZtlGate"
        ],
        "summary": "ApiZtlGateOperatingTimes_GET",
        "description": "",
        "operationId": "ApiZtlGateOperatingTimes_GET",
        "parameters": [
          {
            "name": "gates",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "monthRange",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/api/ztl/gate/{gateId}/devices": {
      "get": {
        "tags": [
          "ZtlGate"
        ],
        "summary": "ApiZtlGateDevicesByGateId_GET",
        "description": "",
        "operationId": "ApiZtlGateDevicesByGateId_GET",
        "parameters": [
          {
            "name": "gateId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.DataAccess.Dal.DeviceStatus"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/concilia/sincronizzazione": {
      "post": {
        "tags": [
          "ZtlPermitConcilia"
        ],
        "summary": "ApiZtlConciliaSincronizzazione_POST",
        "description": "",
        "operationId": "ApiZtlConciliaSincronizzazione_POST",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlPermitConcilia.Dto.ZtlPermitConciliaSincronizzazioneRequest"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      },
      "get": {
        "tags": [
          "ZtlPermitConcilia"
        ],
        "summary": "ApiZtlConciliaSincronizzazione_GET",
        "description": "",
        "operationId": "ApiZtlConciliaSincronizzazione_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/concilia/autorizzazione/{id_autorizzazione}": {
      "put": {
        "tags": [
          "ZtlPermitConcilia"
        ],
        "summary": "ApiZtlConciliaAutorizzazione_PUT",
        "description": "",
        "operationId": "ApiZtlConciliaAutorizzazione_PUT",
        "parameters": [
          {
            "name": "id_autorizzazione",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlPermitConcilia.Dto.ZtlPermitConicliaRequestDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "ZtlPermitConcilia"
        ],
        "summary": "ApiZtlConciliaAutorizzazione_DELETE",
        "description": "",
        "operationId": "ApiZtlConciliaAutorizzazione_DELETE",
        "parameters": [
          {
            "name": "id_autorizzazione",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/api/Ztl/PermitTypeUser/can-add": {
      "get": {
        "tags": [
          "ZtlPermitTypeUser"
        ],
        "summary": "ApiZtlPermitTypeUserCanAdd_GET",
        "description": "",
        "operationId": "ApiZtlPermitTypeUserCanAdd_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/PermitTypeUser/CanAcceptAllFreePass": {
      "get": {
        "tags": [
          "ZtlPermitTypeUser"
        ],
        "summary": "ApiZtlPermitTypeUserCanAcceptAllFreePass_GET",
        "description": "",
        "operationId": "ApiZtlPermitTypeUserCanAcceptAllFreePass_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Rule/surrogates": {
      "post": {
        "tags": [
          "ZtlRule"
        ],
        "summary": "ApiZtlRuleSurrogates_POST",
        "description": "",
        "operationId": "ApiZtlRuleSurrogates_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlRule.Dto.ZtlSurrogateRule"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "get": {
        "tags": [
          "ZtlRule"
        ],
        "summary": "ApiZtlRuleSurrogates_GET",
        "description": "",
        "operationId": "ApiZtlRuleSurrogates_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlRule.Dto.ZtlSurrogateRule"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Rule/GetAllRules": {
      "get": {
        "tags": [
          "ZtlRule"
        ],
        "summary": "ApiZtlRuleGetAllRules_GET",
        "description": "",
        "operationId": "ApiZtlRuleGetAllRules_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlRule.Dto.ZtlRuleDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Rule/{ruleId}/active": {
      "put": {
        "tags": [
          "ZtlRule"
        ],
        "summary": "ApiZtlRuleActiveByRuleId_PUT",
        "description": "",
        "operationId": "ApiZtlRuleActiveByRuleId_PUT",
        "parameters": [
          {
            "name": "ruleId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "boolean"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Rule/{ruleId}": {
      "delete": {
        "tags": [
          "ZtlRule"
        ],
        "summary": "ApiZtlRuleByRuleId_DELETE",
        "description": "",
        "operationId": "ApiZtlRuleByRuleId_DELETE",
        "parameters": [
          {
            "name": "ruleId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Rule/GetRulesByGate/{gateId}": {
      "get": {
        "tags": [
          "ZtlRule"
        ],
        "summary": "ApiZtlRuleGetRulesByGateByGateId_GET",
        "description": "",
        "operationId": "ApiZtlRuleGetRulesByGateByGateId_GET",
        "parameters": [
          {
            "name": "gateId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlRule.Dto.ZtlRuleMinDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Rule/active-rules": {
      "get": {
        "tags": [
          "ZtlRule"
        ],
        "summary": "Controlla se esistono regole attive da oggi in futuro",
        "description": "",
        "operationId": "Controllaseesistonoregoleattivedaoggiinfuturo",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ritorno booleano",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Rule/AddOrUpdateRuleAsync": {
      "post": {
        "tags": [
          "ZtlRule"
        ],
        "summary": "ApiZtlRuleAddOrUpdateRuleAsync_POST",
        "description": "",
        "operationId": "ApiZtlRuleAddOrUpdateRuleAsync_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlRule.Dto.ZtlRuleDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Transit/SendTransits": {
      "post": {
        "tags": [
          "ZtlSatRedVeloxTransit"
        ],
        "summary": "Salva su file i transiti inviati dal nas da elaborare in un successivo momento",
        "description": "",
        "operationId": "Salvasufileitransitiinviatidalnasdaelaborareinunsuccessivomomento",
        "parameters": [],
        "requestBody": {
          "description": "Lista di transiti da elaborare",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WSAutoscan.Utility.Xml.Transit.TransitMessage"
                },
                "description": "Lista di transiti da elaborare"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Transiti elaborati correttamente",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Utility.Xml.Transit.TransitMessage"
                  },
                  "description": ""
                }
              }
            }
          },
          "401": {
            "description": "Nel caso in cui sia abilitata l'autenticazione autoscan/nas e il nas non si sia registrato correttamente",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/api/Transit/UploadImageMP": {
      "post": {
        "tags": [
          "ZtlSatRedVeloxTransit"
        ],
        "summary": "Salva su database le foto provenienti dal nas",
        "description": "",
        "operationId": "Salvasudatabaselefotoprovenientidalnas",
        "parameters": [
          {
            "name": "Path",
            "in": "query",
            "description": "Percorso del file",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "encoding": {},
              "schema": {
                "type": "object",
                "properties": {
                  "File": {
                    "type": "string",
                    "description": "Lista con informazioni dei file",
                    "format": "binary"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "L'elaborazione del file e' andata a buon fine",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Utility.ResponseImageFromNasDto"
                }
              }
            }
          },
          "401": {
            "description": "Nel caso in cui sia abilitata l'autenticazione autoscan/nas e il nas non si sia registrato correttamente",
            "headers": {},
            "content": {}
          },
          "415": {
            "description": "Nel caso in cui i file inviati dal nas non siano del mediatype corretto",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/api/Transit/SendTransitRealTime": {
      "post": {
        "tags": [
          "ZtlSatRedVeloxTransit"
        ],
        "summary": "Processa immediatamente i transiti arrivati dal nas",
        "description": "",
        "operationId": "Processaimmediatamenteitransitiarrivatidalnas",
        "parameters": [],
        "requestBody": {
          "description": "Transito da processare/salvare",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Utility.Xml.Transit.TransitMessage"
                  },
                  {
                    "description": "Transito da processare/salvare"
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Transito elaborato correttamente",
            "headers": {},
            "content": {}
          },
          "401": {
            "description": "Nel caso in cui sia abilitata l'autenticazione autoscan/nas e il nas non si sia registrato correttamente",
            "headers": {},
            "content": {}
          },
          "400": {
            "description": "Errore durante la processazione del transito",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/api/ZtlSat/Settings/GetSettings": {
      "get": {
        "tags": [
          "ZtlSatSettings"
        ],
        "summary": "ApiZtlSatSettingsGetSettings_GET",
        "description": "",
        "operationId": "ApiZtlSatSettingsGetSettings_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.ZtlSettings.Dto.ZtlSettingsDto"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Settings/IsBlurEnabledOnViolation": {
      "get": {
        "tags": [
          "ZtlSettings"
        ],
        "summary": "ApiZtlSettingsIsBlurEnabledOnViolation_GET",
        "description": "",
        "operationId": "ApiZtlSettingsIsBlurEnabledOnViolation_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Settings/AddOrUpdateSettingsAsync": {
      "post": {
        "tags": [
          "ZtlSettings"
        ],
        "summary": "ApiZtlSettingsAddOrUpdateSettingsAsync_POST",
        "description": "",
        "operationId": "ApiZtlSettingsAddOrUpdateSettingsAsync_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlSettings.Dto.ZtlSettingsDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Settings/customer": {
      "put": {
        "tags": [
          "ZtlSettings"
        ],
        "summary": "ApiZtlSettingsCustomer_PUT",
        "description": "",
        "operationId": "ApiZtlSettingsCustomer_PUT",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlSettings.Dto.ZtlCustomerSettingsDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "get": {
        "tags": [
          "ZtlSettings"
        ],
        "summary": "ApiZtlSettingsCustomer_GET",
        "description": "",
        "operationId": "ApiZtlSettingsCustomer_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.ZtlSettings.Dto.ZtlCustomerSettingsDto"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Settings/GetSettings": {
      "get": {
        "tags": [
          "ZtlSettings"
        ],
        "summary": "ApiZtlSettingsGetSettings_GET",
        "description": "",
        "operationId": "ApiZtlSettingsGetSettings_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.ZtlSettings.Dto.ZtlSettingsDto"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Settings/AskReasonExternalAuthorization": {
      "get": {
        "tags": [
          "ZtlSettings"
        ],
        "summary": "ApiZtlSettingsAskReasonExternalAuthorization_GET",
        "description": "",
        "operationId": "ApiZtlSettingsAskReasonExternalAuthorization_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Settings/counter": {
      "get": {
        "tags": [
          "ZtlSettings"
        ],
        "summary": "ApiZtlSettingsCounter_GET",
        "description": "",
        "operationId": "ApiZtlSettingsCounter_GET",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "put": {
        "tags": [
          "ZtlSettings"
        ],
        "summary": "ApiZtlSettingsCounter_PUT",
        "description": "",
        "operationId": "ApiZtlSettingsCounter_PUT",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Statistic/GetGates": {
      "get": {
        "tags": [
          "ZtlStatistic"
        ],
        "summary": "ApiZtlStatisticGetGates_GET",
        "description": "",
        "operationId": "ApiZtlStatisticGetGates_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Statistic/GetStatisticsAuthorizationType": {
      "get": {
        "tags": [
          "ZtlStatistic"
        ],
        "summary": "ApiZtlStatisticGetStatisticsAuthorizationType_GET",
        "description": "",
        "operationId": "ApiZtlStatisticGetStatisticsAuthorizationType_GET",
        "parameters": [
          {
            "name": "year",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "dateFrom",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "dateTo",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "gateIds",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlStatistic.Dto.ZtlStatisticAuthorizationTypeDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Statistic/GetYears": {
      "get": {
        "tags": [
          "ZtlStatistic"
        ],
        "summary": "ApiZtlStatisticGetYears_GET",
        "description": "",
        "operationId": "ApiZtlStatisticGetYears_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Statistic/GetStatisticsByYears": {
      "get": {
        "tags": [
          "ZtlStatistic"
        ],
        "summary": "ApiZtlStatisticGetStatisticsByYears_GET",
        "description": "",
        "operationId": "ApiZtlStatisticGetStatisticsByYears_GET",
        "parameters": [
          {
            "name": "dateFrom",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "dateTo",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "gateIds",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlStatistic.Dto.ZtlStatisticDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Statistic/GetStatisticsByYear": {
      "get": {
        "tags": [
          "ZtlStatistic"
        ],
        "summary": "ApiZtlStatisticGetStatisticsByYear_GET",
        "description": "",
        "operationId": "ApiZtlStatisticGetStatisticsByYear_GET",
        "parameters": [
          {
            "name": "year",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "dateFrom",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "dateTo",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "gateIds",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlStatistic.Dto.ZtlStatisticDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Statistic/GetStatisticsByMonth": {
      "get": {
        "tags": [
          "ZtlStatistic"
        ],
        "summary": "ApiZtlStatisticGetStatisticsByMonth_GET",
        "description": "",
        "operationId": "ApiZtlStatisticGetStatisticsByMonth_GET",
        "parameters": [
          {
            "name": "month",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "year",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "dateFrom",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "dateTo",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "gateIds",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlStatistic.Dto.ZtlStatisticDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Statistic/GetStatisticsGate": {
      "get": {
        "tags": [
          "ZtlStatistic"
        ],
        "summary": "ApiZtlStatisticGetStatisticsGate_GET",
        "description": "",
        "operationId": "ApiZtlStatisticGetStatisticsGate_GET",
        "parameters": [
          {
            "name": "year",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "dateFrom",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "dateTo",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "gateIds",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlStatistic.Dto.ZtlStatisticGateDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Statistic/GetStatisticsByDay": {
      "get": {
        "tags": [
          "ZtlStatistic"
        ],
        "summary": "ApiZtlStatisticGetStatisticsByDay_GET",
        "description": "",
        "operationId": "ApiZtlStatisticGetStatisticsByDay_GET",
        "parameters": [
          {
            "name": "calendarDay",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "gateIds",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlStatistic.Dto.ZtlStatisticDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Statistic/GetStatisticsVehicleType": {
      "get": {
        "tags": [
          "ZtlStatistic"
        ],
        "summary": "ApiZtlStatisticGetStatisticsVehicleType_GET",
        "description": "",
        "operationId": "ApiZtlStatisticGetStatisticsVehicleType_GET",
        "parameters": [
          {
            "name": "year",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "dateFrom",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "dateTo",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "gateIds",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlStatistic.Dto.ZtlStatisticVehicleTypeDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/ZtlTransitAuthorizing/ZtlTransitAuthorizingCounter": {
      "get": {
        "tags": [
          "ZtlTransitAuthorizing"
        ],
        "summary": "ApiZtlZtlTransitAuthorizingZtlTransitAuthorizingCounter_GET",
        "description": "",
        "operationId": "ApiZtlZtlTransitAuthorizingZtlTransitAuthorizingCounter_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/ZtlTransitAuthorizing/ZtlTransitAuthorizing/{ztlTransitId}": {
      "get": {
        "tags": [
          "ZtlTransitAuthorizing"
        ],
        "summary": "ApiZtlZtlTransitAuthorizingZtlTransitAuthorizing_GET",
        "description": "",
        "operationId": "ApiZtlZtlTransitAuthorizingZtlTransitAuthorizing_GET",
        "parameters": [
          {
            "name": "ztlTransitId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/ZtlTransitAuthorizing/ZtlTransitAuthorizing": {
      "post": {
        "tags": [
          "ZtlTransitAuthorizing"
        ],
        "summary": "Restituisce tutti i transiti autorizzanti per un certo customer",
        "description": "",
        "operationId": "Restituiscetuttiitransitiautorizzantiperuncertocustomer",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlTransitAuthorizingService.Dto.ZtlTransitAuthorizingSearchDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/ZtlTransitAuthorizing/UpdateZtlTransitAuthorizing": {
      "post": {
        "tags": [
          "ZtlTransitAuthorizing"
        ],
        "summary": "ApiZtlZtlTransitAuthorizingUpdateZtlTransitAuthorizing_POST",
        "description": "",
        "operationId": "ApiZtlZtlTransitAuthorizingUpdateZtlTransitAuthorizing_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlTransitAuthorizingService.Dto.ZtlTransitAuthorizingRequestUpdateDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/ZtlTransitAuthorizingPhoto/ZtlTransitAuthorizingPhoto": {
      "post": {
        "tags": [
          "ZtlTransitAuthorizingPhoto"
        ],
        "summary": "ApiZtlZtlTransitAuthorizingPhotoZtlTransitAuthorizingPhoto_POST",
        "description": "",
        "operationId": "ApiZtlZtlTransitAuthorizingPhotoZtlTransitAuthorizingPhoto_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlTransitAuthorizingPhoto.Dto.ContrastBrightnessDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/ZtlTransitAuthorizingPhoto/ZtlTransitAuthorizingPhoto/{transitId}": {
      "get": {
        "tags": [
          "ZtlTransitAuthorizingPhoto"
        ],
        "summary": "ApiZtlZtlTransitAuthorizingPhotoZtlTransitAuthorizingPhoto_GET",
        "description": "",
        "operationId": "ApiZtlZtlTransitAuthorizingPhotoZtlTransitAuthorizingPhoto_GET",
        "parameters": [
          {
            "name": "transitId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/ZtlTransitAuthorizingPhoto/plate/{imageName}/{cameraId}/{token}": {
      "get": {
        "tags": [
          "ZtlTransitAuthorizingPhoto"
        ],
        "summary": "ApiZtlZtlTransitAuthorizingPhotoPlateToken_GET",
        "description": "",
        "operationId": "ApiZtlZtlTransitAuthorizingPhotoPlateToken_GET",
        "parameters": [
          {
            "name": "imageName",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cameraId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/api/ztl/ZtlTransitAuthorizingSettings/ZtlTransitAuthorizingSettings": {
      "get": {
        "tags": [
          "ZtlTransitAuthorizingSettings"
        ],
        "summary": "ApiZtlZtlTransitAuthorizingSettingsZtlTransitAuthorizingSettings_GET",
        "description": "",
        "operationId": "ApiZtlZtlTransitAuthorizingSettingsZtlTransitAuthorizingSettings_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "ZtlTransitAuthorizingSettings"
        ],
        "summary": "ApiZtlZtlTransitAuthorizingSettingsZtlTransitAuthorizingSettings_POST",
        "description": "",
        "operationId": "ApiZtlZtlTransitAuthorizingSettingsZtlTransitAuthorizingSettings_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlTransitAuthorizingSettings.Dto.ZtlTransitAuthorizingSettingsDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/TransitPhoto/UserBlurredAreas/{imageName}": {
      "get": {
        "tags": [
          "ZtlTransitPhoto"
        ],
        "summary": "Recuperare le coordinate delle aree offuscate dall'utente all'interno di una foto di un transito.",
        "description": "",
        "operationId": "GetRecuperarelecoordinatedelleareeoffuscatedall'utenteall'internodiunafotodiuntransito.",
        "parameters": [
          {
            "name": "imageName",
            "in": "path",
            "description": "Nome della foto.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Coordinate trovate.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlViolationPhoto.Dto.UserBlurredAreaDto"
                  },
                  "description": ""
                }
              }
            }
          },
          "401": {
            "description": "L'utente non è autorizzato ad accedere alla foto.",
            "headers": {},
            "content": {}
          },
          "404": {
            "description": "Il file della foto non è stato trovato.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/TransitPhoto/UserBlurredAreas": {
      "put": {
        "tags": [
          "ZtlTransitPhoto"
        ],
        "summary": "Imposta le coordinate delle aree offuscate dall'utente all'interno di una foto di un transito.",
        "description": "",
        "operationId": "PutImpostalecoordinatedelleareeoffuscatedall'utenteall'internodiunafotodiuntransito.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Definizione delle aree da offuscare.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlViolationPhoto.Dto.BlurAreaUpdateRequest"
                  },
                  {
                    "description": "Definizione delle aree da offuscare."
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Coordinate modificate.",
            "headers": {},
            "content": {}
          },
          "400": {
            "description": "Le coordinate non sono valide.",
            "headers": {},
            "content": {}
          },
          "401": {
            "description": "L'utente non è autorizzato ad accedere alla foto.",
            "headers": {},
            "content": {}
          },
          "404": {
            "description": "Il file della foto non è stato trovato.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "ZtlTransitPhoto"
        ],
        "summary": "Elimina un'area offuscate dall'utente da una foto di un transito.",
        "description": "",
        "operationId": "DeleteEliminaun'areaoffuscatedall'utentedaunafotodiuntransito.",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/json-patch+json"
              ],
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Area offuscata eliminata.",
            "headers": {},
            "content": {}
          },
          "401": {
            "description": "L'utente non è autorizzato ad accedere alla foto.",
            "headers": {},
            "content": {}
          },
          "404": {
            "description": "Il file della foto non è stato trovato.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/TransitPhoto/filter": {
      "put": {
        "tags": [
          "ZtlTransitPhoto"
        ],
        "summary": "Imposta un filtro di correzione per una foto di un transito.",
        "description": "",
        "operationId": "PutImpostaunfiltrodicorrezioneperunafotodiuntransito.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Filtro da applicare alla foto del transito.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlViolationPhoto.Dto.MediaFilterDto"
                  },
                  {
                    "description": "Filtro da applicare alla foto del transito."
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Filtro applicato.",
            "headers": {},
            "content": {}
          },
          "400": {
            "description": "Filtro non valido.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/TransitPhoto/ClaheImageBrightness/{imageName}": {
      "get": {
        "tags": [
          "ZtlTransitPhoto"
        ],
        "summary": "ApiZtlTransitPhotoClaheImageBrightness_GET",
        "description": "",
        "operationId": "ApiZtlTransitPhotoClaheImageBrightness_GET",
        "parameters": [
          {
            "name": "imageName",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {},
            "content": {}
          },
          "404": {
            "description": "Not Found",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/TransitPhoto/GetCoordinatesTransitPhoto": {
      "get": {
        "tags": [
          "ZtlTransitPhoto"
        ],
        "summary": "Recuperare le coordinate della posizione della targa all'interno di una foto di un transito.",
        "description": "",
        "operationId": "Recuperarelecoordinatedellaposizionedellatargaall'internodiunafotodiuntransito.",
        "parameters": [
          {
            "name": "imageName",
            "in": "query",
            "description": "Nome della foto.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Coordinate trovate.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.ZtlViolationPhoto.Dto.PlateCoordinatesDto"
                }
              }
            }
          },
          "401": {
            "description": "L'utente non è autorizzato ad accedere alla foto.",
            "headers": {},
            "content": {}
          },
          "404": {
            "description": "Il file della foto non è stato trovato.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/TransitPhoto/SetCoordinatesTransitPhoto/{imageName}/{cameraId}": {
      "put": {
        "tags": [
          "ZtlTransitPhoto"
        ],
        "summary": "Imposta le coordinate della targa all'interno di una foto di un transito.",
        "description": "",
        "operationId": "PutImpostalecoordinatedellatargaall'internodiunafotodiuntransito.",
        "parameters": [
          {
            "name": "imageName",
            "in": "path",
            "description": "Nome della foto.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cameraId",
            "in": "path",
            "description": "ID della Camera che ha generato la foto.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Coordinate della targa.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlViolationPhoto.Dto.PlateCoordinatesDto"
                  },
                  {
                    "description": "Coordinate della targa."
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Coordinate modificate.",
            "headers": {},
            "content": {}
          },
          "400": {
            "description": "Le coordinate non sono valide.",
            "headers": {},
            "content": {}
          },
          "401": {
            "description": "L'utente non è autorizzato ad accedere alla foto.",
            "headers": {},
            "content": {}
          },
          "404": {
            "description": "Il file della foto non è stato trovato.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/TransitPhoto/VehicleCoordinates/{imageName}": {
      "get": {
        "tags": [
          "ZtlTransitPhoto"
        ],
        "summary": "Recuperare le coordinate della posizione del veicolo all'interno di una foto di un transito.",
        "description": "",
        "operationId": "GetRecuperarelecoordinatedellaposizionedelveicoloall'internodiunafotodiuntransito.",
        "parameters": [
          {
            "name": "imageName",
            "in": "path",
            "description": "Nome della foto.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Coordinate trovate. Potrebbero non essere valide se nella foto non è stata specificata la posizione del veicolo.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.ZtlViolationPhoto.Dto.VehicleCoordinatesDto"
                }
              }
            }
          },
          "401": {
            "description": "L'utente non è autorizzato ad accedere alla foto.",
            "headers": {},
            "content": {}
          },
          "404": {
            "description": "Il file della foto non è stato trovato.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/TransitPhoto/VehicleCoordinates/{imageName}/{cameraId}": {
      "put": {
        "tags": [
          "ZtlTransitPhoto"
        ],
        "summary": "Imposta le coordinate del veicolo all'interno di una foto di un transito.",
        "description": "",
        "operationId": "PutImpostalecoordinatedelveicoloall'internodiunafotodiuntransito.",
        "parameters": [
          {
            "name": "imageName",
            "in": "path",
            "description": "Nome della foto.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cameraId",
            "in": "path",
            "description": "ID della Camera che ha generato la foto.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Coordinate del veicolo.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlViolationPhoto.Dto.VehicleCoordinatesDto"
                  },
                  {
                    "description": "Coordinate del veicolo."
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Coordinate modificate.",
            "headers": {},
            "content": {}
          },
          "401": {
            "description": "L'utente non è autorizzato ad accedere alla foto.",
            "headers": {},
            "content": {}
          },
          "404": {
            "description": "Il file della foto non è stato trovato.",
            "headers": {},
            "content": {}
          },
          "400": {
            "description": "Le coordinate non sono valide.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/TransitPhoto/GetImageBlob/{imageName}/{cameraId}": {
      "get": {
        "tags": [
          "ZtlTransitPhoto"
        ],
        "summary": "Ricerca una doto di un transito e ne ritorna il contenuto in byte.\r\nQuesta operazione è considerata come un 'Download' del media e perciò sarà regisrtata.",
        "description": "",
        "operationId": "Ricercaunadotodiuntransitoeneritornailcontenutoinbyte.\r\nQuestaoperazioneèconsideratacomeun'Download'delmediaeperciòsaràregisrtata.",
        "parameters": [
          {
            "name": "imageName",
            "in": "path",
            "description": "Nome della foto.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cameraId",
            "in": "path",
            "description": "ID della Camera che ha generato la foto.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Foto trovata.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "L'utente non è autorizzato ad accedere alla foto.",
            "headers": {},
            "content": {}
          },
          "404": {
            "description": "Il file della foto non è stato trovato.",
            "headers": {},
            "content": {}
          },
          "410": {
            "description": "Il parametro imageName non corrisponde a nessuna foto.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/TransitPhoto/GetImage/{imageName}/{cameraId}/{token}": {
      "get": {
        "tags": [
          "ZtlTransitPhoto"
        ],
        "summary": "Ricerca una foto di un transito e ne ritorna il contenuto in byte.\r\nQuesto metodo non richiede che l'utente sia loggato, ma è necessario presentare\r\nun token di autenticazione valido.",
        "description": "",
        "operationId": "Ricercaunafotodiuntransitoeneritornailcontenutoinbyte.\r\nQuestometodononrichiedechel'utentesialoggato,maènecessariopresentare\r\nuntokendiautenticazionevalido.",
        "parameters": [
          {
            "name": "imageName",
            "in": "path",
            "description": "Nome della foto.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cameraId",
            "in": "path",
            "description": "ID della Camera che ha generato la foto.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "path",
            "description": "Token di autenticazione.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Foto trovata.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "L'utente non è autorizzato ad accedere alla foto.",
            "headers": {},
            "content": {}
          },
          "404": {
            "description": "Il file della foto non è stato trovato.",
            "headers": {},
            "content": {}
          },
          "410": {
            "description": "Il parametro imageName non corrisponde a nessuna foto.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/api/ztl/users": {
      "get": {
        "tags": [
          "ZtlUserRegistry"
        ],
        "summary": "ApiZtlUsers_GET",
        "description": "",
        "operationId": "ApiZtlUsers_GET",
        "parameters": [
          {
            "name": "fullname",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fiscalCode",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "category",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Core.Model.ZTL_UserRegistry"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "ZtlUserRegistry"
        ],
        "summary": "ApiZtlUsers_POST",
        "description": "",
        "operationId": "ApiZtlUsers_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlUserRegistry.ZtlPersonDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Core.Model.ZTL_UserRegistry"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/users/{userId}": {
      "get": {
        "tags": [
          "ZtlUserRegistry"
        ],
        "summary": "ApiZtlUsersByUserId_GET",
        "description": "",
        "operationId": "ApiZtlUsersByUserId_GET",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Core.Model.ZTL_UserRegistry"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "put": {
        "tags": [
          "ZtlUserRegistry"
        ],
        "summary": "ApiZtlUsersByUserId_PUT",
        "description": "",
        "operationId": "ApiZtlUsersByUserId_PUT",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlUserRegistry.ZtlPersonDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Core.Model.ZTL_UserRegistry"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/users/categories": {
      "get": {
        "tags": [
          "ZtlUserRegistry"
        ],
        "summary": "ApiZtlUsersCategories_GET",
        "description": "",
        "operationId": "ApiZtlUsersCategories_GET",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Violation/Search": {
      "post": {
        "tags": [
          "ZtlViolation"
        ],
        "summary": "Esegue una ricerca filtrata dei transiti RedSpeed.",
        "description": "",
        "operationId": "PostEsegueunaricercafiltratadeitransitiRedSpeed.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Parametri per la ricerca filtrata.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ViolationSearch.Dto.ViolationSearchRequestDto"
                  },
                  {
                    "description": "Parametri per la ricerca filtrata."
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.ViolationSearch.Dto.ViolationSearchResponseDto"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Violation/UpdateTransitAsync": {
      "post": {
        "tags": [
          "ZtlViolation"
        ],
        "summary": "ApiZtlViolationUpdateTransitAsync_POST",
        "description": "",
        "operationId": "ApiZtlViolationUpdateTransitAsync_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlViolation.Dto.UpdateTransitRequestDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Violation/GetDetail/{violationId}": {
      "get": {
        "tags": [
          "ZtlViolation"
        ],
        "summary": "ApiZtlViolationGetDetailByViolationId_GET",
        "description": "",
        "operationId": "ApiZtlViolationGetDetailByViolationId_GET",
        "parameters": [
          {
            "name": "violationId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.ZtlViolation.Dto.GetDetailResponseDto"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Violation/massiveStatus": {
      "put": {
        "tags": [
          "ZtlViolation"
        ],
        "summary": "Modifica massiva degli stati dei transiti ZTL.",
        "description": "",
        "operationId": "ModificamassivadeglistatideitransitiZTL.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Lista dei transitId e valore dello stato da aggiornare in maniera massiva",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlViolation.Dto.MassiveChangeViolationStatus"
                  },
                  {
                    "description": "Lista dei transitId e valore dello stato da aggiornare in maniera massiva"
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Modifica avvenuta con successo.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Violation/GetDayTransitsAndViolations": {
      "get": {
        "tags": [
          "ZtlViolation"
        ],
        "summary": "ApiZtlViolationGetDayTransitsAndViolations_GET",
        "description": "",
        "operationId": "ApiZtlViolationGetDayTransitsAndViolations_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.ZtlViolation.Dto.DayTransitsAndViolationsDto"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Violation/latest_transit/{cameraId}": {
      "get": {
        "tags": [
          "ZtlViolation"
        ],
        "summary": "ApiZtlViolationLatestTransitByCameraId_GET",
        "description": "",
        "operationId": "ApiZtlViolationLatestTransitByCameraId_GET",
        "parameters": [
          {
            "name": "cameraId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/WSAutoscan.Application.Transit.Dto.ZtlLastTransitDto"
                    },
                    {
                      "description": "Dati dell'ultimo transito ZTL rilevato da una Camera."
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Violation/GetExportedTransitsToCancel/{violationExportId}": {
      "get": {
        "tags": [
          "ZtlViolation"
        ],
        "summary": "ApiZtlViolationGetExportedTransitsToCancel_GET",
        "description": "",
        "operationId": "ApiZtlViolationGetExportedTransitsToCancel_GET",
        "parameters": [
          {
            "name": "violationExportId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Risultato di una ricerca filtrata delle Violazioni ZTL esportabili."
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Violation/GetViolationDuplicate/{violationId}": {
      "get": {
        "tags": [
          "ZtlViolation"
        ],
        "summary": "ApiZtlViolationGetViolationDuplicate_GET",
        "description": "",
        "operationId": "ApiZtlViolationGetViolationDuplicate_GET",
        "parameters": [
          {
            "name": "violationId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.ViolationSearch.Dto.ViolationSearchResponseDto"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Violation/DailyTransitsDetail/{transitId}": {
      "get": {
        "tags": [
          "ZtlViolation"
        ],
        "summary": "ApiZtlViolationDailyTransitsDetail_GET",
        "description": "",
        "operationId": "ApiZtlViolationDailyTransitsDetail_GET",
        "parameters": [
          {
            "name": "transitId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.Transit.Dto.DailyTransitsDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Violation/sanctioned-interval-hint": {
      "get": {
        "tags": [
          "ZtlViolation"
        ],
        "summary": "ApiZtlViolationSanctionedIntervalHint_GET",
        "description": "",
        "operationId": "ApiZtlViolationSanctionedIntervalHint_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Intervallo di date per le violazioni ZTL esportabili."
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Violation/GetSanctioningUsers": {
      "get": {
        "tags": [
          "ZtlViolation"
        ],
        "summary": "ApiZtlViolationGetSanctioningUsers_GET",
        "description": "",
        "operationId": "ApiZtlViolationGetSanctioningUsers_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.User.Dto.AS_UserBasicDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Violation/sanctioned": {
      "get": {
        "tags": [
          "ZtlViolation"
        ],
        "summary": "ApiZtlViolationSanctioned_GET",
        "description": "",
        "operationId": "ApiZtlViolationSanctioned_GET",
        "parameters": [
          {
            "name": "From",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "To",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "ZoneTypeId",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "UserIds",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "GateIds",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "Nations",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Nationality",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Risultato di una ricerca filtrata delle Violazioni ZTL esportabili."
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Violation/{violationId}/status": {
      "put": {
        "tags": [
          "ZtlViolation"
        ],
        "summary": "ApiZtlViolationStatusByViolationId_PUT",
        "description": "",
        "operationId": "ApiZtlViolationStatusByViolationId_PUT",
        "parameters": [
          {
            "name": "violationId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlViolation.Dto.ChangeViolationStatus"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Violation/GetViolationsStatusNum": {
      "post": {
        "tags": [
          "ZtlViolation"
        ],
        "summary": "Ottiene il numero delle violazioni ZTL che risultano essere in un determinato stato.",
        "description": "",
        "operationId": "OttieneilnumerodelleviolazioniZTLcherisultanoessereinundeterminatostato.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "ID degli stati.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "description": "ID degli stati."
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Richiesta avvenuta con successo.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.ViolationsStatusNumDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Violation/ViolationDeadLineNum": {
      "get": {
        "tags": [
          "ZtlViolation"
        ],
        "summary": "ApiZtlViolationViolationDeadLineNum_GET",
        "description": "",
        "operationId": "ApiZtlViolationViolationDeadLineNum_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.ZtlViolation.Dto.ViolationDeadLineNumDto"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Violation/Exports": {
      "get": {
        "tags": [
          "ZtlViolationExport"
        ],
        "summary": "Ricerca tutte le esportazioni di Violazioni ZTL effettuate per l'Ente di appartenenza dell'Utente loggato.",
        "description": "",
        "operationId": "RicercatutteleesportazionidiViolazioniZTLeffettuateperl'Entediappartenenzadell'Utenteloggato.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cronologia delle esportazioni.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "ZtlViolationExport"
        ],
        "summary": "Effettua l'esportazione di una lista di Violazioni ZTL.",
        "description": "",
        "operationId": "Effettual'esportazionediunalistadiViolazioniZTL.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Lista di ID delle violazioni ZTL da esportare.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "description": "Lista di ID delle violazioni ZTL da esportare."
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Se il file ZIP è stato generato correttamente.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Se non è stato passato nessun ID delle violazioni.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Violation/Exports/{exportId}": {
      "get": {
        "tags": [
          "ZtlViolationExport"
        ],
        "summary": "Rigenera un'Esportazione ZTL già effettuata.",
        "description": "",
        "operationId": "Rigeneraun'EsportazioneZTLgiàeffettuata.",
        "parameters": [
          {
            "name": "exportId",
            "in": "path",
            "description": "ID dell'Esportazione ZTL da rigenerare.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Se il file ZIP è stato generato correttamente.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Violation/Exports/DeleteExportedViolation": {
      "post": {
        "tags": [
          "ZtlViolationExport"
        ],
        "summary": "Cancella un'esportazione già effettuata dallo storico delle esportazioni",
        "description": "",
        "operationId": "PostCancellaun'esportazionegiàeffettuatadallostoricodelleesportazioni",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "description": ""
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Violation/Exports/direct": {
      "get": {
        "tags": [
          "ZtlViolationExport"
        ],
        "summary": "Esportazione diretta delle Violazioni ZTL.",
        "description": "",
        "operationId": "EsportazionedirettadelleViolazioniZTL.",
        "parameters": [
          {
            "name": "From",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "To",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "ZoneTypeId",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "UserIds",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "GateIds",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "Nations",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Nationality",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Se il file ZIP è stato generato correttamente.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Se non è presente nessuna Violazione ZTL che corrisponde al filtro.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Zone": {
      "get": {
        "tags": [
          "ZtlZone"
        ],
        "summary": "ApiZtlZone_GET",
        "description": "",
        "operationId": "ApiZtlZone_GET",
        "parameters": [
          {
            "name": "unrestricted",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlSettings.Dto.Zone"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "ZtlZone"
        ],
        "summary": "ApiZtlZone_POST",
        "description": "",
        "operationId": "ApiZtlZone_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlSettings.Dto.ZTL_ZoneDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Zone/{id}": {
      "get": {
        "tags": [
          "ZtlZone"
        ],
        "summary": "ApiZtlZoneById_GET",
        "description": "",
        "operationId": "ApiZtlZoneById_GET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.ZtlSettings.Dto.ZTL_ZoneDto"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Zone/GetZoneTypes": {
      "get": {
        "tags": [
          "ZtlZone"
        ],
        "summary": "ApiZtlZoneGetZoneTypes_GET",
        "description": "",
        "operationId": "ApiZtlZoneGetZoneTypes_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlSettings.Dto.ZTL_ZoneTypeDictionaryDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Zone/{zoneId}": {
      "delete": {
        "tags": [
          "ZtlZone"
        ],
        "summary": "ApiZtlZoneByZoneId_DELETE",
        "description": "",
        "operationId": "ApiZtlZoneByZoneId_DELETE",
        "parameters": [
          {
            "name": "zoneId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "System.AggregateException": {
        "title": "System.AggregateException",
        "type": "object",
        "properties": {
          "Data": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true,
            "readOnly": true
          },
          "InnerException": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Exception"
              },
              {}
            ]
          },
          "TargetSite": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Reflection.MethodBase"
              },
              {}
            ]
          },
          "StackTrace": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "HelpLink": {
            "type": "string",
            "nullable": true
          },
          "Source": {
            "type": "string",
            "nullable": true
          },
          "HResult": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "InnerExceptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Exception"
            },
            "description": "",
            "nullable": true,
            "readOnly": true
          },
          "Message": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "System.Collections.Generic.KeyValuePair2System.Int32System.Private.CoreLibVersion4.0.0.0CultureneutralPublicKeyToken7cec85d7bea7798eWSAutoscan.Application.Diagnostics.Dto.ServicePolizia.NasDTOWSAutoscan.ApplicationVersion1.0.0.0CultureneutralPublicKeyTokennull": {
        "title": "System.Collections.Generic.KeyValuePair2System.Int32System.Private.CoreLibVersion4.0.0.0CultureneutralPublicKeyToken7cec85d7bea7798eWSAutoscan.Application.Diagnostics.Dto.ServicePolizia.NasDTOWSAutoscan.ApplicationVersion1.0.0.0CultureneutralPublicKeyTokennull",
        "type": "object",
        "properties": {
          "Key": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Application.Diagnostics.Dto.ServicePolizia.NasDTO"
              },
              {}
            ]
          }
        }
      },
      "System.ModuleHandle": {
        "title": "System.ModuleHandle",
        "type": "object",
        "properties": {
          "MDStreamVersion": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "System.Reflection.CallingConventions": {
        "title": "System.Reflection.CallingConventions",
        "enum": [
          1,
          2,
          3,
          32,
          64
        ],
        "type": "integer"
      },
      "System.Reflection.CustomAttributeData": {
        "title": "System.Reflection.CustomAttributeData",
        "type": "object",
        "properties": {
          "AttributeType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Type"
              },
              {}
            ]
          },
          "Constructor": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Reflection.ConstructorInfo"
              },
              {}
            ]
          },
          "ConstructorArguments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Reflection.CustomAttributeTypedArgument"
            },
            "description": "",
            "nullable": true,
            "readOnly": true
          },
          "NamedArguments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Reflection.CustomAttributeNamedArgument"
            },
            "description": "",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "System.Reflection.CustomAttributeNamedArgument": {
        "title": "System.Reflection.CustomAttributeNamedArgument",
        "type": "object",
        "properties": {
          "MemberInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Reflection.MemberInfo"
              },
              {}
            ]
          },
          "TypedValue": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Reflection.CustomAttributeTypedArgument"
              },
              {}
            ]
          },
          "MemberName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "IsField": {
            "type": "boolean",
            "readOnly": true
          }
        }
      },
      "System.Reflection.GenericParameterAttributes": {
        "title": "System.Reflection.GenericParameterAttributes",
        "enum": [
          0,
          1,
          2,
          3,
          4,
          8,
          16,
          28
        ],
        "type": "integer"
      },
      "System.Reflection.MemberTypes": {
        "title": "System.Reflection.MemberTypes",
        "enum": [
          1,
          2,
          4,
          8,
          16,
          32,
          64,
          128,
          191
        ],
        "type": "integer"
      },
      "System.Reflection.MethodInfo": {
        "title": "System.Reflection.MethodInfo",
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "DeclaringType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Type"
              },
              {}
            ]
          },
          "ReflectedType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Type"
              },
              {}
            ]
          },
          "Module": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Reflection.Module"
              },
              {}
            ]
          },
          "CustomAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Reflection.CustomAttributeData"
            },
            "description": "",
            "nullable": true,
            "readOnly": true
          },
          "MetadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "Attributes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Reflection.MethodAttributes"
              },
              {}
            ]
          },
          "MethodImplementationFlags": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Reflection.MethodImplAttributes"
              },
              {}
            ]
          },
          "CallingConvention": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Reflection.CallingConventions"
              },
              {}
            ]
          },
          "IsAbstract": {
            "type": "boolean",
            "readOnly": true
          },
          "IsConstructor": {
            "type": "boolean",
            "readOnly": true
          },
          "IsFinal": {
            "type": "boolean",
            "readOnly": true
          },
          "IsHideBySig": {
            "type": "boolean",
            "readOnly": true
          },
          "IsSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "IsStatic": {
            "type": "boolean",
            "readOnly": true
          },
          "IsVirtual": {
            "type": "boolean",
            "readOnly": true
          },
          "IsAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "IsFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "IsFamilyAndAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "IsFamilyOrAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "IsPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "IsPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "IsConstructedGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "IsGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "IsGenericMethodDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "ContainsGenericParameters": {
            "type": "boolean",
            "readOnly": true
          },
          "MethodHandle": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.RuntimeMethodHandle"
              },
              {}
            ]
          },
          "IsSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "IsSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "IsSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          },
          "MemberType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Reflection.MemberTypes"
              },
              {}
            ]
          },
          "ReturnParameter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Reflection.ParameterInfo"
              },
              {}
            ]
          },
          "ReturnType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Type"
              },
              {}
            ]
          },
          "ReturnTypeCustomAttributes": {
            "type": "object"
          }
        }
      },
      "System.IO.Stream": {
        "title": "System.IO.Stream",
        "type": "object",
        "properties": {
          "CanRead": {
            "type": "boolean",
            "readOnly": true
          },
          "CanSeek": {
            "type": "boolean",
            "readOnly": true
          },
          "CanTimeout": {
            "type": "boolean",
            "readOnly": true
          },
          "CanWrite": {
            "type": "boolean",
            "readOnly": true
          },
          "Length": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "Position": {
            "type": "integer",
            "format": "int64"
          },
          "ReadTimeout": {
            "type": "integer",
            "format": "int32"
          },
          "WriteTimeout": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "System.Reflection.Assembly": {
        "title": "System.Reflection.Assembly",
        "type": "object",
        "properties": {
          "DefinedTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Reflection.TypeInfo"
            },
            "description": "",
            "nullable": true,
            "readOnly": true
          },
          "ExportedTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Type"
            },
            "description": "",
            "nullable": true,
            "readOnly": true
          },
          "CodeBase": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "EntryPoint": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Reflection.MethodInfo"
              },
              {}
            ]
          },
          "FullName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ImageRuntimeVersion": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "IsDynamic": {
            "type": "boolean",
            "readOnly": true
          },
          "Location": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ReflectionOnly": {
            "type": "boolean",
            "readOnly": true
          },
          "IsFullyTrusted": {
            "type": "boolean",
            "readOnly": true
          },
          "CustomAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Reflection.CustomAttributeData"
            },
            "description": "",
            "nullable": true,
            "readOnly": true
          },
          "EscapedCodeBase": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ManifestModule": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Reflection.Module"
              },
              {}
            ]
          },
          "Modules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Reflection.Module"
            },
            "description": "",
            "nullable": true,
            "readOnly": true
          },
          "GlobalAssemblyCache": {
            "type": "boolean",
            "readOnly": true
          },
          "HostContext": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "SecurityRuleSet": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Security.SecurityRuleSet"
              },
              {}
            ]
          }
        }
      },
      "System.Reflection.CustomAttributeTypedArgument": {
        "title": "System.Reflection.CustomAttributeTypedArgument",
        "type": "object",
        "properties": {
          "ArgumentType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Type"
              },
              {}
            ]
          },
          "Value": {
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "System.Reflection.EventAttributes": {
        "title": "System.Reflection.EventAttributes",
        "enum": [
          0,
          512,
          1024
        ],
        "type": "integer"
      },
      "System.Reflection.EventInfo": {
        "title": "System.Reflection.EventInfo",
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "DeclaringType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Type"
              },
              {}
            ]
          },
          "ReflectedType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Type"
              },
              {}
            ]
          },
          "Module": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Reflection.Module"
              },
              {}
            ]
          },
          "CustomAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Reflection.CustomAttributeData"
            },
            "description": "",
            "nullable": true,
            "readOnly": true
          },
          "MetadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "MemberType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Reflection.MemberTypes"
              },
              {}
            ]
          },
          "Attributes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Reflection.EventAttributes"
              },
              {}
            ]
          },
          "IsSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "AddMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Reflection.MethodInfo"
              },
              {}
            ]
          },
          "RemoveMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Reflection.MethodInfo"
              },
              {}
            ]
          },
          "RaiseMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Reflection.MethodInfo"
              },
              {}
            ]
          },
          "IsMulticast": {
            "type": "boolean",
            "readOnly": true
          },
          "EventHandlerType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Type"
              },
              {}
            ]
          }
        }
      },
      "System.Reflection.FieldAttributes": {
        "title": "System.Reflection.FieldAttributes",
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          16,
          32,
          64,
          128,
          256,
          512,
          1024,
          4096,
          8192,
          32768,
          38144
        ],
        "type": "integer"
      },
      "System.Reflection.MethodBase": {
        "title": "System.Reflection.MethodBase",
        "type": "object",
        "properties": {
          "MemberType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Reflection.MemberTypes"
              },
              {}
            ]
          },
          "Name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "DeclaringType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Type"
              },
              {}
            ]
          },
          "ReflectedType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Type"
              },
              {}
            ]
          },
          "Module": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Reflection.Module"
              },
              {}
            ]
          },
          "CustomAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Reflection.CustomAttributeData"
            },
            "description": "",
            "nullable": true,
            "readOnly": true
          },
          "MetadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "Attributes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Reflection.MethodAttributes"
              },
              {}
            ]
          },
          "MethodImplementationFlags": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Reflection.MethodImplAttributes"
              },
              {}
            ]
          },
          "CallingConvention": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Reflection.CallingConventions"
              },
              {}
            ]
          },
          "IsAbstract": {
            "type": "boolean",
            "readOnly": true
          },
          "IsConstructor": {
            "type": "boolean",
            "readOnly": true
          },
          "IsFinal": {
            "type": "boolean",
            "readOnly": true
          },
          "IsHideBySig": {
            "type": "boolean",
            "readOnly": true
          },
          "IsSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "IsStatic": {
            "type": "boolean",
            "readOnly": true
          },
          "IsVirtual": {
            "type": "boolean",
            "readOnly": true
          },
          "IsAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "IsFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "IsFamilyAndAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "IsFamilyOrAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "IsPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "IsPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "IsConstructedGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "IsGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "IsGenericMethodDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "ContainsGenericParameters": {
            "type": "boolean",
            "readOnly": true
          },
          "MethodHandle": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.RuntimeMethodHandle"
              },
              {}
            ]
          },
          "IsSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "IsSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "IsSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          }
        }
      },
      "System.Reflection.MethodImplAttributes": {
        "title": "System.Reflection.MethodImplAttributes",
        "enum": [
          0,
          1,
          2,
          3,
          4,
          8,
          16,
          32,
          64,
          128,
          256,
          4096,
          65535
        ],
        "type": "integer"
      },
      "System.Reflection.Module": {
        "title": "System.Reflection.Module",
        "type": "object",
        "properties": {
          "Assembly": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Reflection.Assembly"
              },
              {}
            ]
          },
          "FullyQualifiedName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "MDStreamVersion": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "ModuleVersionId": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "ScopeName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ModuleHandle": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.ModuleHandle"
              },
              {}
            ]
          },
          "CustomAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Reflection.CustomAttributeData"
            },
            "description": "",
            "nullable": true,
            "readOnly": true
          },
          "MetadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "System.Reflection.ParameterAttributes": {
        "title": "System.Reflection.ParameterAttributes",
        "enum": [
          0,
          1,
          2,
          4,
          8,
          16,
          4096,
          8192,
          16384,
          32768,
          61440
        ],
        "type": "integer"
      },
      "System.Reflection.ParameterInfo": {
        "title": "System.Reflection.ParameterInfo",
        "type": "object",
        "properties": {
          "Attributes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Reflection.ParameterAttributes"
              },
              {}
            ]
          },
          "Member": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Reflection.MemberInfo"
              },
              {}
            ]
          },
          "Name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ParameterType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Type"
              },
              {}
            ]
          },
          "Position": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "IsIn": {
            "type": "boolean",
            "readOnly": true
          },
          "IsLcid": {
            "type": "boolean",
            "readOnly": true
          },
          "IsOptional": {
            "type": "boolean",
            "readOnly": true
          },
          "IsOut": {
            "type": "boolean",
            "readOnly": true
          },
          "IsRetval": {
            "type": "boolean",
            "readOnly": true
          },
          "DefaultValue": {
            "nullable": true,
            "readOnly": true
          },
          "RawDefaultValue": {
            "nullable": true,
            "readOnly": true
          },
          "HasDefaultValue": {
            "type": "boolean",
            "readOnly": true
          },
          "CustomAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Reflection.CustomAttributeData"
            },
            "description": "",
            "nullable": true,
            "readOnly": true
          },
          "MetadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "System.Reflection.TypeAttributes": {
        "title": "System.Reflection.TypeAttributes",
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          16,
          24,
          32,
          128,
          256,
          1024,
          2048,
          4096,
          8192,
          16384,
          65536,
          131072,
          196608,
          262144,
          264192,
          1048576,
          12582912
        ],
        "type": "integer"
      },
      "System.Reflection.TypeInfo": {
        "title": "System.Reflection.TypeInfo",
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "CustomAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Reflection.CustomAttributeData"
            },
            "description": "",
            "nullable": true,
            "readOnly": true
          },
          "MetadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "IsInterface": {
            "type": "boolean",
            "readOnly": true
          },
          "MemberType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Reflection.MemberTypes"
              },
              {}
            ]
          },
          "Namespace": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "AssemblyQualifiedName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "FullName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Assembly": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Reflection.Assembly"
              },
              {}
            ]
          },
          "Module": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Reflection.Module"
              },
              {}
            ]
          },
          "IsNested": {
            "type": "boolean",
            "readOnly": true
          },
          "DeclaringType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Type"
              },
              {}
            ]
          },
          "DeclaringMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Reflection.MethodBase"
              },
              {}
            ]
          },
          "ReflectedType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Type"
              },
              {}
            ]
          },
          "UnderlyingSystemType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Type"
              },
              {}
            ]
          },
          "IsTypeDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "IsArray": {
            "type": "boolean",
            "readOnly": true
          },
          "IsByRef": {
            "type": "boolean",
            "readOnly": true
          },
          "IsPointer": {
            "type": "boolean",
            "readOnly": true
          },
          "IsConstructedGenericType": {
            "type": "boolean",
            "readOnly": true
          },
          "IsGenericParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "IsGenericTypeParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "IsGenericMethodParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "IsGenericType": {
            "type": "boolean",
            "readOnly": true
          },
          "IsGenericTypeDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "IsSZArray": {
            "type": "boolean",
            "readOnly": true
          },
          "IsVariableBoundArray": {
            "type": "boolean",
            "readOnly": true
          },
          "IsByRefLike": {
            "type": "boolean",
            "readOnly": true
          },
          "HasElementType": {
            "type": "boolean",
            "readOnly": true
          },
          "GenericTypeArguments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Type"
            },
            "description": "",
            "nullable": true,
            "readOnly": true
          },
          "GenericParameterPosition": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "GenericParameterAttributes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Reflection.GenericParameterAttributes"
              },
              {}
            ]
          },
          "Attributes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Reflection.TypeAttributes"
              },
              {}
            ]
          },
          "IsAbstract": {
            "type": "boolean",
            "readOnly": true
          },
          "IsImport": {
            "type": "boolean",
            "readOnly": true
          },
          "IsSealed": {
            "type": "boolean",
            "readOnly": true
          },
          "IsSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "IsClass": {
            "type": "boolean",
            "readOnly": true
          },
          "IsNestedAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "IsNestedFamANDAssem": {
            "type": "boolean",
            "readOnly": true
          },
          "IsNestedFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "IsNestedFamORAssem": {
            "type": "boolean",
            "readOnly": true
          },
          "IsNestedPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "IsNestedPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "IsNotPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "IsPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "IsAutoLayout": {
            "type": "boolean",
            "readOnly": true
          },
          "IsExplicitLayout": {
            "type": "boolean",
            "readOnly": true
          },
          "IsLayoutSequential": {
            "type": "boolean",
            "readOnly": true
          },
          "IsAnsiClass": {
            "type": "boolean",
            "readOnly": true
          },
          "IsAutoClass": {
            "type": "boolean",
            "readOnly": true
          },
          "IsUnicodeClass": {
            "type": "boolean",
            "readOnly": true
          },
          "IsCOMObject": {
            "type": "boolean",
            "readOnly": true
          },
          "IsContextful": {
            "type": "boolean",
            "readOnly": true
          },
          "IsCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "IsEnum": {
            "type": "boolean",
            "readOnly": true
          },
          "IsMarshalByRef": {
            "type": "boolean",
            "readOnly": true
          },
          "IsPrimitive": {
            "type": "boolean",
            "readOnly": true
          },
          "IsValueType": {
            "type": "boolean",
            "readOnly": true
          },
          "IsSignatureType": {
            "type": "boolean",
            "readOnly": true
          },
          "IsSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "IsSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "IsSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          },
          "StructLayoutAttribute": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Runtime.InteropServices.StructLayoutAttribute"
              },
              {}
            ]
          },
          "TypeInitializer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Reflection.ConstructorInfo"
              },
              {}
            ]
          },
          "TypeHandle": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.RuntimeTypeHandle"
              },
              {}
            ]
          },
          "GUID": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "BaseType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Type"
              },
              {}
            ]
          },
          "IsSerializable": {
            "type": "boolean",
            "readOnly": true
          },
          "ContainsGenericParameters": {
            "type": "boolean",
            "readOnly": true
          },
          "IsVisible": {
            "type": "boolean",
            "readOnly": true
          },
          "GenericTypeParameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Type"
            },
            "description": "",
            "nullable": true,
            "readOnly": true
          },
          "DeclaredConstructors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Reflection.ConstructorInfo"
            },
            "description": "",
            "nullable": true,
            "readOnly": true
          },
          "DeclaredEvents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Reflection.EventInfo"
            },
            "description": "",
            "nullable": true,
            "readOnly": true
          },
          "DeclaredFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Reflection.FieldInfo"
            },
            "description": "",
            "nullable": true,
            "readOnly": true
          },
          "DeclaredMembers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Reflection.MemberInfo"
            },
            "description": "",
            "nullable": true,
            "readOnly": true
          },
          "DeclaredMethods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Reflection.MethodInfo"
            },
            "description": "",
            "nullable": true,
            "readOnly": true
          },
          "DeclaredNestedTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Reflection.TypeInfo"
            },
            "description": "",
            "nullable": true,
            "readOnly": true
          },
          "DeclaredProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Reflection.PropertyInfo"
            },
            "description": "",
            "nullable": true,
            "readOnly": true
          },
          "ImplementedInterfaces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Type"
            },
            "description": "",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "Microsoft.AspNetCore.Mvc.ActionResult1System.Collections.Generic.IEnumerable1WSAutoscan.Core.Dal.VeloxAverageSpeedDataPointWSAutoscan.CoreVersion1.0.0.0CultureneutralPublicKeyTokennullSystem.Private.CoreLibVersion4.0.0.0CultureneutralPublicKeyToken7cec85d7bea7798e": {
        "title": "Microsoft.AspNetCore.Mvc.ActionResult1System.Collections.Generic.IEnumerable1WSAutoscan.Core.Dal.VeloxAverageSpeedDataPointWSAutoscan.CoreVersion1.0.0.0CultureneutralPublicKeyTokennullSystem.Private.CoreLibVersion4.0.0.0CultureneutralPublicKeyToken7cec85d7bea7798e",
        "type": "object",
        "properties": {
          "Result": {
            "type": "object"
          },
          "Value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Dal.VeloxAverageSpeedDataPoint"
            },
            "description": "",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "System.Collections.Generic.KeyValuePair2System.Int32System.Private.CoreLibVersion4.0.0.0CultureneutralPublicKeyToken7cec85d7bea7798eWSAutoscan.Application.Diagnostics.Dto.ServicePolizia.PanelDTOWSAutoscan.ApplicationVersion1.0.0.0CultureneutralPublicKeyTokennull": {
        "title": "System.Collections.Generic.KeyValuePair2System.Int32System.Private.CoreLibVersion4.0.0.0CultureneutralPublicKeyToken7cec85d7bea7798eWSAutoscan.Application.Diagnostics.Dto.ServicePolizia.PanelDTOWSAutoscan.ApplicationVersion1.0.0.0CultureneutralPublicKeyTokennull",
        "type": "object",
        "properties": {
          "Key": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Application.Diagnostics.Dto.ServicePolizia.PanelDTO"
              },
              {}
            ]
          }
        }
      },
      "System.Exception": {
        "title": "System.Exception",
        "type": "object",
        "properties": {
          "Message": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Data": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true,
            "readOnly": true
          },
          "InnerException": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Exception"
              },
              {}
            ]
          },
          "TargetSite": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Reflection.MethodBase"
              },
              {}
            ]
          },
          "StackTrace": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "HelpLink": {
            "type": "string",
            "nullable": true
          },
          "Source": {
            "type": "string",
            "nullable": true
          },
          "HResult": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "System.Reflection.ConstructorInfo": {
        "title": "System.Reflection.ConstructorInfo",
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "DeclaringType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Type"
              },
              {}
            ]
          },
          "ReflectedType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Type"
              },
              {}
            ]
          },
          "Module": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Reflection.Module"
              },
              {}
            ]
          },
          "CustomAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Reflection.CustomAttributeData"
            },
            "description": "",
            "nullable": true,
            "readOnly": true
          },
          "MetadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "Attributes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Reflection.MethodAttributes"
              },
              {}
            ]
          },
          "MethodImplementationFlags": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Reflection.MethodImplAttributes"
              },
              {}
            ]
          },
          "CallingConvention": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Reflection.CallingConventions"
              },
              {}
            ]
          },
          "IsAbstract": {
            "type": "boolean",
            "readOnly": true
          },
          "IsConstructor": {
            "type": "boolean",
            "readOnly": true
          },
          "IsFinal": {
            "type": "boolean",
            "readOnly": true
          },
          "IsHideBySig": {
            "type": "boolean",
            "readOnly": true
          },
          "IsSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "IsStatic": {
            "type": "boolean",
            "readOnly": true
          },
          "IsVirtual": {
            "type": "boolean",
            "readOnly": true
          },
          "IsAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "IsFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "IsFamilyAndAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "IsFamilyOrAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "IsPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "IsPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "IsConstructedGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "IsGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "IsGenericMethodDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "ContainsGenericParameters": {
            "type": "boolean",
            "readOnly": true
          },
          "MethodHandle": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.RuntimeMethodHandle"
              },
              {}
            ]
          },
          "IsSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "IsSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "IsSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          },
          "MemberType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Reflection.MemberTypes"
              },
              {}
            ]
          }
        }
      },
      "System.Reflection.FieldInfo": {
        "title": "System.Reflection.FieldInfo",
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "DeclaringType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Type"
              },
              {}
            ]
          },
          "ReflectedType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Type"
              },
              {}
            ]
          },
          "Module": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Reflection.Module"
              },
              {}
            ]
          },
          "CustomAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Reflection.CustomAttributeData"
            },
            "description": "",
            "nullable": true,
            "readOnly": true
          },
          "MetadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "MemberType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Reflection.MemberTypes"
              },
              {}
            ]
          },
          "Attributes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Reflection.FieldAttributes"
              },
              {}
            ]
          },
          "FieldType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Type"
              },
              {}
            ]
          },
          "IsInitOnly": {
            "type": "boolean",
            "readOnly": true
          },
          "IsLiteral": {
            "type": "boolean",
            "readOnly": true
          },
          "IsNotSerialized": {
            "type": "boolean",
            "readOnly": true
          },
          "IsPinvokeImpl": {
            "type": "boolean",
            "readOnly": true
          },
          "IsSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "IsStatic": {
            "type": "boolean",
            "readOnly": true
          },
          "IsAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "IsFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "IsFamilyAndAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "IsFamilyOrAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "IsPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "IsPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "IsSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "IsSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "IsSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          },
          "FieldHandle": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.RuntimeFieldHandle"
              },
              {}
            ]
          }
        }
      },
      "System.Reflection.MethodAttributes": {
        "title": "System.Reflection.MethodAttributes",
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          16,
          32,
          64,
          128,
          256,
          512,
          1024,
          2048,
          4096,
          8192,
          16384,
          32768,
          53248
        ],
        "type": "integer"
      },
      "System.Reflection.PropertyInfo": {
        "title": "System.Reflection.PropertyInfo",
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "DeclaringType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Type"
              },
              {}
            ]
          },
          "ReflectedType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Type"
              },
              {}
            ]
          },
          "Module": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Reflection.Module"
              },
              {}
            ]
          },
          "CustomAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Reflection.CustomAttributeData"
            },
            "description": "",
            "nullable": true,
            "readOnly": true
          },
          "MetadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "MemberType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Reflection.MemberTypes"
              },
              {}
            ]
          },
          "PropertyType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Type"
              },
              {}
            ]
          },
          "Attributes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Reflection.PropertyAttributes"
              },
              {}
            ]
          },
          "IsSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "CanRead": {
            "type": "boolean",
            "readOnly": true
          },
          "CanWrite": {
            "type": "boolean",
            "readOnly": true
          },
          "GetMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Reflection.MethodInfo"
              },
              {}
            ]
          },
          "SetMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Reflection.MethodInfo"
              },
              {}
            ]
          }
        }
      },
      "System.Reflection.MemberInfo": {
        "title": "System.Reflection.MemberInfo",
        "type": "object",
        "properties": {
          "MemberType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Reflection.MemberTypes"
              },
              {}
            ]
          },
          "DeclaringType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Type"
              },
              {}
            ]
          },
          "ReflectedType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Type"
              },
              {}
            ]
          },
          "Name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Module": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Reflection.Module"
              },
              {}
            ]
          },
          "CustomAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Reflection.CustomAttributeData"
            },
            "description": "",
            "nullable": true,
            "readOnly": true
          },
          "MetadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "System.Reflection.PropertyAttributes": {
        "title": "System.Reflection.PropertyAttributes",
        "enum": [
          0,
          512,
          1024,
          4096,
          8192,
          16384,
          32768,
          62464
        ],
        "type": "integer"
      },
      "System.Runtime.InteropServices.StructLayoutAttribute": {
        "title": "System.Runtime.InteropServices.StructLayoutAttribute",
        "type": "object",
        "properties": {
          "TypeId": {
            "nullable": true,
            "readOnly": true
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Runtime.InteropServices.LayoutKind"
              },
              {}
            ]
          }
        }
      },
      "System.Threading.Tasks.Task1Microsoft.AspNetCore.Mvc.ActionResult1System.Collections.Generic.IEnumerable1WSAutoscan.Core.Dal.VeloxAverageSpeedDataPointWSAutoscan.CoreVersion1.0.0.0CultureneutralPublicKeyTokennullSystem.Private.CoreLibVersion4.0.0.0CultureneutralPublicKeyToken7cec85d7bea7798eMicrosoft.AspNetCore.Mvc.CoreVersion2.2.5.0CultureneutralPublicKeyTokenadb9793829ddae60": {
        "title": "System.Threading.Tasks.Task1Microsoft.AspNetCore.Mvc.ActionResult1System.Collections.Generic.IEnumerable1WSAutoscan.Core.Dal.VeloxAverageSpeedDataPointWSAutoscan.CoreVersion1.0.0.0CultureneutralPublicKeyTokennullSystem.Private.CoreLibVersion4.0.0.0CultureneutralPublicKeyToken7cec85d7bea7798eMicrosoft.AspNetCore.Mvc.CoreVersion2.2.5.0CultureneutralPublicKeyTokenadb9793829ddae60",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "Exception": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.AggregateException"
              },
              {}
            ]
          },
          "Status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Threading.Tasks.TaskStatus"
              },
              {}
            ]
          },
          "IsCanceled": {
            "type": "boolean",
            "readOnly": true
          },
          "IsCompleted": {
            "type": "boolean",
            "readOnly": true
          },
          "IsCompletedSuccessfully": {
            "type": "boolean",
            "readOnly": true
          },
          "CreationOptions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Threading.Tasks.TaskCreationOptions"
              },
              {}
            ]
          },
          "AsyncState": {
            "nullable": true,
            "readOnly": true
          },
          "IsFaulted": {
            "type": "boolean",
            "readOnly": true
          },
          "Result": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ActionResult1System.Collections.Generic.IEnumerable1WSAutoscan.Core.Dal.VeloxAverageSpeedDataPointWSAutoscan.CoreVersion1.0.0.0CultureneutralPublicKeyTokennullSystem.Private.CoreLibVersion4.0.0.0CultureneutralPublicKeyToken7cec85d7bea7798e"
              },
              {}
            ]
          }
        }
      },
      "System.RuntimeFieldHandle": {
        "title": "System.RuntimeFieldHandle",
        "type": "object",
        "properties": {
          "Value": {
            "type": "object"
          }
        }
      },
      "System.Security.SecurityRuleSet": {
        "title": "System.Security.SecurityRuleSet",
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer"
      },
      "System.Threading.Tasks.TaskStatus": {
        "title": "System.Threading.Tasks.TaskStatus",
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7
        ],
        "type": "integer"
      },
      "WSAutoscan.Api.Controllers.Sat.TransitControllerSearchParamAndCredential": {
        "title": "WSAutoscan.Api.Controllers.Sat.TransitControllerSearchParamAndCredential",
        "type": "object",
        "properties": {
          "NamirialCredentials": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Application.Transit.Dto.NamirialCredentialsDto"
              },
              {}
            ]
          },
          "SearchParams": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Application.Transit.Dto.SAT_TransitSearchInputDto"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Application.Alarm.Dto.DttsisDetailDto": {
        "title": "WSAutoscan.Application.Alarm.Dto.DttsisDetailDto",
        "type": "object",
        "properties": {
          "DttsisCompagniaAssicuratrice": {
            "type": "string",
            "nullable": true
          },
          "DttsisDataDecorrenzaAssicurazione": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "DttsisDataFineComporto": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "DttsisDataScadenzaAssicurazione": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "DttsisDataScadenzaRevisione": {
            "type": "string",
            "nullable": true
          },
          "DttsisDataSospensioneAssicurazione": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "DttsisNumeroPolizza": {
            "type": "string",
            "nullable": true
          },
          "DttsisRevisioneValida": {
            "type": "string",
            "nullable": true
          },
          "DttsisSituazioneAl": {
            "type": "string",
            "nullable": true
          },
          "DttsisTipoVeicolo": {
            "type": "string",
            "nullable": true
          },
          "DttsisVeicoloAssicurato": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.Alarm.Dto.SAT_AlarmDetailDto": {
        "title": "WSAutoscan.Application.Alarm.Dto.SAT_AlarmDetailDto",
        "type": "object",
        "properties": {
          "Dttsis": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Application.Alarm.Dto.DttsisDetailDto"
              },
              {}
            ]
          },
          "Scntt": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.Alarm.Dto.ScnttDetailDto"
            },
            "description": "",
            "nullable": true
          },
          "EnvClass": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Application.Alarm.Dto.EnvClassDto"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Application.Alarm.Dto.ScnttDetailDto": {
        "title": "WSAutoscan.Application.Alarm.Dto.ScnttDetailDto",
        "type": "object",
        "properties": {
          "ScnttCategory": {
            "type": "string",
            "nullable": true
          },
          "ScnttRole": {
            "type": "string",
            "nullable": true
          },
          "ScnttOffice": {
            "type": "string",
            "nullable": true
          },
          "ScnttVehicle": {
            "type": "string",
            "nullable": true
          },
          "ScnttVehicleType": {
            "type": "string",
            "nullable": true
          },
          "ScnttAction": {
            "type": "string",
            "nullable": true
          },
          "ScnttDateTime_In": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "ScnttNote": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.CameraMaintenance.Dto.CameraMaintenanceRequestDto": {
        "title": "WSAutoscan.Application.CameraMaintenance.Dto.CameraMaintenanceRequestDto",
        "type": "object",
        "properties": {
          "CameraId": {
            "type": "integer",
            "format": "int32"
          },
          "TransitsNumber": {
            "type": "integer",
            "format": "int32"
          },
          "Minutes": {
            "type": "integer",
            "format": "int32"
          },
          "DateFromNow": {
            "type": "boolean"
          },
          "ResetOnNotRead": {
            "type": "boolean"
          },
          "Note": {
            "type": "string",
            "nullable": true
          },
          "DateFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.CameraMobileConfiguration.Dto.CameraMobileConfigurationStartedValidatorDto": {
        "title": "WSAutoscan.Application.CameraMobileConfiguration.Dto.CameraMobileConfigurationStartedValidatorDto",
        "type": "object",
        "properties": {
          "UserId": {
            "type": "integer",
            "format": "int32"
          },
          "Order": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "WSAutoscan.Application.Customer.Dto.AS_CustomerDto": {
        "title": "WSAutoscan.Application.Customer.Dto.AS_CustomerDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Name": {
            "type": "string",
            "nullable": true
          },
          "CodIPA": {
            "type": "string",
            "nullable": true
          },
          "ApiKey": {
            "type": "string",
            "nullable": true
          },
          "IstatCode": {
            "type": "string",
            "nullable": true
          },
          "Customer_Suite": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "System.Threading.Tasks.Task1System.Int32System.Private.CoreLibVersion4.0.0.0CultureneutralPublicKeyToken7cec85d7bea7798e": {
        "title": "System.Threading.Tasks.Task1System.Int32System.Private.CoreLibVersion4.0.0.0CultureneutralPublicKeyToken7cec85d7bea7798e",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "Exception": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.AggregateException"
              },
              {}
            ]
          },
          "Status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Threading.Tasks.TaskStatus"
              },
              {}
            ]
          },
          "IsCanceled": {
            "type": "boolean",
            "readOnly": true
          },
          "IsCompleted": {
            "type": "boolean",
            "readOnly": true
          },
          "IsCompletedSuccessfully": {
            "type": "boolean",
            "readOnly": true
          },
          "CreationOptions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Threading.Tasks.TaskCreationOptions"
              },
              {}
            ]
          },
          "AsyncState": {
            "nullable": true,
            "readOnly": true
          },
          "IsFaulted": {
            "type": "boolean",
            "readOnly": true
          },
          "Result": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "System.Threading.Tasks.Task1System.ValueTuple3System.Collections.Generic.IEnumerable1WSAutoscan.Core.Dal.RedVeloxDataPointWSAutoscan.CoreVersion1.0.0.0CultureneutralPublicKeyTokennullSystem.Private.CoreLibVersion4.0.0.0CultureneutralPublicKeyToken7cec85d7bea7798eSystem.Collections.Generic.IEnumerable1WSAutoscan.Core.Dal.RedVeloxDataPointWSAutoscan.CoreVersion1.0.0.0CultureneutralPublicKeyTokennullSystem.Private.CoreLibVersion4.0.0.0CultureneutralPublicKeyToken7cec85d7bea7798eSystem.Collections.Generic.IEnumerable1WSAutoscan.Core.Dal.RedVeloxDataPointWSAutoscan.CoreVersion1.0.0.0CultureneutralPublicKeyTokennullSystem.Private.CoreLibVersion4.0.0.0CultureneutralPublicKeyToken7cec85d7bea7798eSystem.Private.CoreLibVersion4.0.0.0CultureneutralPublicKeyToken7cec85d7bea7798e": {
        "title": "System.Threading.Tasks.Task1System.ValueTuple3System.Collections.Generic.IEnumerable1WSAutoscan.Core.Dal.RedVeloxDataPointWSAutoscan.CoreVersion1.0.0.0CultureneutralPublicKeyTokennullSystem.Private.CoreLibVersion4.0.0.0CultureneutralPublicKeyToken7cec85d7bea7798eSystem.Collections.Generic.IEnumerable1WSAutoscan.Core.Dal.RedVeloxDataPointWSAutoscan.CoreVersion1.0.0.0CultureneutralPublicKeyTokennullSystem.Private.CoreLibVersion4.0.0.0CultureneutralPublicKeyToken7cec85d7bea7798eSystem.Collections.Generic.IEnumerable1WSAutoscan.Core.Dal.RedVeloxDataPointWSAutoscan.CoreVersion1.0.0.0CultureneutralPublicKeyTokennullSystem.Private.CoreLibVersion4.0.0.0CultureneutralPublicKeyToken7cec85d7bea7798eSystem.Private.CoreLibVersion4.0.0.0CultureneutralPublicKeyToken7cec85d7bea7798e",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "Exception": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.AggregateException"
              },
              {}
            ]
          },
          "Status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Threading.Tasks.TaskStatus"
              },
              {}
            ]
          },
          "IsCanceled": {
            "type": "boolean",
            "readOnly": true
          },
          "IsCompleted": {
            "type": "boolean",
            "readOnly": true
          },
          "IsCompletedSuccessfully": {
            "type": "boolean",
            "readOnly": true
          },
          "CreationOptions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Threading.Tasks.TaskCreationOptions"
              },
              {}
            ]
          },
          "AsyncState": {
            "nullable": true,
            "readOnly": true
          },
          "IsFaulted": {
            "type": "boolean",
            "readOnly": true
          },
          "Result": {
            "type": "object"
          }
        }
      },
      "System.Threading.Tasks.TaskCreationOptions": {
        "title": "System.Threading.Tasks.TaskCreationOptions",
        "enum": [
          0,
          1,
          2,
          4,
          8,
          16,
          64
        ],
        "type": "integer"
      },
      "System.TimeSpan": {
        "title": "System.TimeSpan",
        "type": "object",
        "properties": {
          "Ticks": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "Days": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "Hours": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "Milliseconds": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "Minutes": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "Seconds": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "TotalDays": {
            "type": "number",
            "readOnly": true
          },
          "TotalHours": {
            "type": "number",
            "readOnly": true
          },
          "TotalMilliseconds": {
            "type": "number",
            "readOnly": true
          },
          "TotalMinutes": {
            "type": "number",
            "readOnly": true
          },
          "TotalSeconds": {
            "type": "number",
            "readOnly": true
          }
        }
      },
      "WSAutoscan.Api.Controllers.Sat.TransitControllerPlateQueryResponse": {
        "title": "WSAutoscan.Api.Controllers.Sat.TransitControllerPlateQueryResponse",
        "type": "object",
        "properties": {
          "Plate": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Blacklists": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "",
            "nullable": true,
            "readOnly": true
          },
          "Dttsis": {
            "nullable": true,
            "readOnly": true
          },
          "Scntt": {
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "WSAutoscan.Api.Controllers.Ztl.HolidayControllerHolidayDto": {
        "title": "WSAutoscan.Api.Controllers.Ztl.HolidayControllerHolidayDto",
        "type": "object",
        "properties": {
          "Month": {
            "type": "integer",
            "format": "int32"
          },
          "Day": {
            "type": "integer",
            "format": "int32"
          },
          "Editable": {
            "type": "boolean"
          },
          "Description": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.Alarm.Dto.SAT_AlarmSentDto": {
        "title": "WSAutoscan.Application.Alarm.Dto.SAT_AlarmSentDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Date": {
            "type": "string",
            "format": "date-time"
          },
          "UserId": {
            "type": "integer",
            "format": "int32"
          },
          "SendResultId": {
            "type": "integer",
            "format": "int32"
          },
          "Note": {
            "type": "string",
            "nullable": true
          },
          "AlarmTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "TransitId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "WSAutoscan.Application.Alarm.Dto.SAT_AlarmStateDto": {
        "title": "WSAutoscan.Application.Alarm.Dto.SAT_AlarmStateDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "AlarmId": {
            "type": "integer",
            "format": "int32"
          },
          "UserId": {
            "type": "integer",
            "format": "int32"
          },
          "Date": {
            "type": "string",
            "format": "date-time"
          },
          "StateId": {
            "type": "integer",
            "format": "int32"
          },
          "Note": {
            "type": "string",
            "nullable": true
          },
          "SendScntt": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.Camera.Dto.AS_Camera_LaneTypeDto": {
        "title": "WSAutoscan.Application.Camera.Dto.AS_Camera_LaneTypeDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Description": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.Camera.Dto.AS_Camera_LimitDto": {
        "title": "WSAutoscan.Application.Camera.Dto.AS_Camera_LimitDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Limit": {
            "type": "integer",
            "format": "int32"
          },
          "CameraId": {
            "type": "integer",
            "format": "int32"
          },
          "DefaultLimit": {
            "type": "boolean"
          },
          "VehicleCameras": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.Camera.Dto.AS_CameraOffsetDto": {
        "title": "WSAutoscan.Application.Camera.Dto.AS_CameraOffsetDto",
        "type": "object",
        "properties": {
          "CameraId": {
            "type": "integer",
            "format": "int32"
          },
          "MediaTypeId": {
            "type": "string",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "nullable": true
          },
          "Top": {
            "type": "integer",
            "format": "int32"
          },
          "Right": {
            "type": "integer",
            "format": "int32"
          },
          "Bottom": {
            "type": "integer",
            "format": "int32"
          },
          "Left": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "WSAutoscan.Application.Camera.Dto.AS_RecordedCameraParameterDto": {
        "title": "WSAutoscan.Application.Camera.Dto.AS_RecordedCameraParameterDto",
        "type": "object",
        "properties": {
          "SuiteId": {
            "type": "integer",
            "format": "int32"
          },
          "CameraModelId": {
            "type": "integer",
            "format": "int32"
          },
          "Name": {
            "type": "string",
            "nullable": true
          },
          "DefaultValue": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.CameraMobileConfiguration.Dto.CameraMobileConfigurationDto": {
        "title": "WSAutoscan.Application.CameraMobileConfiguration.Dto.CameraMobileConfigurationDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "ConfigName": {
            "type": "string",
            "nullable": true
          },
          "SiteAddress": {
            "type": "string",
            "nullable": true
          },
          "IsDeleted": {
            "type": "boolean"
          },
          "TotalTransits": {
            "type": "integer",
            "format": "int32"
          },
          "Lanes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.Camera.Dto.AS_Camera_LaneDto"
            },
            "description": "",
            "nullable": true
          },
          "VeloxLimits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.Camera.Dto.AS_Camera_LimitDto"
            },
            "description": "",
            "nullable": true
          },
          "Parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.Camera.Dto.AS_CameraAttributeDto"
            },
            "description": "",
            "nullable": true
          },
          "Direction": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Application.CameraMobileConfiguration.Dto.CameraMobileConfigurationDirectionDto"
              },
              {}
            ]
          },
          "GateId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "WSAutoscan.Application.CameraValidatorStarted.Dto.CameraMannedStartedListDto": {
        "title": "WSAutoscan.Application.CameraValidatorStarted.Dto.CameraMannedStartedListDto",
        "type": "object",
        "properties": {
          "Order": {
            "type": "integer",
            "format": "int32"
          },
          "UserId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "WSAutoscan.Application.Customer.Dto.ApikeyDto": {
        "title": "WSAutoscan.Application.Customer.Dto.ApikeyDto",
        "type": "object",
        "properties": {
          "CustomerId": {
            "type": "integer",
            "format": "int32"
          },
          "ApiKey": {
            "type": "string",
            "nullable": true
          },
          "Save": {
            "type": "boolean"
          }
        }
      },
      "System.Runtime.InteropServices.LayoutKind": {
        "title": "System.Runtime.InteropServices.LayoutKind",
        "enum": [
          0,
          2,
          3
        ],
        "type": "integer"
      },
      "System.RuntimeMethodHandle": {
        "title": "System.RuntimeMethodHandle",
        "type": "object",
        "properties": {
          "Value": {
            "type": "object"
          }
        }
      },
      "System.RuntimeTypeHandle": {
        "title": "System.RuntimeTypeHandle",
        "type": "object",
        "properties": {
          "Value": {
            "type": "object"
          }
        }
      },
      "System.Type": {
        "title": "System.Type",
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "CustomAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Reflection.CustomAttributeData"
            },
            "description": "",
            "nullable": true,
            "readOnly": true
          },
          "MetadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "IsInterface": {
            "type": "boolean",
            "readOnly": true
          },
          "MemberType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Reflection.MemberTypes"
              },
              {}
            ]
          },
          "Namespace": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "AssemblyQualifiedName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "FullName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Assembly": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Reflection.Assembly"
              },
              {}
            ]
          },
          "Module": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Reflection.Module"
              },
              {}
            ]
          },
          "IsNested": {
            "type": "boolean",
            "readOnly": true
          },
          "DeclaringType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Type"
              },
              {}
            ]
          },
          "DeclaringMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Reflection.MethodBase"
              },
              {}
            ]
          },
          "ReflectedType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Type"
              },
              {}
            ]
          },
          "UnderlyingSystemType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Type"
              },
              {}
            ]
          },
          "IsTypeDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "IsArray": {
            "type": "boolean",
            "readOnly": true
          },
          "IsByRef": {
            "type": "boolean",
            "readOnly": true
          },
          "IsPointer": {
            "type": "boolean",
            "readOnly": true
          },
          "IsConstructedGenericType": {
            "type": "boolean",
            "readOnly": true
          },
          "IsGenericParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "IsGenericTypeParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "IsGenericMethodParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "IsGenericType": {
            "type": "boolean",
            "readOnly": true
          },
          "IsGenericTypeDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "IsSZArray": {
            "type": "boolean",
            "readOnly": true
          },
          "IsVariableBoundArray": {
            "type": "boolean",
            "readOnly": true
          },
          "IsByRefLike": {
            "type": "boolean",
            "readOnly": true
          },
          "HasElementType": {
            "type": "boolean",
            "readOnly": true
          },
          "GenericTypeArguments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Type"
            },
            "description": "",
            "nullable": true,
            "readOnly": true
          },
          "GenericParameterPosition": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "GenericParameterAttributes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Reflection.GenericParameterAttributes"
              },
              {}
            ]
          },
          "Attributes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Reflection.TypeAttributes"
              },
              {}
            ]
          },
          "IsAbstract": {
            "type": "boolean",
            "readOnly": true
          },
          "IsImport": {
            "type": "boolean",
            "readOnly": true
          },
          "IsSealed": {
            "type": "boolean",
            "readOnly": true
          },
          "IsSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "IsClass": {
            "type": "boolean",
            "readOnly": true
          },
          "IsNestedAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "IsNestedFamANDAssem": {
            "type": "boolean",
            "readOnly": true
          },
          "IsNestedFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "IsNestedFamORAssem": {
            "type": "boolean",
            "readOnly": true
          },
          "IsNestedPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "IsNestedPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "IsNotPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "IsPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "IsAutoLayout": {
            "type": "boolean",
            "readOnly": true
          },
          "IsExplicitLayout": {
            "type": "boolean",
            "readOnly": true
          },
          "IsLayoutSequential": {
            "type": "boolean",
            "readOnly": true
          },
          "IsAnsiClass": {
            "type": "boolean",
            "readOnly": true
          },
          "IsAutoClass": {
            "type": "boolean",
            "readOnly": true
          },
          "IsUnicodeClass": {
            "type": "boolean",
            "readOnly": true
          },
          "IsCOMObject": {
            "type": "boolean",
            "readOnly": true
          },
          "IsContextful": {
            "type": "boolean",
            "readOnly": true
          },
          "IsCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "IsEnum": {
            "type": "boolean",
            "readOnly": true
          },
          "IsMarshalByRef": {
            "type": "boolean",
            "readOnly": true
          },
          "IsPrimitive": {
            "type": "boolean",
            "readOnly": true
          },
          "IsValueType": {
            "type": "boolean",
            "readOnly": true
          },
          "IsSignatureType": {
            "type": "boolean",
            "readOnly": true
          },
          "IsSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "IsSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "IsSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          },
          "StructLayoutAttribute": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Runtime.InteropServices.StructLayoutAttribute"
              },
              {}
            ]
          },
          "TypeInitializer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Reflection.ConstructorInfo"
              },
              {}
            ]
          },
          "TypeHandle": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.RuntimeTypeHandle"
              },
              {}
            ]
          },
          "GUID": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "BaseType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Type"
              },
              {}
            ]
          },
          "IsSerializable": {
            "type": "boolean",
            "readOnly": true
          },
          "ContainsGenericParameters": {
            "type": "boolean",
            "readOnly": true
          },
          "IsVisible": {
            "type": "boolean",
            "readOnly": true
          }
        }
      },
      "WSAutoscan.Api.Controllers.CamerasFilter": {
        "title": "WSAutoscan.Api.Controllers.CamerasFilter",
        "type": "object",
        "properties": {
          "ActiveCameraOnly": {
            "type": "boolean"
          },
          "SuiteIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Api.Controllers.Sat.TransitControllerPlateQuery": {
        "title": "WSAutoscan.Api.Controllers.Sat.TransitControllerPlateQuery",
        "type": "object",
        "properties": {
          "VehicleType": {
            "type": "string",
            "nullable": true
          },
          "Plate": {
            "type": "string",
            "nullable": true
          },
          "Pdf": {
            "type": "boolean"
          }
        }
      },
      "WSAutoscan.Api.Controllers.Ztl.EditReasonsControllerEditReason": {
        "title": "WSAutoscan.Api.Controllers.Ztl.EditReasonsControllerEditReason",
        "required": [
          "CustomerId",
          "Text"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "CustomerId": {
            "type": "integer",
            "format": "int32"
          },
          "Customer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Customer"
              },
              {}
            ]
          },
          "Text": {
            "maxLength": 256,
            "type": "string"
          }
        }
      },
      "WSAutoscan.Api.Controllers.ZtlCommonControllerZTL_DayDictionaryDto": {
        "title": "WSAutoscan.Api.Controllers.ZtlCommonControllerZTL_DayDictionaryDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Name": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.Alarm.Dto.EnvClassDto": {
        "title": "WSAutoscan.Application.Alarm.Dto.EnvClassDto",
        "type": "object",
        "properties": {
          "Euro": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.Camera.Dto.AS_Camera_ClearAreasDto": {
        "title": "WSAutoscan.Application.Camera.Dto.AS_Camera_ClearAreasDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "CameraId": {
            "type": "integer",
            "format": "int32"
          },
          "Name": {
            "type": "string",
            "nullable": true
          },
          "MediaType": {
            "type": "string",
            "nullable": true
          },
          "MinX": {
            "type": "number"
          },
          "MinY": {
            "type": "number"
          },
          "MaxX": {
            "type": "number"
          },
          "MaxY": {
            "type": "number"
          },
          "Angle": {
            "type": "number"
          },
          "IsBlurArea": {
            "type": "boolean"
          },
          "ApplyBrightnessContrast": {
            "type": "boolean"
          }
        }
      },
      "WSAutoscan.Application.Camera.Dto.AS_Camera_LaneDto": {
        "title": "WSAutoscan.Application.Camera.Dto.AS_Camera_LaneDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "LaneId": {
            "type": "string",
            "nullable": true
          },
          "SignDistance": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "LaneName": {
            "type": "string",
            "nullable": true
          },
          "Direction": {
            "type": "string",
            "nullable": true
          },
          "CameraId": {
            "type": "integer",
            "format": "int32"
          },
          "CameraLaneTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "LaneParameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.Camera.Dto.AS_CameraAttributeDto"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.Camera.Dto.AS_CameraAttributeDto": {
        "title": "WSAutoscan.Application.Camera.Dto.AS_CameraAttributeDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "CameraId": {
            "type": "integer",
            "format": "int32"
          },
          "Name": {
            "type": "string",
            "nullable": true
          },
          "Value": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.CameraMaintenance.Dto.MaintenanceHistoryStatusEnum": {
        "title": "WSAutoscan.Application.CameraMaintenance.Dto.MaintenanceHistoryStatusEnum",
        "enum": [
          1,
          2,
          3,
          4,
          5
        ],
        "type": "integer"
      },
      "WSAutoscan.Application.CameraMobileConfiguration.Dto.CameraMobileConfigurationStartedDto": {
        "title": "WSAutoscan.Application.CameraMobileConfiguration.Dto.CameraMobileConfigurationStartedDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Started": {
            "type": "string",
            "format": "date-time"
          },
          "Ended": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "ConfigurationId": {
            "type": "integer",
            "format": "int32"
          },
          "StartedUserId": {
            "type": "integer",
            "format": "int32"
          },
          "StoppedUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "DirectionToCheck": {
            "type": "string",
            "nullable": true
          },
          "ValidatorUsers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.CameraMobileConfiguration.Dto.CameraMobileConfigurationStartedValidatorDto"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.CameraMobileConfiguration.Dto.CameraMobileConfigurationStoppedDto": {
        "title": "WSAutoscan.Application.CameraMobileConfiguration.Dto.CameraMobileConfigurationStoppedDto",
        "type": "object",
        "properties": {
          "ConfigurationId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "WSAutoscan.Application.CameraValidatorStarted.Dto.CameraMannedStartedDto": {
        "title": "WSAutoscan.Application.CameraValidatorStarted.Dto.CameraMannedStartedDto",
        "type": "object",
        "properties": {
          "CameraId": {
            "type": "integer",
            "format": "int32"
          },
          "CameraMannedStartedListDto": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.CameraValidatorStarted.Dto.CameraMannedStartedListDto"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "System.Threading.Tasks.Task1WSAutoscan.Application.RedVelox.Dto.ViolationDeadLineNumDtoWSAutoscan.ApplicationVersion1.0.0.0CultureneutralPublicKeyTokennull": {
        "title": "System.Threading.Tasks.Task1WSAutoscan.Application.RedVelox.Dto.ViolationDeadLineNumDtoWSAutoscan.ApplicationVersion1.0.0.0CultureneutralPublicKeyTokennull",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "Exception": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.AggregateException"
              },
              {}
            ]
          },
          "Status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Threading.Tasks.TaskStatus"
              },
              {}
            ]
          },
          "IsCanceled": {
            "type": "boolean",
            "readOnly": true
          },
          "IsCompleted": {
            "type": "boolean",
            "readOnly": true
          },
          "IsCompletedSuccessfully": {
            "type": "boolean",
            "readOnly": true
          },
          "CreationOptions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.Threading.Tasks.TaskCreationOptions"
              },
              {}
            ]
          },
          "AsyncState": {
            "nullable": true,
            "readOnly": true
          },
          "IsFaulted": {
            "type": "boolean",
            "readOnly": true
          },
          "Result": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Application.RedVelox.Dto.ViolationDeadLineNumDto"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Api.Controllers.SettingsControllerScnttCredentialDto": {
        "title": "WSAutoscan.Api.Controllers.SettingsControllerScnttCredentialDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "Name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Description": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Username": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Password": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "WSAutoscan.Application.CameraMaintenance.Dto.CameraMaintenanceNasRequestDto": {
        "title": "WSAutoscan.Application.CameraMaintenance.Dto.CameraMaintenanceNasRequestDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "StatusId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Application.CameraMaintenance.Dto.MaintenanceHistoryStatusEnum"
              },
              {}
            ]
          },
          "CurrentNrTransits": {
            "type": "integer",
            "format": "int32"
          },
          "Netbiosname": {
            "type": "string",
            "nullable": true
          },
          "LastError": {
            "type": "string",
            "nullable": true
          },
          "MaintenanceEnded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "description": "Oggetto inviatomi dal nas per aggiornare lo stato della manutenzione della relativa camera"
      },
      "WSAutoscan.Application.CameraMobileConfiguration.Dto.CameraMobileConfigurationDirectionDto": {
        "title": "WSAutoscan.Application.CameraMobileConfiguration.Dto.CameraMobileConfigurationDirectionDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Height": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.CameraValidatorStarted.Dto.CameraMannedStartedMinDto": {
        "title": "WSAutoscan.Application.CameraValidatorStarted.Dto.CameraMannedStartedMinDto",
        "type": "object",
        "properties": {
          "MannedId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "WSAutoscan.Application.Diagnostics.Dto.AS_CameraDto": {
        "title": "WSAutoscan.Application.Diagnostics.Dto.AS_CameraDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Description": {
            "type": "string",
            "nullable": true
          },
          "Netbiosname": {
            "type": "string",
            "nullable": true
          },
          "Lat": {
            "type": "number"
          },
          "Lng": {
            "type": "number"
          },
          "Active": {
            "type": "boolean"
          },
          "DirectionGoAway": {
            "type": "string",
            "nullable": true
          },
          "DirectionApproach": {
            "type": "string",
            "nullable": true
          },
          "Ip": {
            "type": "string",
            "nullable": true
          },
          "Port": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "IpNas": {
            "type": "string",
            "nullable": true
          },
          "CheckDigitalInput": {
            "type": "boolean"
          },
          "CodCamera": {
            "type": "integer",
            "format": "int32"
          },
          "GateId": {
            "type": "integer",
            "format": "int32"
          },
          "CustomerId": {
            "type": "integer",
            "format": "int32"
          },
          "CustomerName": {
            "type": "string",
            "nullable": true
          },
          "SuiteId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Registered": {
            "type": "boolean"
          },
          "CanCheckBothLanes": {
            "type": "boolean"
          },
          "OutgoingDirection": {
            "type": "string",
            "nullable": true
          },
          "ScnttId": {
            "type": "string",
            "nullable": true
          },
          "SerialNumber": {
            "type": "string",
            "nullable": true
          },
          "Height": {
            "type": "string",
            "nullable": true
          },
          "RegistrationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "CameraModel": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Application.Diagnostics.Dto.AS_CameraModelDto"
              },
              {}
            ]
          },
          "Suite": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Application.User.Dto.AS_SuiteDto"
              },
              {}
            ]
          },
          "PasswordToDecryptZip": {
            "type": "string",
            "nullable": true
          },
          "EncryptionMethod": {
            "type": "string",
            "nullable": true
          },
          "EnableMonitoring": {
            "type": "boolean"
          },
          "EnableMonitoringSC": {
            "type": "boolean"
          },
          "PlateVerticalPadding": {
            "type": "integer",
            "format": "int32"
          },
          "PlateHorizontalPadding": {
            "type": "integer",
            "format": "int32"
          },
          "IsManned": {
            "type": "boolean"
          },
          "IsMobile": {
            "type": "boolean"
          },
          "IsFake": {
            "type": "boolean"
          },
          "DirectionToIgnore": {
            "type": "string",
            "nullable": true
          },
          "DependecyIdCameraSat": {
            "type": "integer",
            "format": "int32"
          },
          "Gate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Application.Gate.Dto.AS_GateDto"
              },
              {}
            ]
          },
          "Users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.User.Dto.AS_UserDto"
            },
            "description": "",
            "nullable": true
          },
          "Parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.Camera.Dto.AS_CameraAttributeDto"
            },
            "description": "",
            "nullable": true
          },
          "Lanes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.Camera.Dto.AS_Camera_LaneDto"
            },
            "description": "",
            "nullable": true
          },
          "VeloxLimits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.Camera.Dto.AS_Camera_LimitDto"
            },
            "description": "",
            "nullable": true
          },
          "ClearAreas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.Camera.Dto.AS_Camera_ClearAreasDto"
            },
            "description": "",
            "nullable": true
          },
          "Offsets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.Camera.Dto.AS_CameraOffsetDto"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.Diagnostics.Dto.AS_CameraLiteDto": {
        "title": "WSAutoscan.Application.Diagnostics.Dto.AS_CameraLiteDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Description": {
            "type": "string",
            "nullable": true
          },
          "Netbiosname": {
            "type": "string",
            "nullable": true
          },
          "Lat": {
            "type": "number"
          },
          "Lng": {
            "type": "number"
          },
          "Active": {
            "type": "boolean"
          },
          "DirectionGoAway": {
            "type": "string",
            "nullable": true
          },
          "DirectionApproach": {
            "type": "string",
            "nullable": true
          },
          "Ip": {
            "type": "string",
            "nullable": true
          },
          "Port": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "IpNas": {
            "type": "string",
            "nullable": true
          },
          "CheckDigitalInput": {
            "type": "boolean"
          },
          "CodCamera": {
            "type": "integer",
            "format": "int32"
          },
          "GateId": {
            "type": "integer",
            "format": "int32"
          },
          "CustomerId": {
            "type": "integer",
            "format": "int32"
          },
          "CustomerName": {
            "type": "string",
            "nullable": true
          },
          "SuiteId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Registered": {
            "type": "boolean"
          },
          "CanCheckBothLanes": {
            "type": "boolean"
          },
          "OutgoingDirection": {
            "type": "string",
            "nullable": true
          },
          "ScnttId": {
            "type": "string",
            "nullable": true
          },
          "SerialNumber": {
            "type": "string",
            "nullable": true
          },
          "Height": {
            "type": "string",
            "nullable": true
          },
          "RegistrationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "CameraModel": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Application.Diagnostics.Dto.AS_CameraModelDto"
              },
              {}
            ]
          },
          "Suite": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Application.User.Dto.AS_SuiteDto"
              },
              {}
            ]
          },
          "PasswordToDecryptZip": {
            "type": "string",
            "nullable": true
          },
          "EncryptionMethod": {
            "type": "string",
            "nullable": true
          },
          "EnableMonitoring": {
            "type": "boolean"
          },
          "EnableMonitoringSC": {
            "type": "boolean"
          },
          "PlateVerticalPadding": {
            "type": "integer",
            "format": "int32"
          },
          "PlateHorizontalPadding": {
            "type": "integer",
            "format": "int32"
          },
          "IsManned": {
            "type": "boolean"
          },
          "IsMobile": {
            "type": "boolean"
          },
          "IsFake": {
            "type": "boolean"
          },
          "DirectionToIgnore": {
            "type": "string",
            "nullable": true
          },
          "DependecyIdCameraSat": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "WSAutoscan.Application.Diagnostics.Dto.CameraDetailsDto": {
        "title": "WSAutoscan.Application.Diagnostics.Dto.CameraDetailsDto",
        "type": "object",
        "properties": {
          "DATETIME": {
            "type": "string",
            "format": "date-time"
          },
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Roll": {
            "type": "number"
          },
          "Tilt": {
            "type": "number"
          },
          "DiagStatus": {
            "type": "string",
            "nullable": true
          },
          "DiagString": {
            "type": "string",
            "nullable": true
          },
          "Sensors": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Diagnostics.Camera.Sensors"
              },
              {}
            ]
          },
          "AlertLevel": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Diagnostics.AlertLevel"
              },
              {}
            ]
          },
          "DigitalInput": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Diagnostics.Camera.DigitalInputAlarms"
              },
              {}
            ]
          },
          "LastUpdate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "LastTransit": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.Diagnostics.Dto.AS_CustmerSATCameraDto": {
        "title": "WSAutoscan.Application.Diagnostics.Dto.AS_CustmerSATCameraDto",
        "type": "object",
        "properties": {
          "Code": {
            "type": "integer",
            "format": "int32"
          },
          "Description": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.Diagnostics.Dto.ServicePolizia.PanelDTO": {
        "title": "WSAutoscan.Application.Diagnostics.Dto.ServicePolizia.PanelDTO",
        "type": "object",
        "properties": {
          "Ip": {
            "type": "string",
            "nullable": true
          },
          "Port": {
            "type": "string",
            "nullable": true
          },
          "OnLine": {
            "type": "boolean"
          },
          "Type": {
            "type": "string",
            "nullable": true
          },
          "Coherent": {
            "type": "boolean"
          },
          "CurrentState": {
            "type": "string",
            "nullable": true
          },
          "ExpectedState": {
            "type": "string",
            "nullable": true
          },
          "Error": {
            "type": "string",
            "nullable": true
          },
          "Message": {
            "type": "string",
            "nullable": true
          },
          "NasIp": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.DttsisModalityCall.Dto.ModalityCallDto": {
        "title": "WSAutoscan.Application.DttsisModalityCall.Dto.ModalityCallDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "description": "Id della modalita'",
            "format": "int32"
          },
          "Description": {
            "type": "string",
            "description": "Descrizione della modalita'",
            "nullable": true
          }
        },
        "description": "Modalita' di chiamata per la dttsis"
      },
      "WSAutoscan.Application.Gate.Dto.AS_GateCompleteDto": {
        "title": "WSAutoscan.Application.Gate.Dto.AS_GateCompleteDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "CustomerId": {
            "type": "integer",
            "format": "int32"
          },
          "Description": {
            "type": "string",
            "nullable": true
          },
          "ScnttId": {
            "type": "string",
            "nullable": true
          },
          "ZoneId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "SiteNumeration": {
            "type": "string",
            "nullable": true
          },
          "Cameras": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.Diagnostics.Dto.AS_CameraLiteDto"
            },
            "description": "",
            "nullable": true
          },
          "IsActive": {
            "type": "boolean"
          },
          "IsMobile": {
            "type": "boolean"
          },
          "Customer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Application.Customer.Dto.AS_CustomerDto"
              },
              {}
            ]
          },
          "CreateTransitAuthorizing": {
            "type": "boolean"
          },
          "ToAuthorizeGatesId": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.Group.Dto.SAT_GroupUserDtoUserMin": {
        "title": "WSAutoscan.Application.Group.Dto.SAT_GroupUserDtoUserMin",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Username": {
            "type": "string",
            "nullable": true
          },
          "SmsNotification": {
            "type": "boolean"
          },
          "EmailNotification": {
            "type": "boolean"
          },
          "TelegramNotification": {
            "type": "boolean"
          },
          "TelegramUserId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "WSAutoscan.Application.IOZTLPermitState.Dto.IOZTLPermitStateTextDto": {
        "title": "WSAutoscan.Application.IOZTLPermitState.Dto.IOZTLPermitStateTextDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "description": "Id del template",
            "format": "int32"
          },
          "Text": {
            "type": "string",
            "description": "Testo del template",
            "nullable": true
          },
          "Title": {
            "type": "string",
            "description": "Titolo del template",
            "nullable": true
          },
          "IsDefault": {
            "type": "boolean",
            "description": "Indica se e' il template di default o meno"
          }
        },
        "description": "Template dei messaggi IO"
      },
      "WSAutoscan.Application.License.Dto.LicensesList": {
        "title": "WSAutoscan.Application.License.Dto.LicensesList",
        "type": "object",
        "properties": {
          "IsZtlEnabled": {
            "type": "boolean"
          },
          "IsSatEnabled": {
            "type": "boolean"
          },
          "IsRedEnabled": {
            "type": "boolean"
          },
          "IsVeloxEnabled": {
            "type": "boolean"
          }
        }
      },
      "WSAutoscan.Application.License.Dto.RedeemLicenseRequestDto": {
        "title": "WSAutoscan.Application.License.Dto.RedeemLicenseRequestDto",
        "type": "object",
        "properties": {
          "CriptedData": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.PdP.Dto.NuovaIstanzaZtlResponse": {
        "title": "WSAutoscan.Application.PdP.Dto.NuovaIstanzaZtlResponse",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "description": "ID dell'istanza in Autosc@n.",
            "format": "int32"
          },
          "Error": {
            "type": "string",
            "description": "Eventuale messaggio d'errore.",
            "nullable": true
          }
        },
        "description": "Risposta alla richiesta di nuova istanza ZTL da inserire in Autosc@n."
      },
      "WSAutoscan.Application.Diagnostics.Dto.DiagnosticsSearchDto": {
        "title": "WSAutoscan.Application.Diagnostics.Dto.DiagnosticsSearchDto",
        "type": "object",
        "properties": {
          "GatesId": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "",
            "nullable": true
          },
          "DateFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "DateTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.Diagnostics.Dto.ServicePolizia.NasDTO": {
        "title": "WSAutoscan.Application.Diagnostics.Dto.ServicePolizia.NasDTO",
        "type": "object",
        "properties": {
          "Ip": {
            "type": "string",
            "nullable": true
          },
          "Port": {
            "type": "string",
            "nullable": true
          },
          "OnLine": {
            "type": "boolean"
          },
          "Queue": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Application.Diagnostics.Dto.ServicePolizia.QueuesDTO"
              },
              {}
            ]
          },
          "ProcessingTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Application.Diagnostics.Dto.ServicePolizia.ProcessingTimesDTO"
              },
              {}
            ]
          },
          "Error": {
            "type": "string",
            "nullable": true
          },
          "IsError": {
            "type": "boolean"
          }
        }
      },
      "WSAutoscan.Application.Diagnostics.Dto.ServicePolizia.QueuesDTO": {
        "title": "WSAutoscan.Application.Diagnostics.Dto.ServicePolizia.QueuesDTO",
        "type": "object",
        "properties": {
          "Transit": {
            "type": "integer",
            "format": "int32"
          },
          "CacheImage": {
            "type": "integer",
            "format": "int32"
          },
          "NrImage": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "WSAutoscan.Application.Dttsis.InspectionDetails.DrivingLicenseDetails": {
        "title": "WSAutoscan.Application.Dttsis.InspectionDetails.DrivingLicenseDetails",
        "type": "object",
        "properties": {
          "FirstName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "LastName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "FiscalCode": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "PlaceOfBirth": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "BirthDate": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "YearOfBirth": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Home": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "LicenseNumber": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Points": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "IssueDate": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "ExpiryDate": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "Categories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "",
            "nullable": true,
            "readOnly": true
          },
          "Pdf": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "LicensePdf": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "WSAutoscan.Application.Group.Dto.SAT_GroupDto": {
        "title": "WSAutoscan.Application.Group.Dto.SAT_GroupDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Description": {
            "type": "string",
            "nullable": true
          },
          "CustomerId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "WSAutoscan.Application.Group.Dto.SAT_GroupUserDto": {
        "title": "WSAutoscan.Application.Group.Dto.SAT_GroupUserDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Description": {
            "type": "string",
            "nullable": true
          },
          "CustomerId": {
            "type": "integer",
            "format": "int32"
          },
          "Users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.Group.Dto.SAT_GroupUserDtoUserMin"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.IONotification.Dto.NotificationDto": {
        "title": "WSAutoscan.Application.IONotification.Dto.NotificationDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "description": "Id della notifica",
            "format": "int64"
          },
          "Title": {
            "type": "string",
            "description": "Titolo della notifica",
            "nullable": true
          },
          "Text": {
            "type": "string",
            "description": "Testo della notifica",
            "nullable": true
          },
          "AttemptsMade": {
            "type": "integer",
            "description": "Tentativi eseguito per inviare la notifica",
            "format": "int32"
          },
          "InserDate": {
            "type": "string",
            "description": "Data di creazione della notifica",
            "format": "date-time"
          },
          "SendState": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Enums.As.AS_IO_SendStateEnum"
              },
              {}
            ]
          },
          "NotificationResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Application.IONotificationResponse.Dto.NotificationResponseDto"
              },
              {
                "description": "Contenuto della risposta da prte di IO e Municipium"
              }
            ]
          },
          "Attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.IONotificationAttachment.Dto.Attachment"
            },
            "description": "Lista degli allegati della notifica",
            "nullable": true
          },
          "FiscalCode": {
            "type": "string",
            "description": "Codice fiscale a cui e' stata inviata la notifica",
            "nullable": true
          },
          "CanBeSended": {
            "type": "boolean",
            "description": "Stato che indica se la notifica puo' essere inviata o meno"
          },
          "CanBeResended": {
            "type": "boolean",
            "description": "Stato che indica se la notifica puo' essere rimandata. Es. per problemi nell'invio precedente",
            "readOnly": true
          },
          "CanBeCancelled": {
            "type": "boolean",
            "description": "Stato che indica se puo' essere annullato l'invio della notifica",
            "readOnly": true
          }
        },
        "description": "Risultato di una ricerca filtrata delle notifiche IO"
      },
      "WSAutoscan.Application.IONotification.Dto.NotificationSearch": {
        "title": "WSAutoscan.Application.IONotification.Dto.NotificationSearch",
        "type": "object",
        "properties": {
          "DateFromCreation": {
            "type": "string",
            "description": "Property di accesso alla data di partenza per la crezione della notifica",
            "format": "date-time",
            "nullable": true
          },
          "DateToCreation": {
            "type": "string",
            "description": "Property di accesso per la data di arrivo per la crezione della notifica",
            "format": "date-time",
            "nullable": true
          },
          "DateFromSended": {
            "type": "string",
            "description": "Property di accesso per la data di partenza per l'invio della notifica",
            "format": "date-time",
            "nullable": true
          },
          "DateToSended": {
            "type": "string",
            "description": "Property di accesso per la data di arrivo per l'invio della notifica",
            "format": "date-time",
            "nullable": true
          },
          "FiscalCode": {
            "type": "string",
            "description": "Codice fiscale a cui e' stata inviata al notifica",
            "nullable": true
          },
          "Processing": {
            "type": "boolean",
            "description": "In fase di processazione"
          },
          "NotDelivered": {
            "type": "boolean",
            "description": "Non consegnato"
          },
          "Readed": {
            "type": "boolean",
            "description": "Consegnato e letto"
          },
          "Error": {
            "type": "boolean",
            "description": "Errore nella consegna"
          },
          "Delivered": {
            "type": "boolean",
            "description": "Consegnato"
          },
          "NotSended": {
            "type": "boolean",
            "description": "Non inviato"
          },
          "Sending": {
            "type": "boolean",
            "description": "Invio in corso"
          },
          "Cancelled": {
            "type": "boolean",
            "description": "Annullato"
          },
          "Sended": {
            "type": "boolean",
            "description": "Inviato"
          }
        },
        "description": "Parametri di ricerca delle notifiche"
      },
      "WSAutoscan.Application.IONotificationAttachment.Dto.Attachment": {
        "title": "WSAutoscan.Application.IONotificationAttachment.Dto.Attachment",
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "description": "nome del file da inserire come allegato",
            "nullable": true
          },
          "Content": {
            "type": "string",
            "description": "contenuto (in base64) del file",
            "nullable": true
          },
          "Extension": {
            "type": "string",
            "description": "estensione dell'allegato",
            "nullable": true
          },
          "Size": {
            "type": "integer",
            "description": "dimensione in byte del file",
            "format": "int32"
          },
          "MimeType": {
            "type": "string",
            "description": "mimeType del file",
            "nullable": true
          },
          "SizeMB": {
            "type": "number",
            "description": "dimensione in MB del file",
            "readOnly": true
          }
        },
        "description": "Allegati per le notifiche IO/Municipium"
      },
      "WSAutoscan.Application.IOZTLPermitState.Dto.ZtlIOPermitStateDto": {
        "title": "WSAutoscan.Application.IOZTLPermitState.Dto.ZtlIOPermitStateDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "State": {
            "type": "string",
            "nullable": true
          },
          "SendNotification": {
            "type": "boolean"
          }
        }
      },
      "WSAutoscan.Application.License.Dto.JsonLicense": {
        "title": "WSAutoscan.Application.License.Dto.JsonLicense",
        "type": "object",
        "properties": {
          "IsZtlEnabled": {
            "type": "boolean"
          },
          "IsSatEnabled": {
            "type": "boolean"
          },
          "IsRedEnabled": {
            "type": "boolean"
          },
          "IsVeloxEnabled": {
            "type": "boolean"
          },
          "SystemId": {
            "type": "string",
            "nullable": true
          },
          "CityName": {
            "type": "string",
            "nullable": true
          },
          "UnlimitedExpire": {
            "type": "boolean"
          },
          "DateExpire": {
            "type": "string",
            "nullable": true
          },
          "DateRelease": {
            "type": "string",
            "nullable": true
          },
          "Apikey": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.List.Dto.SAT_ListDataDto": {
        "title": "WSAutoscan.Application.List.Dto.SAT_ListDataDto",
        "type": "object",
        "properties": {
          "TypeId": {
            "type": "integer",
            "format": "int32"
          },
          "TypeDescription": {
            "type": "string",
            "nullable": true
          },
          "Data": {
            "type": "string",
            "nullable": true
          },
          "Note": {
            "type": "string",
            "nullable": true
          },
          "ExtraEmail": {
            "type": "string",
            "nullable": true
          },
          "ExtraMobileNumbers": {
            "type": "string",
            "nullable": true
          },
          "ExpiryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "Inserter": {
            "type": "string",
            "nullable": true
          },
          "Timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "WSAutoscan.Application.Modules.Dto.ModuleLicense": {
        "title": "WSAutoscan.Application.Modules.Dto.ModuleLicense",
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "nullable": true
          },
          "Code": {
            "type": "string",
            "nullable": true
          },
          "SystemId": {
            "type": "string",
            "nullable": true
          },
          "CityName": {
            "type": "string",
            "nullable": true
          },
          "UnlimitedExpire": {
            "type": "boolean"
          },
          "DateExpire": {
            "type": "string",
            "format": "date-time"
          },
          "DateRelease": {
            "type": "string",
            "format": "date-time"
          },
          "IsExpired": {
            "type": "boolean",
            "readOnly": true
          },
          "IsReleased": {
            "type": "boolean",
            "readOnly": true
          },
          "IsActive": {
            "type": "boolean",
            "readOnly": true
          }
        }
      },
      "WSAutoscan.Application.Municipality.Dto.MunicipalityMinDto": {
        "title": "WSAutoscan.Application.Municipality.Dto.MunicipalityMinDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "description": "Id del comune",
            "format": "int32"
          },
          "Description": {
            "type": "string",
            "description": "Nome del comune",
            "nullable": true
          },
          "CodiceBelFiore": {
            "type": "string",
            "description": "Codice bel fiore associato al comune",
            "nullable": true
          }
        },
        "description": "Contiene i dati di un possibile comune italiano"
      },
      "WSAutoscan.Application.PdP.Dto.Genere": {
        "title": "WSAutoscan.Application.PdP.Dto.Genere",
        "enum": [
          0,
          1
        ],
        "type": "integer"
      },
      "WSAutoscan.Application.PdP.Dto.PeriodoDto": {
        "title": "WSAutoscan.Application.PdP.Dto.PeriodoDto",
        "type": "object",
        "properties": {
          "DataInizio": {
            "type": "string",
            "description": "Data di inizio validità dell'autorizzazione.",
            "format": "date-time",
            "nullable": true
          },
          "DataFine": {
            "type": "string",
            "description": "Data di fine validità dell'autorizzazione.",
            "format": "date-time",
            "nullable": true
          },
          "MinutoInizio": {
            "type": "integer",
            "description": "Minuto del giorno di inizio della fascia oraria di validità dell'autorizzazione.",
            "format": "int32",
            "nullable": true
          },
          "MinutoFine": {
            "type": "integer",
            "description": "Minuto del giorno di fine della fascia oraria di validità dell'autorizzazione.",
            "format": "int32",
            "nullable": true
          },
          "OrarioComeFascia": {
            "type": "boolean",
            "description": "Indica se gli orari indicati sono una fascia oraria nel periodo oppure l'ora d'inizio e di fine validità."
          }
        },
        "description": "Date e/o orari di validità della richiesta di autorizzazione."
      },
      "WSAutoscan.Application.PdP.Dto.StandardIntegrazioneRequest": {
        "title": "WSAutoscan.Application.PdP.Dto.StandardIntegrazioneRequest",
        "type": "object",
        "properties": {
          "NumeroProtocolloRiferimento": {
            "type": "string",
            "description": "Numero di protocollo dell'istanza a cui questa istanza di integrazione fa riferimento.",
            "nullable": true
          },
          "DataProtocolloRiferimento": {
            "type": "string",
            "description": "Data di protocollo dell'istanza a cui questa istanza di integrazione fa riferimento.",
            "format": "date-time"
          },
          "CodIPA": {
            "type": "string",
            "description": "Codice IPA.",
            "nullable": true
          },
          "UrnDocumento": {
            "type": "string",
            "description": "URN del documento.",
            "nullable": true
          },
          "NumeroProtocollo": {
            "type": "integer",
            "description": "Numero di protocollazione.",
            "format": "int32"
          },
          "AnnoProtocollo": {
            "type": "integer",
            "description": "Anno di protocollazione.",
            "format": "int32"
          },
          "DataProtocollo": {
            "type": "string",
            "description": "Istante di protocollazione.",
            "format": "date-time"
          },
          "ClassificaProtocollo": {
            "type": "string",
            "description": "Classifica di protocollazione.",
            "nullable": true
          },
          "Allegati": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.PdP.Dto.AllegatoDto"
            },
            "description": "Allegati dell'istanza.",
            "nullable": true
          },
          "Richiedente": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Application.PdP.Dto.RichiedenteDto"
              },
              {
                "description": "Persona che ha presentato la richiesta di autorizzazione."
              }
            ]
          }
        }
      },
      "WSAutoscan.Application.PdP.Dto.TipoRichiesta": {
        "title": "WSAutoscan.Application.PdP.Dto.TipoRichiesta",
        "enum": [
          1,
          2,
          3,
          4,
          5
        ],
        "type": "integer"
      },
      "WSAutoscan.Application.Diagnostics.Dto.AS_CameraModelDto": {
        "title": "WSAutoscan.Application.Diagnostics.Dto.AS_CameraModelDto",
        "type": "object",
        "properties": {
          "Code": {
            "type": "integer",
            "format": "int32"
          },
          "Description": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.Diagnostics.Dto.ServicePolizia.CameraDTO": {
        "title": "WSAutoscan.Application.Diagnostics.Dto.ServicePolizia.CameraDTO",
        "type": "object",
        "properties": {
          "Ip": {
            "type": "string",
            "nullable": true
          },
          "Port": {
            "type": "string",
            "nullable": true
          },
          "OnLine": {
            "type": "boolean"
          },
          "NameCamera": {
            "type": "string",
            "nullable": true
          },
          "Latitude": {
            "type": "number"
          },
          "Longitude": {
            "type": "number"
          },
          "Model": {
            "type": "string",
            "nullable": true
          },
          "TypeCamera": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Enums.AS_SuiteEnum"
              },
              {}
            ]
          },
          "Description": {
            "type": "string",
            "nullable": true
          },
          "SerialNumber": {
            "type": "string",
            "nullable": true
          },
          "IdCamera": {
            "type": "integer",
            "format": "int32"
          },
          "LastTransit": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "_CameraBrand": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.CameraBrand"
              },
              {}
            ]
          },
          "Netbiosname": {
            "type": "string",
            "nullable": true
          },
          "CameraDiagnostics": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Application.Diagnostics.Dto.ServicePolizia.CameraDiagnosticsDTO"
              },
              {}
            ]
          },
          "CameraDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Application.Diagnostics.Dto.CameraDetailsDto"
              },
              {}
            ]
          },
          "Calibrations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.Diagnostics.Dto.ServicePolizia.RedVeloxCalibrationDto"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.Diagnostics.Dto.ServicePolizia.ProcessingTimesDTO": {
        "title": "WSAutoscan.Application.Diagnostics.Dto.ServicePolizia.ProcessingTimesDTO",
        "type": "object",
        "properties": {
          "T3": {
            "type": "integer",
            "format": "int32"
          },
          "T6": {
            "type": "integer",
            "format": "int32"
          },
          "T10": {
            "type": "integer",
            "format": "int32"
          },
          "T60": {
            "type": "integer",
            "format": "int32"
          },
          "TInf": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "WSAutoscan.Application.Diagnostics.Dto.ServicePolizia.RedVeloxCalibrationDto": {
        "title": "WSAutoscan.Application.Diagnostics.Dto.ServicePolizia.RedVeloxCalibrationDto",
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "nullable": true
          },
          "CalibrationDate": {
            "type": "string",
            "format": "date-time"
          },
          "ExpiryDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "WSAutoscan.Application.Diagnostics.Dto.StoricDto": {
        "title": "WSAutoscan.Application.Diagnostics.Dto.StoricDto",
        "type": "object",
        "properties": {
          "TS": {
            "type": "string",
            "format": "date-time"
          },
          "CamerasDto": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.Diagnostics.Dto.ServicePolizia.CameraDTO"
            },
            "description": "",
            "nullable": true
          },
          "NasDTOs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Collections.Generic.KeyValuePair2System.Int32System.Private.CoreLibVersion4.0.0.0CultureneutralPublicKeyToken7cec85d7bea7798eWSAutoscan.Application.Diagnostics.Dto.ServicePolizia.NasDTOWSAutoscan.ApplicationVersion1.0.0.0CultureneutralPublicKeyTokennull"
            },
            "description": "",
            "nullable": true
          },
          "PanelDTOs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Collections.Generic.KeyValuePair2System.Int32System.Private.CoreLibVersion4.0.0.0CultureneutralPublicKeyToken7cec85d7bea7798eWSAutoscan.Application.Diagnostics.Dto.ServicePolizia.PanelDTOWSAutoscan.ApplicationVersion1.0.0.0CultureneutralPublicKeyTokennull"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.FileUpload.Dto.FileUploadResult": {
        "title": "WSAutoscan.Application.FileUpload.Dto.FileUploadResult",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "FileName": {
            "type": "string",
            "nullable": true
          },
          "MimeType": {
            "type": "string",
            "nullable": true
          },
          "Guid": {
            "type": "string",
            "format": "uuid"
          },
          "UserIdUpload": {
            "type": "integer",
            "format": "int32"
          },
          "Uploaded": {
            "type": "boolean",
            "readOnly": true
          }
        }
      },
      "WSAutoscan.Application.Gate.Dto.ZtlGateDto": {
        "title": "WSAutoscan.Application.Gate.Dto.ZtlGateDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Description": {
            "type": "string",
            "nullable": true
          },
          "ZoneId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "WSAutoscan.Application.IONotificationResponse.Dto.NotificationResponseDto": {
        "title": "WSAutoscan.Application.IONotificationResponse.Dto.NotificationResponseDto",
        "type": "object",
        "properties": {
          "IOResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Enums.As.AS_IO_ChannelStateResultEnum"
              },
              {}
            ]
          },
          "MunicipiumResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Enums.As.AS_IO_ChannelStateResultEnum"
              },
              {}
            ]
          },
          "ResponseState": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Application.IONotificationResponse.Enums.ResponseState"
              },
              {
                "description": "Stato di risposta riassuntivo utile per gli utenti"
              }
            ]
          },
          "IOError": {
            "type": "string",
            "description": "Eventuale errore del canale IO",
            "nullable": true
          },
          "MunicipiumError": {
            "type": "string",
            "description": "Eventuale errore del canale Municipium",
            "nullable": true
          },
          "GeneralResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Enums.As.AS_IO_GeneralResponseEnum"
              },
              {}
            ]
          },
          "GeneralError": {
            "type": "string",
            "description": "Eventuale errore generale",
            "nullable": true
          },
          "SendedDate": {
            "type": "string",
            "description": "Data di invio della notifica",
            "format": "date-time"
          }
        },
        "description": "Contenuto della risposta da prte di IO e Municipium"
      },
      "WSAutoscan.Application.IONotificationResponse.Enums.ResponseState": {
        "title": "WSAutoscan.Application.IONotificationResponse.Enums.ResponseState",
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "description": "Stato di risposta riassuntivo utile per gli utenti"
      },
      "WSAutoscan.Application.IOZTLPermitState.Dto.ZtlIOPermitStateChangeDto": {
        "title": "WSAutoscan.Application.IOZTLPermitState.Dto.ZtlIOPermitStateChangeDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "SendNotification": {
            "type": "boolean"
          }
        }
      },
      "WSAutoscan.Application.List.Dto.SAT_ListDto": {
        "title": "WSAutoscan.Application.List.Dto.SAT_ListDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Description": {
            "type": "string",
            "nullable": true
          },
          "IdOwner": {
            "type": "string",
            "nullable": true
          },
          "ListModeId": {
            "type": "integer",
            "format": "int32"
          },
          "ListModeDescription": {
            "type": "string",
            "nullable": true
          },
          "Color": {
            "type": "string",
            "nullable": true
          },
          "Enabled": {
            "type": "boolean"
          },
          "Customers": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.Modules.Dto.ModulesList": {
        "title": "WSAutoscan.Application.Modules.Dto.ModulesList",
        "type": "object",
        "properties": {
          "ModuleLicenses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.Modules.Dto.ModuleLicense"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.Modules.Dto.RedeemModuleRequestDto": {
        "title": "WSAutoscan.Application.Modules.Dto.RedeemModuleRequestDto",
        "type": "object",
        "properties": {
          "CriptedData": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.Modules.Dto.RedeemModuleResponseDto": {
        "title": "WSAutoscan.Application.Modules.Dto.RedeemModuleResponseDto",
        "type": "object",
        "properties": {
          "Json": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Application.Modules.Dto.ModuleLicense"
              },
              {}
            ]
          },
          "Success": {
            "type": "boolean"
          },
          "Message": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.PdP.Dto.Attachment": {
        "title": "WSAutoscan.Application.PdP.Dto.Attachment",
        "type": "object",
        "properties": {
          "NomeFile": {
            "type": "string",
            "description": "Nome del file originale.",
            "nullable": true
          },
          "ContentType": {
            "type": "string",
            "description": "Content-type del file.",
            "nullable": true
          },
          "File": {
            "type": "string",
            "description": "Contenuto del file, codificato in Base64.",
            "nullable": true
          },
          "Descrizione": {
            "type": "string",
            "description": "Descrizione del file.",
            "nullable": true
          }
        },
        "description": "Allegato del documento protocollato."
      },
      "WSAutoscan.Application.PdP.Dto.DocumentoProtocollatoDto": {
        "title": "WSAutoscan.Application.PdP.Dto.DocumentoProtocollatoDto",
        "type": "object",
        "properties": {
          "Numero": {
            "type": "integer",
            "description": "Numero di protocollazione.",
            "format": "int32"
          },
          "Anno": {
            "type": "integer",
            "description": "Anno di protocollazione.",
            "format": "int32"
          },
          "DataProtocollo": {
            "type": "string",
            "description": "Istante di protocollazione.",
            "format": "date-time"
          },
          "IdDocumento": {
            "type": "integer",
            "description": "ID interno al PdP del documento protocollato.",
            "format": "int32",
            "nullable": true
          },
          "CodIPA": {
            "type": "string",
            "description": "Codice IPA dell'Ente.",
            "nullable": true
          },
          "Classifica": {
            "type": "string",
            "description": "Classifica di protocollazione.",
            "nullable": true
          },
          "FaldoneTelematico": {
            "type": "string",
            "description": "Faldone telematico del documento protocollato, codificato in Base64.",
            "nullable": true
          },
          "Allegati": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.PdP.Dto.Attachment"
            },
            "description": "Allegati del documento protocollato.",
            "nullable": true
          }
        },
        "description": "Documento protocollato."
      },
      "WSAutoscan.Application.PdP.Dto.IntegrazioneIstanzaRequest": {
        "title": "WSAutoscan.Application.PdP.Dto.IntegrazioneIstanzaRequest",
        "type": "object",
        "properties": {
          "NumeroProtocolloRiferimento": {
            "type": "string",
            "description": "Numero di protocollo dell'istanza a cui questa istanza di integrazione fa riferimento.",
            "nullable": true
          },
          "DataProtocolloRiferimento": {
            "type": "string",
            "description": "Data di protocollo dell'istanza a cui questa istanza di integrazione fa riferimento.",
            "format": "date-time"
          },
          "DocumentoProtocollato": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Application.PdP.Dto.DocumentoProtocollatoDto"
              },
              {
                "description": "Documento protocollato."
              }
            ]
          },
          "Richiedente": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Application.PdP.Dto.RichiedenteDto"
              },
              {
                "description": "Persona che ha presentato la richiesta di autorizzazione."
              }
            ]
          }
        },
        "description": "DTO che rappresenta un'integrazione ad un'istanza ZTL proveniente dal protocollo dell'Ente."
      },
      "WSAutoscan.Application.PdP.Dto.StandardNuovaIstanzaRequest": {
        "title": "WSAutoscan.Application.PdP.Dto.StandardNuovaIstanzaRequest",
        "type": "object",
        "properties": {
          "CodIPA": {
            "type": "string",
            "description": "Codice IPA.",
            "nullable": true
          },
          "UrnDocumento": {
            "type": "string",
            "description": "URN del documento.",
            "nullable": true
          },
          "TipoRichiesta": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Application.PdP.Dto.TipoRichiesta"
              },
              {}
            ]
          },
          "NumeroProtocollo": {
            "type": "integer",
            "description": "Numero di protocollazione.",
            "format": "int32"
          },
          "AnnoProtocollo": {
            "type": "integer",
            "description": "Anno di protocollazione.",
            "format": "int32"
          },
          "DataProtocollo": {
            "type": "string",
            "description": "Istante di protocollazione.",
            "format": "date-time"
          },
          "ClassificaProtocollo": {
            "type": "string",
            "description": "Classifica di protocollazione.",
            "nullable": true
          },
          "NumeroAutorizzazione": {
            "type": "string",
            "description": "Numero dell'autorizzazione a cui l'istanza fa riferimento.",
            "nullable": true
          },
          "DataAutorizzazione": {
            "type": "string",
            "description": "Data di rilascio dell'autorizzazione a cui l'istanza fa riferimento.",
            "format": "date-time",
            "nullable": true
          },
          "Richiedente": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Application.PdP.Dto.RichiedenteDto"
              },
              {
                "description": "Persona che ha presentato la richiesta di autorizzazione."
              }
            ]
          },
          "TitoloRichiedente": {
            "type": "string",
            "description": "Titolo/Ruolo del Richiedente.",
            "nullable": true
          },
          "Veicoli": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.PdP.Dto.VeicoloDto"
            },
            "description": "Veicolo/i interessato alla richiesta di autorizzazione.",
            "nullable": true
          },
          "Periodi": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.PdP.Dto.PeriodoDto"
            },
            "description": "Periodi di validità della richiesta di autorizzazione.",
            "nullable": true
          },
          "Varchi": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Varchi di validità della richiesta di autorizzazione.",
            "nullable": true
          },
          "Allegati": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.PdP.Dto.AllegatoDto"
            },
            "description": "Allegati dell'istanza.",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.Diagnostics.Dto.ServicePolizia.CameraDiagnosticsDTO": {
        "title": "WSAutoscan.Application.Diagnostics.Dto.ServicePolizia.CameraDiagnosticsDTO",
        "type": "object",
        "properties": {
          "DiagnosticsLevel": {
            "type": "integer",
            "format": "int32"
          },
          "NRead": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "NNotRead": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "InputOk": {
            "type": "boolean"
          }
        }
      },
      "WSAutoscan.Application.Gate.Dto.AS_GateDto": {
        "title": "WSAutoscan.Application.Gate.Dto.AS_GateDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "CustomerId": {
            "type": "integer",
            "format": "int32"
          },
          "CustomerDescription": {
            "type": "string",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "nullable": true
          },
          "ScnttId": {
            "type": "string",
            "nullable": true
          },
          "DttsisConnected": {
            "type": "boolean"
          },
          "A2Connected": {
            "type": "boolean"
          }
        }
      },
      "WSAutoscan.Application.IOZTLPermitStateText.Dto.GroupedPermitStateText": {
        "title": "WSAutoscan.Application.IOZTLPermitStateText.Dto.GroupedPermitStateText",
        "type": "object",
        "properties": {
          "PermitStateId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Enums.As.AS_IO_ZTL_PermitState_Enum"
              },
              {}
            ]
          },
          "PermitStateTexts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.IOZTLPermitState.Dto.IOZTLPermitStateTextDto"
            },
            "description": "Template del messaggio delle notifiche IO",
            "nullable": true
          }
        },
        "description": "Classe che racchiude i template dei messaggi IO con lo stato dell'autorizzazione per cui il template viene applicato"
      },
      "WSAutoscan.Application.IOZTLPermitStateText.Dto.PermitTextKeyWords": {
        "title": "WSAutoscan.Application.IOZTLPermitStateText.Dto.PermitTextKeyWords",
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "description": "Nome del tag",
            "nullable": true
          },
          "Tag": {
            "type": "string",
            "description": "Valore del tag",
            "nullable": true
          },
          "IsForTitle": {
            "type": "boolean",
            "description": "Indica se il tag si applica solo al titolo o al titolo e al body del template"
          }
        },
        "description": "Tag da inserire nei template dei messaggi IO"
      },
      "WSAutoscan.Application.License.Dto.RedeemLicenseResponseDto": {
        "title": "WSAutoscan.Application.License.Dto.RedeemLicenseResponseDto",
        "type": "object",
        "properties": {
          "Json": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Application.License.Dto.JsonLicense"
              },
              {}
            ]
          },
          "Success": {
            "type": "boolean"
          },
          "Message": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.List.Dto.SAT_ListDetailDto": {
        "title": "WSAutoscan.Application.List.Dto.SAT_ListDetailDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Description": {
            "type": "string",
            "nullable": true
          },
          "IdOwner": {
            "type": "string",
            "nullable": true
          },
          "ListModeId": {
            "type": "integer",
            "format": "int32"
          },
          "ListModeDescription": {
            "type": "string",
            "nullable": true
          },
          "Color": {
            "type": "string",
            "nullable": true
          },
          "Enabled": {
            "type": "boolean"
          },
          "Customers": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "",
            "nullable": true
          },
          "ListDatas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.List.Dto.SAT_ListDataDto"
            },
            "description": "",
            "nullable": true
          },
          "Groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.Group.Dto.SAT_GroupDto"
            },
            "description": "",
            "nullable": true
          },
          "CustomersId": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.Nation.Dto.NationDto": {
        "title": "WSAutoscan.Application.Nation.Dto.NationDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Alpha2": {
            "type": "string",
            "nullable": true
          },
          "Alpha3": {
            "type": "string",
            "nullable": true
          },
          "CodeCat": {
            "type": "string",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.PdP.Dto.AllegatoDto": {
        "title": "WSAutoscan.Application.PdP.Dto.AllegatoDto",
        "type": "object",
        "properties": {
          "NomeFile": {
            "type": "string",
            "description": "Nome del file allegato.",
            "nullable": true
          },
          "ContentType": {
            "type": "string",
            "description": "Content-type del file allegato.",
            "nullable": true
          },
          "Descrizione": {
            "type": "string",
            "description": "Descrizione del file allegato.",
            "nullable": true
          },
          "Commento": {
            "type": "string",
            "description": "Commento al file allegato.",
            "nullable": true
          },
          "File": {
            "type": "string",
            "description": "Codifica in Base64 del file allegato.",
            "nullable": true
          }
        },
        "description": "File allegato a un Documento protocollato."
      },
      "WSAutoscan.Application.PdP.Dto.NuovaIstanzaZtlRequest": {
        "title": "WSAutoscan.Application.PdP.Dto.NuovaIstanzaZtlRequest",
        "type": "object",
        "properties": {
          "UrnDocumento": {
            "type": "string",
            "description": "URN del documento.",
            "nullable": true
          },
          "DocumentoProtocollato": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Application.PdP.Dto.DocumentoProtocollatoDto"
              },
              {
                "description": "Documento protocollato."
              }
            ]
          },
          "TipoRichiesta": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Application.PdP.Dto.TipoRichiesta"
              },
              {}
            ]
          },
          "NumeroAutorizzazione": {
            "type": "string",
            "description": "Numero dell'autorizzazione a cui l'istanza fa riferimento.",
            "nullable": true
          },
          "DataAutorizzazione": {
            "type": "string",
            "description": "Data di rilascio dell'autorizzazione a cui l'istanza fa riferimento.",
            "format": "date-time",
            "nullable": true
          },
          "Richiedente": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Application.PdP.Dto.RichiedenteDto"
              },
              {
                "description": "Persona che ha presentato la richiesta di autorizzazione."
              }
            ]
          },
          "TitoloRichiedente": {
            "type": "string",
            "description": "Titolo/Ruolo del Richiedente.",
            "nullable": true
          },
          "Veicoli": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.PdP.Dto.VeicoloDto"
            },
            "description": "Veicolo/i interessato alla richiesta di autorizzazione.",
            "nullable": true
          },
          "Periodi": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.PdP.Dto.PeriodoDto"
            },
            "description": "Periodi di validità della richiesta di autorizzazione.",
            "nullable": true
          },
          "Varchi": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Varchi di validità della richiesta di autorizzazione.",
            "nullable": true
          }
        },
        "description": "DTO che rappresenta un'istanza ZTL proveniente dal protocollo dell'Ente."
      },
      "WSAutoscan.Application.PdP.Dto.RichiedenteDto": {
        "title": "WSAutoscan.Application.PdP.Dto.RichiedenteDto",
        "type": "object",
        "properties": {
          "Cognome": {
            "type": "string",
            "nullable": true
          },
          "Nome": {
            "type": "string",
            "nullable": true
          },
          "CodiceFiscale": {
            "type": "string",
            "nullable": true
          },
          "DataNascita": {
            "type": "string",
            "format": "date-time"
          },
          "Sesso": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Application.PdP.Dto.Genere"
              },
              {}
            ]
          },
          "LuogoNascita": {
            "type": "string",
            "nullable": true
          },
          "Cittadinanza": {
            "type": "string",
            "nullable": true
          },
          "ProvinciaResidenza": {
            "type": "string",
            "nullable": true
          },
          "ComuneResidenza": {
            "type": "string",
            "nullable": true
          },
          "ViaResidenza": {
            "type": "string",
            "nullable": true
          },
          "CivicoResidenza": {
            "type": "string",
            "nullable": true
          },
          "CAPResidenza": {
            "type": "string",
            "nullable": true
          },
          "Telefono": {
            "type": "string",
            "nullable": true
          },
          "TelefonoCellulare": {
            "type": "string",
            "nullable": true
          },
          "EMail": {
            "type": "string",
            "nullable": true
          },
          "Ruolo": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "Persona che ha presentato la richiesta di autorizzazione."
      },
      "WSAutoscan.Application.Prometheus.Dto.AuthorizationGroupDto": {
        "title": "WSAutoscan.Application.Prometheus.Dto.AuthorizationGroupDto",
        "type": "object",
        "properties": {
          "Periods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.Prometheus.Dto.AuthorizationPeriodDto"
            },
            "description": "",
            "nullable": true
          },
          "Schedules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.Prometheus.Dto.AuthorizationScheduleDto"
            },
            "description": "",
            "nullable": true
          },
          "Gates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.Prometheus.Dto.AuthorizationGateDto"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.PdP.Dto.VeicoloDto": {
        "title": "WSAutoscan.Application.PdP.Dto.VeicoloDto",
        "type": "object",
        "properties": {
          "TipoVeicolo": {
            "type": "string",
            "description": "Tipologia del veicolo.",
            "nullable": true
          },
          "Modello": {
            "type": "string",
            "description": "Modello del veicolo.",
            "nullable": true
          },
          "Marca": {
            "type": "string",
            "description": "Marca del veicolo.",
            "nullable": true
          },
          "Targa": {
            "type": "string",
            "description": "Targa del veicolo.",
            "nullable": true
          },
          "Annotazioni": {
            "type": "string",
            "description": "Annotazioni relative al veicolo.",
            "nullable": true
          },
          "DaRimuovere": {
            "type": "boolean",
            "description": "Indica se il veicolo è da rimuovere dall'Autorizzazione."
          }
        },
        "description": "Veicolo interessato alla richiesta di autorizzazione."
      },
      "WSAutoscan.Application.PermitTypeUser.Dto.UsersAuthTypePermissions": {
        "title": "WSAutoscan.Application.PermitTypeUser.Dto.UsersAuthTypePermissions",
        "type": "object",
        "properties": {
          "Username": {
            "type": "string",
            "nullable": true
          },
          "UserId": {
            "type": "integer",
            "format": "int32"
          },
          "CanRead": {
            "type": "boolean"
          },
          "CanAdd": {
            "type": "boolean"
          },
          "CanDeleteOrUpdate": {
            "type": "boolean"
          },
          "PermitTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "AtLeastOneSelected": {
            "type": "boolean",
            "readOnly": true
          }
        }
      },
      "WSAutoscan.Application.Prometheus.Dto.AuthorizationStateDto": {
        "title": "WSAutoscan.Application.Prometheus.Dto.AuthorizationStateDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Description": {
            "type": "string",
            "nullable": true
          },
          "Reason": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "Stato di approvazione dell'Autorizzazione."
      },
      "WSAutoscan.Application.Prometheus.Dto.CountRequestPlaceDto": {
        "title": "WSAutoscan.Application.Prometheus.Dto.CountRequestPlaceDto",
        "type": "object",
        "properties": {
          "PlaceId": {
            "type": "integer",
            "format": "int32"
          },
          "MaxRequestCount": {
            "type": "integer",
            "format": "int32"
          },
          "CurrentRequestCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "WSAutoscan.Application.Prometheus.Dto.ExternalAuthorizationTypeDto": {
        "title": "WSAutoscan.Application.Prometheus.Dto.ExternalAuthorizationTypeDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Name": {
            "type": "string",
            "nullable": true
          },
          "PrintTemplateIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "",
            "nullable": true
          },
          "DailyMaxTransits": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.Prometheus.Dto.PrometheusCustomerDto": {
        "title": "WSAutoscan.Application.Prometheus.Dto.PrometheusCustomerDto",
        "type": "object",
        "properties": {
          "AutoscanId": {
            "type": "integer",
            "format": "int32"
          },
          "Description": {
            "type": "string",
            "nullable": true
          },
          "ApiKey": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.Prometheus.Dto.SendAuthorizationRequestDto": {
        "title": "WSAutoscan.Application.Prometheus.Dto.SendAuthorizationRequestDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "PlaceName": {
            "type": "string",
            "nullable": true
          },
          "PlaceId": {
            "type": "integer",
            "format": "int32"
          },
          "MaxActiveRequests": {
            "type": "integer",
            "format": "int32"
          },
          "UserVehicle": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Application.Prometheus.Dto.UserVehicle"
              },
              {}
            ]
          },
          "AuthorizationTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "CreatedFreePassUserId": {
            "type": "integer",
            "format": "int32"
          },
          "DailyMaxTransits": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "AuthorizationsGroup": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.AuthorizationsGroupDto"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.Prometheus.Dto.SetApikeyAsyncResponseDto": {
        "title": "WSAutoscan.Application.Prometheus.Dto.SetApikeyAsyncResponseDto",
        "type": "object",
        "properties": {
          "ApiKey": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.PushNotification.Dto.AS_PushNotificationTokenDto": {
        "title": "WSAutoscan.Application.PushNotification.Dto.AS_PushNotificationTokenDto",
        "type": "object",
        "properties": {
          "Token": {
            "type": "string",
            "nullable": true
          },
          "FirebaseSendVersion": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Enums.FirebaseSendVersion"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Application.RedRule.Dto.RedTimeSlotDto": {
        "title": "WSAutoscan.Application.RedRule.Dto.RedTimeSlotDto",
        "type": "object",
        "properties": {
          "DaysId": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean"
            },
            "description": "Id dei giorni di validita' della regola",
            "nullable": true
          },
          "TimeSpan": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Application.RedRule.Dto.RedTimeSpanDto"
              },
              {
                "description": "Orari di validita' della regola"
              }
            ]
          }
        },
        "description": "Giorni e ore di validita' della regola"
      },
      "WSAutoscan.Application.RedRuleTypesService.Dto.RedRuleTypeDto": {
        "title": "WSAutoscan.Application.RedRuleTypesService.Dto.RedRuleTypeDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "description": "Id della regola",
            "format": "int32"
          },
          "RuleType": {
            "type": "string",
            "description": "Tipo di regola",
            "nullable": true
          }
        },
        "description": "Regola riguardante il rosso"
      },
      "WSAutoscan.Application.RedVelox.Dto.RedVelox_MassiveTransitDto": {
        "title": "WSAutoscan.Application.RedVelox.Dto.RedVelox_MassiveTransitDto",
        "type": "object",
        "properties": {
          "TransitId": {
            "type": "integer",
            "format": "int64"
          },
          "CommaId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.RedVelox.Dto.RedVelox_MassiveTransitStatusDto": {
        "title": "WSAutoscan.Application.RedVelox.Dto.RedVelox_MassiveTransitStatusDto",
        "type": "object",
        "properties": {
          "TransitsList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.RedVelox.Dto.RedVelox_MassiveTransitDto"
            },
            "description": "",
            "nullable": true
          },
          "TransitsStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Application.RedVelox.Dto.RedVelox_TransitStatusDto"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Application.RedVelox.Dto.RedVelox_ViolationsStatusNum": {
        "title": "WSAutoscan.Application.RedVelox.Dto.RedVelox_ViolationsStatusNum",
        "type": "object",
        "properties": {
          "StatusId": {
            "type": "integer",
            "description": "Stato dei transiti",
            "format": "int32"
          },
          "Count": {
            "type": "integer",
            "description": "NUmero dei transiti",
            "format": "int64"
          }
        },
        "description": "Stato e numero dei transiti"
      },
      "WSAutoscan.Application.RedVelox.Dto.RedVeloxSearchRequestDto": {
        "title": "WSAutoscan.Application.RedVelox.Dto.RedVeloxSearchRequestDto",
        "type": "object",
        "properties": {
          "DateFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "DateTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "TimeFrom": {
            "type": "string",
            "nullable": true
          },
          "TimeTo": {
            "type": "string",
            "nullable": true
          },
          "Plate": {
            "type": "string",
            "nullable": true
          },
          "Nations": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "",
            "nullable": true
          },
          "CameraIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "",
            "nullable": true
          },
          "GateIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "",
            "nullable": true
          },
          "VehicleTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "",
            "nullable": true
          },
          "ViolationsTypes": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "",
            "nullable": true
          },
          "TypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Limit": {
            "type": "integer",
            "format": "int32"
          },
          "Da_Validare": {
            "type": "boolean"
          },
          "OCR_Fallita": {
            "type": "boolean",
            "nullable": true
          },
          "Correzione_Manuale": {
            "type": "boolean",
            "nullable": true
          },
          "Proposta_di_Annullamento": {
            "type": "boolean"
          },
          "Annullata": {
            "type": "boolean"
          },
          "Confermata_Violazione": {
            "type": "boolean"
          },
          "DisputedOnRoad": {
            "type": "boolean"
          },
          "Scartato_incongruenza_bollini": {
            "type": "boolean"
          },
          "Esportata": {
            "type": "boolean"
          },
          "Manutenzione": {
            "type": "boolean"
          },
          "ConfirmedData": {
            "type": "boolean"
          },
          "MinSpeed": {
            "type": "integer",
            "format": "int32"
          },
          "OrderType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Enums.OrderTypeEnum"
              },
              {}
            ]
          },
          "CommaId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.RedVelox.Dto.RedVeloxSettingsDto": {
        "title": "WSAutoscan.Application.RedVelox.Dto.RedVeloxSettingsDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "description": "ID delle impostazioni.",
            "format": "int32"
          },
          "ExportProtectionPassword": {
            "type": "string",
            "description": "Password da utilizzare per lo ZIP in esportazione.",
            "nullable": true
          },
          "ValidationProtectionPassword": {
            "type": "string",
            "description": "Password da utilizzare per lo ZIP in download.",
            "nullable": true
          },
          "KeepAuthorizedTransitDays": {
            "type": "integer",
            "description": "Numero di giorni dopo i quali i transiti Autorizzati saranno cancellati.",
            "format": "int32"
          },
          "KeepExportedTransitdDays": {
            "type": "integer",
            "description": "Numero di giorni dopo i quali i transiti Esportati saranno cancellati.",
            "format": "int32"
          },
          "ExportFormat": {
            "type": "string",
            "description": "Formato dell'esportazione.",
            "nullable": true
          },
          "BlurEnabled": {
            "type": "boolean",
            "description": "Flag che indica se includere le foto offuscate nell'esportazione dei transiti."
          },
          "ExportContextImg": {
            "type": "boolean",
            "description": "Flag che indica se saranno esportate le foto di Contesto delle violazioni."
          },
          "ExportViolationDocument": {
            "type": "boolean",
            "description": "Flag che indica se sarà esportato il Documento Fotografico della violazione."
          },
          "ExportVideo": {
            "type": "boolean",
            "description": "Flag che indica se sarà esportato anche il filmato della violazione."
          },
          "BlurLevel": {
            "type": "integer",
            "description": "Livello dell'offuscamento da applicare alle immagini dei transiti. Valori accettati: [5÷10]",
            "format": "int32"
          },
          "IsExportProtectFromPassword": {
            "type": "boolean",
            "description": "Flag che indica se la password da utilizzare per lo ZIP in esportazione è definita.",
            "readOnly": true
          },
          "CalibrationDeadlineDays": {
            "type": "integer",
            "description": "Numero di giorni prima della scadenza di una Taratura per la quale questa sarà segnalata come 'In Scadenza'.",
            "format": "int32"
          },
          "ViolationsDeadlineDays": {
            "type": "integer",
            "description": "Numero di giorni dopo i quali un transito sarà segnalato come 'In Scadenza'.",
            "format": "int32"
          },
          "ViolationsForeignDeadlineDays": {
            "type": "integer",
            "description": "Numero di giorni dopo i quali un transito con targa estera sarà segnalato come 'In Scadenza'.",
            "format": "int32"
          },
          "WidgetSliderMinuteStep": {
            "type": "integer",
            "description": "Minuti di step per i cursori delle fasce orarie.",
            "format": "int32"
          },
          "AutomaticScrollViolationConfirm": {
            "type": "boolean",
            "description": "Indica se dopo aver approvato una violazione scorra automaticamente alla prossima o no"
          },
          "AutomaticScrollViolationCancel": {
            "type": "boolean",
            "description": "Indica se dopo aver annullato una violazione scorra automaticamente alla prossima o no"
          },
          "AutomaticScrollDataConfirm": {
            "type": "boolean",
            "description": "Passaggio automatico alla violazione successiva una volta confermati i dati di quella attuale."
          },
          "AutomaticScrollDataCancel": {
            "type": "boolean",
            "description": "Passaggio automatico alla violazione successiva una volta eseguita la proposta di annullamento di quella attuale."
          },
          "RetrieveNullNationTransit": {
            "type": "boolean",
            "description": "Indica se nella ricerca delle violazioni red/velox bisogna includere i transiti senza nazione oppure no"
          },
          "StartRetrieveNullNationTransit": {
            "type": "string",
            "description": "Data dalla quale prendere in considerazione le violazioni red/velox senza nazione",
            "format": "date-time",
            "nullable": true
          },
          "DirectoryExportSave": {
            "type": "string",
            "description": "Percorso nel quale viene salvato il zip dell'esportazione",
            "nullable": true
          },
          "AuthorizeComma2Violations": {
            "type": "boolean",
            "description": "Autorizza automaticamente le violazioni del art.146 comma 2."
          },
          "ReadSticker": {
            "type": "boolean",
            "description": "Decide se gestire o meno la rilevazioni dei bollini"
          },
          "StickerMode": {
            "type": "integer",
            "description": "Decide tra le 2 modalità di rilevazione dei bollini, la prima Da validare con avvisso e l'altra per \r\ngestire uno stato di \"Infrazione con bollini\" per permettere all'utente di fare delle valutazioni successive.",
            "format": "int32"
          },
          "CropChoice": {
            "type": "boolean",
            "description": "Abilita la scelta del crop della targa da usare nel documento fotografico."
          },
          "ClearEnabled": {
            "type": "boolean",
            "description": "Flag che indica se saranno esportate le immagini in chiaro"
          },
          "ExcludeVisura": {
            "type": "boolean"
          },
          "VehicleId": {
            "type": "integer",
            "format": "int32"
          },
          "ExportClaheBrightImages": {
            "type": "boolean"
          },
          "BlurAllImages": {
            "type": "boolean",
            "description": "Flag che indica se offuscare automaticamente tutte le immagini (anche quelle senza coordinate della targa) o meno."
          }
        },
        "description": "Impostazioni del modulo RedVelox."
      },
      "WSAutoscan.Application.RedVeloxCalibration.Dto.CalibrationByDeviceResponse": {
        "title": "WSAutoscan.Application.RedVeloxCalibration.Dto.CalibrationByDeviceResponse",
        "type": "object",
        "properties": {
          "CameraId": {
            "type": "integer",
            "format": "int32"
          },
          "CameraName": {
            "type": "string",
            "nullable": true
          },
          "Netbiosname": {
            "type": "string",
            "nullable": true
          },
          "Calibrations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.RedVeloxCalibration.Dto.CalibrationResponse"
            },
            "description": "",
            "nullable": true
          },
          "LastCalibrationExpiryDate": {
            "type": "string",
            "format": "date-time"
          },
          "LastCalibrationExpired": {
            "type": "boolean"
          },
          "CanModify": {
            "type": "boolean"
          }
        }
      },
      "WSAutoscan.Application.RedVeloxCalibration.Dto.CalibrationResponse": {
        "title": "WSAutoscan.Application.RedVeloxCalibration.Dto.CalibrationResponse",
        "type": "object",
        "properties": {
          "CalibrationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "CameraId": {
            "type": "integer",
            "format": "int32"
          },
          "DeviceName": {
            "type": "string",
            "nullable": true
          },
          "Netbiosname": {
            "type": "string",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "nullable": true
          },
          "CalibrationDate": {
            "type": "string",
            "format": "date-time"
          },
          "ExpiryDate": {
            "type": "string",
            "format": "date-time"
          },
          "SuiteId": {
            "type": "integer",
            "format": "int32"
          },
          "ExpiringDays": {
            "type": "number",
            "readOnly": true
          }
        }
      },
      "WSAutoscan.Application.RedVeloxTransitPhoto.Dto.MediaFilterDto": {
        "title": "WSAutoscan.Application.RedVeloxTransitPhoto.Dto.MediaFilterDto",
        "type": "object",
        "properties": {
          "ImageName": {
            "type": "string",
            "description": "Nome del file della foto.",
            "nullable": true
          },
          "Brightness": {
            "type": "integer",
            "description": "Variazione della luminosità.",
            "format": "int32"
          },
          "Contrast": {
            "type": "integer",
            "description": "Variazione del contrasto.",
            "format": "int32"
          }
        },
        "description": "Filtro di correzione per una foto di un transito Red/Velox."
      },
      "WSAutoscan.Application.Prometheus.Dto.AuthorizationScheduleDto": {
        "title": "WSAutoscan.Application.Prometheus.Dto.AuthorizationScheduleDto",
        "type": "object",
        "properties": {
          "From": {
            "type": "string",
            "format": "date-time"
          },
          "To": {
            "type": "string",
            "format": "date-time"
          },
          "DayId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "WSAutoscan.Application.Prometheus.Dto.AuthorizationTypeDto": {
        "title": "WSAutoscan.Application.Prometheus.Dto.AuthorizationTypeDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Name": {
            "type": "string",
            "nullable": true
          },
          "PrintTemplateIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "",
            "nullable": true
          }
        },
        "description": "Tipologia dell'Autorizzazione."
      },
      "WSAutoscan.Application.Prometheus.Dto.ExternalAuthorizationDto": {
        "title": "WSAutoscan.Application.Prometheus.Dto.ExternalAuthorizationDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "nullable": true
          },
          "Name_LastName": {
            "type": "string",
            "nullable": true
          },
          "DriverName_LastName": {
            "type": "string",
            "nullable": true
          },
          "Status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Application.Prometheus.Dto.AuthorizationStateDto"
              },
              {
                "description": "Stato di approvazione dell'Autorizzazione."
              }
            ]
          },
          "RequestDate": {
            "type": "string",
            "format": "date-time"
          },
          "PlaceName": {
            "type": "string",
            "nullable": true
          },
          "PlaceId": {
            "type": "integer",
            "format": "int32"
          },
          "Plate": {
            "type": "string",
            "nullable": true
          },
          "CustomerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "FreePassCreatedUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "AuthorizationType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Application.Prometheus.Dto.AuthorizationTypeDto"
              },
              {
                "description": "Tipologia dell'Autorizzazione."
              }
            ]
          },
          "Groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.Prometheus.Dto.AuthorizationGroupDto"
            },
            "description": "",
            "nullable": true
          }
        },
        "description": "Autorizzazione richiesta da una struttura esterna."
      },
      "WSAutoscan.Application.Prometheus.Dto.GetExternalAuthorizationsRequestDto": {
        "title": "WSAutoscan.Application.Prometheus.Dto.GetExternalAuthorizationsRequestDto",
        "type": "object",
        "properties": {
          "CustomerId": {
            "type": "integer",
            "format": "int32"
          },
          "PlaceIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "",
            "nullable": true
          },
          "SortActive": {
            "type": "string",
            "nullable": true
          },
          "SortDirection": {
            "type": "string",
            "nullable": true
          },
          "NumAuthorizations": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "SkipAuthorizations": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Filters": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Application.Prometheus.Dto.Filters"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Application.RedRule.Dto.RedTimeSpanDto": {
        "title": "WSAutoscan.Application.RedRule.Dto.RedTimeSpanDto",
        "type": "object",
        "properties": {
          "From": {
            "type": "integer",
            "description": "Orario inizio validita' della regola",
            "format": "int64"
          },
          "To": {
            "type": "integer",
            "description": "Orario fine velidita' della regola",
            "format": "int64"
          }
        },
        "description": "Orari di validita' della regola"
      },
      "WSAutoscan.Application.RedVelox.Dto.RedVelox_DayTransitsAndViolationsDto": {
        "title": "WSAutoscan.Application.RedVelox.Dto.RedVelox_DayTransitsAndViolationsDto",
        "type": "object",
        "properties": {
          "RedVeloxTransits": {
            "type": "integer",
            "description": "Totale dei transiti Red e Speed.",
            "format": "int64"
          },
          "RedViolations": {
            "type": "integer",
            "description": "Totale delle Violazioni Red.",
            "format": "int64"
          },
          "VeloxViolations": {
            "type": "integer",
            "description": "Totale delle Violazioni Velox.",
            "format": "int64"
          },
          "RedVeloxWarningTransits": {
            "type": "integer",
            "description": "Totale dei Transiti RedVelox presenti nella cartella 'Warning'.",
            "format": "int64"
          },
          "RedVeloxWarningPhotos": {
            "type": "integer",
            "description": "Totale delle foto RedVelox presenti nella cartella 'Warning'.",
            "format": "int64"
          }
        },
        "description": "Riepilogo delle violazioni RedSpeed."
      },
      "WSAutoscan.Application.RedVelox.Dto.ViolationDeadLineNumDto": {
        "title": "WSAutoscan.Application.RedVelox.Dto.ViolationDeadLineNumDto",
        "type": "object",
        "properties": {
          "Count": {
            "type": "integer",
            "format": "int32"
          },
          "CountForeign": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "WSAutoscan.Application.RedVeloxCalibration.Dto.CalibrationAttachmentDto": {
        "title": "WSAutoscan.Application.RedVeloxCalibration.Dto.CalibrationAttachmentDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Description": {
            "type": "string",
            "nullable": true
          },
          "MimeType": {
            "type": "string",
            "nullable": true
          },
          "FileName": {
            "type": "string",
            "nullable": true
          },
          "Guid": {
            "type": "string",
            "format": "uuid"
          },
          "UserId": {
            "type": "integer",
            "format": "int32"
          },
          "TimeStamp": {
            "type": "string",
            "format": "date-time"
          },
          "Status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Application.RedVeloxCalibration.Dto.Status"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Application.RedVeloxTransitPhoto.Dto.PlateCoordinatesDto": {
        "title": "WSAutoscan.Application.RedVeloxTransitPhoto.Dto.PlateCoordinatesDto",
        "type": "object",
        "properties": {
          "MinX": {
            "type": "integer",
            "description": "Coordinata orizzontale del punto top-left dell'area.",
            "format": "int32"
          },
          "MinY": {
            "type": "integer",
            "description": "Coordinata verticale del punto top-left dell'area.",
            "format": "int32"
          },
          "MaxX": {
            "type": "integer",
            "description": "Coordinata orizzontale del punto bottom-right dell'area.",
            "format": "int32"
          },
          "MaxY": {
            "type": "integer",
            "description": "Coordinata verticale del punto bottom-right dell'area.",
            "format": "int32"
          },
          "AreValid": {
            "type": "boolean",
            "description": "Indica se le coordinate dell'area sono formalmente valide.",
            "readOnly": true
          }
        },
        "description": "Area che rappresenta la posizione della targa del veicolo."
      },
      "WSAutoscan.Application.RoadMap.Dto.RoadMapDto": {
        "title": "WSAutoscan.Application.RoadMap.Dto.RoadMapDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "CodQua": {
            "type": "integer",
            "format": "int32"
          },
          "CodVia": {
            "type": "integer",
            "format": "int32"
          },
          "Description": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.Scntt.Dto.ScnttErrorDictionaryDto": {
        "title": "WSAutoscan.Application.Scntt.Dto.ScnttErrorDictionaryDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Description": {
            "type": "string",
            "nullable": true
          },
          "LastUpdate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "toSend": {
            "type": "boolean"
          }
        }
      },
      "WSAutoscan.Application.Prometheus.Dto.AuthorizationPeriodDto": {
        "title": "WSAutoscan.Application.Prometheus.Dto.AuthorizationPeriodDto",
        "type": "object",
        "properties": {
          "From": {
            "type": "string",
            "format": "date-time"
          },
          "To": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "WSAutoscan.Application.Prometheus.Dto.GetExternalAuthorizationsResponseDto": {
        "title": "WSAutoscan.Application.Prometheus.Dto.GetExternalAuthorizationsResponseDto",
        "type": "object",
        "properties": {
          "TotalAuthorizations": {
            "type": "integer",
            "format": "int32"
          },
          "Authorizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.Prometheus.Dto.ExternalAuthorizationDto"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.Prometheus.Dto.UserVehicle": {
        "title": "WSAutoscan.Application.Prometheus.Dto.UserVehicle",
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "nullable": true
          },
          "Lastname": {
            "type": "string",
            "nullable": true
          },
          "Plate": {
            "type": "string",
            "nullable": true
          },
          "PlateCountry": {
            "type": "string",
            "nullable": true
          },
          "DriverName": {
            "type": "string",
            "nullable": true
          },
          "DriverLastname": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.RedRule.Dto.RedExpireRuleDto": {
        "title": "WSAutoscan.Application.RedRule.Dto.RedExpireRuleDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "To": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.RedRule.Dto.RedRuleDto": {
        "title": "WSAutoscan.Application.RedRule.Dto.RedRuleDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "description": "Id della regola",
            "format": "int32"
          },
          "Description": {
            "type": "string",
            "description": "Nome della regola",
            "nullable": true
          },
          "RuleTypeDictionaryId": {
            "type": "integer",
            "description": "Tipo della regola",
            "format": "int32"
          },
          "RuleDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.RedRule.Dto.RedRuleDetailDto"
            },
            "description": "Date di inizio e fine validita' della regola",
            "nullable": true
          },
          "TimeSlots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.RedRule.Dto.RedTimeSlotDto"
            },
            "description": "Orari della regola",
            "nullable": true
          },
          "IsFromMobile": {
            "type": "boolean",
            "description": "Indica se la regola e' stata creata da un dispositivo android o dal portale autoscan"
          },
          "IsClosed": {
            "type": "boolean",
            "description": "Indica se il dispositivo mobile ha finito il presidio"
          },
          "Active": {
            "type": "boolean",
            "description": "Indica se la regola e' attiva o meno"
          },
          "GatesIdSelected": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Id dei gate che interessano la regola",
            "nullable": true
          }
        },
        "description": "Regola estesa del rosso"
      },
      "WSAutoscan.Application.RedVelox.Dto.RedVelox_TransitStatusDto": {
        "title": "WSAutoscan.Application.RedVelox.Dto.RedVelox_TransitStatusDto",
        "type": "object",
        "properties": {
          "StatusId": {
            "type": "integer",
            "format": "int32"
          },
          "Note": {
            "type": "string",
            "nullable": true
          },
          "CommaId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.RedVelox.Dto.RedVeloxDetailDto": {
        "title": "WSAutoscan.Application.RedVelox.Dto.RedVeloxDetailDto",
        "type": "object",
        "properties": {
          "YellowTimeMs": {
            "type": "integer",
            "description": "Durata in millisecondi della luce gialla del semaforo.",
            "format": "int64",
            "nullable": true
          },
          "RedTimeMs": {
            "type": "integer",
            "description": "Durata in millisecondi della luce rossa del semaforo.",
            "format": "int64",
            "nullable": true
          },
          "Medias": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.RedVelox.Dto.RedVelox_TransitPhotoDto"
            },
            "description": "Elenco dei media associati al transito (foto e video).",
            "nullable": true
          },
          "Lane": {
            "type": "integer",
            "description": "Corsia del transito.",
            "format": "int32",
            "nullable": true
          },
          "OcrConfidency": {
            "type": "integer",
            "description": "Accuratezza della lettura OCR.",
            "format": "int32"
          },
          "Limit": {
            "type": "integer",
            "description": "Limite di velocità applicato per il transito.",
            "format": "int32",
            "nullable": true
          },
          "Note": {
            "type": "string",
            "description": "Note sul transito.",
            "nullable": true
          },
          "ViolationTypeId": {
            "type": "integer",
            "description": "Tipo di violazione del transito.",
            "format": "int32",
            "nullable": true
          },
          "Date": {
            "type": "string",
            "description": "Data ultima modifica del transito.",
            "format": "date-time"
          },
          "UserId": {
            "type": "integer",
            "description": "ID dell'utente che ha apportato l'ultima modifica al transito.",
            "format": "int32",
            "nullable": true
          },
          "UserName": {
            "type": "string",
            "nullable": true
          },
          "CommaId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "TypeId": {
            "type": "integer",
            "format": "int32"
          },
          "Sticker1": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Sticker2": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "TransitValidators": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "",
            "nullable": true
          },
          "ExportedDate": {
            "type": "string",
            "description": "Eventuale data di esportazione",
            "format": "date-time",
            "nullable": true
          }
        },
        "description": "Dettaglio di un transito RedSpeed."
      },
      "WSAutoscan.Application.RedVelox.Dto.RedVeloxUpdateRequestDto": {
        "title": "WSAutoscan.Application.RedVelox.Dto.RedVeloxUpdateRequestDto",
        "type": "object",
        "properties": {
          "TransitId": {
            "type": "integer",
            "description": "ID del transito da modificare.",
            "format": "int64"
          },
          "Plate": {
            "type": "string",
            "description": "Targa del transito.",
            "nullable": true
          },
          "NationId": {
            "type": "integer",
            "description": "Nazione del transito.",
            "format": "int32",
            "nullable": true
          },
          "VehicleTypeId": {
            "type": "integer",
            "description": "Tipo di Veicolo del transito.",
            "format": "int32",
            "nullable": true
          },
          "Limit": {
            "type": "integer",
            "description": "Limite di velocità da applicare al transito.",
            "format": "int32",
            "nullable": true
          },
          "ViolationTypeId": {
            "type": "integer",
            "description": "Tipologia di Violazione del transito.",
            "format": "int32",
            "nullable": true
          },
          "Lane": {
            "type": "integer",
            "description": "Corsia del transito.",
            "format": "int32",
            "nullable": true
          },
          "CommaId": {
            "type": "integer",
            "description": "Comma violato nel transito.",
            "format": "int32",
            "nullable": true
          },
          "Heavy": {
            "type": "boolean",
            "description": "Indica se il Veicolo del transito è da considerarsi 'veicolo pesante'.",
            "nullable": true
          },
          "Brand": {
            "type": "string",
            "description": "Marca del veicolo del transito.",
            "nullable": true
          },
          "Sticker1": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Sticker2": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "CropChoiceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "description": "Richiesta di modifica dei dati di un transito RedSpeed."
      },
      "WSAutoscan.Application.RedVeloxStatistic.Dto.StatisticTransitMessageDto": {
        "title": "WSAutoscan.Application.RedVeloxStatistic.Dto.StatisticTransitMessageDto",
        "type": "object",
        "properties": {
          "DateTime": {
            "type": "string",
            "description": "Data e ora del transito",
            "format": "date-time"
          },
          "ClassString": {
            "type": "string",
            "description": "Classe del veicolo",
            "nullable": true
          },
          "NetBiosName": {
            "type": "string",
            "description": "Netbiosname della camera che ha rilevato il transito",
            "nullable": true
          }
        },
        "description": "Messaggio contenente la statistica da salvare"
      },
      "WSAutoscan.Application.RedVeloxTransitPhoto.Dto.BlurAreaUpdateRequest": {
        "title": "WSAutoscan.Application.RedVeloxTransitPhoto.Dto.BlurAreaUpdateRequest",
        "type": "object",
        "properties": {
          "ImageName": {
            "type": "string",
            "description": "Foto a cui applicare la modifica all'area da offuscare.",
            "nullable": true
          },
          "BlurredArea": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Application.RedVeloxTransitPhoto.Dto.UserBlurredAreaDto"
              },
              {
                "description": "Area da offuscare definita dall'utente."
              }
            ]
          }
        },
        "description": "Richiesta di modifica di un'area da offuscare."
      },
      "WSAutoscan.Application.RedVeloxTransitPhoto.Dto.VehicleCoordinatesDto": {
        "title": "WSAutoscan.Application.RedVeloxTransitPhoto.Dto.VehicleCoordinatesDto",
        "type": "object",
        "properties": {
          "MinX": {
            "type": "integer",
            "description": "Coordinata orizzontale del punto top-left dell'area.",
            "format": "int32"
          },
          "MinY": {
            "type": "integer",
            "description": "Coordinata verticale del punto top-left dell'area.",
            "format": "int32"
          },
          "MaxX": {
            "type": "integer",
            "description": "Coordinata orizzontale del punto bottom-right dell'area.",
            "format": "int32"
          },
          "MaxY": {
            "type": "integer",
            "description": "Coordinata verticale del punto bottom-right dell'area.",
            "format": "int32"
          },
          "AreValid": {
            "type": "boolean",
            "description": "Indica se le coordinate dell'area sono formalmente valide.",
            "readOnly": true
          }
        },
        "description": "Area che rappresenta la posizione del veicolo."
      },
      "WSAutoscan.Application.Scntt.Dto.ScnttErrorLogsDto": {
        "title": "WSAutoscan.Application.Scntt.Dto.ScnttErrorLogsDto",
        "type": "object",
        "properties": {
          "Date": {
            "type": "string",
            "format": "date-time"
          },
          "ErrorCode": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ErrorDescription": {
            "type": "string",
            "nullable": true
          },
          "WSRequest": {
            "type": "string",
            "nullable": true
          },
          "ErrorType": {
            "type": "string",
            "nullable": true
          },
          "IsError": {
            "type": "boolean"
          }
        }
      },
      "WSAutoscan.Application.Setting.Dto.AS_DttsisServiceStatusDto": {
        "title": "WSAutoscan.Application.Setting.Dto.AS_DttsisServiceStatusDto",
        "type": "object",
        "properties": {
          "UserAccess": {
            "type": "integer",
            "format": "int32"
          },
          "GlobalStatus": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "WSAutoscan.Application.Prometheus.Dto.AuthorizationGateDto": {
        "title": "WSAutoscan.Application.Prometheus.Dto.AuthorizationGateDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Description": {
            "type": "string",
            "nullable": true
          },
          "ZoneDescription": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "Varchi associati ad un'Autorizzazione."
      },
      "WSAutoscan.Application.Prometheus.Dto.Filters": {
        "title": "WSAutoscan.Application.Prometheus.Dto.Filters",
        "type": "object",
        "properties": {
          "Valid": {
            "type": "boolean",
            "nullable": true
          },
          "Waiting": {
            "type": "boolean",
            "nullable": true
          },
          "Rejected": {
            "type": "boolean",
            "nullable": true
          },
          "Deleted": {
            "type": "boolean"
          },
          "Freezed": {
            "type": "boolean"
          },
          "Plate": {
            "type": "string",
            "nullable": true
          },
          "DateFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "DateTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "DateRequestFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "DateRequestTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "Applicant": {
            "type": "string",
            "nullable": true
          },
          "AuthorizationTypeId": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.RecordedNoteTransits.Dto.RecordedTransitNoteRequest": {
        "title": "WSAutoscan.Application.RecordedNoteTransits.Dto.RecordedTransitNoteRequest",
        "type": "object",
        "properties": {
          "Note": {
            "type": "string",
            "nullable": true
          },
          "Suite": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Enums.AS_SuiteEnum"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Application.RedRule.Dto.CreateRedRuleMobileDto": {
        "title": "WSAutoscan.Application.RedRule.Dto.CreateRedRuleMobileDto",
        "type": "object",
        "properties": {
          "GateId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "WSAutoscan.Application.RedRule.Dto.RedRuleDetailDto": {
        "title": "WSAutoscan.Application.RedRule.Dto.RedRuleDetailDto",
        "type": "object",
        "properties": {
          "ValidFrom": {
            "type": "string",
            "description": "Inizio validita' regola",
            "format": "date-time"
          },
          "ValidTo": {
            "type": "string",
            "description": "Fine validita' della regola",
            "format": "date-time"
          },
          "StartTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.TimeSpan"
              },
              {}
            ]
          },
          "EndTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.TimeSpan"
              },
              {}
            ]
          }
        },
        "description": "Periodi di validita' regola"
      },
      "WSAutoscan.Application.RedRule.Dto.StopRedRuleMobileDto": {
        "title": "WSAutoscan.Application.RedRule.Dto.StopRedRuleMobileDto",
        "type": "object",
        "properties": {
          "RuleId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "WSAutoscan.Application.RedVelox.Dto.Mobile.RedVeloxTransitStatusMobileDto": {
        "title": "WSAutoscan.Application.RedVelox.Dto.Mobile.RedVeloxTransitStatusMobileDto",
        "type": "object",
        "properties": {
          "TransitId": {
            "type": "integer",
            "format": "int64"
          },
          "Note": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.RedVelox.Dto.RedVelox_CommasDto": {
        "title": "WSAutoscan.Application.RedVelox.Dto.RedVelox_CommasDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "description": "ID del Comma.",
            "format": "int32"
          },
          "Description": {
            "type": "string",
            "description": "Descrizione del Comma.",
            "nullable": true
          }
        },
        "description": "Comma dell'Art.146."
      },
      "WSAutoscan.Application.RedVelox.Dto.RedVelox_TransitPhotoDto": {
        "title": "WSAutoscan.Application.RedVelox.Dto.RedVelox_TransitPhotoDto",
        "type": "object",
        "properties": {
          "Alt": {
            "type": "string",
            "description": "Testo da visualizzare in caso il file del media non sia presente.",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "description": "Nome del media.",
            "nullable": true
          },
          "IsImg": {
            "type": "boolean",
            "description": "Indica se il media è un'immagine."
          },
          "ImageKind": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.ImageHelpersImageKind"
              },
              {}
            ]
          },
          "Contrast": {
            "type": "integer",
            "description": "Correzione di contrasto applicata al media.",
            "format": "int32"
          },
          "Brightness": {
            "type": "integer",
            "description": "Correzione di luminosità applicata al media.",
            "format": "int32"
          }
        },
        "description": "Media associato a un transito RedSpeed."
      },
      "WSAutoscan.Application.RedVelox.Dto.RedVeloxSearchResponseDto": {
        "title": "WSAutoscan.Application.RedVelox.Dto.RedVeloxSearchResponseDto",
        "type": "object",
        "properties": {
          "Count": {
            "type": "integer",
            "description": "Totale dei risultati trovati.",
            "format": "int32"
          },
          "Transits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.Transit.Dto.RedVelox_TransitDto"
            },
            "description": "Risultati trovati.",
            "nullable": true
          }
        },
        "description": "Risultato di una ricerca filtrata dei transiti RedSpeed."
      },
      "WSAutoscan.Application.RedVeloxCalibration.Dto.CalibrationRequest": {
        "title": "WSAutoscan.Application.RedVeloxCalibration.Dto.CalibrationRequest",
        "type": "object",
        "properties": {
          "CalibrationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "CameraId": {
            "type": "integer",
            "format": "int32"
          },
          "Description": {
            "type": "string",
            "nullable": true
          },
          "CalibrationDate": {
            "type": "string",
            "format": "date-time"
          },
          "ExpiryDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "WSAutoscan.Application.RedVeloxCalibration.Dto.GetCalibrationsRequestStatus": {
        "title": "WSAutoscan.Application.RedVeloxCalibration.Dto.GetCalibrationsRequestStatus",
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer"
      },
      "WSAutoscan.Application.RedVeloxCalibration.Dto.Status": {
        "title": "WSAutoscan.Application.RedVeloxCalibration.Dto.Status",
        "enum": [
          0,
          1
        ],
        "type": "integer"
      },
      "WSAutoscan.Application.RedVeloxStickerVehicle.Dto.RedVeloxStickerVehicleDto": {
        "title": "WSAutoscan.Application.RedVeloxStickerVehicle.Dto.RedVeloxStickerVehicleDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "LimitSticker1": {
            "type": "integer",
            "format": "int32"
          },
          "LimitSticker2": {
            "type": "integer",
            "format": "int32"
          },
          "VehicleId": {
            "type": "integer",
            "format": "int32"
          },
          "VehicleDescription": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.RedVeloxTransitPhoto.Dto.BlurAreaDeleteRequest": {
        "title": "WSAutoscan.Application.RedVeloxTransitPhoto.Dto.BlurAreaDeleteRequest",
        "type": "object",
        "properties": {
          "ImageName": {
            "type": "string",
            "description": "Foto da cui eliminare l'area da offuscare",
            "nullable": true
          },
          "BlurredAreaName": {
            "type": "string",
            "description": "Nome dell'area da eliminare.",
            "nullable": true
          }
        },
        "description": "Richiesta di cancellazione di un'area da offuscare."
      },
      "WSAutoscan.Application.RedVeloxTransitPhoto.Dto.CoordinatesTransitPhoto": {
        "title": "WSAutoscan.Application.RedVeloxTransitPhoto.Dto.CoordinatesTransitPhoto",
        "type": "object",
        "properties": {
          "PlateCoordinates": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Application.RedVeloxTransitPhoto.Dto.PlateCoordinatesDto"
              },
              {
                "description": "Area che rappresenta la posizione della targa del veicolo."
              }
            ]
          },
          "StopLineCoordinates": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Application.RedVeloxTransitPhoto.Dto.StopLineCoordinatesDto"
              },
              {
                "description": "Coordinate delle 2 linee di arresto."
              }
            ]
          },
          "TransitPhotoCoordinate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Application.RedVeloxTransitPhoto.Dto.TransitPhotoCoordinate"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Application.RedVeloxTransitPhoto.Dto.StopLineCoordinatesDto": {
        "title": "WSAutoscan.Application.RedVeloxTransitPhoto.Dto.StopLineCoordinatesDto",
        "type": "object",
        "properties": {
          "StartTopLeftX": {
            "type": "integer",
            "description": "Coordinata orizzontale del punto di inizio della prima linea di arresto.",
            "format": "int32",
            "nullable": true
          },
          "StartTopLeftY": {
            "type": "integer",
            "description": "Coordinata verticale del punto di inizio  della prima linea di arresto.",
            "format": "int32",
            "nullable": true
          },
          "StartTopRightX": {
            "type": "integer",
            "description": "Coordinata orizzontale del punto di fine della prima linea di arresto.",
            "format": "int32",
            "nullable": true
          },
          "StartTopRightY": {
            "type": "integer",
            "description": "Coordinata verticale del punto di fine della prima linea di arresto.",
            "format": "int32",
            "nullable": true
          },
          "StopTopLeftX": {
            "type": "integer",
            "description": "Coordinata orizzontale del punto di inizio della seconda linea di arresto.",
            "format": "int32",
            "nullable": true
          },
          "StopTopLeftY": {
            "type": "integer",
            "description": "Coordinata verticale del punto di inizio della seconda linea di arresto.",
            "format": "int32",
            "nullable": true
          },
          "StopTopRightX": {
            "type": "integer",
            "description": "Coordinata orizzontale del punto di fine della seconda linea di arresto.",
            "format": "int32",
            "nullable": true
          },
          "StopTopRightY": {
            "type": "integer",
            "description": "Coordinata verticale del punto di fine della seconda linea di arresto.",
            "format": "int32",
            "nullable": true
          },
          "AreValid": {
            "type": "boolean",
            "description": "Indica se le coordinate delle linee di arresto sono formalmente valide.",
            "readOnly": true
          }
        },
        "description": "Coordinate delle 2 linee di arresto."
      },
      "WSAutoscan.Application.RedVeloxTransitPhoto.Dto.TransitPhotoCoordinate": {
        "title": "WSAutoscan.Application.RedVeloxTransitPhoto.Dto.TransitPhotoCoordinate",
        "type": "object",
        "properties": {
          "Width": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Height": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.RedVeloxTransitPhoto.Dto.UserBlurredAreaDto": {
        "title": "WSAutoscan.Application.RedVeloxTransitPhoto.Dto.UserBlurredAreaDto",
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "description": "Nome dell'area.",
            "nullable": true
          },
          "MinX": {
            "type": "integer",
            "description": "Coordinata orizzontale del punto top-left dell'area.",
            "format": "int32"
          },
          "MinY": {
            "type": "integer",
            "description": "Coordinata verticale del punto top-left dell'area.",
            "format": "int32"
          },
          "MaxX": {
            "type": "integer",
            "description": "Coordinata orizzontale del punto bottom-right dell'area.",
            "format": "int32"
          },
          "MaxY": {
            "type": "integer",
            "description": "Coordinata verticale del punto bottom-right dell'area.",
            "format": "int32"
          }
        },
        "description": "Area da offuscare definita dall'utente."
      },
      "WSAutoscan.Application.SatTransitAggregation.Report.Dto.SatReportRequestDto": {
        "title": "WSAutoscan.Application.SatTransitAggregation.Report.Dto.SatReportRequestDto",
        "type": "object",
        "properties": {
          "ReportId": {
            "type": "integer",
            "format": "int32"
          },
          "StartDate": {
            "type": "string",
            "format": "date-time"
          },
          "EndDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "WSAutoscan.Application.Setting.Dto.AS_DttsisSettingsUpdateDto": {
        "title": "WSAutoscan.Application.Setting.Dto.AS_DttsisSettingsUpdateDto",
        "type": "object",
        "properties": {
          "DttsisSettings": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Application.Setting.Dto.AS_DttsisSettingsDto"
              },
              {}
            ]
          },
          "NotifyPasswordChange": {
            "type": "boolean"
          }
        }
      },
      "WSAutoscan.Application.Setting.Dto.SAT_EnvSettingsDto": {
        "title": "WSAutoscan.Application.Setting.Dto.SAT_EnvSettingsDto",
        "type": "object",
        "properties": {
          "EnvId": {
            "type": "integer",
            "format": "int32"
          },
          "CustomerId": {
            "type": "integer",
            "format": "int32"
          },
          "DttsisVehicleType": {
            "type": "string",
            "nullable": true
          },
          "Euro": {
            "type": "string",
            "nullable": true
          },
          "PlateChars": {
            "type": "string",
            "nullable": true
          },
          "IsForAlarm": {
            "type": "boolean"
          }
        }
      },
      "WSAutoscan.Application.Transit.AssociationTopicDto": {
        "title": "WSAutoscan.Application.Transit.AssociationTopicDto",
        "type": "object",
        "properties": {
          "TransitTopic": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.Transit.Dto.NamirialCredentialsDto": {
        "title": "WSAutoscan.Application.Transit.Dto.NamirialCredentialsDto",
        "type": "object",
        "properties": {
          "Username": {
            "type": "string",
            "nullable": true
          },
          "Password": {
            "type": "string",
            "nullable": true
          },
          "FilePath": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.Transit.Dto.SAT_TransitChangeDetailDto": {
        "title": "WSAutoscan.Application.Transit.Dto.SAT_TransitChangeDetailDto",
        "type": "object",
        "properties": {
          "FieldId": {
            "type": "integer",
            "format": "int32"
          },
          "NewValue": {
            "type": "string",
            "nullable": true
          },
          "Plate": {
            "type": "string",
            "nullable": true
          },
          "Date": {
            "type": "string",
            "format": "date-time"
          },
          "Nation": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.Transit.Dto.SatTransitStatusMobileDto": {
        "title": "WSAutoscan.Application.Transit.Dto.SatTransitStatusMobileDto",
        "type": "object",
        "properties": {
          "TransitId": {
            "type": "integer",
            "format": "int64"
          },
          "Note": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.Transit.Dto.ZTL_TransitDto": {
        "title": "WSAutoscan.Application.Transit.Dto.ZTL_TransitDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ComunicationType": {
            "type": "string",
            "nullable": true
          },
          "SiteName": {
            "type": "string",
            "nullable": true
          },
          "Plate": {
            "type": "string",
            "nullable": true
          },
          "TransitDate": {
            "type": "string",
            "format": "date-time"
          },
          "Direction": {
            "type": "string",
            "nullable": true
          },
          "DirectionComplete": {
            "type": "string",
            "nullable": true
          },
          "StatusId": {
            "type": "integer",
            "format": "int32"
          },
          "Gate": {
            "type": "string",
            "nullable": true
          },
          "GateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "NationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Nation": {
            "type": "string",
            "nullable": true
          },
          "VehicleTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "VehicleType": {
            "type": "string",
            "nullable": true
          },
          "NumDuplicates": {
            "type": "integer",
            "format": "int32"
          },
          "DuplicateOf": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "CameraId": {
            "type": "integer",
            "format": "int32"
          },
          "IsNearlyDeadline": {
            "type": "boolean"
          },
          "IsTestPlate": {
            "type": "boolean"
          },
          "Note": {
            "type": "string",
            "description": "Eventuali note della dell'autorizzazione del transito",
            "nullable": true
          },
          "Photos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.ZtlViolationSearch.Dto.Ztl_TransitPhotoDto"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.Transit.Dto.ZtlLastTransitDto": {
        "title": "WSAutoscan.Application.Transit.Dto.ZtlLastTransitDto",
        "type": "object",
        "properties": {
          "Plate": {
            "type": "string",
            "description": "Targa del transito.",
            "nullable": true
          },
          "NationId": {
            "type": "integer",
            "description": "ID della Nazione del transito.",
            "format": "int32",
            "nullable": true
          },
          "VehicleType": {
            "type": "integer",
            "description": "ID del Tipo di Veicolo del transito.",
            "format": "int32",
            "nullable": true
          },
          "ImageCtx": {
            "type": "string",
            "description": "Nome dell'immagine di contesto del transito.",
            "nullable": true
          },
          "ImageOcr": {
            "type": "string",
            "description": "Nome dell'immagine OCR del transito.",
            "nullable": true
          },
          "OcrPlateCoordinates": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Application.ZtlViolationPhoto.Dto.PlateCoordinatesDto"
              },
              {}
            ]
          },
          "CtxPlateCoordinates": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Application.ZtlViolationPhoto.Dto.PlateCoordinatesDto"
              },
              {}
            ]
          }
        },
        "description": "Dati dell'ultimo transito ZTL rilevato da una Camera."
      },
      "WSAutoscan.Application.User.Dto.AS_PermissionDto": {
        "title": "WSAutoscan.Application.User.Dto.AS_PermissionDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Description": {
            "type": "string",
            "nullable": true
          },
          "Code": {
            "type": "string",
            "nullable": true
          },
          "SuiteId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Order": {
            "type": "integer",
            "format": "int32"
          },
          "SubGroupDictionaryId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "WSAutoscan.Application.User.Dto.AS_UserBasicDto": {
        "title": "WSAutoscan.Application.User.Dto.AS_UserBasicDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "description": "Identificativo Utente",
            "format": "int32"
          },
          "Username": {
            "type": "string",
            "description": "Nome Utente",
            "nullable": true
          },
          "FullName": {
            "type": "string",
            "description": "Nome completo dell'utente",
            "nullable": true
          },
          "Guid": {
            "type": "string",
            "description": "Identificativo univoco GUID dell'utente",
            "nullable": true
          }
        },
        "description": "Utente basic"
      },
      "WSAutoscan.Application.Setting.Dto.AS_ModalityCallForDttsisSettingsDto": {
        "title": "WSAutoscan.Application.Setting.Dto.AS_ModalityCallForDttsisSettingsDto",
        "type": "object",
        "properties": {
          "SuiteId": {
            "type": "integer",
            "format": "int32"
          },
          "ModalityCallId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "WSAutoscan.Application.Setting.Dto.SAT_SettingsDto": {
        "title": "WSAutoscan.Application.Setting.Dto.SAT_SettingsDto",
        "type": "object",
        "properties": {
          "PlateThumbnail": {
            "type": "boolean",
            "nullable": true
          },
          "ImagesDays": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "PlateDays": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "AlarmDays": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ScnttEnabled": {
            "type": "boolean",
            "nullable": true
          },
          "ScnttHotListLastUpdate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "ScnttHotListMaxAgeDays": {
            "type": "integer",
            "format": "int32"
          },
          "MuteAlarmDays": {
            "type": "integer",
            "format": "int32"
          },
          "MapQuestKey": {
            "type": "string",
            "nullable": true
          },
          "ExportedTransits": {
            "type": "integer",
            "format": "int32"
          },
          "SatEnvSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.Setting.Dto.SAT_EnvSettingsDto"
            },
            "description": "",
            "nullable": true
          },
          "EnableEnvClassStats": {
            "type": "boolean"
          }
        }
      },
      "WSAutoscan.Application.Setting.Dto.DttsisManulCallData": {
        "title": "WSAutoscan.Application.Setting.Dto.DttsisManulCallData",
        "type": "object",
        "properties": {
          "TransitId": {
            "type": "integer",
            "format": "int64"
          },
          "CameraId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "WSAutoscan.Application.Statistic.Dto.SAT_StatisticDto": {
        "title": "WSAutoscan.Application.Statistic.Dto.SAT_StatisticDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Date": {
            "type": "string",
            "format": "date-time"
          },
          "TimeSlot": {
            "type": "integer",
            "format": "int32"
          },
          "TransitNumber": {
            "type": "integer",
            "format": "int32"
          },
          "GateId": {
            "type": "integer",
            "format": "int32"
          },
          "GateName": {
            "type": "string",
            "nullable": true
          },
          "CustomerId": {
            "type": "integer",
            "format": "int32"
          },
          "BlacklistAlarm": {
            "type": "integer",
            "format": "int32"
          },
          "InsuranceAlarm": {
            "type": "integer",
            "format": "int32"
          },
          "RevisionAlarm": {
            "type": "integer",
            "format": "int32"
          },
          "A1Alarm": {
            "type": "integer",
            "format": "int32"
          },
          "A2Alarm": {
            "type": "integer",
            "format": "int32"
          },
          "CAlarm": {
            "type": "integer",
            "format": "int32"
          },
          "Car": {
            "type": "integer",
            "format": "int32"
          },
          "CarTrailer": {
            "type": "integer",
            "format": "int32"
          },
          "Bus": {
            "type": "integer",
            "format": "int32"
          },
          "Unknown": {
            "type": "integer",
            "format": "int32"
          },
          "Lorry": {
            "type": "integer",
            "format": "int32"
          },
          "LorryTrailer": {
            "type": "integer",
            "format": "int32"
          },
          "Motorcycle": {
            "type": "integer",
            "format": "int32"
          },
          "Motorbike": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "WSAutoscan.Application.Telegram.Dto.UserToInsert": {
        "title": "WSAutoscan.Application.Telegram.Dto.UserToInsert",
        "type": "object",
        "properties": {
          "PhoneNumber": {
            "type": "string",
            "description": "NUmero di telefono",
            "nullable": true
          },
          "TelegramId": {
            "type": "integer",
            "description": "Id proveniente da telegram",
            "format": "int64"
          },
          "UserId": {
            "type": "integer",
            "description": "Id utente",
            "format": "int32"
          }
        },
        "description": "Utente per cui aggiungere le notifiche telegram"
      },
      "WSAutoscan.Application.Transit.Dto.RedVeloxLastTransitDto": {
        "title": "WSAutoscan.Application.Transit.Dto.RedVeloxLastTransitDto",
        "type": "object",
        "properties": {
          "Plate": {
            "type": "string",
            "description": "Targa del transito.",
            "nullable": true
          },
          "NationId": {
            "type": "integer",
            "description": "ID della Nazione del transito.",
            "format": "int32",
            "nullable": true
          },
          "VehicleType": {
            "type": "integer",
            "description": "ID del Tipo di Veicolo del transito.",
            "format": "int32",
            "nullable": true
          },
          "ImageCtx": {
            "type": "string",
            "description": "Nome dell'immagine di contesto del transito.",
            "nullable": true
          },
          "ImageOcr": {
            "type": "string",
            "description": "Nome dell'immagine OCR del transito.",
            "nullable": true
          },
          "OcrPlateCoordinates": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Application.RedVeloxTransitPhoto.Dto.PlateCoordinatesDto"
              },
              {
                "description": "Area che rappresenta la posizione della targa del veicolo."
              }
            ]
          },
          "CtxPlateCoordinates": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Application.RedVeloxTransitPhoto.Dto.PlateCoordinatesDto"
              },
              {
                "description": "Area che rappresenta la posizione della targa del veicolo."
              }
            ]
          }
        },
        "description": "Dati dell'ultimo transito RedSpeed rilevato da una Camera."
      },
      "WSAutoscan.Application.Transit.Dto.SAT_TransitDetailsDto": {
        "title": "WSAutoscan.Application.Transit.Dto.SAT_TransitDetailsDto",
        "type": "object",
        "properties": {
          "VehicleType": {
            "type": "string",
            "nullable": true
          },
          "VehicleDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.Transit.Dto.SAT_VehicleDetailsDto"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.Transit.Dto.SAT_TransitSearchInputDto": {
        "title": "WSAutoscan.Application.Transit.Dto.SAT_TransitSearchInputDto",
        "type": "object",
        "properties": {
          "DateFrom": {
            "type": "string",
            "description": "stringa perchè altrimenti dava dei problemi di conversione la data localizzata che arriva da js(gtm)",
            "nullable": true
          },
          "DateTo": {
            "type": "string",
            "description": "stringa perchè altrimenti dava dei problemi di conversione la data localizzata che arriva da js (gtm)",
            "nullable": true
          },
          "Plate": {
            "type": "string",
            "nullable": true
          },
          "Direction": {
            "type": "string",
            "nullable": true
          },
          "Nations": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "",
            "nullable": true
          },
          "CameraIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "",
            "nullable": true
          },
          "VTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "",
            "nullable": true
          },
          "Violations": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "",
            "nullable": true
          },
          "NoPlate": {
            "type": "boolean"
          },
          "KemlerPlate": {
            "type": "boolean"
          },
          "Limit": {
            "type": "integer",
            "description": "Numero di risultati da ritornare",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.Transit.Dto.ZTL_TransitStatusDto": {
        "title": "WSAutoscan.Application.Transit.Dto.ZTL_TransitStatusDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Name": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.User.Dto.AS_LogDto": {
        "title": "WSAutoscan.Application.User.Dto.AS_LogDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "format": "uuid"
          },
          "DeviceType": {
            "type": "string",
            "nullable": true
          },
          "Date": {
            "type": "string",
            "format": "date-time"
          },
          "TableName": {
            "type": "string",
            "nullable": true
          },
          "IdChanged": {
            "type": "integer",
            "format": "int64"
          },
          "OperationType": {
            "type": "string",
            "nullable": true
          },
          "NewValue": {
            "type": "string",
            "nullable": true
          },
          "OldValue": {
            "type": "string",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "nullable": true
          },
          "Module": {
            "type": "string",
            "nullable": true
          },
          "Username": {
            "type": "string",
            "nullable": true
          },
          "IdOperation": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "TransitsId": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "description": "",
            "nullable": true
          },
          "LinkedOperation": {
            "type": "boolean"
          }
        }
      },
      "WSAutoscan.Application.User.Dto.AS_UserDto": {
        "title": "WSAutoscan.Application.User.Dto.AS_UserDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "description": "Identificativo Utente",
            "format": "int32"
          },
          "Username": {
            "type": "string",
            "description": "Nome Utente",
            "nullable": true
          },
          "FullName": {
            "type": "string",
            "description": "Nome completo dell'utente",
            "nullable": true
          },
          "Guid": {
            "type": "string",
            "description": "Identificativo univoco GUID dell'utente",
            "nullable": true
          },
          "Active": {
            "type": "boolean",
            "description": "Indica se l'utente e' attivo o meno"
          },
          "Email": {
            "type": "string",
            "description": "Email dell'utente",
            "nullable": true
          },
          "Phone": {
            "type": "string",
            "description": "Numero telefono dell'utente",
            "nullable": true
          },
          "CustomerId": {
            "type": "integer",
            "description": "Id dell'ente dell'utente",
            "format": "int32"
          },
          "Password": {
            "type": "string",
            "description": "Password dell'utente",
            "nullable": true
          },
          "Access": {
            "type": "string",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "Descrizione dell'utente",
            "nullable": true
          },
          "ChangePassword": {
            "type": "string",
            "description": "Data ultimo cambio password",
            "format": "date-time",
            "nullable": true
          },
          "LastAccess": {
            "type": "string",
            "description": "Data ultimo accesso",
            "format": "date-time",
            "nullable": true
          },
          "RoleId": {
            "type": "integer",
            "description": "Id ruolo",
            "format": "int32",
            "nullable": true
          },
          "ChangePasswordDays": {
            "type": "integer",
            "description": "Giorni dopo i quali l'utente deve cambiare password",
            "format": "int32"
          },
          "AccountInvalidationDays": {
            "type": "integer",
            "description": "Giorni consecutivi senza eseguire l'accesso dopo i quali l'account viene invalidato",
            "format": "int32"
          },
          "SatAccess": {
            "type": "boolean",
            "description": "Indica la possibilita' di accesso al modulo sat"
          },
          "RedAccess": {
            "type": "boolean",
            "description": "Indica la possibilita' di accesso al modulo sat"
          },
          "VeloxAccess": {
            "type": "boolean",
            "description": "Indica la possibilita' di accesso al modulo red"
          },
          "ZtlAccess": {
            "type": "boolean",
            "description": "Indica la possibilita' di accesso al modulo ztl"
          },
          "ScnttVisible": {
            "type": "boolean",
            "description": "Possibilita' di visualizzare gli scntt"
          },
          "AgentId": {
            "type": "string",
            "description": "Id agente",
            "nullable": true
          },
          "Gates": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Id dei gate di appartenenza dell'utente",
            "nullable": true
          },
          "TelegramUserId": {
            "type": "integer",
            "description": "Id di telegram dell'utente",
            "format": "int64"
          },
          "EnabledFrom": {
            "type": "string",
            "description": "Data di inizio abilitazione dell'utente.",
            "format": "date-time",
            "nullable": true
          },
          "EnabledTo": {
            "type": "string",
            "description": "Data di fine abilitazione dell'utente.",
            "format": "date-time",
            "nullable": true
          }
        },
        "description": "Utente completo"
      },
      "WSAutoscan.Application.Setting.Dto.AS_DttsisSettingsDto": {
        "title": "WSAutoscan.Application.Setting.Dto.AS_DttsisSettingsDto",
        "type": "object",
        "properties": {
          "CustomerId": {
            "type": "integer",
            "format": "int32"
          },
          "DttsisEnabled": {
            "type": "boolean",
            "nullable": true
          },
          "DttsisMod": {
            "type": "string",
            "nullable": true
          },
          "GlobalCredentialAccess": {
            "type": "boolean",
            "nullable": true
          },
          "GlobalCredentialUtilization": {
            "type": "boolean",
            "nullable": true
          },
          "ApiUsername": {
            "type": "string",
            "nullable": true
          },
          "ApiPassword": {
            "type": "string",
            "nullable": true
          },
          "ApiLastLoginErrorCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ApiLastLoginErrorDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "ApiPasswordCreationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "VpnUsername": {
            "type": "string",
            "nullable": true
          },
          "VpnPassword": {
            "type": "string",
            "nullable": true
          },
          "VpnLastLoginErrorCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "VpnLastLoginErrorDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "VpnPasswordCreationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "SatDttsisCall": {
            "type": "boolean"
          },
          "ZtlDttsisCall": {
            "type": "boolean"
          },
          "RedDttsisCall": {
            "type": "boolean"
          },
          "VeloxDttsisCall": {
            "type": "boolean"
          },
          "VeloxDttsisCallOnTruck": {
            "type": "boolean"
          },
          "ExpirationDays": {
            "type": "integer",
            "format": "int32"
          },
          "OwnerDataDays": {
            "type": "integer",
            "format": "int32"
          },
          "VehicleId": {
            "type": "integer",
            "format": "int32"
          },
          "ModalityCall": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.Setting.Dto.AS_ModalityCallForDttsisSettingsDto"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.Statistic.Dto.ObjectStatisticDto": {
        "title": "WSAutoscan.Application.Statistic.Dto.ObjectStatisticDto",
        "type": "object",
        "properties": {
          "statisticDate": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.Statistic.Dto.StatisticToFrontendDto"
            },
            "description": "",
            "nullable": true
          },
          "statisticGate": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.Statistic.Dto.StatisticToFrontendDtoStringForGate"
            },
            "description": "",
            "nullable": true
          },
          "statisticHour": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.Statistic.Dto.StatisticToFrontendDto"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.Statistic.Dto.StatisticToFrontendDto": {
        "title": "WSAutoscan.Application.Statistic.Dto.StatisticToFrontendDto",
        "type": "object",
        "properties": {
          "Key": {
            "type": "integer",
            "format": "int32"
          },
          "TransitNumber": {
            "type": "integer",
            "format": "int32"
          },
          "AlarmNumber": {
            "type": "integer",
            "format": "int32"
          },
          "BlacklistAlarm": {
            "type": "integer",
            "format": "int32"
          },
          "InsuranceAlarm": {
            "type": "integer",
            "format": "int32"
          },
          "RevisionAlarm": {
            "type": "integer",
            "format": "int32"
          },
          "A1Alarm": {
            "type": "integer",
            "format": "int32"
          },
          "A2Alarm": {
            "type": "integer",
            "format": "int32"
          },
          "CAlarm": {
            "type": "integer",
            "format": "int32"
          },
          "Car": {
            "type": "integer",
            "format": "int32"
          },
          "CarTrailer": {
            "type": "integer",
            "format": "int32"
          },
          "Bus": {
            "type": "integer",
            "format": "int32"
          },
          "Unknown": {
            "type": "integer",
            "format": "int32"
          },
          "Lorry": {
            "type": "integer",
            "format": "int32"
          },
          "LorryTrailer": {
            "type": "integer",
            "format": "int32"
          },
          "Motorcycle": {
            "type": "integer",
            "format": "int32"
          },
          "Motorbike": {
            "type": "integer",
            "format": "int32"
          },
          "Rimorchio": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "WSAutoscan.Application.Transit.Dto.DailyTransitsDetails": {
        "title": "WSAutoscan.Application.Transit.Dto.DailyTransitsDetails",
        "type": "object",
        "properties": {
          "Ordinal": {
            "type": "integer",
            "format": "int32"
          },
          "Total": {
            "type": "integer",
            "format": "int32"
          },
          "Max": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "WSAutoscan.Application.Transit.Dto.ImageFilterDto": {
        "title": "WSAutoscan.Application.Transit.Dto.ImageFilterDto",
        "type": "object",
        "properties": {
          "ImageName": {
            "type": "string",
            "nullable": true
          },
          "Brightness": {
            "type": "integer",
            "format": "int32"
          },
          "Contrast": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Filtro di correzione per una foto di un transito SAT."
      },
      "WSAutoscan.Application.Transit.Dto.OtherPlatesToChange": {
        "title": "WSAutoscan.Application.Transit.Dto.OtherPlatesToChange",
        "type": "object",
        "properties": {
          "Code": {
            "type": "string",
            "nullable": true
          },
          "Type": {
            "type": "string",
            "nullable": true
          },
          "NewCode": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.Transit.Dto.PlateTypesDto": {
        "title": "WSAutoscan.Application.Transit.Dto.PlateTypesDto",
        "type": "object",
        "properties": {
          "Code": {
            "type": "string",
            "nullable": true
          },
          "Type": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.Transit.Dto.RedVelox_TransitDto": {
        "title": "WSAutoscan.Application.Transit.Dto.RedVelox_TransitDto",
        "type": "object",
        "properties": {
          "TransitId": {
            "type": "integer",
            "description": "ID del transito.",
            "format": "int64"
          },
          "TransitDate": {
            "type": "string",
            "description": "Istante del transito.",
            "format": "date-time"
          },
          "TransitTypeId": {
            "type": "integer",
            "description": "ID del Tipo di transito. Può assumere i valori [2,3] dove 2 => RED e 3 => VELOX.",
            "format": "int32"
          },
          "TransitType": {
            "type": "string",
            "description": "Tipo di transito. Può assumere i valori ['RED','VELOX'].",
            "nullable": true
          },
          "StatusId": {
            "type": "integer",
            "description": "ID dello Stato del transito.",
            "format": "int32"
          },
          "Status": {
            "type": "string",
            "description": "Stato del transito.",
            "nullable": true
          },
          "Gate": {
            "type": "string",
            "description": "Nome del Varco per il quale è avvenuto il transito.",
            "nullable": true
          },
          "NationId": {
            "type": "integer",
            "description": "ID della Nazione della targa del transito.",
            "format": "int32",
            "nullable": true
          },
          "Nation": {
            "type": "string",
            "description": "Nazione della targa del transito.",
            "nullable": true
          },
          "VehicleTypeId": {
            "type": "integer",
            "description": "ID del Tipo di Veicolo del transito.",
            "format": "int32",
            "nullable": true
          },
          "VehicleType": {
            "type": "string",
            "description": "Tipo di Veicolo del transito.",
            "nullable": true
          },
          "Plate": {
            "type": "string",
            "description": "Targa del transito.",
            "nullable": true
          },
          "Velox": {
            "type": "integer",
            "description": "??",
            "format": "int32",
            "nullable": true,
            "deprecated": true
          },
          "Speed": {
            "type": "number",
            "description": "Velocità rilevata del transito."
          },
          "PlateImages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Elenco di nomi delle immagini che riguardano il crop della targa.",
            "nullable": true
          },
          "OCR_Fallita": {
            "type": "boolean",
            "description": "Indica se si è presentato un errore OCR da parte della Camera."
          },
          "Correzione_Manuale": {
            "type": "boolean"
          },
          "VehicleBrand": {
            "type": "string",
            "description": "Marca del veicolo relativo al transito.",
            "nullable": true
          },
          "Limit": {
            "type": "integer",
            "description": "Eventuale limite di velocità applicato al transito.",
            "format": "int32",
            "nullable": true
          },
          "CameraId": {
            "type": "integer",
            "description": "ID della Camera che ha rilevato il transito.",
            "format": "int32"
          },
          "Heavy": {
            "type": "boolean",
            "description": "Indica se il veicolo relativo al transito è da considerarsi 'veicolo pesante'."
          },
          "IsNearlyDeadline": {
            "type": "boolean",
            "description": "Indica se il transito è da considerarsi 'In Scadenza'."
          },
          "IsTestPlate": {
            "type": "boolean",
            "description": "Indica se la Targa del transito è una <a href=\"https://it.wikipedia.org/wiki/Targhe_d%27immatricolazione_dell%27Italia#Targhe_prova\">targa di prova</a>"
          },
          "CommaId": {
            "type": "integer",
            "description": "Indica l'Id del comma in caso di violazione Red.",
            "format": "int32"
          },
          "CropChoiceId": {
            "type": "integer",
            "description": "Indica quale crop della targa è da considerare per il documento fotografico.",
            "format": "int32"
          }
        },
        "description": "Rappresentazione di un transito RedSpeed."
      },
      "WSAutoscan.Application.Transit.Dto.SAT_TransitChangeDto": {
        "title": "WSAutoscan.Application.Transit.Dto.SAT_TransitChangeDto",
        "type": "object",
        "properties": {
          "TransitType": {
            "type": "string",
            "nullable": true
          },
          "PlateCode": {
            "type": "string",
            "nullable": true
          },
          "NewPlateCode": {
            "type": "string",
            "nullable": true
          },
          "OldNation": {
            "type": "string",
            "nullable": true
          },
          "Nation": {
            "type": "string",
            "nullable": true
          },
          "Date": {
            "type": "string",
            "format": "date-time"
          },
          "SiteName": {
            "type": "string",
            "nullable": true
          },
          "OcrConfidency": {
            "type": "integer",
            "format": "int32"
          },
          "ComunicationType": {
            "type": "string",
            "nullable": true
          },
          "OtherPlates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.Transit.Dto.OtherPlatesToChange"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.Transit.Dto.SAT_TransitDto": {
        "title": "WSAutoscan.Application.Transit.Dto.SAT_TransitDto",
        "type": "object",
        "properties": {
          "AutoscanId": {
            "type": "integer",
            "format": "int64"
          },
          "PlateCode": {
            "type": "string",
            "nullable": true
          },
          "Date": {
            "type": "string",
            "format": "date-time"
          },
          "Direction": {
            "type": "string",
            "nullable": true
          },
          "CameraId": {
            "type": "integer",
            "format": "int32"
          },
          "SiteName": {
            "type": "string",
            "nullable": true
          },
          "Nation": {
            "type": "string",
            "nullable": true
          },
          "OcrConfidency": {
            "type": "integer",
            "format": "int32"
          },
          "ComunicationType": {
            "type": "string",
            "nullable": true
          },
          "ImageName": {
            "type": "string",
            "nullable": true
          },
          "ImagePath": {
            "type": "string",
            "nullable": true
          },
          "IsAlarm": {
            "type": "boolean"
          },
          "ListNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "",
            "nullable": true
          },
          "Details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.Transit.Dto.SAT_VehicleDetailsDto"
            },
            "description": "",
            "nullable": true
          },
          "OtherPlates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.Transit.Dto.PlateTypesDto"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.Transit.Dto.SAT_VehicleDetailsDto": {
        "title": "WSAutoscan.Application.Transit.Dto.SAT_VehicleDetailsDto",
        "type": "object",
        "properties": {
          "Field": {
            "type": "string",
            "nullable": true
          },
          "Value": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.Updates.Dto.LicenseDataResponseDto": {
        "title": "WSAutoscan.Application.Updates.Dto.LicenseDataResponseDto",
        "type": "object",
        "properties": {
          "LicenseData": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Application.Updates.Dto.LicenseDataDto"
              },
              {}
            ]
          },
          "Hash": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.User.Dto.AS_SuiteDto": {
        "title": "WSAutoscan.Application.User.Dto.AS_SuiteDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Name": {
            "type": "string",
            "nullable": true
          },
          "Code": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.User.Dto.AS_User_MonitorDtoUserCamera": {
        "title": "WSAutoscan.Application.User.Dto.AS_User_MonitorDtoUserCamera",
        "type": "object",
        "properties": {
          "CameraId": {
            "type": "integer",
            "format": "int32"
          },
          "SmsNotification": {
            "type": "boolean"
          },
          "EmailNotification": {
            "type": "boolean"
          }
        }
      },
      "WSAutoscan.Application.SMS.Dto.SMSCreditDto": {
        "title": "WSAutoscan.Application.SMS.Dto.SMSCreditDto",
        "type": "object",
        "properties": {
          "CreditLeft": {
            "type": "number"
          },
          "ClassicSMS": {
            "type": "integer",
            "format": "int32"
          },
          "BasicSMS": {
            "type": "integer",
            "format": "int32"
          },
          "ClassicPlusSMS": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "WSAutoscan.Application.Statistic.Dto.StatisticToFrontendDtoStringForGate": {
        "title": "WSAutoscan.Application.Statistic.Dto.StatisticToFrontendDtoStringForGate",
        "type": "object",
        "properties": {
          "Key": {
            "type": "string",
            "nullable": true
          },
          "TransitNumber": {
            "type": "integer",
            "format": "int32"
          },
          "AlarmNumber": {
            "type": "integer",
            "format": "int32"
          },
          "BlacklistAlarm": {
            "type": "integer",
            "format": "int32"
          },
          "InsuranceAlarm": {
            "type": "integer",
            "format": "int32"
          },
          "RevisionAlarm": {
            "type": "integer",
            "format": "int32"
          },
          "A1Alarm": {
            "type": "integer",
            "format": "int32"
          },
          "A2Alarm": {
            "type": "integer",
            "format": "int32"
          },
          "CAlarm": {
            "type": "integer",
            "format": "int32"
          },
          "Car": {
            "type": "integer",
            "format": "int32"
          },
          "CarTrailer": {
            "type": "integer",
            "format": "int32"
          },
          "Bus": {
            "type": "integer",
            "format": "int32"
          },
          "Unknown": {
            "type": "integer",
            "format": "int32"
          },
          "Lorry": {
            "type": "integer",
            "format": "int32"
          },
          "LorryTrailer": {
            "type": "integer",
            "format": "int32"
          },
          "Motorcycle": {
            "type": "integer",
            "format": "int32"
          },
          "Motorbike": {
            "type": "integer",
            "format": "int32"
          },
          "Rimorchio": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "WSAutoscan.Application.Transit.Dto.MobilePhotos": {
        "title": "WSAutoscan.Application.Transit.Dto.MobilePhotos",
        "type": "object",
        "properties": {
          "PhotoByte": {
            "type": "string",
            "nullable": true
          },
          "PhotoName": {
            "type": "string",
            "nullable": true
          },
          "PhotoType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.ImageHelpersImageKind"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Application.Transit.Dto.MobileRedVeloxTransitDto": {
        "title": "WSAutoscan.Application.Transit.Dto.MobileRedVeloxTransitDto",
        "type": "object",
        "properties": {
          "TransitDate": {
            "type": "string",
            "format": "date-time"
          },
          "Plate": {
            "type": "string",
            "nullable": true
          },
          "IsTestPlate": {
            "type": "boolean"
          },
          "VehicleBrand": {
            "type": "string",
            "nullable": true
          },
          "AutoscanId": {
            "type": "integer",
            "format": "int64"
          },
          "PlatePhotoName": {
            "type": "string",
            "nullable": true
          },
          "PlateCtxPhotoName": {
            "type": "string",
            "nullable": true
          },
          "CameraId": {
            "type": "integer",
            "format": "int32"
          },
          "Nation": {
            "type": "string",
            "nullable": true
          },
          "OpMode": {
            "type": "string",
            "nullable": true
          },
          "Vehicle": {
            "type": "string",
            "nullable": true
          },
          "SiteAddress": {
            "type": "string",
            "nullable": true
          },
          "Direction": {
            "type": "string",
            "nullable": true
          },
          "Lat": {
            "type": "number"
          },
          "LaneName": {
            "type": "string",
            "nullable": true
          },
          "Lng": {
            "type": "number"
          },
          "TransitStatus": {
            "type": "integer",
            "format": "int32"
          },
          "CodiceVia1": {
            "type": "integer",
            "format": "int32"
          },
          "CodiceQuartiere1": {
            "type": "integer",
            "format": "int32"
          },
          "CodiceVia2": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "CodiceQuartiere2": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "IsSanctionable": {
            "type": "boolean"
          },
          "AutoCancelViolation": {
            "type": "boolean"
          },
          "Photos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.Transit.Dto.MobilePhotos"
            },
            "description": "",
            "nullable": true
          },
          "Height": {
            "type": "string",
            "nullable": true
          },
          "SignDistance": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Speed": {
            "type": "number",
            "nullable": true
          },
          "SpeedLimit": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Heavy": {
            "type": "boolean",
            "nullable": true
          },
          "RedCommaDictionary": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Enums.Red_CommaDictionaryEnum"
              },
              {}
            ]
          },
          "RedVeloxViolationTypeDictionary": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Enums.RedVelox_ViolationTypeDictionaryEnum"
              },
              {}
            ]
          },
          "YellowTimeMs": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "RedTimeMs": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.Transit.Dto.MobileSatTransitDto": {
        "title": "WSAutoscan.Application.Transit.Dto.MobileSatTransitDto",
        "type": "object",
        "properties": {
          "TransitDate": {
            "type": "string",
            "format": "date-time"
          },
          "Plate": {
            "type": "string",
            "nullable": true
          },
          "IsTestPlate": {
            "type": "boolean"
          },
          "VehicleBrand": {
            "type": "string",
            "nullable": true
          },
          "AutoscanId": {
            "type": "integer",
            "format": "int64"
          },
          "PlatePhotoName": {
            "type": "string",
            "nullable": true
          },
          "PlateCtxPhotoName": {
            "type": "string",
            "nullable": true
          },
          "CameraId": {
            "type": "integer",
            "format": "int32"
          },
          "Nation": {
            "type": "string",
            "nullable": true
          },
          "OpMode": {
            "type": "string",
            "nullable": true
          },
          "Vehicle": {
            "type": "string",
            "nullable": true
          },
          "SiteAddress": {
            "type": "string",
            "nullable": true
          },
          "Direction": {
            "type": "string",
            "nullable": true
          },
          "Lat": {
            "type": "number"
          },
          "LaneName": {
            "type": "string",
            "nullable": true
          },
          "Lng": {
            "type": "number"
          },
          "TransitStatus": {
            "type": "integer",
            "format": "int32"
          },
          "CodiceVia1": {
            "type": "integer",
            "format": "int32"
          },
          "CodiceQuartiere1": {
            "type": "integer",
            "format": "int32"
          },
          "CodiceVia2": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "CodiceQuartiere2": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "IsSanctionable": {
            "type": "boolean"
          },
          "AutoCancelViolation": {
            "type": "boolean"
          },
          "Photos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.Transit.Dto.MobilePhotos"
            },
            "description": "",
            "nullable": true
          },
          "Height": {
            "type": "string",
            "nullable": true
          },
          "HasInsuranceAlarm": {
            "type": "boolean"
          },
          "HasInspectionAlarm": {
            "type": "boolean"
          }
        }
      },
      "WSAutoscan.Application.Updates.Dto.LicenseDataDto": {
        "title": "WSAutoscan.Application.Updates.Dto.LicenseDataDto",
        "type": "object",
        "properties": {
          "systemId": {
            "type": "string",
            "nullable": true
          },
          "dateExpire": {
            "type": "string",
            "nullable": true
          },
          "dateRelease": {
            "type": "string",
            "nullable": true
          },
          "timeStamp": {
            "type": "string",
            "nullable": true
          },
          "cityName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.User.Dto.AS_User_MonitorDto": {
        "title": "WSAutoscan.Application.User.Dto.AS_User_MonitorDto",
        "type": "object",
        "properties": {
          "UserId": {
            "type": "integer",
            "format": "int32"
          },
          "Cameras": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.User.Dto.AS_User_MonitorDtoUserCamera"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.User.Dto.AS_UserMinForZtlDto": {
        "title": "WSAutoscan.Application.User.Dto.AS_UserMinForZtlDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "description": "Identificativo Utente",
            "format": "int32"
          },
          "Username": {
            "type": "string",
            "description": "Nome Utente",
            "nullable": true
          },
          "FullName": {
            "type": "string",
            "description": "Nome completo dell'utente",
            "nullable": true
          },
          "Guid": {
            "type": "string",
            "description": "Identificativo univoco GUID dell'utente",
            "nullable": true
          },
          "Active": {
            "type": "boolean",
            "description": "Indica se l'utente e' attivo o meno"
          },
          "Email": {
            "type": "string",
            "description": "Email dell'utente",
            "nullable": true
          },
          "Phone": {
            "type": "string",
            "description": "Numero telefono dell'utente",
            "nullable": true
          },
          "CustomerId": {
            "type": "integer",
            "description": "Id dell'ente dell'utente",
            "format": "int32"
          },
          "UsersPermissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.PermitTypeUser.Dto.UsersAuthTypePermissions"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.User.Dto.ChangePasswordDto": {
        "title": "WSAutoscan.Application.User.Dto.ChangePasswordDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "OldPassword": {
            "type": "string",
            "nullable": true
          },
          "NewPassword": {
            "type": "string",
            "nullable": true
          },
          "ChangePasswordDays": {
            "type": "integer",
            "format": "int32"
          },
          "AccountInvalidationDays": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "WSAutoscan.Application.User.Dto.LoginResultDto": {
        "title": "WSAutoscan.Application.User.Dto.LoginResultDto",
        "type": "object",
        "properties": {
          "UserLogged": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Application.User.Dto.UserLoggedDto"
              },
              {}
            ]
          },
          "Success": {
            "type": "boolean",
            "description": "Indica se il login è avvenuto con successo."
          },
          "ChangePwd": {
            "type": "boolean",
            "description": "Indica se è richiesto il cambio della password."
          },
          "ErrorType": {
            "type": "integer",
            "description": "Codice di errore per il login.",
            "format": "int32"
          },
          "Message": {
            "type": "string",
            "description": "Messaggio di errore per il login.",
            "nullable": true
          }
        },
        "description": "Risultato di un'operazione di login."
      },
      "WSAutoscan.Application.User.Dto.UserLoggedDto": {
        "title": "WSAutoscan.Application.User.Dto.UserLoggedDto",
        "type": "object",
        "properties": {
          "UserId": {
            "type": "integer",
            "format": "int32"
          },
          "UserGuid": {
            "type": "string",
            "format": "uuid"
          },
          "ChangePassword": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "SatAccess": {
            "type": "boolean"
          },
          "ZtlAccess": {
            "type": "boolean"
          },
          "RedAccess": {
            "type": "boolean"
          },
          "VeloxAccess": {
            "type": "boolean"
          },
          "Username": {
            "type": "string",
            "nullable": true
          },
          "FullName": {
            "type": "string",
            "nullable": true
          },
          "Token": {
            "type": "string",
            "nullable": true
          },
          "OfficeId": {
            "type": "integer",
            "format": "int32"
          },
          "CustomerId": {
            "type": "integer",
            "format": "int32"
          },
          "LastAccess": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "Permissions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "",
            "nullable": true
          },
          "License": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Application.License.Dto.LicensesList"
              },
              {}
            ]
          },
          "Modules": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.VeloxRule.Dto.CreateVeloxRuleMobileDto": {
        "title": "WSAutoscan.Application.VeloxRule.Dto.CreateVeloxRuleMobileDto",
        "type": "object",
        "properties": {
          "GateId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "WSAutoscan.Application.VeloxRule.Dto.StopVeloxRuleMobileDto": {
        "title": "WSAutoscan.Application.VeloxRule.Dto.StopVeloxRuleMobileDto",
        "type": "object",
        "properties": {
          "RuleId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "WSAutoscan.Application.ZtlAuthorization.Dto.AuthorizationDto": {
        "title": "WSAutoscan.Application.ZtlAuthorization.Dto.AuthorizationDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int64"
          },
          "Count": {
            "type": "integer",
            "format": "int32"
          },
          "ReleaseDate": {
            "type": "string",
            "format": "date-time"
          },
          "DeniedReason": {
            "type": "string",
            "nullable": true
          },
          "StateId": {
            "type": "integer",
            "format": "int32"
          },
          "TypeId": {
            "type": "integer",
            "format": "int32"
          },
          "Expired": {
            "type": "boolean"
          },
          "Expiring": {
            "type": "boolean"
          },
          "IsRenewableByModal": {
            "type": "boolean",
            "nullable": true
          },
          "SerialCode": {
            "type": "string",
            "nullable": true
          },
          "Applicant": {
            "type": "string",
            "nullable": true
          },
          "ApplicantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "PrintDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "NotificationAttempt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "Username": {
            "type": "string",
            "nullable": true
          },
          "LastModified": {
            "type": "string",
            "format": "date-time"
          },
          "LastModification": {
            "type": "string",
            "nullable": true
          },
          "ExtendedDate": {
            "type": "string",
            "description": "Proroga definita nei tipi di autorizzazione",
            "format": "date-time",
            "nullable": true
          },
          "RenewableForCopy": {
            "type": "boolean"
          },
          "Amount": {
            "type": "number"
          },
          "PlaceDescription": {
            "type": "string",
            "description": "Eventuale struttura che ha effettuato la richiesta\r\ncampo non obbligatorio",
            "nullable": true
          },
          "Vehicles": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "",
            "nullable": true
          },
          "IsExtFrontOffice": {
            "type": "boolean"
          },
          "Origin": {
            "type": "string",
            "nullable": true
          },
          "CanDeleteOrUpdate": {
            "type": "boolean"
          },
          "DailyMaxTransits": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "SimultaneousAccess": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ParkingSpaces": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "description": "Dati di un'Autorizzazione."
      },
      "WSAutoscan.Application.ZtlAuthorization.Dto.AuthorizationStatusDto": {
        "title": "WSAutoscan.Application.ZtlAuthorization.Dto.AuthorizationStatusDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "description": "ID dell'Autorizzazione.",
            "format": "int64"
          },
          "StatusId": {
            "type": "integer",
            "description": "ID dello Stato.",
            "format": "int32"
          },
          "DeniedReason": {
            "type": "string",
            "description": "Eventuale motivo per Autorizzazione in stato 'respinto'.",
            "nullable": true
          }
        },
        "description": "Stato di un'Autorizzazione."
      },
      "WSAutoscan.Application.ZtlAuthorization.Dto.ExternalAuthorizationDto": {
        "title": "WSAutoscan.Application.ZtlAuthorization.Dto.ExternalAuthorizationDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int64"
          },
          "Count": {
            "type": "integer",
            "format": "int32"
          },
          "ReleaseDate": {
            "type": "string",
            "format": "date-time"
          },
          "DeniedReason": {
            "type": "string",
            "nullable": true
          },
          "StateId": {
            "type": "integer",
            "format": "int32"
          },
          "TypeId": {
            "type": "integer",
            "format": "int32"
          },
          "Expired": {
            "type": "boolean"
          },
          "Expiring": {
            "type": "boolean"
          },
          "IsRenewableByModal": {
            "type": "boolean",
            "nullable": true
          },
          "SerialCode": {
            "type": "string",
            "nullable": true
          },
          "Applicant": {
            "type": "string",
            "nullable": true
          },
          "ApplicantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "PrintDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "NotificationAttempt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "Username": {
            "type": "string",
            "nullable": true
          },
          "LastModified": {
            "type": "string",
            "format": "date-time"
          },
          "LastModification": {
            "type": "string",
            "nullable": true
          },
          "ExtendedDate": {
            "type": "string",
            "description": "Proroga definita nei tipi di autorizzazione",
            "format": "date-time",
            "nullable": true
          },
          "RenewableForCopy": {
            "type": "boolean"
          },
          "Amount": {
            "type": "number"
          },
          "PlaceDescription": {
            "type": "string",
            "description": "Eventuale struttura che ha effettuato la richiesta\r\ncampo non obbligatorio",
            "nullable": true
          },
          "Vehicles": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "",
            "nullable": true
          },
          "IsExtFrontOffice": {
            "type": "boolean"
          },
          "Origin": {
            "type": "string",
            "nullable": true
          },
          "CanDeleteOrUpdate": {
            "type": "boolean"
          },
          "DailyMaxTransits": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "SimultaneousAccess": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ParkingSpaces": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Driver": {
            "type": "string",
            "nullable": true
          },
          "PlaceDescriptionList": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.ZtlAuthorization.Dto.MassivePermitRenewalRequest": {
        "title": "WSAutoscan.Application.ZtlAuthorization.Dto.MassivePermitRenewalRequest",
        "type": "object",
        "properties": {
          "DateRenews": {
            "type": "string",
            "description": "Nuva data di fine validità.",
            "format": "date-time",
            "nullable": true
          },
          "PeriodsRenews": {
            "type": "integer",
            "description": "Numero di mesi per i quali rinnovare l'Autorizzazione.",
            "format": "int32",
            "nullable": true
          },
          "Price": {
            "type": "number",
            "description": "Costo del rinnovo."
          },
          "PaymentDate": {
            "type": "string",
            "description": "Data di pagamento.",
            "format": "date-time",
            "nullable": true
          },
          "CreateNewOnRenew": {
            "type": "boolean",
            "description": "Flag per creare una nuova Autorizzazione."
          },
          "UseAuthTypeDuration": {
            "type": "boolean",
            "description": "Flag per indicare di rinnovare l'Autorizzazione utilizzando i vincoli di durata della Tipologia associata."
          },
          "AuthorizationIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Elenco di ID delle Autorizzazioni da rinnovare.",
            "nullable": true
          }
        },
        "description": "Dati per il rinnovo massivo di più Autorizzazioni."
      },
      "WSAutoscan.Application.ZtlAuthorization.Dto.PermitVersionDto": {
        "title": "WSAutoscan.Application.ZtlAuthorization.Dto.PermitVersionDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int64"
          },
          "Timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "StateId": {
            "type": "integer",
            "format": "int32"
          },
          "TypeId": {
            "type": "integer",
            "format": "int32"
          },
          "PermissionNumber": {
            "type": "string",
            "nullable": true
          },
          "RevokeDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "RevokeReason": {
            "type": "string",
            "nullable": true
          },
          "Applicant": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.ZTL_UserRegistry"
              },
              {}
            ]
          },
          "Notes": {
            "type": "string",
            "nullable": true
          },
          "EditReason": {
            "type": "string",
            "nullable": true
          },
          "PrintDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "ExtendedExpiration": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "UserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "NotificationId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "DailyMaxTransits": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "SimultaneousAccess": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ParkingSpaces": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.User.Dto.ChangePasswordResultDto": {
        "title": "WSAutoscan.Application.User.Dto.ChangePasswordResultDto",
        "type": "object",
        "properties": {
          "Success": {
            "type": "boolean",
            "description": "Esito positivo dell'operazione."
          },
          "ErrorCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Application.User.Dto.ChangePasswordError"
              },
              {
                "description": "Codice di errore relativo ad un cambio password."
              }
            ]
          }
        },
        "description": "Risultato di un'operazione di cambio password."
      },
      "WSAutoscan.Application.User.Dto.PersonalData": {
        "title": "WSAutoscan.Application.User.Dto.PersonalData",
        "type": "object",
        "properties": {
          "FullName": {
            "type": "string",
            "nullable": true
          },
          "Email": {
            "type": "string",
            "nullable": true
          },
          "Phone": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.User.Dto.UserDataWithPermissions": {
        "title": "WSAutoscan.Application.User.Dto.UserDataWithPermissions",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "description": "Identificativo Utente",
            "format": "int32"
          },
          "Username": {
            "type": "string",
            "description": "Nome Utente",
            "nullable": true
          },
          "FullName": {
            "type": "string",
            "description": "Nome completo dell'utente",
            "nullable": true
          },
          "Guid": {
            "type": "string",
            "description": "Identificativo univoco GUID dell'utente",
            "nullable": true
          },
          "Active": {
            "type": "boolean",
            "description": "Indica se l'utente e' attivo o meno"
          },
          "Email": {
            "type": "string",
            "description": "Email dell'utente",
            "nullable": true
          },
          "Phone": {
            "type": "string",
            "description": "Numero telefono dell'utente",
            "nullable": true
          },
          "CustomerId": {
            "type": "integer",
            "description": "Id dell'ente dell'utente",
            "format": "int32"
          },
          "Password": {
            "type": "string",
            "description": "Password dell'utente",
            "nullable": true
          },
          "Access": {
            "type": "string",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "Descrizione dell'utente",
            "nullable": true
          },
          "ChangePassword": {
            "type": "string",
            "description": "Data ultimo cambio password",
            "format": "date-time",
            "nullable": true
          },
          "LastAccess": {
            "type": "string",
            "description": "Data ultimo accesso",
            "format": "date-time",
            "nullable": true
          },
          "RoleId": {
            "type": "integer",
            "description": "Id ruolo",
            "format": "int32",
            "nullable": true
          },
          "ChangePasswordDays": {
            "type": "integer",
            "description": "Giorni dopo i quali l'utente deve cambiare password",
            "format": "int32"
          },
          "AccountInvalidationDays": {
            "type": "integer",
            "description": "Giorni consecutivi senza eseguire l'accesso dopo i quali l'account viene invalidato",
            "format": "int32"
          },
          "SatAccess": {
            "type": "boolean",
            "description": "Indica la possibilita' di accesso al modulo sat"
          },
          "RedAccess": {
            "type": "boolean",
            "description": "Indica la possibilita' di accesso al modulo sat"
          },
          "VeloxAccess": {
            "type": "boolean",
            "description": "Indica la possibilita' di accesso al modulo red"
          },
          "ZtlAccess": {
            "type": "boolean",
            "description": "Indica la possibilita' di accesso al modulo ztl"
          },
          "ScnttVisible": {
            "type": "boolean",
            "description": "Possibilita' di visualizzare gli scntt"
          },
          "AgentId": {
            "type": "string",
            "description": "Id agente",
            "nullable": true
          },
          "Gates": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Id dei gate di appartenenza dell'utente",
            "nullable": true
          },
          "TelegramUserId": {
            "type": "integer",
            "description": "Id di telegram dell'utente",
            "format": "int64"
          },
          "EnabledFrom": {
            "type": "string",
            "description": "Data di inizio abilitazione dell'utente.",
            "format": "date-time",
            "nullable": true
          },
          "EnabledTo": {
            "type": "string",
            "description": "Data di fine abilitazione dell'utente.",
            "format": "date-time",
            "nullable": true
          },
          "RequestedPermissions": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.User.Dto.UsersAuthTypePermissionsComplete": {
        "title": "WSAutoscan.Application.User.Dto.UsersAuthTypePermissionsComplete",
        "type": "object",
        "properties": {
          "Username": {
            "type": "string",
            "nullable": true
          },
          "UserId": {
            "type": "integer",
            "format": "int32"
          },
          "CanRead": {
            "type": "boolean"
          },
          "CanAdd": {
            "type": "boolean"
          },
          "CanDeleteOrUpdate": {
            "type": "boolean"
          },
          "PermitTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "AtLeastOneSelected": {
            "type": "boolean",
            "readOnly": true
          },
          "AuthorizationId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "WSAutoscan.Application.Vehicle.Dto.AS_VehicleDto": {
        "title": "WSAutoscan.Application.Vehicle.Dto.AS_VehicleDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Description": {
            "type": "string",
            "nullable": true
          },
          "Sanctionable": {
            "type": "boolean"
          },
          "AutoCancelViolation": {
            "type": "boolean"
          },
          "Heavy": {
            "type": "boolean"
          },
          "ScnttVehicle": {
            "type": "string",
            "nullable": true
          },
          "DttsisVehicle": {
            "type": "string",
            "nullable": true
          },
          "VehicleCamera": {
            "type": "string",
            "nullable": true
          },
          "VehicleExport": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.VeloxRule.Dto.VeloxExpireRuleDto": {
        "title": "WSAutoscan.Application.VeloxRule.Dto.VeloxExpireRuleDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "To": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.ZtlAuthorization.Dto.AuthorizationDuplicateRequestDto": {
        "title": "WSAutoscan.Application.ZtlAuthorization.Dto.AuthorizationDuplicateRequestDto",
        "type": "object",
        "properties": {
          "PermitsIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "description": "",
            "nullable": true
          },
          "TypeId": {
            "type": "integer",
            "format": "int32"
          },
          "ExtendedExpiration": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "DailyMaxTransits": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "SimultaneousAccess": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ParkingSpaces": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.ZtlAuthorization.Dto.OwnedVehicle": {
        "title": "WSAutoscan.Application.ZtlAuthorization.Dto.OwnedVehicle",
        "type": "object",
        "properties": {
          "Plate": {
            "type": "string",
            "nullable": true
          },
          "Country": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Nations"
              },
              {}
            ]
          },
          "Brand": {
            "type": "string",
            "nullable": true
          },
          "Model": {
            "type": "string",
            "nullable": true
          },
          "Note": {
            "type": "string",
            "nullable": true
          },
          "Origin": {
            "type": "string",
            "nullable": true
          },
          "EnvironmentalClass": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_EnvironmentalClass"
              },
              {}
            ]
          },
          "VehicleType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Vehicle"
              },
              {}
            ]
          },
          "Owner": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.ZTL_UserRegistry"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Application.ZtlAuthorization.Dto.PermitModificationResponseDto": {
        "title": "WSAutoscan.Application.ZtlAuthorization.Dto.PermitModificationResponseDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int64"
          },
          "Timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "SerialCode": {
            "type": "string",
            "nullable": true
          },
          "Amount": {
            "type": "number"
          }
        }
      },
      "WSAutoscan.Application.User.Dto.ChangePasswordError": {
        "title": "WSAutoscan.Application.User.Dto.ChangePasswordError",
        "enum": [
          1,
          2,
          3
        ],
        "type": "integer",
        "description": "Codice di errore relativo ad un cambio password."
      },
      "WSAutoscan.Application.User.Dto.AS_UserMinimalDto": {
        "title": "WSAutoscan.Application.User.Dto.AS_UserMinimalDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "description": "Identificativo Utente",
            "format": "int32"
          },
          "Username": {
            "type": "string",
            "description": "Nome Utente",
            "nullable": true
          }
        },
        "description": "Utente base"
      },
      "WSAutoscan.Application.User.Dto.LoginDto": {
        "title": "WSAutoscan.Application.User.Dto.LoginDto",
        "type": "object",
        "properties": {
          "Username": {
            "type": "string",
            "description": "Username per il login.",
            "nullable": true
          },
          "Password": {
            "type": "string",
            "description": "Password per il login.",
            "nullable": true
          }
        },
        "description": "Credenziali per il login."
      },
      "WSAutoscan.Application.User.Dto.ZTL_AuthorizationType_UserDto": {
        "title": "WSAutoscan.Application.User.Dto.ZTL_AuthorizationType_UserDto",
        "type": "object",
        "properties": {
          "UserId": {
            "type": "integer",
            "format": "int32"
          },
          "UsersAuthTypePermissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.User.Dto.UsersAuthTypePermissionsComplete"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.VeloxRule.Dto.VeloxRuleDetailDto": {
        "title": "WSAutoscan.Application.VeloxRule.Dto.VeloxRuleDetailDto",
        "type": "object",
        "properties": {
          "ValidFrom": {
            "type": "string",
            "description": "Inizio validita' regola",
            "format": "date-time"
          },
          "ValidTo": {
            "type": "string",
            "description": "Fine validita' della regola",
            "format": "date-time"
          },
          "StartTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.TimeSpan"
              },
              {}
            ]
          },
          "EndTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.TimeSpan"
              },
              {}
            ]
          }
        },
        "description": "Periodi di validita' regola"
      },
      "WSAutoscan.Application.VeloxRule.Dto.VeloxRuleDto": {
        "title": "WSAutoscan.Application.VeloxRule.Dto.VeloxRuleDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "description": "Id della regole",
            "format": "int32"
          },
          "Description": {
            "type": "string",
            "description": "Nome della regola",
            "nullable": true
          },
          "RuleTypeDictionaryId": {
            "type": "integer",
            "description": "Tipo della regola",
            "format": "int32"
          },
          "RuleDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.VeloxRule.Dto.VeloxRuleDetailDto"
            },
            "description": "Date di inizio e fine validita' della regola",
            "nullable": true
          },
          "TimeSlots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.VeloxRule.Dto.VeloxTimeSlotDto"
            },
            "description": "Orari della regola",
            "nullable": true
          },
          "IsFromMobile": {
            "type": "boolean",
            "description": "Indica se la regola e' stata creata da un dispositivo android o dal portale autoscan"
          },
          "IsClosed": {
            "type": "boolean",
            "description": "Indica se il dispositivo mobile ha finito il presidio"
          },
          "Active": {
            "type": "boolean",
            "description": "Indica se la regola e' attiva o meno"
          },
          "GatesIdSelected": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Id dei gate che interessano la regola",
            "nullable": true
          }
        },
        "description": "Regola estesa della velocita'"
      },
      "WSAutoscan.Application.VeloxRule.Dto.VeloxTimeSlotDto": {
        "title": "WSAutoscan.Application.VeloxRule.Dto.VeloxTimeSlotDto",
        "type": "object",
        "properties": {
          "DaysId": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean"
            },
            "description": "Id dei giorni di validita' della regola",
            "nullable": true
          },
          "TimeSpan": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Application.VeloxRule.Dto.VeloxTimeSpanDto"
              },
              {
                "description": "Orari di validita' della regola"
              }
            ]
          }
        },
        "description": "Giorni e ore di validita' della regola"
      },
      "WSAutoscan.Application.VeloxRule.Dto.VeloxTimeSpanDto": {
        "title": "WSAutoscan.Application.VeloxRule.Dto.VeloxTimeSpanDto",
        "type": "object",
        "properties": {
          "From": {
            "type": "integer",
            "description": "Orario inizio validita' della regola",
            "format": "int64"
          },
          "To": {
            "type": "integer",
            "description": "Orario fine velidita' della regola",
            "format": "int64"
          }
        },
        "description": "Orari di validita' della regola"
      },
      "WSAutoscan.Application.ViolationSearch.Dto.ViolationSearchRequestDto": {
        "title": "WSAutoscan.Application.ViolationSearch.Dto.ViolationSearchRequestDto",
        "type": "object",
        "properties": {
          "DateFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "DateTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "TimeFrom": {
            "type": "string",
            "nullable": true
          },
          "TimeTo": {
            "type": "string",
            "nullable": true
          },
          "Plate": {
            "type": "string",
            "nullable": true
          },
          "Nations": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "",
            "nullable": true
          },
          "CameraIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "",
            "nullable": true
          },
          "VTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "",
            "nullable": true
          },
          "forSearchPage": {
            "type": "boolean"
          },
          "Direction": {
            "type": "string",
            "nullable": true
          },
          "ViolationNotValidated": {
            "type": "boolean"
          },
          "ViolationSanctioned": {
            "type": "boolean"
          },
          "ViolationAuthorized": {
            "type": "boolean"
          },
          "ViolationWaiting": {
            "type": "boolean"
          },
          "ViolationToAuthorize": {
            "type": "boolean"
          },
          "ViolationExported": {
            "type": "boolean"
          },
          "ViolationDataConfirmed": {
            "type": "boolean"
          },
          "Limit": {
            "type": "integer",
            "format": "int32"
          },
          "OrderType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Enums.OrderTypeEnum"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Application.ZtlAuthorization.Dto.AuthorizationsGroupDto": {
        "title": "WSAutoscan.Application.ZtlAuthorization.Dto.AuthorizationsGroupDto",
        "type": "object",
        "properties": {
          "AuthorizationDetailId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.ZtlAuthorization.Dto.AuthorizationVersionDto": {
        "title": "WSAutoscan.Application.ZtlAuthorization.Dto.AuthorizationVersionDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int64"
          },
          "Count": {
            "type": "integer",
            "format": "int32"
          },
          "SerialCode": {
            "type": "string",
            "nullable": true
          },
          "ReleaseDate": {
            "type": "string",
            "format": "date-time"
          },
          "StateId": {
            "type": "integer",
            "format": "int32"
          },
          "TypeId": {
            "type": "integer",
            "format": "int32"
          },
          "Applicant": {
            "type": "string",
            "nullable": true
          },
          "ApplicantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "PrintDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "Username": {
            "type": "string",
            "nullable": true
          },
          "LastModified": {
            "type": "string",
            "format": "date-time"
          },
          "LastModification": {
            "type": "string",
            "nullable": true
          },
          "DailyMaxTransits": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "SimultaneousAccess": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ParkingSpaces": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Vehicles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.VehicleDto"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.ZtlAuthorization.Dto.GetPermissionsRequestDto": {
        "title": "WSAutoscan.Application.ZtlAuthorization.Dto.GetPermissionsRequestDto",
        "type": "object",
        "properties": {
          "AuthorizationNumber": {
            "type": "string",
            "description": "Numero dell'Autorizzazione.",
            "nullable": true
          },
          "Plate": {
            "type": "string",
            "description": "Targa associata all'Autorizzazione.",
            "nullable": true
          },
          "DateFrom": {
            "type": "string",
            "description": "Data di inizio validità dell'Autorizzazione.",
            "format": "date-time",
            "nullable": true
          },
          "DateTo": {
            "type": "string",
            "description": "Data di fine validità dell'Autorizzazione.",
            "format": "date-time",
            "nullable": true
          },
          "Nations": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Nazionalità dei veicoli associati all'Autorizzazione.",
            "nullable": true
          },
          "vTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Tipo di veicoli associati all'Autorizzazione.",
            "nullable": true
          },
          "AuthorizationTypes": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Tipologie di Autorizzazione.",
            "nullable": true
          },
          "Zones": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Zone ZTL di validità dell'Autorizzazione.",
            "nullable": true
          },
          "PlaceDescriptionList": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Elenco Strutture ricettive.",
            "nullable": true
          },
          "Valid": {
            "type": "boolean",
            "description": "Autorizzazioni con stato 'valido'."
          },
          "Denied": {
            "type": "boolean",
            "description": "Autorizzazioni con stato 'respinto'."
          },
          "Deleted": {
            "type": "boolean",
            "description": "Autorizzazioni con stato 'eliminato'."
          },
          "Freezed": {
            "type": "boolean",
            "description": "Autorizzazioni con stato 'sospeso'."
          },
          "Waiting": {
            "type": "boolean",
            "description": "Autorizzazioni con stato 'in attesa'."
          },
          "Revoke": {
            "type": "boolean",
            "description": "Autorizzazioni con stato 'revocato'."
          },
          "Expired": {
            "type": "boolean",
            "description": "Autorizzazioni con stato 'scaduto'."
          },
          "Deadline": {
            "type": "boolean",
            "description": "Autorizzazioni con stato 'in scadenza'."
          },
          "Printed": {
            "type": "boolean",
            "description": "Autorizzazioni stampate.",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "description": "Nome del richiedente.",
            "nullable": true
          },
          "PlaceDescription": {
            "type": "string",
            "description": "Struttura Esterna richiedente.",
            "nullable": true
          },
          "InclusiveDate": {
            "type": "boolean",
            "description": "Flag per indicare che le date di validità devono essere considerate come inclusive."
          },
          "SelectedSearchType": {
            "type": "string",
            "description": "Variabile per indicare il metodo di ricerca selezionato",
            "nullable": true
          },
          "Limit": {
            "type": "integer",
            "description": "Numero di risultati da ritornare",
            "format": "int32",
            "nullable": true
          },
          "ExactSearch": {
            "type": "boolean",
            "description": "Flag per indicare se effettuare una ricerca esatta o predittiva"
          }
        },
        "description": "Filtro per la ricerca delle Autorizzazioni."
      },
      "WSAutoscan.Application.ZtlAuthorization.Dto.PermitPartDto": {
        "title": "WSAutoscan.Application.ZtlAuthorization.Dto.PermitPartDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "DayPeriods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.ZtlPeriodDao"
            },
            "description": "",
            "nullable": true
          },
          "Gates": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "",
            "nullable": true
          },
          "TimePeriods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.PermitTimeSlotDto"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.ZtlAuthorization.Dto.PermitTimeSlotDto": {
        "title": "WSAutoscan.Application.ZtlAuthorization.Dto.PermitTimeSlotDto",
        "type": "object",
        "properties": {
          "StartTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.TimeSpan"
              },
              {}
            ]
          },
          "EndTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.TimeSpan"
              },
              {}
            ]
          },
          "Days": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.User.Dto.MobileLoginResultDto": {
        "title": "WSAutoscan.Application.User.Dto.MobileLoginResultDto",
        "type": "object",
        "properties": {
          "UserLogged": {
            "type": "object"
          },
          "Success": {
            "type": "boolean",
            "description": "Login avvenuto con successo."
          },
          "ChangePwd": {
            "type": "boolean",
            "description": "È richiesto il cambio della password."
          },
          "ErrorType": {
            "type": "integer",
            "description": "Codice di errore per il login.",
            "format": "int32"
          },
          "Message": {
            "type": "string",
            "description": "Messaggio di errore per il login.",
            "nullable": true
          }
        },
        "description": "Risultato di un'operazione di login effettuata dalla app Autosc@n SAT."
      },
      "WSAutoscan.Application.User.Dto.SAT_RoleDto": {
        "title": "WSAutoscan.Application.User.Dto.SAT_RoleDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Description": {
            "type": "string",
            "nullable": true
          },
          "Code": {
            "type": "string",
            "nullable": true
          },
          "System": {
            "type": "boolean"
          },
          "Permission": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.User.Dto.AS_PermissionDto"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.Vehicle.Dto.AS_VehicleMinDto": {
        "title": "WSAutoscan.Application.Vehicle.Dto.AS_VehicleMinDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Description": {
            "type": "string",
            "nullable": true
          },
          "Sanctionable": {
            "type": "boolean"
          },
          "AutoCancelViolation": {
            "type": "boolean"
          },
          "Heavy": {
            "type": "boolean"
          }
        }
      },
      "WSAutoscan.Application.Vehicle.Dto.VehicleCameraDto": {
        "title": "WSAutoscan.Application.Vehicle.Dto.VehicleCameraDto",
        "type": "object",
        "properties": {
          "Description": {
            "type": "string",
            "nullable": true
          },
          "VehicleCameras": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.VeloxRuleTypesService.Dto.VeloxRuleTypeDto": {
        "title": "WSAutoscan.Application.VeloxRuleTypesService.Dto.VeloxRuleTypeDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "description": "Id della regola",
            "format": "int32"
          },
          "RuleType": {
            "type": "string",
            "description": "Tipo di regola",
            "nullable": true
          }
        },
        "description": "Regola riguardante la velocita'"
      },
      "WSAutoscan.Application.ViolationSearch.Dto.ViolationSearchResponseDto": {
        "title": "WSAutoscan.Application.ViolationSearch.Dto.ViolationSearchResponseDto",
        "type": "object",
        "properties": {
          "Count": {
            "type": "integer",
            "format": "int32"
          },
          "Transits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.Transit.Dto.ZTL_TransitDto"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.ZtlAuthorization.Dto.AuthorizationRequestDto": {
        "title": "WSAutoscan.Application.ZtlAuthorization.Dto.AuthorizationRequestDto",
        "type": "object",
        "properties": {
          "AuthorizationId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "SerialNumber": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "AuthorizationHolderRegistryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "StateId": {
            "type": "integer",
            "format": "int32"
          },
          "TypeId": {
            "type": "integer",
            "format": "int32"
          },
          "Notes": {
            "type": "string",
            "nullable": true
          },
          "EditReason": {
            "type": "string",
            "nullable": true
          },
          "ExtendedExpiration": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "Origin": {
            "type": "string",
            "nullable": true
          },
          "PaymentDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "Payment": {
            "type": "boolean"
          },
          "Price": {
            "type": "number"
          },
          "PaymentReason": {
            "type": "string",
            "nullable": true
          },
          "SendIoNotification": {
            "type": "boolean"
          },
          "DailyMaxTransits": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "SimultaneousAccess": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ParkingSpaces": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "SavePreviousVersion": {
            "type": "boolean"
          },
          "IsFromConcilia": {
            "type": "boolean"
          },
          "RivalidaImmediata": {
            "type": "boolean"
          },
          "SkipNotificaIO": {
            "type": "boolean"
          },
          "IssueDate": {
            "type": "string",
            "format": "date-time"
          },
          "ImportedExtPermitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.ZtlAuthorization.Dto.ExternalAuthorizationsStatusCount": {
        "title": "WSAutoscan.Application.ZtlAuthorization.Dto.ExternalAuthorizationsStatusCount",
        "type": "object",
        "properties": {
          "StatusId": {
            "type": "integer",
            "format": "int32"
          },
          "Count": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "WSAutoscan.Application.ZtlAuthorization.Dto.PermitDetailDto": {
        "title": "WSAutoscan.Application.ZtlAuthorization.Dto.PermitDetailDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int64"
          },
          "DailyMaxTransits": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "SimultaneousAccess": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ParkingSpaces": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorizationAttachment.Dto.AuthorizationAttachmentDto"
            },
            "description": "",
            "nullable": true
          },
          "Prescriptions": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "",
            "nullable": true
          },
          "Vehicles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.OwnedVehicle"
            },
            "description": "",
            "nullable": true
          },
          "Details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.PermitPartDto"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.ZtlAuthorization.Dto.PermitRenewalRequest": {
        "title": "WSAutoscan.Application.ZtlAuthorization.Dto.PermitRenewalRequest",
        "type": "object",
        "properties": {
          "DateRenews": {
            "type": "string",
            "description": "Nuva data di fine validità.",
            "format": "date-time",
            "nullable": true
          },
          "PeriodsRenews": {
            "type": "integer",
            "description": "Numero di mesi per i quali rinnovare l'Autorizzazione.",
            "format": "int32",
            "nullable": true
          },
          "Price": {
            "type": "number",
            "description": "Costo del rinnovo."
          },
          "PaymentDate": {
            "type": "string",
            "description": "Data di pagamento.",
            "format": "date-time",
            "nullable": true
          },
          "CreateNewOnRenew": {
            "type": "boolean",
            "description": "Flag per creare una nuova Autorizzazione."
          },
          "UseAuthTypeDuration": {
            "type": "boolean",
            "description": "Flag per indicare di rinnovare l'Autorizzazione utilizzando i vincoli di durata della Tipologia associata."
          }
        },
        "description": "Dati per il rinnovo di un'Autorizzazione."
      },
      "WSAutoscan.Application.ZtlAuthorization.Dto.RegisteredVehicleDto": {
        "title": "WSAutoscan.Application.ZtlAuthorization.Dto.RegisteredVehicleDto",
        "type": "object",
        "properties": {
          "Plate": {
            "type": "string",
            "description": "Targa del Veicolo.",
            "nullable": true
          },
          "CountryId": {
            "type": "integer",
            "description": "ID della Nazionalità del Veicolo.",
            "format": "int32"
          },
          "Brand": {
            "type": "string",
            "description": "Marca del Veicolo.",
            "nullable": true
          },
          "Model": {
            "type": "string",
            "description": "Modello del Veicolo.",
            "nullable": true
          },
          "Note": {
            "type": "string",
            "description": "Note relative al Veicolo.",
            "nullable": true
          },
          "Origin": {
            "type": "string",
            "description": "Origine del Veicolo, inteso come codice della provenienza di chi l'ha inserito in un'Autorizzazione.",
            "nullable": true
          },
          "EnvironmentalClassId": {
            "type": "integer",
            "description": "ID della classe ambientale del Veicolo.",
            "format": "int32",
            "nullable": true
          },
          "VehicleTypeId": {
            "type": "integer",
            "description": "ID della Tipologia del Veicolo.",
            "format": "int32"
          },
          "Owner": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.ZTL_UserRegistry"
              },
              {}
            ]
          }
        },
        "description": "Veicolo associato a un'Autorizzazione."
      },
      "WSAutoscan.Application.ZtlAuthorization.Dto.RevokePermitDto": {
        "title": "WSAutoscan.Application.ZtlAuthorization.Dto.RevokePermitDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "description": "ID dell'Autorizzazione.",
            "format": "int64"
          },
          "RevokeDate": {
            "type": "string",
            "description": "Data di revoca.",
            "format": "date-time"
          },
          "Reason": {
            "type": "string",
            "description": "Motivo della revoca.",
            "nullable": true
          }
        },
        "description": "Dati per la revoca di un'Autorizzazione."
      },
      "WSAutoscan.Application.ZtlAuthorization.Dto.VehicleDto": {
        "title": "WSAutoscan.Application.ZtlAuthorization.Dto.VehicleDto",
        "type": "object",
        "properties": {
          "Plate": {
            "type": "string",
            "nullable": true
          },
          "Country": {
            "type": "string",
            "nullable": true
          },
          "VehicleType": {
            "type": "string",
            "nullable": true
          },
          "EditReason": {
            "type": "string",
            "nullable": true
          },
          "EditReasonType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.VehicleEditReasonTypeDto"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Application.ZtlAuthorization.Dto.VersionDetails": {
        "title": "WSAutoscan.Application.ZtlAuthorization.Dto.VersionDetails",
        "type": "object",
        "properties": {
          "AuthorizationId": {
            "type": "integer",
            "format": "int64"
          },
          "Timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "WSAutoscan.Application.ZtlAuthorization.Dto.ZtlPeriodDao": {
        "title": "WSAutoscan.Application.ZtlAuthorization.Dto.ZtlPeriodDao",
        "type": "object",
        "properties": {
          "ValidFrom": {
            "type": "string",
            "format": "date-time"
          },
          "ValidTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "ExtendedDate": {
            "type": "string",
            "description": "Proroga fino al definita nella pagina delle proroghe",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.ZtlCommon.ZtlTimeSlotDto": {
        "title": "WSAutoscan.Application.ZtlCommon.ZtlTimeSlotDto",
        "type": "object",
        "properties": {
          "DaysId": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean"
            },
            "nullable": true
          },
          "TimeSpan": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Application.ZtlCommon.ZtlTimeSpanDto"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Application.ZtlFrontOfficeApplication.Dto.ZtlFrontOfficeAplicationAssociatePermitDto": {
        "title": "WSAutoscan.Application.ZtlFrontOfficeApplication.Dto.ZtlFrontOfficeAplicationAssociatePermitDto",
        "type": "object",
        "properties": {
          "PermitId": {
            "type": "integer",
            "format": "int64"
          },
          "FrontOfficeAplicationId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "WSAutoscan.Application.ZtlFrontOfficeApplication.ZtlFrontOfficeApplicationLastStatusDto": {
        "title": "WSAutoscan.Application.ZtlFrontOfficeApplication.ZtlFrontOfficeApplicationLastStatusDto",
        "type": "object",
        "properties": {
          "TimeStamp": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "UserName": {
            "type": "string",
            "nullable": true
          },
          "Notes": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.ZtlFrontOfficeNotes.Dto.FrontOfficeNotesRequestDto": {
        "title": "WSAutoscan.Application.ZtlFrontOfficeNotes.Dto.FrontOfficeNotesRequestDto",
        "type": "object",
        "properties": {
          "Notes": {
            "type": "string",
            "nullable": true
          },
          "FrontOfficeApplicationId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "WSAutoscan.Application.ZtlPassLombardia.Dto.ZtlPass_SettingsDto": {
        "title": "WSAutoscan.Application.ZtlPassLombardia.Dto.ZtlPass_SettingsDto",
        "type": "object",
        "properties": {
          "CustomerId": {
            "type": "integer",
            "format": "int32"
          },
          "DescEnte": {
            "type": "string",
            "nullable": true
          },
          "ConsumerKey": {
            "type": "string",
            "nullable": true
          },
          "ConsumerSecret": {
            "type": "string",
            "nullable": true
          },
          "CodIpaAutorizzatore": {
            "type": "string",
            "nullable": true
          },
          "IsCredenzialiValide": {
            "type": "boolean",
            "readOnly": true
          }
        }
      },
      "WSAutoscan.Application.ZtlPermitConcilia.Dto.ZtlPermitConciliaSincronizzazioneRequest": {
        "title": "WSAutoscan.Application.ZtlPermitConcilia.Dto.ZtlPermitConciliaSincronizzazioneRequest",
        "type": "object",
        "properties": {
          "Nr_syncronize": {
            "type": "integer",
            "format": "int32"
          },
          "Nr_total": {
            "type": "integer",
            "format": "int32"
          },
          "Nr_errori": {
            "type": "integer",
            "format": "int32"
          },
          "Nr_skipped": {
            "type": "integer",
            "format": "int32"
          },
          "Start_time": {
            "type": "string",
            "format": "date-time"
          },
          "End_time": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "WSAutoscan.Application.ZtlSettings.Dto.ZoneMin": {
        "title": "WSAutoscan.Application.ZtlSettings.Dto.ZoneMin",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "Description": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Gates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.ZtlSettings.Dto.GateMin"
            },
            "description": "",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "WSAutoscan.Application.ZtlSettings.Dto.ZTL_ZtlZoneGateCameraDto": {
        "title": "WSAutoscan.Application.ZtlSettings.Dto.ZTL_ZtlZoneGateCameraDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Description": {
            "type": "string",
            "nullable": true
          },
          "TypeId": {
            "type": "integer",
            "format": "int32"
          },
          "Type": {
            "type": "string",
            "nullable": true
          },
          "GatesIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "",
            "nullable": true
          },
          "ZoneVehicles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.ZtlSettings.Dto.VehicleZoneMinDto"
            },
            "description": "",
            "nullable": true
          },
          "GatesDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.ZtlSettings.Dto.ZTL_ZtlZoneGateCameraDtoGateDetailMin"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.ZtlStatistic.Dto.ZtlStatisticAuthorizationTypeDto": {
        "title": "WSAutoscan.Application.ZtlStatistic.Dto.ZtlStatisticAuthorizationTypeDto",
        "type": "object",
        "properties": {
          "AuthorizationTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "AuthorizationTypeDescription": {
            "type": "string",
            "nullable": true
          },
          "TotalAuthorized": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "WSAutoscan.Application.ZtlStatistic.Dto.ZtlStatisticGateDto": {
        "title": "WSAutoscan.Application.ZtlStatistic.Dto.ZtlStatisticGateDto",
        "type": "object",
        "properties": {
          "GateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "GateDescription": {
            "type": "string",
            "nullable": true
          },
          "TotalAuthorized": {
            "type": "integer",
            "format": "int32"
          },
          "TotalSanctioned": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "WSAutoscan.Application.ZtlAuthorizationAttachment.Dto.AuthorizationAttachmentDto": {
        "title": "WSAutoscan.Application.ZtlAuthorizationAttachment.Dto.AuthorizationAttachmentDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Description": {
            "type": "string",
            "nullable": true
          },
          "MimeType": {
            "type": "string",
            "nullable": true
          },
          "FileName": {
            "type": "string",
            "nullable": true
          },
          "Guid": {
            "type": "string",
            "format": "uuid"
          },
          "UserId": {
            "type": "integer",
            "format": "int32"
          },
          "CustomerId": {
            "type": "integer",
            "format": "int32"
          },
          "DateInsert": {
            "type": "string",
            "format": "date-time"
          },
          "Status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorizationAttachment.Dto.Status"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Application.ZtlAuthorizedTransit.Dto.ZtlAuthorizedTransitDto": {
        "title": "WSAutoscan.Application.ZtlAuthorizedTransit.Dto.ZtlAuthorizedTransitDto",
        "type": "object",
        "properties": {
          "Plate": {
            "type": "string",
            "nullable": true
          },
          "TransitDate": {
            "type": "string",
            "format": "date-time"
          },
          "TransitExitDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.ZtlBlacklist.Dto.ZtlBlacklistDto": {
        "title": "WSAutoscan.Application.ZtlBlacklist.Dto.ZtlBlacklistDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Description": {
            "type": "string",
            "nullable": true
          },
          "CustomerId": {
            "type": "integer",
            "format": "int32"
          },
          "Enabled": {
            "type": "boolean"
          },
          "Emails": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "",
            "nullable": true
          },
          "BlacklistPlates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.ZtlBlacklist.Dto.ZtlBlacklistPlateDto"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.ZtlBlacklist.Dto.ZtlBlacklistPlateDto": {
        "title": "WSAutoscan.Application.ZtlBlacklist.Dto.ZtlBlacklistPlateDto",
        "type": "object",
        "properties": {
          "Plate": {
            "type": "string",
            "nullable": true
          },
          "Note": {
            "type": "string",
            "nullable": true
          },
          "ExpiryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "InsertDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "WSAutoscan.Application.ZtlFrontOfficeApplication.Dto.ZtlFrontOfficeApplicationNotificationDto": {
        "title": "WSAutoscan.Application.ZtlFrontOfficeApplication.Dto.ZtlFrontOfficeApplicationNotificationDto",
        "type": "object",
        "properties": {
          "SendStateId": {
            "type": "integer",
            "format": "int32"
          },
          "SendedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "SendResult": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.ZtlFrontOfficeApplication.Dto.ZtlFrontOfficeAttachmentDto": {
        "title": "WSAutoscan.Application.ZtlFrontOfficeApplication.Dto.ZtlFrontOfficeAttachmentDto",
        "type": "object",
        "properties": {
          "Guid": {
            "type": "string",
            "format": "uuid"
          },
          "Description": {
            "type": "string",
            "nullable": true
          },
          "FileName": {
            "type": "string",
            "nullable": true
          },
          "ContentType": {
            "type": "string",
            "nullable": true
          },
          "IsXmlDocument": {
            "type": "boolean",
            "readOnly": true
          }
        }
      },
      "WSAutoscan.Application.ZtlFrontOfficeRegistry.Dto.ZtlFrontOfficeRegistryDto": {
        "title": "WSAutoscan.Application.ZtlFrontOfficeRegistry.Dto.ZtlFrontOfficeRegistryDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "CustomerId": {
            "type": "integer",
            "format": "int32"
          },
          "Year": {
            "type": "integer",
            "format": "int32"
          },
          "RegistryCode": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.ZtlPermitConcilia.Dto.ZtlPermitConicliaRequestDto": {
        "title": "WSAutoscan.Application.ZtlPermitConcilia.Dto.ZtlPermitConicliaRequestDto",
        "type": "object",
        "properties": {
          "IdPermesso": {
            "type": "integer",
            "format": "int64"
          },
          "Varchi": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "",
            "nullable": true
          },
          "TipoPermesso": {
            "type": "string",
            "nullable": true
          },
          "Stato": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Application.ZtlPermitConcilia.Dto.Enumz.ZtlPermitConciliaStatus"
              },
              {}
            ]
          },
          "Periodi": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.ZtlPermitConcilia.Dto.ZtlPermitConicliaRequestPeriodDto"
            },
            "description": "",
            "nullable": true
          },
          "FasceOrarie": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.ZtlPermitConcilia.Dto.ZtlPermitConicliaRequestTimeSlotDto"
            },
            "description": "",
            "nullable": true
          },
          "GiorniSettimana": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "",
            "nullable": true
          },
          "Veicoli": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "",
            "nullable": true
          },
          "NomeRichiedente": {
            "type": "string",
            "nullable": true
          },
          "CognomeRichiedente": {
            "type": "string",
            "nullable": true
          },
          "PersonaFisica": {
            "type": "boolean"
          },
          "Annotazioni": {
            "type": "string",
            "nullable": true
          },
          "TransitiGiornalieri": {
            "type": "integer",
            "format": "int32"
          },
          "DataRilascio": {
            "type": "string",
            "format": "date-time"
          },
          "RivalidaImmediata": {
            "type": "boolean"
          },
          "SkipIONotification": {
            "type": "boolean"
          },
          "CodiceFiscale": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.ZtlPermitConcilia.Dto.ZtlPermitConicliaRequestPeriodDto": {
        "title": "WSAutoscan.Application.ZtlPermitConcilia.Dto.ZtlPermitConicliaRequestPeriodDto",
        "type": "object",
        "properties": {
          "DataInizio": {
            "type": "string",
            "format": "date"
          },
          "DataFine": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "WSAutoscan.Application.ZtlRule.Dto.ZtlSurrogateRule": {
        "title": "WSAutoscan.Application.ZtlRule.Dto.ZtlSurrogateRule",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "nullable": true
          },
          "Active": {
            "type": "boolean"
          },
          "RuleDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.ZtlRule.Dto.ZtlRuleDetailDto"
            },
            "description": "",
            "nullable": true
          },
          "TimeSlots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.ZtlCommon.ZtlTimeSlotDto"
            },
            "description": "",
            "nullable": true
          },
          "GateMapping": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.ZtlSettings.Dto.VehicleZoneMinDto": {
        "title": "WSAutoscan.Application.ZtlSettings.Dto.VehicleZoneMinDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Description": {
            "type": "string",
            "nullable": true
          },
          "VehicleCamera": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.ZtlSettings.Dto.Zone": {
        "title": "WSAutoscan.Application.ZtlSettings.Dto.Zone",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "Description": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "TypeId": {
            "type": "integer",
            "format": "int32"
          },
          "Type": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Gates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.ZtlSettings.Dto.Gate"
            },
            "description": "",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "WSAutoscan.Application.ZtlSettings.Dto.ZtlSettingsDto": {
        "title": "WSAutoscan.Application.ZtlSettings.Dto.ZtlSettingsDto",
        "type": "object",
        "properties": {
          "RuleTolerance": {
            "type": "integer",
            "format": "int32"
          },
          "AuthorizationTolerance": {
            "type": "integer",
            "format": "int32"
          },
          "DuplicateTolerance": {
            "type": "integer",
            "format": "int32"
          },
          "DeadlineDays": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "KeepAuthorizedTransitDays": {
            "type": "integer",
            "format": "int32"
          },
          "KeepExportedTransitdDays": {
            "type": "integer",
            "format": "int32"
          },
          "AskReasonExternalAuthorization": {
            "type": "boolean"
          },
          "WidgetSliderMinuteStep": {
            "type": "integer",
            "format": "int32"
          },
          "UsePrescriptions": {
            "type": "boolean"
          },
          "UseAttachments": {
            "type": "boolean"
          },
          "RequirePaymentReason": {
            "type": "boolean"
          },
          "AllowedAttachments": {
            "type": "string",
            "nullable": true
          },
          "IsYearUsed": {
            "type": "boolean"
          },
          "FormatRules": {
            "type": "string",
            "nullable": true
          },
          "ProgressiveLength": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "BlurEnabledOnViolation": {
            "type": "boolean"
          },
          "BlurLevel": {
            "type": "integer",
            "format": "int32"
          },
          "ExportFormat": {
            "type": "string",
            "nullable": true
          },
          "IsExportProtectFromPassword": {
            "type": "boolean",
            "readOnly": true
          },
          "ExportProtectionPassword": {
            "type": "string",
            "nullable": true
          },
          "ExportContextImg": {
            "type": "boolean"
          },
          "ExportClaheBrightImages": {
            "type": "boolean"
          },
          "ExportViolationSequential": {
            "type": "integer",
            "format": "int64"
          },
          "CreateNewRecordOnRenew": {
            "type": "boolean"
          },
          "ContinueWithAuthNumbOnNewAuth": {
            "type": "boolean"
          },
          "ASIONotificationModalityId": {
            "type": "integer",
            "format": "int32"
          },
          "ASIONotificationDays": {
            "type": "integer",
            "format": "int32"
          },
          "EnableASIONotification": {
            "type": "boolean"
          },
          "MinutesBeforeSendIO": {
            "type": "integer",
            "format": "int32"
          },
          "AutomaticScrollViolationConfirm": {
            "type": "boolean"
          },
          "AutomaticScrollViolationCancel": {
            "type": "boolean"
          },
          "EnableNoteOnAuthorize": {
            "type": "boolean"
          },
          "SimultaneousAccessToleranceHours": {
            "type": "integer",
            "format": "int32"
          },
          "SimultaneousAccessRetentionDays": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "WSAutoscan.Application.ZtlStatistic.Dto.ZtlStatisticDto": {
        "title": "WSAutoscan.Application.ZtlStatistic.Dto.ZtlStatisticDto",
        "type": "object",
        "properties": {
          "Slot": {
            "type": "integer",
            "format": "int32"
          },
          "TotalAuthorized": {
            "type": "integer",
            "format": "int32"
          },
          "TotalSanctioned": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "WSAutoscan.Application.ZtlStatistic.Dto.ZtlStatisticVehicleTypeDto": {
        "title": "WSAutoscan.Application.ZtlStatistic.Dto.ZtlStatisticVehicleTypeDto",
        "type": "object",
        "properties": {
          "VehicleTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "VehicleTypeDescription": {
            "type": "string",
            "nullable": true
          },
          "TotalAuthorized": {
            "type": "integer",
            "format": "int32"
          },
          "TotalSanctioned": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "WSAutoscan.Application.ZtlAuthorization.Dto.ViolationsStatusNumDto": {
        "title": "WSAutoscan.Application.ZtlAuthorization.Dto.ViolationsStatusNumDto",
        "type": "object",
        "properties": {
          "StatusId": {
            "type": "integer",
            "format": "int32"
          },
          "Count": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "WSAutoscan.Application.ZtlAuthorizationType.Dto.PermitTypeDurationConstraints": {
        "title": "WSAutoscan.Application.ZtlAuthorizationType.Dto.PermitTypeDurationConstraints",
        "type": "object",
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.DurationConstraintName"
              },
              {}
            ]
          },
          "Locked": {
            "type": "boolean"
          },
          "Duration": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Utility.DateAndTime.Iso8601Duration"
              },
              {}
            ]
          },
          "ExtendedDuration": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Utility.DateAndTime.Iso8601Duration"
              },
              {}
            ]
          },
          "ExtendedExpiry": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.ZtlAuthorizationType.Dto.ZtlAuthorizationTypeDto": {
        "title": "WSAutoscan.Application.ZtlAuthorizationType.Dto.ZtlAuthorizationTypeDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Name": {
            "type": "string",
            "nullable": true
          },
          "CodeName": {
            "type": "string",
            "nullable": true
          },
          "Active": {
            "type": "boolean"
          },
          "IsEditBlocked": {
            "type": "boolean"
          },
          "IsAvailableOnline": {
            "type": "boolean"
          },
          "IsAvailableOutside": {
            "type": "boolean"
          },
          "IsForZtlPassLombardia": {
            "type": "boolean"
          },
          "IsForDisabledPerson": {
            "type": "boolean"
          },
          "NotifyIfExpiring": {
            "type": "boolean"
          },
          "EmissionPrice": {
            "type": "number"
          },
          "EditPrice": {
            "type": "number"
          },
          "PrintableText": {
            "type": "string",
            "nullable": true
          },
          "Retroactive": {
            "type": "boolean"
          },
          "SendIONotification": {
            "type": "boolean"
          },
          "DurationConstraint": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorizationType.Dto.PermitTypeDurationConstraints"
              },
              {}
            ]
          },
          "DailyMaxTransits": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ApprovalRequired": {
            "type": "boolean"
          },
          "SimultaneousAccess": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "PrintTemplates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorizationType.Dto.PrintTemplates"
            },
            "description": "",
            "nullable": true
          },
          "UsersIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "",
            "nullable": true
          },
          "UsersAuthTypePermissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.PermitTypeUser.Dto.UsersAuthTypePermissions"
            },
            "description": "",
            "nullable": true
          },
          "TimeSlots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.ZtlCommon.ZtlTimeSlotDto"
            },
            "description": "",
            "nullable": true
          },
          "FrontOfficeURN": {
            "type": "string",
            "nullable": true
          },
          "FrontOfficeApplicantRole": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.ZtlFrontOfficeApplication.Dto.UpdateFrontOfficeApplicationDto": {
        "title": "WSAutoscan.Application.ZtlFrontOfficeApplication.Dto.UpdateFrontOfficeApplicationDto",
        "type": "object",
        "properties": {
          "StatusId": {
            "type": "integer",
            "format": "int32"
          },
          "Notes": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.ZtlFrontOfficeApplication.Dto.ZtlFrontOfficeApplicationTypeDto": {
        "title": "WSAutoscan.Application.ZtlFrontOfficeApplication.Dto.ZtlFrontOfficeApplicationTypeDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Description": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.ZtlFrontOfficeApplication.ZtlFrontOfficeApplicationDto": {
        "title": "WSAutoscan.Application.ZtlFrontOfficeApplication.ZtlFrontOfficeApplicationDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "ProtocolNumber": {
            "type": "integer",
            "format": "int32"
          },
          "ProtocolYear": {
            "type": "integer",
            "format": "int32"
          },
          "ProtocolClassification": {
            "type": "string",
            "nullable": true
          },
          "ProtocolDatetime": {
            "type": "string",
            "format": "date-time"
          },
          "DocumentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "IpaCode": {
            "type": "string",
            "nullable": true
          },
          "CustomerId": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "ApplicationTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "StatusId": {
            "type": "integer",
            "format": "int32"
          },
          "ParentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ParentProtocol": {
            "type": "string",
            "nullable": true
          },
          "Attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.ZtlFrontOfficeApplication.Dto.ZtlFrontOfficeAttachmentDto"
            },
            "description": "",
            "nullable": true
          },
          "Notification": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Application.ZtlFrontOfficeApplication.Dto.ZtlFrontOfficeApplicationNotificationDto"
              },
              {}
            ]
          },
          "PermitId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "PermitSerialNumber": {
            "type": "string",
            "nullable": true
          },
          "LastStatusUpdate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Application.ZtlFrontOfficeApplication.ZtlFrontOfficeApplicationLastStatusDto"
              },
              {}
            ]
          },
          "Additions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.ZtlFrontOfficeApplication.ZtlFrontOfficeApplicationDto"
            },
            "description": "",
            "nullable": true
          },
          "IsAdditionRequestedExpired": {
            "type": "boolean",
            "description": "Se e' una \"da integrare\" scaduta allora true altrimenti fasle"
          }
        }
      },
      "WSAutoscan.Application.ZtlPermitConcilia.Dto.Enumz.ZtlPermitConciliaStatus": {
        "title": "WSAutoscan.Application.ZtlPermitConcilia.Dto.Enumz.ZtlPermitConciliaStatus",
        "enum": [
          1,
          2,
          3
        ],
        "type": "integer"
      },
      "WSAutoscan.Application.ZtlPermitConcilia.Dto.ZtlPermitConicliaRequestTimeSlotDto": {
        "title": "WSAutoscan.Application.ZtlPermitConcilia.Dto.ZtlPermitConicliaRequestTimeSlotDto",
        "type": "object",
        "properties": {
          "OraInizio": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.TimeSpan"
              },
              {}
            ]
          },
          "OraFine": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.TimeSpan"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Application.ZtlRenewService.Dto.ChildrenParent": {
        "title": "WSAutoscan.Application.ZtlRenewService.Dto.ChildrenParent",
        "type": "object",
        "properties": {
          "Child": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Application.ZtlRenewService.Dto.ZtlRenewChildrenParent"
              },
              {}
            ]
          },
          "Parent": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Application.ZtlRenewService.Dto.ZtlRenewChildrenParent"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Application.ZtlRenewService.Dto.ZtlRenewChildrenParent": {
        "title": "WSAutoscan.Application.ZtlRenewService.Dto.ZtlRenewChildrenParent",
        "type": "object",
        "properties": {
          "SerialCode": {
            "type": "string",
            "nullable": true
          },
          "ReleaseDate": {
            "type": "string",
            "format": "date-time"
          },
          "StateId": {
            "type": "integer",
            "format": "int32"
          },
          "Expired": {
            "type": "boolean"
          }
        }
      },
      "WSAutoscan.Application.ZtlRule.Dto.ZtlRuleDetailDto": {
        "title": "WSAutoscan.Application.ZtlRule.Dto.ZtlRuleDetailDto",
        "type": "object",
        "properties": {
          "ValidFrom": {
            "type": "string",
            "format": "date-time"
          },
          "ValidTo": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "WSAutoscan.Application.ZtlRule.Dto.ZtlRuleDto": {
        "title": "WSAutoscan.Application.ZtlRule.Dto.ZtlRuleDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Description": {
            "type": "string",
            "nullable": true
          },
          "RuleTypeDictionaryId": {
            "type": "integer",
            "format": "int32"
          },
          "RuleDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.ZtlRule.Dto.ZtlRuleDetailDto"
            },
            "description": "",
            "nullable": true
          },
          "TimeSlots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.ZtlCommon.ZtlTimeSlotDto"
            },
            "description": "",
            "nullable": true
          },
          "EnvironmentalClassRestrictions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.ZtlRule.Dto.ZTLRuleEnvClassDto"
            },
            "description": "",
            "nullable": true
          },
          "Active": {
            "type": "boolean"
          },
          "IsGeneric": {
            "type": "boolean"
          },
          "GatesIdSelected": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "",
            "nullable": true
          },
          "Zone": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.ZtlRule.Dto.ZTLRuleEnvClassDto": {
        "title": "WSAutoscan.Application.ZtlRule.Dto.ZTLRuleEnvClassDto",
        "type": "object",
        "properties": {
          "VehicleTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "FuellingId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "EnvironmentalClassId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.ZtlSettings.Dto.ZTL_ZoneTypeDictionaryDto": {
        "title": "WSAutoscan.Application.ZtlSettings.Dto.ZTL_ZoneTypeDictionaryDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Description": {
            "type": "string",
            "nullable": true
          },
          "Short": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.ZtlTransitAuthorizingPhoto.Dto.ContrastBrightnessDto": {
        "title": "WSAutoscan.Application.ZtlTransitAuthorizingPhoto.Dto.ContrastBrightnessDto",
        "type": "object",
        "properties": {
          "PhotoName": {
            "type": "string",
            "nullable": true
          },
          "Brightness": {
            "type": "integer",
            "format": "int32"
          },
          "Contrast": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "WSAutoscan.Application.ZtlTransitAuthorizingService.Dto.ZtlTransitAuthorizingRequestUpdateDto": {
        "title": "WSAutoscan.Application.ZtlTransitAuthorizingService.Dto.ZtlTransitAuthorizingRequestUpdateDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Plate": {
            "type": "string",
            "nullable": true
          },
          "NationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "VehicleId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.ZtlTransitAuthorizingService.Dto.ZtlTransitAuthorizingSearchDto": {
        "title": "WSAutoscan.Application.ZtlTransitAuthorizingService.Dto.ZtlTransitAuthorizingSearchDto",
        "type": "object",
        "properties": {
          "Plate": {
            "type": "string",
            "nullable": true
          },
          "HasAssociated": {
            "type": "boolean"
          },
          "HasNoAssociated": {
            "type": "boolean"
          },
          "From": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "To": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.ZtlAuthorization.Dto.VehicleEditReasonTypeDto": {
        "title": "WSAutoscan.Application.ZtlAuthorization.Dto.VehicleEditReasonTypeDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Description": {
            "type": "string",
            "nullable": true
          },
          "MandatoryReason": {
            "type": "boolean"
          }
        }
      },
      "WSAutoscan.Application.ZtlAuthorizationAttachment.Dto.Status": {
        "title": "WSAutoscan.Application.ZtlAuthorizationAttachment.Dto.Status",
        "enum": [
          0,
          1
        ],
        "type": "integer"
      },
      "WSAutoscan.Application.ZtlAuthorizationExtension.Dto.AuthorizationExtensionDto": {
        "title": "WSAutoscan.Application.ZtlAuthorizationExtension.Dto.AuthorizationExtensionDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Name": {
            "type": "string",
            "nullable": true
          },
          "ExpirationFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "ExpirationTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "ExtensionDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "ExtensionDays": {
            "type": "integer",
            "format": "int32"
          },
          "AuthTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.ZtlAuthorizationType.Dto.PrintTemplates": {
        "title": "WSAutoscan.Application.ZtlAuthorizationType.Dto.PrintTemplates",
        "type": "object",
        "properties": {
          "PrintTemplateId": {
            "type": "string",
            "nullable": true
          },
          "IsForIOMunicipium": {
            "type": "boolean"
          }
        }
      },
      "WSAutoscan.Application.ZtlCommon.ZtlTimeSpanDto": {
        "title": "WSAutoscan.Application.ZtlCommon.ZtlTimeSpanDto",
        "type": "object",
        "properties": {
          "From": {
            "type": "integer",
            "format": "int64"
          },
          "To": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "WSAutoscan.Application.ZtlFrontOfficeApplication.Dto.ZtlFrontOfficeApplicationUpdateResponse": {
        "title": "WSAutoscan.Application.ZtlFrontOfficeApplication.Dto.ZtlFrontOfficeApplicationUpdateResponse",
        "type": "object",
        "properties": {
          "PermitId": {
            "type": "integer",
            "description": "ID dell'Autorizzazione associata all'Istanza.",
            "format": "int64"
          },
          "PermitSerialCode": {
            "type": "string",
            "description": "Numero seriale dell'Autorizzazione associata all'Istanza.",
            "nullable": true
          },
          "StatusId": {
            "type": "integer",
            "description": "ID dello Stato dell'Istanza.",
            "format": "int32"
          },
          "Error": {
            "type": "string",
            "description": "Messaggio di errore nel caso non sia stato possibile modificare l'Istanza.",
            "nullable": true
          },
          "IsSuccess": {
            "type": "boolean",
            "description": "Indica se l'operazione ha avuto successo o meno",
            "readOnly": true
          }
        }
      },
      "WSAutoscan.Application.ZtlFrontOfficeApplication.Dto.ZtlFrontOfficeAuthorizationRequestDto": {
        "title": "WSAutoscan.Application.ZtlFrontOfficeApplication.Dto.ZtlFrontOfficeAuthorizationRequestDto",
        "type": "object",
        "properties": {
          "AuthorizationId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "SerialNumber": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "AuthorizationHolderRegistryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "StateId": {
            "type": "integer",
            "format": "int32"
          },
          "TypeId": {
            "type": "integer",
            "format": "int32"
          },
          "Notes": {
            "type": "string",
            "nullable": true
          },
          "EditReason": {
            "type": "string",
            "nullable": true
          },
          "ExtendedExpiration": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "Origin": {
            "type": "string",
            "nullable": true
          },
          "PaymentDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "Payment": {
            "type": "boolean"
          },
          "Price": {
            "type": "number"
          },
          "PaymentReason": {
            "type": "string",
            "nullable": true
          },
          "SendIoNotification": {
            "type": "boolean"
          },
          "DailyMaxTransits": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "SimultaneousAccess": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ParkingSpaces": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "SavePreviousVersion": {
            "type": "boolean"
          },
          "IsFromConcilia": {
            "type": "boolean"
          },
          "RivalidaImmediata": {
            "type": "boolean"
          },
          "SkipNotificaIO": {
            "type": "boolean"
          },
          "IssueDate": {
            "type": "string",
            "format": "date-time"
          },
          "ImportedExtPermitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Applicant": {
            "type": "string",
            "nullable": true
          },
          "AuthType": {
            "type": "string",
            "nullable": true
          },
          "ChangedVehicles": {
            "type": "boolean"
          }
        }
      },
      "WSAutoscan.Application.ZtlRule.Dto.ZtlRuleMinDto": {
        "title": "WSAutoscan.Application.ZtlRule.Dto.ZtlRuleMinDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Description": {
            "type": "string",
            "nullable": true
          },
          "RuleTypeDictionaryId": {
            "type": "integer",
            "format": "int32"
          },
          "RuleDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.ZtlRule.Dto.ZtlRuleDetailDto"
            },
            "description": "",
            "nullable": true
          },
          "TimeSlots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.ZtlCommon.ZtlTimeSlotDto"
            },
            "description": "",
            "nullable": true
          },
          "EnvironmentalClassRestrictions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.ZtlRule.Dto.ZTLRuleEnvClassDto"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.ZtlSettings.Dto.Gate": {
        "title": "WSAutoscan.Application.ZtlSettings.Dto.Gate",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "Description": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Customer": {
            "type": "object"
          },
          "Cameras": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "",
            "nullable": true,
            "readOnly": true
          },
          "UserAccess": {
            "type": "boolean",
            "readOnly": true
          }
        }
      },
      "WSAutoscan.Application.ZtlSettings.Dto.GateMin": {
        "title": "WSAutoscan.Application.ZtlSettings.Dto.GateMin",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "Description": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "WSAutoscan.Application.ZtlSettings.Dto.ZTL_ZoneDto": {
        "title": "WSAutoscan.Application.ZtlSettings.Dto.ZTL_ZoneDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Description": {
            "type": "string",
            "nullable": true
          },
          "TypeId": {
            "type": "integer",
            "format": "int32"
          },
          "Type": {
            "type": "string",
            "nullable": true
          },
          "GatesIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "",
            "nullable": true
          },
          "ZoneVehicles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Application.ZtlSettings.Dto.VehicleZoneMinDto"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.ZtlSettings.Dto.ZTL_ZtlZoneGateCameraDtoGateDetailMin": {
        "title": "WSAutoscan.Application.ZtlSettings.Dto.ZTL_ZtlZoneGateCameraDtoGateDetailMin",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Description": {
            "type": "string",
            "nullable": true
          },
          "CustomerId": {
            "type": "integer",
            "format": "int32"
          },
          "CustomerDescription": {
            "type": "string",
            "nullable": true
          },
          "Active": {
            "type": "boolean"
          },
          "NextStateChange": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "RuleType": {
            "type": "integer",
            "format": "int32"
          },
          "CamerasStatus": {
            "type": "boolean"
          }
        }
      },
      "WSAutoscan.Application.ZtlSettings.Dto.ZtlCustomerSettingsDto": {
        "title": "WSAutoscan.Application.ZtlSettings.Dto.ZtlCustomerSettingsDto",
        "type": "object",
        "properties": {
          "PermitReceiptTemplateId": {
            "type": "string",
            "nullable": true
          },
          "PermitReceiptUseGlobalCounter": {
            "type": "boolean"
          },
          "PermitReceiptUseKeyedCounter": {
            "type": "boolean"
          },
          "PermitReceiptRequireReason": {
            "type": "boolean"
          },
          "DailyTransitTolerance": {
            "type": "integer",
            "format": "int32"
          },
          "DailyTransitLifespan": {
            "type": "integer",
            "format": "int32"
          },
          "DiagnosticMailReportEnabled": {
            "type": "boolean"
          },
          "DiagnosticMailReportHours": {
            "type": "integer",
            "format": "int32"
          },
          "DiagnosticMailReportRecipients": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "",
            "nullable": true
          },
          "FrontOfficeTemplateId": {
            "type": "string",
            "nullable": true
          },
          "EnableSendFrontOfficeAttach": {
            "type": "boolean"
          },
          "ViolationsDeadlineDays": {
            "type": "integer",
            "format": "int32"
          },
          "ViolationsForeignDeadlineDays": {
            "type": "integer",
            "format": "int32"
          },
          "DirectoryExportSave": {
            "type": "string",
            "nullable": true
          },
          "ExpiredAdditionRequested": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "WSAutoscan.Application.ZtlTransitAuthorizingSettings.Dto.ZtlTransitAuthorizingSettingsDto": {
        "title": "WSAutoscan.Application.ZtlTransitAuthorizingSettings.Dto.ZtlTransitAuthorizingSettingsDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "KeepAuthorizingTransitDays": {
            "type": "integer",
            "format": "int32"
          },
          "TransitAuthorizingStatusId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Enums.ZTL_TransitStatusDictionaryEnum"
              },
              {}
            ]
          },
          "TransitAuthorizingStatusIdInt": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "WSAutoscan.Application.ZtlViolation.Dto.DayTransitsAndViolationsDto": {
        "title": "WSAutoscan.Application.ZtlViolation.Dto.DayTransitsAndViolationsDto",
        "type": "object",
        "properties": {
          "Transits": {
            "type": "integer",
            "format": "int32"
          },
          "Violations": {
            "type": "integer",
            "format": "int32"
          },
          "ZtlWarningTransits": {
            "type": "integer",
            "format": "int64"
          },
          "ZtlWarningPhotos": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "WSAutoscan.Application.ZtlViolation.Dto.UpdateTransitRequestDto": {
        "title": "WSAutoscan.Application.ZtlViolation.Dto.UpdateTransitRequestDto",
        "type": "object",
        "properties": {
          "TransitId": {
            "type": "integer",
            "format": "int32"
          },
          "Plate": {
            "type": "string",
            "nullable": true
          },
          "NationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "VehicleTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Note": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.ZtlViolation.Dto.ViolationDeadLineNumDto": {
        "title": "WSAutoscan.Application.ZtlViolation.Dto.ViolationDeadLineNumDto",
        "type": "object",
        "properties": {
          "Count": {
            "type": "integer",
            "format": "int32"
          },
          "CountForeign": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "WSAutoscan.Application.ZtlViolationPhoto.Dto.BlurAreaUpdateRequest": {
        "title": "WSAutoscan.Application.ZtlViolationPhoto.Dto.BlurAreaUpdateRequest",
        "type": "object",
        "properties": {
          "ImageName": {
            "type": "string",
            "description": "Foto a cui applicare la modifica all'area da offuscare.",
            "nullable": true
          },
          "BlurredArea": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Application.ZtlViolationPhoto.Dto.UserBlurredAreaDto"
              },
              {}
            ]
          }
        },
        "description": "Richiesta di modifica di un'area da offuscare."
      },
      "WSAutoscan.Application.ZtlViolationPhoto.Dto.MediaFilterDto": {
        "title": "WSAutoscan.Application.ZtlViolationPhoto.Dto.MediaFilterDto",
        "type": "object",
        "properties": {
          "ImageName": {
            "type": "string",
            "description": "Nome del file della foto.",
            "nullable": true
          },
          "Brightness": {
            "type": "integer",
            "description": "Variazione della luminosità.",
            "format": "int32"
          },
          "Contrast": {
            "type": "integer",
            "description": "Variazione del contrasto.",
            "format": "int32"
          }
        },
        "description": "Filtro di correzione per una foto di un transito ZTL."
      },
      "WSAutoscan.Application.ZtlViolationPhoto.Dto.VehicleCoordinatesDto": {
        "title": "WSAutoscan.Application.ZtlViolationPhoto.Dto.VehicleCoordinatesDto",
        "type": "object",
        "properties": {
          "MinX": {
            "type": "integer",
            "format": "int32"
          },
          "MinY": {
            "type": "integer",
            "format": "int32"
          },
          "MaxX": {
            "type": "integer",
            "format": "int32"
          },
          "MaxY": {
            "type": "integer",
            "format": "int32"
          },
          "AreValid": {
            "type": "boolean",
            "readOnly": true
          }
        }
      },
      "WSAutoscan.Core.Dal.RedVeloxGroupingLevel": {
        "title": "WSAutoscan.Core.Dal.RedVeloxGroupingLevel",
        "enum": [
          0,
          1,
          2,
          3,
          4
        ],
        "type": "integer"
      },
      "WSAutoscan.Core.Dal.Ztl.IONotificationDataPoint": {
        "title": "WSAutoscan.Core.Dal.Ztl.IONotificationDataPoint",
        "type": "object",
        "properties": {
          "Year": {
            "type": "integer",
            "format": "int32"
          },
          "Month": {
            "type": "integer",
            "format": "int32"
          },
          "Day": {
            "type": "integer",
            "format": "int32"
          },
          "NotSended": {
            "type": "integer",
            "format": "int32"
          },
          "Sended": {
            "type": "integer",
            "format": "int32"
          },
          "OnSending": {
            "type": "integer",
            "format": "int32"
          },
          "Cancelled": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "WSAutoscan.Core.Enums.As.AS_IO_SendStateEnum": {
        "title": "WSAutoscan.Core.Enums.As.AS_IO_SendStateEnum",
        "enum": [
          1,
          2,
          3,
          4
        ],
        "type": "integer"
      },
      "WSAutoscan.Core.Enums.OrderTypeEnum": {
        "title": "WSAutoscan.Core.Enums.OrderTypeEnum",
        "enum": [
          0,
          1
        ],
        "type": "integer"
      },
      "WSAutoscan.Core.Enums.ZTL_AuthorizationStateEnum": {
        "title": "WSAutoscan.Core.Enums.ZTL_AuthorizationStateEnum",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6
        ],
        "type": "integer"
      },
      "WSAutoscan.Core.Model.AS_Camera_Attribute": {
        "title": "WSAutoscan.Core.Model.AS_Camera_Attribute",
        "required": [
          "Id",
          "Name",
          "Value"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "CameraId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Name": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "Value": {
            "type": "string"
          },
          "Camera": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Camera"
              },
              {}
            ]
          },
          "CameraMobileConfigurationAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.As.AS_CameraMobileConfiguration_Attributes"
            },
            "description": "",
            "nullable": true
          },
          "CameraLaneAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.As.AS_Camera_Lane_Attribute"
            },
            "description": "",
            "nullable": true
          },
          "CameraAttributesRoadMaps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.As.AS_CameraAttributes_RoadMap"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Model.AS_Camera_Lane": {
        "title": "WSAutoscan.Core.Model.AS_Camera_Lane",
        "required": [
          "Id",
          "LaneId",
          "LaneName"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "CameraId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "LaneId": {
            "type": "string"
          },
          "LaneName": {
            "type": "string"
          },
          "Direction": {
            "type": "string",
            "nullable": true
          },
          "SignDistance": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "CameraLaneTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "AS_Camera": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Camera"
              },
              {}
            ]
          },
          "RedVeloxTransits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.RedVelox.RedVelox_Transit"
            },
            "description": "",
            "nullable": true
          },
          "CameraMobileConfigurationLanes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.As.AS_CameraMobileConfiguration_Lane"
            },
            "description": "",
            "nullable": true
          },
          "CameraLaneType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.As.AS_Camera_Lane_Type"
              },
              {}
            ]
          },
          "CameraLaneAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.As.AS_Camera_Lane_Attribute"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.ZtlViolation.Dto.MassiveChangeViolationStatus": {
        "title": "WSAutoscan.Application.ZtlViolation.Dto.MassiveChangeViolationStatus",
        "type": "object",
        "properties": {
          "ViolationIdList": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "",
            "nullable": true
          },
          "Status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Application.ZtlViolation.Dto.ChangeViolationStatus"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Application.ZtlViolationPhoto.Dto.PlateCoordinatesDto": {
        "title": "WSAutoscan.Application.ZtlViolationPhoto.Dto.PlateCoordinatesDto",
        "type": "object",
        "properties": {
          "Width": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Height": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "MinX": {
            "type": "integer",
            "format": "int32"
          },
          "MinY": {
            "type": "integer",
            "format": "int32"
          },
          "MaxX": {
            "type": "integer",
            "format": "int32"
          },
          "MaxY": {
            "type": "integer",
            "format": "int32"
          },
          "AreValid": {
            "type": "boolean",
            "readOnly": true
          }
        }
      },
      "WSAutoscan.Core.AppSettings.Features": {
        "title": "WSAutoscan.Core.AppSettings.Features",
        "type": "object",
        "properties": {
          "VisuraPatente": {
            "type": "boolean"
          },
          "AllarmiAci": {
            "type": "boolean"
          }
        }
      },
      "WSAutoscan.Core.Dal.GateNode": {
        "title": "WSAutoscan.Core.Dal.GateNode",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Description": {
            "type": "string",
            "nullable": true
          },
          "Cameras": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Dal.CameraNode"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Dal.Ztl.IONotificationGroupingLevel": {
        "title": "WSAutoscan.Core.Dal.Ztl.IONotificationGroupingLevel",
        "enum": [
          1,
          2,
          3
        ],
        "type": "integer"
      },
      "WSAutoscan.Core.Diagnostics.AlertLevel": {
        "title": "WSAutoscan.Core.Diagnostics.AlertLevel",
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer"
      },
      "WSAutoscan.Core.Diagnostics.Camera.DigitalInputAlarms": {
        "title": "WSAutoscan.Core.Diagnostics.Camera.DigitalInputAlarms",
        "type": "object",
        "properties": {
          "I0": {
            "type": "boolean"
          },
          "I1": {
            "type": "boolean"
          },
          "I2": {
            "type": "boolean"
          },
          "I3": {
            "type": "boolean"
          },
          "I0description": {
            "type": "string",
            "nullable": true
          },
          "I1description": {
            "type": "string",
            "nullable": true
          },
          "I2description": {
            "type": "string",
            "nullable": true
          },
          "I3description": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Diagnostics.Camera.Sensors": {
        "title": "WSAutoscan.Core.Diagnostics.Camera.Sensors",
        "type": "object",
        "properties": {
          "DateAndTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Diagnostics.AlertLevel"
              },
              {}
            ]
          },
          "OcrCamera": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Diagnostics.AlertLevel"
              },
              {}
            ]
          },
          "CtxCamera": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Diagnostics.AlertLevel"
              },
              {}
            ]
          },
          "PlateReader": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Diagnostics.AlertLevel"
              },
              {}
            ]
          },
          "SynchronisationTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Diagnostics.AlertLevel"
              },
              {}
            ]
          },
          "CurrentAbsorption": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Diagnostics.AlertLevel"
              },
              {}
            ]
          },
          "SecureDigital": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Diagnostics.AlertLevel"
              },
              {}
            ]
          },
          "Humidity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Diagnostics.AlertLevel"
              },
              {}
            ]
          },
          "Temperature": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Diagnostics.AlertLevel"
              },
              {}
            ]
          },
          "Inclinometer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Diagnostics.AlertLevel"
              },
              {}
            ]
          },
          "MemoryStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Diagnostics.AlertLevel"
              },
              {}
            ]
          },
          "ProcessStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Diagnostics.AlertLevel"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Dto.SAT_AlarmDto": {
        "title": "WSAutoscan.Core.Dto.SAT_AlarmDto",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "TransitId": {
            "type": "integer",
            "format": "int64"
          },
          "Plate": {
            "type": "string",
            "nullable": true
          },
          "PlateAdr": {
            "type": "string",
            "nullable": true
          },
          "PlateTrl": {
            "type": "string",
            "nullable": true
          },
          "TransitDate": {
            "type": "string",
            "format": "date-time"
          },
          "AlarmDate": {
            "type": "string",
            "format": "date-time"
          },
          "GateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "CameraId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "CustomerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Status": {
            "type": "string",
            "nullable": true
          },
          "ImagePath": {
            "type": "string",
            "nullable": true
          },
          "ImageName": {
            "type": "string",
            "nullable": true
          },
          "ListNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "",
            "nullable": true
          },
          "ListNotes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "",
            "nullable": true
          },
          "CameraDescription": {
            "type": "string",
            "nullable": true
          },
          "SiteName": {
            "type": "string",
            "nullable": true
          },
          "Type": {
            "type": "string",
            "nullable": true
          },
          "Note": {
            "type": "string",
            "nullable": true
          },
          "TransitType": {
            "type": "string",
            "nullable": true
          },
          "ScnttAction": {
            "type": "string",
            "nullable": true
          },
          "ScnttAlarm": {
            "type": "boolean"
          },
          "ShowDetail": {
            "type": "boolean"
          },
          "Detail": {
            "nullable": true
          },
          "IsFailure": {
            "type": "boolean",
            "readOnly": true
          }
        }
      },
      "WSAutoscan.Core.Enums.AS_SuiteEnum": {
        "title": "WSAutoscan.Core.Enums.AS_SuiteEnum",
        "enum": [
          1,
          2,
          3,
          4
        ],
        "type": "integer"
      },
      "WSAutoscan.Core.Enums.As.AS_IO_ZTL_PermitState_Enum": {
        "title": "WSAutoscan.Core.Enums.As.AS_IO_ZTL_PermitState_Enum",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6
        ],
        "type": "integer"
      },
      "WSAutoscan.Core.ImageHelpersImageKind": {
        "title": "WSAutoscan.Core.ImageHelpersImageKind",
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ],
        "type": "integer"
      },
      "WSAutoscan.Core.Model.AS_Camera": {
        "title": "WSAutoscan.Core.Model.AS_Camera",
        "required": [
          "IsMobile"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "ScnttId": {
            "type": "string",
            "nullable": true
          },
          "Description": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "Netbiosname": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "Lat": {
            "type": "number"
          },
          "Lng": {
            "type": "number"
          },
          "Active": {
            "type": "boolean"
          },
          "DirectionGoAway": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "DirectionApproach": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "Ip": {
            "maxLength": 25,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "Port": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "IpNas": {
            "maxLength": 25,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "SerialNumber": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "Height": {
            "type": "string",
            "nullable": true
          },
          "CheckDigitalInput": {
            "type": "boolean"
          },
          "CodCamera": {
            "type": "integer",
            "format": "int32"
          },
          "GateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "CustomerId": {
            "type": "integer",
            "format": "int32"
          },
          "SuiteId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "LaneDirection": {
            "type": "string",
            "nullable": true
          },
          "Registered": {
            "type": "boolean"
          },
          "CanCheckBothLanes": {
            "type": "boolean"
          },
          "OutgoingDirection": {
            "maxLength": 8,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "RegistrationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "PasswordToDecryptZip": {
            "type": "string",
            "nullable": true
          },
          "EncryptionMethod": {
            "type": "string",
            "nullable": true
          },
          "EnableMonitoring": {
            "type": "boolean"
          },
          "EnableMonitoringSC": {
            "type": "boolean"
          },
          "DependecyIdCameraSat": {
            "type": "integer",
            "format": "int32"
          },
          "isManned": {
            "type": "boolean"
          },
          "IsMobile": {
            "type": "boolean"
          },
          "DirectionToIgnore": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "Gate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Gate"
              },
              {}
            ]
          },
          "CameraModel": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_CameraModel"
              },
              {}
            ]
          },
          "Transits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.SAT_Transit"
            },
            "description": "",
            "nullable": true
          },
          "CameraLogs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Camera_Log"
            },
            "description": "",
            "nullable": true
          },
          "DigitalLogs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_DigitalLog"
            },
            "description": "",
            "nullable": true
          },
          "SystemAlarms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Camera_SystemAlarm"
            },
            "description": "",
            "nullable": true
          },
          "Customer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Customer"
              },
              {}
            ]
          },
          "Suite": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Suite"
              },
              {}
            ]
          },
          "MaintenanceHistories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.As.As_Camera_MaintenanceHistory"
            },
            "description": "",
            "nullable": true
          },
          "CameraMonitors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_User_Monitor"
            },
            "description": "",
            "nullable": true
          },
          "CamMetrics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_CamMetrics"
            },
            "description": "",
            "nullable": true
          },
          "Attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Camera_Attribute"
            },
            "description": "",
            "nullable": true
          },
          "AS_Camera_Limits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.As.AS_Camera_Limit"
            },
            "description": "",
            "nullable": true
          },
          "AS_Camera_Lanes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Camera_Lane"
            },
            "description": "",
            "nullable": true
          },
          "ClearAreas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.As.AS_Camera_ClearAreas"
            },
            "description": "",
            "nullable": true
          },
          "Offsets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.As.AS_Camera_Offset"
            },
            "description": "",
            "nullable": true
          },
          "SATTransitAggregations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.Sat.SAT_Transit_Aggregation"
            },
            "description": "",
            "nullable": true
          },
          "TransitAuthorizings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.ZTL_Transit_Authorizing"
            },
            "description": "",
            "nullable": true
          },
          "TransitDataExportLogs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.Sat.SAT_Transit_Data_Export_Log"
            },
            "description": "",
            "nullable": true
          },
          "CameraValidators": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.As.AS_Camera_Validator"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.ZtlViolation.Dto.ChangeViolationStatus": {
        "title": "WSAutoscan.Application.ZtlViolation.Dto.ChangeViolationStatus",
        "type": "object",
        "properties": {
          "ViolationStatus": {
            "type": "integer",
            "format": "int32"
          },
          "Note": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.ZtlViolation.Dto.GetDetailResponseDto": {
        "title": "WSAutoscan.Application.ZtlViolation.Dto.GetDetailResponseDto",
        "type": "object",
        "properties": {
          "ValidationUserName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Application.ZtlViolationPhoto.Dto.UserBlurredAreaDto": {
        "title": "WSAutoscan.Application.ZtlViolationPhoto.Dto.UserBlurredAreaDto",
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "nullable": true
          },
          "MinX": {
            "type": "integer",
            "format": "int32"
          },
          "MinY": {
            "type": "integer",
            "format": "int32"
          },
          "MaxX": {
            "type": "integer",
            "format": "int32"
          },
          "MaxY": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "WSAutoscan.Application.ZtlViolationSearch.Dto.Ztl_TransitPhotoDto": {
        "title": "WSAutoscan.Application.ZtlViolationSearch.Dto.Ztl_TransitPhotoDto",
        "type": "object",
        "properties": {
          "ImageName": {
            "type": "string",
            "nullable": true
          },
          "ImagePath": {
            "type": "string",
            "nullable": true
          },
          "ImageKind": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.ImageHelpersImageKind"
              },
              {}
            ]
          },
          "Brightness": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Contrast": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Dal.CameraNode": {
        "title": "WSAutoscan.Core.Dal.CameraNode",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Description": {
            "type": "string",
            "nullable": true
          },
          "Ip": {
            "type": "string",
            "nullable": true
          },
          "Lat": {
            "type": "number"
          },
          "Lng": {
            "type": "number"
          },
          "CheckDigitalInput": {
            "type": "boolean"
          },
          "SuiteCode": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Dal.CustomerNode": {
        "title": "WSAutoscan.Core.Dal.CustomerNode",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Name": {
            "type": "string",
            "nullable": true
          },
          "Gates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Dal.GateNode"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Dal.VehicleTypeInSpeedBand": {
        "title": "WSAutoscan.Core.Dal.VehicleTypeInSpeedBand",
        "type": "object",
        "properties": {
          "VehicleTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "Description": {
            "type": "string",
            "nullable": true
          },
          "Transits": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "WSAutoscan.Core.Dto.Ztl.ExternalPermitRequest": {
        "title": "WSAutoscan.Core.Dto.Ztl.ExternalPermitRequest",
        "type": "object",
        "properties": {
          "Applicant": {
            "type": "object"
          },
          "Holder": {
            "type": "object"
          },
          "PermitType": {
            "type": "integer",
            "format": "int32"
          },
          "HotelName": {
            "type": "string",
            "nullable": true
          },
          "ZtlId": {
            "type": "integer",
            "format": "int32"
          },
          "StartDate": {
            "type": "string",
            "format": "date-time"
          },
          "EndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "Duration": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.TimeSpan"
              },
              {}
            ]
          },
          "Plate": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Enums.Gender": {
        "title": "WSAutoscan.Core.Enums.Gender",
        "enum": [
          1,
          2
        ],
        "type": "integer"
      },
      "WSAutoscan.Core.Enums.Red_CommaDictionaryEnum": {
        "title": "WSAutoscan.Core.Enums.Red_CommaDictionaryEnum",
        "enum": [
          1,
          2
        ],
        "type": "integer"
      },
      "WSAutoscan.Core.Enums.RedVelox_ViolationTypeDictionaryEnum": {
        "title": "WSAutoscan.Core.Enums.RedVelox_ViolationTypeDictionaryEnum",
        "enum": [
          1,
          2,
          3,
          4,
          5
        ],
        "type": "integer"
      },
      "WSAutoscan.Core.Enums.ZTL_TransitStatusDictionaryEnum": {
        "title": "WSAutoscan.Core.Enums.ZTL_TransitStatusDictionaryEnum",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7
        ],
        "type": "integer"
      },
      "WSAutoscan.Core.Model.AS_Camera_Log": {
        "title": "WSAutoscan.Core.Model.AS_Camera_Log",
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "format": "uuid"
          },
          "Response": {
            "type": "string",
            "nullable": true
          },
          "Data": {
            "type": "string",
            "format": "date-time"
          },
          "CameraId": {
            "type": "integer",
            "format": "int32"
          },
          "GlobalStatus": {
            "type": "integer",
            "format": "int32"
          },
          "Camera": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Camera"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Application.ZtlUserRegistry.ZtlPersonDto": {
        "title": "WSAutoscan.Application.ZtlUserRegistry.ZtlPersonDto",
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "nullable": true
          },
          "Surname": {
            "type": "string",
            "nullable": true
          },
          "FiscalCode": {
            "type": "string",
            "nullable": true
          },
          "HouseNumber": {
            "type": "string",
            "nullable": true
          },
          "ResidenceAddress": {
            "type": "string",
            "nullable": true
          },
          "ResidenceCity": {
            "type": "string",
            "nullable": true
          },
          "ResidenceCap": {
            "type": "string",
            "nullable": true
          },
          "ResidenceCountryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "PhoneNumber": {
            "type": "string",
            "nullable": true
          },
          "MobileNumber": {
            "type": "string",
            "nullable": true
          },
          "Email": {
            "type": "string",
            "nullable": true
          },
          "Notes": {
            "type": "string",
            "nullable": true
          },
          "Category": {
            "type": "string",
            "nullable": true
          },
          "BirthDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "BirthCountryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "BirthPlace": {
            "type": "string",
            "nullable": true
          },
          "IsPhysicalPerson": {
            "type": "boolean",
            "readOnly": true
          },
          "Gender": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Enums.Gender"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Application.ZtlViolationPhoto.Dto.BlurAreaDeleteRequest": {
        "title": "WSAutoscan.Application.ZtlViolationPhoto.Dto.BlurAreaDeleteRequest",
        "type": "object",
        "properties": {
          "ImageName": {
            "type": "string",
            "description": "Foto da cui eliminare l'area da offuscare",
            "nullable": true
          },
          "BlurredAreaName": {
            "type": "string",
            "description": "Nome dell'area da eliminare.",
            "nullable": true
          }
        },
        "description": "Richiesta di cancellazione di un'area da offuscare."
      },
      "WSAutoscan.Core.Dal.LogOperationType": {
        "title": "WSAutoscan.Core.Dal.LogOperationType",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8
        ],
        "type": "integer"
      },
      "WSAutoscan.Core.Dal.VeloxAverageSpeedDataPoint": {
        "title": "WSAutoscan.Core.Dal.VeloxAverageSpeedDataPoint",
        "type": "object",
        "properties": {
          "Year": {
            "type": "integer",
            "format": "int32"
          },
          "Month": {
            "type": "integer",
            "format": "int32"
          },
          "Day": {
            "type": "integer",
            "format": "int32"
          },
          "TimeSlot": {
            "type": "integer",
            "format": "int32"
          },
          "ViolationNumber": {
            "type": "integer",
            "format": "int64"
          },
          "GateId": {
            "type": "integer",
            "format": "int32"
          },
          "MaxTransitId": {
            "type": "integer",
            "format": "int64"
          },
          "AverageSpeed": {
            "type": "number",
            "nullable": true
          },
          "SpeedForBand": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "SpeedBand": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "VehiclesTypesInSpeedBand": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Dal.VehicleTypeInSpeedBand"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Diagnostics.Camera.Status": {
        "title": "WSAutoscan.Core.Diagnostics.Camera.Status",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "Netbiosname": {
            "type": "string",
            "nullable": true
          },
          "Roll": {
            "type": "number"
          },
          "Tilt": {
            "type": "number"
          },
          "Sensors": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Diagnostics.Camera.Sensors"
              },
              {}
            ]
          },
          "DigitalInput": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Diagnostics.Camera.DigitalInputAlarms"
              },
              {}
            ]
          },
          "LastUpdate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "LastTransitDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "Timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "Ping": {
            "type": "boolean",
            "nullable": true
          },
          "AlertLevel": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Diagnostics.AlertLevel"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Dto.DetectorsDto": {
        "title": "WSAutoscan.Core.Dto.DetectorsDto",
        "type": "object",
        "properties": {
          "GateId": {
            "type": "integer",
            "format": "int32"
          },
          "GateScnttId": {
            "type": "string",
            "nullable": true
          },
          "GateDesc": {
            "type": "string",
            "nullable": true
          },
          "DetectId": {
            "type": "integer",
            "format": "int32"
          },
          "DetectScnttId": {
            "type": "string",
            "nullable": true
          },
          "DetectDesc": {
            "type": "string",
            "nullable": true
          },
          "Direction": {
            "type": "string",
            "nullable": true
          },
          "StartDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "EndDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "GpsLocation": {
            "type": "string",
            "nullable": true
          },
          "Note": {
            "type": "string",
            "nullable": true
          },
          "ErrorCode": {
            "type": "string",
            "nullable": true
          },
          "ErrorDesc": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Enums.As.AS_IO_ChannelStateResultEnum": {
        "title": "WSAutoscan.Core.Enums.As.AS_IO_ChannelStateResultEnum",
        "enum": [
          1,
          2,
          3,
          4,
          5
        ],
        "type": "integer"
      },
      "WSAutoscan.Core.Enums.As.AS_IO_GeneralResponseEnum": {
        "title": "WSAutoscan.Core.Enums.As.AS_IO_GeneralResponseEnum",
        "enum": [
          1,
          2,
          3,
          4
        ],
        "type": "integer"
      },
      "WSAutoscan.Core.Enums.FirebaseSendVersion": {
        "title": "WSAutoscan.Core.Enums.FirebaseSendVersion",
        "enum": [
          0,
          1
        ],
        "type": "integer"
      },
      "WSAutoscan.Core.Enums.TransitDirection": {
        "title": "WSAutoscan.Core.Enums.TransitDirection",
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer"
      },
      "WSAutoscan.Core.Model.AS_Camera_SystemAlarm": {
        "title": "WSAutoscan.Core.Model.AS_Camera_SystemAlarm",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Date": {
            "type": "string",
            "format": "date-time"
          },
          "CameraId": {
            "type": "integer",
            "format": "int32"
          },
          "DiagStatus": {
            "type": "integer",
            "format": "int32"
          },
          "DiagString": {
            "type": "string",
            "nullable": true
          },
          "CameraTiltAngle": {
            "type": "number"
          },
          "CameraRollAngle": {
            "type": "number"
          },
          "Camera": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Camera"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.AS_CamMetrics": {
        "title": "WSAutoscan.Core.Model.AS_CamMetrics",
        "required": [
          "TS",
          "Site",
          "Live",
          "InputOk",
          "DiagnosticsLevel"
        ],
        "type": "object",
        "properties": {
          "TS": {
            "type": "string",
            "format": "date-time"
          },
          "Site": {
            "type": "integer",
            "format": "int32"
          },
          "NRead": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "NNotRead": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "Live": {
            "type": "boolean"
          },
          "InputOk": {
            "type": "boolean"
          },
          "LastTransit": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "DiagnosticsLevel": {
            "type": "integer",
            "format": "int32"
          },
          "_CameraBrand": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.CameraBrand"
              },
              {}
            ]
          },
          "Camera": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Camera"
              },
              {}
            ]
          },
          "CamMetricsDetail": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_CamMetricsDetail"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.AS_Customer_Suite": {
        "title": "WSAutoscan.Core.Model.AS_Customer_Suite",
        "type": "object",
        "properties": {
          "CustomerId": {
            "type": "integer",
            "format": "int32"
          },
          "SuiteId": {
            "type": "integer",
            "format": "int32"
          },
          "Customer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Customer"
              },
              {}
            ]
          },
          "Suite": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Suite"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.AS_Log": {
        "title": "WSAutoscan.Core.Model.AS_Log",
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "format": "uuid"
          },
          "DeviceType": {
            "type": "integer",
            "format": "int32"
          },
          "Date": {
            "type": "string",
            "format": "date-time"
          },
          "UserId": {
            "type": "integer",
            "format": "int32"
          },
          "Description": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "Module": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "IdOperation": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "IdChanged": {
            "type": "integer",
            "format": "int64"
          },
          "IdDescription": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "OperationType": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "NewValue": {
            "type": "string",
            "nullable": true
          },
          "OldValue": {
            "type": "string",
            "nullable": true
          },
          "User": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_User"
              },
              {}
            ]
          },
          "TransitDataExportLogs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.Sat.SAT_Transit_Data_Export_Log"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Model.AS_OfficeDictionary": {
        "title": "WSAutoscan.Core.Model.AS_OfficeDictionary",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Description": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "Users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_User"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Model.AS_PermissionSubGroupDictionary": {
        "title": "WSAutoscan.Core.Model.AS_PermissionSubGroupDictionary",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "SubGroup": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "Permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Permission"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Model.AS_Suite": {
        "title": "WSAutoscan.Core.Model.AS_Suite",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Name": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "Code": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "Customer_Suite": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Customer_Suite"
            },
            "description": "",
            "nullable": true
          },
          "Camera": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Camera"
            },
            "description": "",
            "nullable": true
          },
          "Permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Permission"
            },
            "description": "",
            "nullable": true
          },
          "Recorded_Camera_Attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Recorded_Camera_Attribute"
            },
            "description": "",
            "nullable": true
          },
          "AS_DttsisModalityCall_DttsisTransitSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.As.AS_DttsisModalityCall_DttsisTransitSettings"
            },
            "description": "",
            "nullable": true
          },
          "RecordedNoteTransits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.As.As_Recorded_Note_Transits"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Model.AS_User": {
        "title": "WSAutoscan.Core.Model.AS_User",
        "required": [
          "FullName",
          "TelegramUserId",
          "DisableForAttempt"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Guid": {
            "type": "string",
            "format": "uuid"
          },
          "Username": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "FullName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "Password": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "Active": {
            "type": "boolean"
          },
          "Description": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "ChangePassword": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "Email": {
            "maxLength": 80,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "Phone": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "LastAccess": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "CustomerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "RoleId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ChangePasswordDays": {
            "type": "integer",
            "format": "int32"
          },
          "AccountInvalidationDays": {
            "type": "integer",
            "format": "int32"
          },
          "ValidFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "ValidTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "OfficeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "AgentId": {
            "type": "string",
            "nullable": true
          },
          "ScnttVisible": {
            "type": "boolean"
          },
          "SatAccess": {
            "type": "boolean"
          },
          "RedAccess": {
            "type": "boolean"
          },
          "VeloxAccess": {
            "type": "boolean"
          },
          "ZtlAccess": {
            "type": "boolean"
          },
          "System": {
            "type": "boolean"
          },
          "TelegramUserId": {
            "type": "integer",
            "format": "int64"
          },
          "DisableForAttempt": {
            "type": "boolean"
          },
          "Gates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_User_Gate"
            },
            "description": "",
            "nullable": true
          },
          "UserMonitors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_User_Monitor"
            },
            "description": "",
            "nullable": true
          },
          "History": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_UserHistory"
            },
            "description": "",
            "nullable": true
          },
          "AlarmStates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.SAT_AlarmState"
            },
            "description": "",
            "nullable": true
          },
          "Logs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Log"
            },
            "description": "",
            "nullable": true
          },
          "AlarmSents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.SAT_AlarmSent"
            },
            "description": "",
            "nullable": true
          },
          "PushNotificationTokens": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_PushNotificationToken"
            },
            "description": "",
            "nullable": true
          },
          "Customer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Customer"
              },
              {}
            ]
          },
          "SAT_Role": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.SAT_Role"
              },
              {}
            ]
          },
          "Office": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_OfficeDictionary"
              },
              {}
            ]
          },
          "Groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.SAT_User_Group"
            },
            "description": "",
            "nullable": true
          },
          "AuthorizationTypeUsers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.ZTL_AuthorizationType_User"
            },
            "description": "",
            "nullable": true
          },
          "TransitStatusTransits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.ZTL_Transit_TransitStatus"
            },
            "description": "",
            "nullable": true
          },
          "ViolationsExports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.ZTL_Violation_Export"
            },
            "description": "",
            "nullable": true
          },
          "RedVelox_ViolationsExports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.RedVelox_Violation_Export"
            },
            "description": "",
            "nullable": true
          },
          "RedVelox_TransitStatus": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.RedVelox.RedVelox_TransitStatus"
            },
            "description": "",
            "nullable": true
          },
          "StartedMaintenanceHistories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.As.As_Camera_MaintenanceHistory"
            },
            "description": "",
            "nullable": true
          },
          "StoppedMaintenanceHistories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.As.As_Camera_MaintenanceHistory"
            },
            "description": "",
            "nullable": true
          },
          "StartedCameraMobileConfigurationStarteds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.As.AS_CameraMobileConfigurationStarted"
            },
            "description": "",
            "nullable": true
          },
          "StoppedCameraMobileConfigurationStarteds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.As.AS_CameraMobileConfigurationStarted"
            },
            "description": "",
            "nullable": true
          },
          "CameraMobileConfigurations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.As.AS_CameraMobileConfiguration"
            },
            "description": "",
            "nullable": true
          },
          "FrontOfficeApplicationNotes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.Ztl_FrontOfficeApplicationNotes"
            },
            "description": "",
            "nullable": true
          },
          "CameraValidators": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.As.AS_Camera_Validator"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Model.AS_UserHistory": {
        "title": "WSAutoscan.Core.Model.AS_UserHistory",
        "type": "object",
        "properties": {
          "UserId": {
            "type": "integer",
            "format": "int32"
          },
          "ModificationDate": {
            "type": "string",
            "format": "date-time"
          },
          "Password": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "User": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_User"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.As.AS_Camera_ClearAreas": {
        "title": "WSAutoscan.Core.Model.As.AS_Camera_ClearAreas",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "CameraId": {
            "type": "integer",
            "format": "int32"
          },
          "Name": {
            "type": "string",
            "nullable": true
          },
          "MediaType": {
            "type": "string",
            "nullable": true
          },
          "MinX": {
            "type": "number"
          },
          "MinY": {
            "type": "number"
          },
          "MaxX": {
            "type": "number"
          },
          "MaxY": {
            "type": "number"
          },
          "Angle": {
            "type": "number"
          },
          "IsBlurArea": {
            "type": "boolean",
            "default": false
          },
          "ApplyBrightnessContrast": {
            "type": "boolean",
            "default": true
          },
          "Camera": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Camera"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.As.AS_Camera_Lane_Attribute": {
        "title": "WSAutoscan.Core.Model.As.AS_Camera_Lane_Attribute",
        "required": [
          "Id"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "CameraLaneId": {
            "type": "integer",
            "format": "int32"
          },
          "AttributeId": {
            "type": "integer",
            "format": "int32"
          },
          "CameraLane": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Camera_Lane"
              },
              {}
            ]
          },
          "CameraAttribute": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Camera_Attribute"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.As.As_Camera_MaintenanceHistory": {
        "title": "WSAutoscan.Core.Model.As.As_Camera_MaintenanceHistory",
        "required": [
          "StatusId",
          "ResetOnNotRead"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "CameraId": {
            "type": "integer",
            "format": "int32"
          },
          "NrTransits": {
            "type": "integer",
            "format": "int32"
          },
          "CurrentNrTransits": {
            "type": "integer",
            "format": "int32"
          },
          "MaintenanceStart": {
            "type": "string",
            "format": "date-time"
          },
          "MaintenanceDuration": {
            "type": "integer",
            "format": "int32"
          },
          "InsertedDate": {
            "type": "string",
            "format": "date-time"
          },
          "MaintenanceEnded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "StartedUserId": {
            "type": "integer",
            "format": "int32"
          },
          "StoppedUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "StatusId": {
            "type": "integer",
            "format": "int32"
          },
          "LastError": {
            "type": "string",
            "nullable": true
          },
          "ResetOnNotRead": {
            "type": "boolean"
          },
          "Note": {
            "type": "string",
            "nullable": true
          },
          "Status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.As.As_Camera_MaintenanceHistory_Status"
              },
              {}
            ]
          },
          "Camera": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Camera"
              },
              {}
            ]
          },
          "StartedUser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_User"
              },
              {}
            ]
          },
          "StoppedUser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_User"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.As.AS_Camera_Validator": {
        "title": "WSAutoscan.Core.Model.As.AS_Camera_Validator",
        "required": [
          "Order",
          "UserId"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Order": {
            "type": "integer",
            "format": "int32"
          },
          "CameraId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "UserId": {
            "type": "integer",
            "format": "int32"
          },
          "User": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_User"
              },
              {}
            ]
          },
          "Camera": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Camera"
              },
              {}
            ]
          },
          "CameraMannedStartedValidators": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.As.AS_Camera_Manned_Started_Validator"
            },
            "description": "",
            "nullable": true
          },
          "CameraMobileConfigurationValidators": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.As.AS_CameraMobileConfiguration_Validator"
            },
            "description": "",
            "nullable": true
          },
          "RedVeloxTransitValidators": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.RedVelox.RedVelox_Transit_Validator"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Model.As.AS_CameraAttributes_RoadMap": {
        "title": "WSAutoscan.Core.Model.As.AS_CameraAttributes_RoadMap",
        "required": [
          "CameraAttributeId",
          "RoadMapId"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "CameraAttributeId": {
            "type": "integer",
            "format": "int32"
          },
          "RoadMapId": {
            "type": "integer",
            "format": "int32"
          },
          "CameraAttribute": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Camera_Attribute"
              },
              {}
            ]
          },
          "RoadMap": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.As.AS_RoadMap"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.AS_DayDictionary": {
        "title": "WSAutoscan.Core.Model.AS_DayDictionary",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Name": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Model.AS_DigitalLog": {
        "title": "WSAutoscan.Core.Model.AS_DigitalLog",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Data": {
            "type": "string",
            "format": "date-time"
          },
          "CameraId": {
            "type": "integer",
            "format": "int32"
          },
          "IdIndex": {
            "type": "integer",
            "format": "int32"
          },
          "Id0Status": {
            "type": "integer",
            "format": "int32"
          },
          "Id1Status": {
            "type": "integer",
            "format": "int32"
          },
          "Id2Status": {
            "type": "integer",
            "format": "int32"
          },
          "Id3Status": {
            "type": "integer",
            "format": "int32"
          },
          "IdEvent": {
            "type": "integer",
            "format": "int32"
          },
          "Camera": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Camera"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.AS_DttsisSettings": {
        "title": "WSAutoscan.Core.Model.AS_DttsisSettings",
        "required": [
          "SatDttsisCall",
          "ZtlDttsisCall",
          "RedDttsisCall",
          "VeloxDttsisCall",
          "VeloxDttsisCallOnTruck",
          "ExpirationDays",
          "OwnerDataDays"
        ],
        "type": "object",
        "properties": {
          "CustomerId": {
            "type": "integer",
            "format": "int32"
          },
          "DttsisEnabled": {
            "type": "boolean",
            "nullable": true
          },
          "DttsisMod": {
            "type": "string",
            "nullable": true
          },
          "GlobalCredentialAccess": {
            "type": "boolean",
            "nullable": true
          },
          "GlobalCredentialUtilization": {
            "type": "boolean",
            "nullable": true
          },
          "ApiUsername": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "ApiPassword": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "ApiLastLoginErrorCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ApiLastLoginErrorDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "ApiPasswordCreationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "SatDttsisCall": {
            "type": "boolean"
          },
          "ZtlDttsisCall": {
            "type": "boolean"
          },
          "RedDttsisCall": {
            "type": "boolean"
          },
          "VeloxDttsisCall": {
            "type": "boolean"
          },
          "VeloxDttsisCallOnTruck": {
            "type": "boolean"
          },
          "VpnUsername": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "VpnPassword": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "VpnLastLoginErrorCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "VpnLastLoginErrorDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "VpnPasswordCreationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "Customer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Customer"
              },
              {}
            ]
          },
          "ExpirationDays": {
            "type": "integer",
            "format": "int32"
          },
          "OwnerDataDays": {
            "type": "integer",
            "format": "int32"
          },
          "VehicleId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Vehicle": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Vehicle"
              },
              {}
            ]
          },
          "AS_DttsisModalityCall_DttsisTransitSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.As.AS_DttsisModalityCall_DttsisTransitSettings"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Model.AS_Nations": {
        "title": "WSAutoscan.Core.Model.AS_Nations",
        "required": [
          "Alpha2",
          "Alpha3"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "CodeCat": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "Description": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "Alpha2": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string"
          },
          "Alpha3": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string"
          },
          "TransitAuthorizings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.ZTL_Transit_Authorizing"
            },
            "description": "",
            "nullable": true
          },
          "TransitDataExportLogs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.Sat.SAT_Transit_Data_Export_Log"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Model.AS_Permission": {
        "title": "WSAutoscan.Core.Model.AS_Permission",
        "required": [
          "SubGroupDictionaryId"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Description": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "Code": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "SuiteId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Order": {
            "type": "integer",
            "format": "int32"
          },
          "SubGroupDictionaryId": {
            "type": "integer",
            "format": "int32"
          },
          "Role_Permission": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.SAT_Role_Permission"
            },
            "description": "",
            "nullable": true
          },
          "Suite": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Suite"
              },
              {}
            ]
          },
          "SubGroupDictionary": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_PermissionSubGroupDictionary"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.AS_Recorded_Camera_Attribute": {
        "title": "WSAutoscan.Core.Model.AS_Recorded_Camera_Attribute",
        "required": [
          "SuiteId",
          "CameraModelId",
          "Name",
          "DefaultValue"
        ],
        "type": "object",
        "properties": {
          "SuiteId": {
            "type": "integer",
            "format": "int32"
          },
          "CameraModelId": {
            "type": "integer",
            "format": "int32"
          },
          "Name": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "DefaultValue": {
            "type": "string"
          },
          "CameraModel": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_CameraModel"
              },
              {}
            ]
          },
          "Suite": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Suite"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.AS_Vehicle": {
        "title": "WSAutoscan.Core.Model.AS_Vehicle",
        "required": [
          "Heavy",
          "Sanctionable",
          "AutoCancelViolation"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Description": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "ScnttVehicle": {
            "maxLength": 5,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "DttsisVehicle": {
            "maxLength": 5,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "VehicleCamera": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "VehicleExport": {
            "maxLength": 5,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "Heavy": {
            "type": "boolean"
          },
          "Sanctionable": {
            "type": "boolean"
          },
          "AutoCancelViolation": {
            "type": "boolean"
          },
          "DttsisVehicleType": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ZtlZonesVechileTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.ZTL_ZoneVehicleType"
            },
            "description": "",
            "nullable": true
          },
          "DttsisSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_DttsisSettings"
            },
            "description": "",
            "nullable": true
          },
          "RedVeloxSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.RedVelox.RedVelox_Settings"
            },
            "description": "",
            "nullable": true
          },
          "TransitAuthorizings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.ZTL_Transit_Authorizing"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Model.AS_VehicleFuelling": {
        "title": "WSAutoscan.Core.Model.AS_VehicleFuelling",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Description": {
            "type": "string",
            "nullable": true
          },
          "DttsisCode": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Model.As.AS_Camera_Limit_Vehicle": {
        "title": "WSAutoscan.Core.Model.As.AS_Camera_Limit_Vehicle",
        "required": [
          "VehicleCamera",
          "AsCameraLimitId"
        ],
        "type": "object",
        "properties": {
          "VehicleCamera": {
            "type": "string"
          },
          "AsCameraLimitId": {
            "type": "integer",
            "format": "int32"
          },
          "AsCameraLimit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.As.AS_Camera_Limit"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.AS_CameraModel": {
        "title": "WSAutoscan.Core.Model.AS_CameraModel",
        "type": "object",
        "properties": {
          "Code": {
            "type": "integer",
            "format": "int32"
          },
          "Description": {
            "type": "string",
            "nullable": true
          },
          "Cameras": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Camera"
            },
            "description": "",
            "nullable": true
          },
          "Recorded_Camera_Attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Recorded_Camera_Attribute"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Model.AS_CamMetricsDetail": {
        "title": "WSAutoscan.Core.Model.AS_CamMetricsDetail",
        "required": [
          "TS",
          "Site",
          "DIAG_STATUS",
          "DIAG_STRING",
          "CAMERA_TILT_ANGLE",
          "CAMERA_ROLL_ANGLE"
        ],
        "type": "object",
        "properties": {
          "TS": {
            "type": "string",
            "format": "date-time"
          },
          "Site": {
            "type": "integer",
            "format": "int32"
          },
          "DIAG_STATUS": {
            "type": "string"
          },
          "DIAG_STRING": {
            "type": "string"
          },
          "CAMERA_TILT_ANGLE": {
            "type": "number"
          },
          "CAMERA_ROLL_ANGLE": {
            "type": "number"
          },
          "ID0_STATUS": {
            "type": "boolean"
          },
          "ID1_STATUS": {
            "type": "boolean"
          },
          "ID2_STATUS": {
            "type": "boolean"
          },
          "ID3_STATUS": {
            "type": "boolean"
          },
          "LastUpdate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "AS_CamMetrics": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_CamMetrics"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.AS_Gate": {
        "title": "WSAutoscan.Core.Model.AS_Gate",
        "required": [
          "CreateTransitAuthorizing"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "ScnttId": {
            "type": "string",
            "nullable": true
          },
          "Description": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "SiteNumeration": {
            "type": "string",
            "nullable": true
          },
          "CreateTransitAuthorizing": {
            "type": "boolean"
          },
          "CustomerId": {
            "type": "integer",
            "format": "int32"
          },
          "Customer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Customer"
              },
              {}
            ]
          },
          "ZoneId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Zone": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.ZTL_Zone"
              },
              {}
            ]
          },
          "Cameras": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Camera"
            },
            "description": "",
            "nullable": true
          },
          "Users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_User_Gate"
            },
            "description": "",
            "nullable": true
          },
          "Statistics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.Statistic.SAT_Statistic"
            },
            "description": "",
            "nullable": true
          },
          "RedVeloxStatistics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.RedVeloxStatistics"
            },
            "description": "",
            "nullable": true
          },
          "OperatingTimes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.ZTL_OperatingTimeInterval"
            },
            "description": "",
            "nullable": true
          },
          "UnoperatingTimes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.ZTL_UnoperatingTimeInterval"
            },
            "description": "",
            "nullable": true
          },
          "RedOperatingTimes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.RedVelox.Red.Red_OperatingTimeInterval"
            },
            "description": "",
            "nullable": true
          },
          "VeloxOperatingTimes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.RedVelox.Velox.Velox_OperatingTimeInterval"
            },
            "description": "",
            "nullable": true
          },
          "AuthorizingGates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.As.As_Gate_Authorizing"
            },
            "description": "",
            "nullable": true
          },
          "ToAuthorizeGates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.As.As_Gate_Authorizing"
            },
            "description": "",
            "nullable": true
          },
          "CameraMobileConfigurations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.As.AS_CameraMobileConfiguration"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Model.AS_User_Monitor": {
        "title": "WSAutoscan.Core.Model.AS_User_Monitor",
        "type": "object",
        "properties": {
          "UserId": {
            "type": "integer",
            "format": "int32"
          },
          "CameraId": {
            "type": "integer",
            "format": "int32"
          },
          "Sms": {
            "type": "boolean"
          },
          "Email": {
            "type": "boolean"
          },
          "User": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_User"
              },
              {}
            ]
          },
          "Camera": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Camera"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.As.AS_Camera_Limit": {
        "title": "WSAutoscan.Core.Model.As.AS_Camera_Limit",
        "required": [
          "Id",
          "Limit",
          "DefaultLimit"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "CameraId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Limit": {
            "type": "integer",
            "format": "int32"
          },
          "DefaultLimit": {
            "type": "boolean"
          },
          "AS_Camera": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Camera"
              },
              {}
            ]
          },
          "AsCameraLimitVehicles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.As.AS_Camera_Limit_Vehicle"
            },
            "description": "",
            "nullable": true
          },
          "CameraMobileConfigurationLimits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.As.AS_CameraMobileConfiguration_Limit"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Model.As.AS_Camera_Manned_Started": {
        "title": "WSAutoscan.Core.Model.As.AS_Camera_Manned_Started",
        "required": [
          "Start"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Start": {
            "type": "string",
            "format": "date-time"
          },
          "End": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "CameraMannedStartedValidators": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.As.AS_Camera_Manned_Started_Validator"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Model.As.AS_Camera_Manned_Started_Validator": {
        "title": "WSAutoscan.Core.Model.As.AS_Camera_Manned_Started_Validator",
        "required": [
          "CameraMannedStartedId",
          "CameraValidatorId"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "CameraMannedStartedId": {
            "type": "integer",
            "format": "int32"
          },
          "CameraValidatorId": {
            "type": "integer",
            "format": "int32"
          },
          "CameraMannedStarted": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.As.AS_Camera_Manned_Started"
              },
              {}
            ]
          },
          "CameraValidator": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.As.AS_Camera_Validator"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.As.AS_CameraMobileConfiguration": {
        "title": "WSAutoscan.Core.Model.As.AS_CameraMobileConfiguration",
        "required": [
          "Id",
          "UserId",
          "ConfigName",
          "SiteAddress",
          "IsDeleted",
          "GateId"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "UserId": {
            "type": "integer",
            "format": "int32"
          },
          "ConfigName": {
            "type": "string"
          },
          "SiteAddress": {
            "type": "string"
          },
          "IsDeleted": {
            "type": "boolean"
          },
          "GateId": {
            "type": "integer",
            "format": "int32"
          },
          "User": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_User"
              },
              {}
            ]
          },
          "CameraMobileConfigurationStarteds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.As.AS_CameraMobileConfigurationStarted"
            },
            "description": "",
            "nullable": true
          },
          "CameraMobileConfigurationLanes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.As.AS_CameraMobileConfiguration_Lane"
            },
            "description": "",
            "nullable": true
          },
          "CameraMobileConfigurationLimits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.As.AS_CameraMobileConfiguration_Limit"
            },
            "description": "",
            "nullable": true
          },
          "CameraMobileConfigurationAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.As.AS_CameraMobileConfiguration_Attributes"
            },
            "description": "",
            "nullable": true
          },
          "CameraMobileConfigurationDirection": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.As.AS_CameraMobileConfiguration_Direction"
              },
              {}
            ]
          },
          "Gate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Gate"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.AS_Customer": {
        "title": "WSAutoscan.Core.Model.AS_Customer",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Name": {
            "maxLength": 300,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "ApiKey": {
            "type": "string",
            "nullable": true
          },
          "IstatCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "CodIPA": {
            "type": "string",
            "nullable": true
          },
          "Gates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Gate"
            },
            "description": "",
            "nullable": true
          },
          "ConciliaSync": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.ZTL_PermitConciliaSync"
            },
            "description": "",
            "nullable": true
          },
          "Customer_Suite": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Customer_Suite"
            },
            "description": "",
            "nullable": true
          },
          "Cameras": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Camera"
            },
            "description": "",
            "nullable": true
          },
          "Users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_User"
            },
            "description": "",
            "nullable": true
          },
          "List_Customer": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.SAT_List_Customer"
            },
            "description": "",
            "nullable": true
          },
          "Groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.SAT_Group"
            },
            "description": "",
            "nullable": true
          },
          "RedVeloxStatistics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.RedVeloxStatistics"
            },
            "description": "",
            "nullable": true
          },
          "Settings": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.SAT_Settings"
              },
              {}
            ]
          },
          "DttsisSettings": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_DttsisSettings"
              },
              {}
            ]
          },
          "RecordedPrescriptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.ZTL_RecordedPrescription"
            },
            "description": "",
            "nullable": true
          },
          "ZtlPass_Settings": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.ZtlPassLombardia.ZtlPass_Settings"
              },
              {}
            ]
          },
          "ZtlPass_Ricerca": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.ZtlPassLombardia.ZtlPass_ConferimentoRicerca"
            },
            "description": "",
            "nullable": true
          },
          "ZtlPass_Fornitura": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.ZtlPassLombardia.ZtlPass_ConferimentoFornitura"
            },
            "description": "",
            "nullable": true
          },
          "ASIO_ZTLPermitStateTexts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.AS_IO_ZTL_Permit_State_Text"
            },
            "description": "",
            "nullable": true
          },
          "FrontOfficeApplications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.Ztl_FrontOfficeApplication"
            },
            "description": "",
            "nullable": true
          },
          "FrontOfficeRegistries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.Ztl_FrontOfficeRegistry"
            },
            "description": "",
            "nullable": true
          },
          "ZTL_TransitAuthorizingSettings": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.ZTL_Transit_Authorizing_Settings"
              },
              {}
            ]
          },
          "Blacklist": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.ZTL_Blacklist"
            },
            "description": "",
            "nullable": true
          },
          "RoadMaps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.As.AS_RoadMap"
            },
            "description": "",
            "nullable": true
          },
          "ZTL_ImportAuthSettings": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.ZTL_ImportAuthSettings"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.AS_Dttsis_TransitData": {
        "title": "WSAutoscan.Core.Model.AS_Dttsis_TransitData",
        "required": [
          "Plate",
          "CustomerId",
          "Timestamp"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int64"
          },
          "Plate": {
            "type": "string"
          },
          "CustomerId": {
            "type": "integer",
            "format": "int32"
          },
          "Timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "DatiProprietario": {
            "type": "string",
            "nullable": true
          },
          "DatiVeicolo": {
            "type": "string",
            "nullable": true
          },
          "Notes": {
            "type": "string",
            "nullable": true
          },
          "Customer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Customer"
              },
              {}
            ]
          },
          "ZtlTransit": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.ZTL_Transit"
            },
            "description": "",
            "nullable": true
          },
          "RedVeloxTransits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.RedVelox.RedVelox_Transit"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Model.AS_EnvironmentalClass": {
        "title": "WSAutoscan.Core.Model.AS_EnvironmentalClass",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Description": {
            "type": "string",
            "nullable": true
          },
          "DttsisCode": {
            "type": "string",
            "nullable": true
          },
          "SATEnvSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.Sat.SAT_Env_Settings"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Model.AS_Municipality": {
        "title": "WSAutoscan.Core.Model.AS_Municipality",
        "required": [
          "Id",
          "Description",
          "CAP",
          "Province",
          "CodiceBelFiore",
          "ProvincialIstatCode",
          "MunicipalityCode"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Description": {
            "type": "string"
          },
          "CAP": {
            "type": "string"
          },
          "Province": {
            "type": "string"
          },
          "CodiceBelFiore": {
            "type": "string"
          },
          "ProvincialIstatCode": {
            "type": "string"
          },
          "MunicipalityCode": {
            "type": "string"
          }
        }
      },
      "WSAutoscan.Core.Model.AS_PushNotificationToken": {
        "title": "WSAutoscan.Core.Model.AS_PushNotificationToken",
        "required": [
          "FirebaseSendVersion"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Token": {
            "type": "string",
            "nullable": true
          },
          "EncryptedToken": {
            "type": "string",
            "nullable": true
          },
          "Platform": {
            "type": "integer",
            "format": "int32"
          },
          "UserId": {
            "type": "integer",
            "format": "int32"
          },
          "Timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "FirebaseSendVersion": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Enums.FirebaseSendVersion"
              },
              {}
            ]
          },
          "User": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_User"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.AS_User_Gate": {
        "title": "WSAutoscan.Core.Model.AS_User_Gate",
        "type": "object",
        "properties": {
          "UserId": {
            "type": "integer",
            "format": "int32"
          },
          "User": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_User"
              },
              {}
            ]
          },
          "GateId": {
            "type": "integer",
            "format": "int32"
          },
          "Gate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Gate"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.As.AS_Camera_Lane_Type": {
        "title": "WSAutoscan.Core.Model.As.AS_Camera_Lane_Type",
        "required": [
          "Id"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Description": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "CameraLanes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Camera_Lane"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Model.As.As_Camera_MaintenanceHistory_Status": {
        "title": "WSAutoscan.Core.Model.As.As_Camera_MaintenanceHistory_Status",
        "required": [
          "Name"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Name": {
            "type": "string"
          },
          "MaintenanceHistories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.As.As_Camera_MaintenanceHistory"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Model.As.AS_Camera_Offset": {
        "title": "WSAutoscan.Core.Model.As.AS_Camera_Offset",
        "type": "object",
        "properties": {
          "CameraId": {
            "type": "integer",
            "format": "int32"
          },
          "MediaTypeId": {
            "type": "string",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "nullable": true
          },
          "Top": {
            "type": "integer",
            "format": "int32"
          },
          "Bottom": {
            "type": "integer",
            "format": "int32"
          },
          "Left": {
            "type": "integer",
            "format": "int32"
          },
          "Right": {
            "type": "integer",
            "format": "int32"
          },
          "Camera": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Camera"
              },
              {}
            ]
          },
          "MediaType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.As.AS_MediaType"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.As.AS_CameraMobileConfiguration_Validator": {
        "title": "WSAutoscan.Core.Model.As.AS_CameraMobileConfiguration_Validator",
        "required": [
          "Id",
          "CameraValidatorId",
          "MobileConfigurationStartedId"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "CameraValidatorId": {
            "type": "integer",
            "format": "int32"
          },
          "MobileConfigurationStartedId": {
            "type": "integer",
            "format": "int32"
          },
          "Validator": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.As.AS_Camera_Validator"
              },
              {}
            ]
          },
          "Configuration": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.As.AS_CameraMobileConfigurationStarted"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.As.AS_CameraMobileConfiguration_Direction": {
        "title": "WSAutoscan.Core.Model.As.AS_CameraMobileConfiguration_Direction",
        "required": [
          "Id",
          "MobileConfigurationId",
          "Height"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "MobileConfigurationId": {
            "type": "integer",
            "format": "int32"
          },
          "Height": {
            "type": "string"
          },
          "CameraMobileConfiguration": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.As.AS_CameraMobileConfiguration"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.As.AS_CameraMobileConfiguration_Limit": {
        "title": "WSAutoscan.Core.Model.As.AS_CameraMobileConfiguration_Limit",
        "required": [
          "Id",
          "LimitId",
          "MobileConfigurationId"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "LimitId": {
            "type": "integer",
            "format": "int32"
          },
          "MobileConfigurationId": {
            "type": "integer",
            "format": "int32"
          },
          "CameraLimit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.As.AS_Camera_Limit"
              },
              {}
            ]
          },
          "CameraMobileConfiguration": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.As.AS_CameraMobileConfiguration"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.As.AS_DttsisModalityCall_DttsisTransitSettings": {
        "title": "WSAutoscan.Core.Model.As.AS_DttsisModalityCall_DttsisTransitSettings",
        "required": [
          "SuiteId"
        ],
        "type": "object",
        "properties": {
          "SuiteId": {
            "type": "integer",
            "format": "int32"
          },
          "DttsisSettingsId": {
            "type": "integer",
            "format": "int32"
          },
          "ModalityCallId": {
            "type": "integer",
            "format": "int32"
          },
          "Suite": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Suite"
              },
              {}
            ]
          },
          "AS_DttsisSettings": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_DttsisSettings"
              },
              {}
            ]
          },
          "AS_DttsisModalityCall": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.As.AS_DttsisModalityCall"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.As.As_Gate_Authorizing": {
        "title": "WSAutoscan.Core.Model.As.As_Gate_Authorizing",
        "required": [
          "AuthorizingGateId",
          "ToAuthorizeGateId"
        ],
        "type": "object",
        "properties": {
          "AuthorizingGateId": {
            "type": "integer",
            "format": "int32"
          },
          "ToAuthorizeGateId": {
            "type": "integer",
            "format": "int32"
          },
          "AuthorizingGate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Gate"
              },
              {}
            ]
          },
          "ToAuthorizeGate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Gate"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.As.AS_IO_ChannelStateResult": {
        "title": "WSAutoscan.Core.Model.As.AS_IO_ChannelStateResult",
        "required": [
          "Id",
          "StateResult"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "StateResult": {
            "type": "string"
          },
          "IONotificationResponses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.As.AS_IO_NotificationResponse"
            },
            "description": "",
            "nullable": true
          },
          "MunicipiumNotificationResponses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.As.AS_IO_NotificationResponse"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Model.As.AS_RoadMap": {
        "title": "WSAutoscan.Core.Model.As.AS_RoadMap",
        "required": [
          "CodQua",
          "CodVia",
          "Description",
          "CustomerId"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "CodQua": {
            "type": "integer",
            "format": "int32"
          },
          "CodVia": {
            "type": "integer",
            "format": "int32"
          },
          "Description": {
            "type": "string"
          },
          "CustomerId": {
            "type": "integer",
            "format": "int32"
          },
          "Customer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Customer"
              },
              {}
            ]
          },
          "CameraAttributesRoadMaps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.As.AS_CameraAttributes_RoadMap"
            },
            "description": "",
            "nullable": true
          },
          "ConciliaKey": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "WSAutoscan.Core.Model.CameraBrand": {
        "title": "WSAutoscan.Core.Model.CameraBrand",
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer"
      },
      "WSAutoscan.Core.Model.RedVelox_Violation_Export": {
        "title": "WSAutoscan.Core.Model.RedVelox_Violation_Export",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "FileName": {
            "type": "string",
            "nullable": true
          },
          "DateExport": {
            "type": "string",
            "format": "date-time"
          },
          "UserId": {
            "type": "integer",
            "format": "int32"
          },
          "NumViolationExported": {
            "type": "integer",
            "format": "int32"
          },
          "NumRedViolationExported": {
            "type": "integer",
            "format": "int32"
          },
          "NumVeloxViolationExported": {
            "type": "integer",
            "format": "int32"
          },
          "Transits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.RedVelox.RedVelox_Transit"
            },
            "description": "",
            "nullable": true
          },
          "User": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_User"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.RedVelox.Red.Red_OperatingTimeInterval": {
        "title": "WSAutoscan.Core.Model.RedVelox.Red.Red_OperatingTimeInterval",
        "type": "object",
        "properties": {
          "GateId": {
            "type": "integer",
            "format": "int32"
          },
          "Start": {
            "type": "string",
            "format": "date-time"
          },
          "End": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "WSAutoscan.Core.Model.RedVelox.Red.RedVeloxCropChoiceDictionary": {
        "title": "WSAutoscan.Core.Model.RedVelox.Red.RedVeloxCropChoiceDictionary",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "CropChoice": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "RedVelox_Transits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.RedVelox.RedVelox_Transit"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Model.RedVelox.RedVelox_Transit_Validator": {
        "title": "WSAutoscan.Core.Model.RedVelox.RedVelox_Transit_Validator",
        "required": [
          "Id",
          "CameraValidatorId",
          "RedVeloxTransitId"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "CameraValidatorId": {
            "type": "integer",
            "format": "int32"
          },
          "RedVeloxTransitId": {
            "type": "integer",
            "format": "int64"
          },
          "RedVeloxTransit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.RedVelox.RedVelox_Transit"
              },
              {}
            ]
          },
          "CameraValidator": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.As.AS_Camera_Validator"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.RedVelox.Velox.Velox_OperatingTimeInterval": {
        "title": "WSAutoscan.Core.Model.RedVelox.Velox.Velox_OperatingTimeInterval",
        "type": "object",
        "properties": {
          "GateId": {
            "type": "integer",
            "format": "int32"
          },
          "Start": {
            "type": "string",
            "format": "date-time"
          },
          "End": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "WSAutoscan.Core.Model.RedVelox.Velox.Velox_TransitDetails": {
        "title": "WSAutoscan.Core.Model.RedVelox.Velox.Velox_TransitDetails",
        "required": [
          "Heavy"
        ],
        "type": "object",
        "properties": {
          "TransitId": {
            "type": "integer",
            "format": "int64"
          },
          "Velox": {
            "type": "integer",
            "format": "int32"
          },
          "Limit": {
            "type": "integer",
            "format": "int32"
          },
          "Heavy": {
            "type": "boolean"
          },
          "Transit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.RedVelox.RedVelox_Transit"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.SAT_AlarmSent": {
        "title": "WSAutoscan.Core.Model.SAT_AlarmSent",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Date": {
            "type": "string",
            "format": "date-time"
          },
          "UserId": {
            "type": "integer",
            "format": "int32"
          },
          "SendResultId": {
            "type": "integer",
            "format": "int32"
          },
          "Note": {
            "type": "string",
            "nullable": true
          },
          "AlarmTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "AlarmId": {
            "type": "integer",
            "format": "int32"
          },
          "User": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_User"
              },
              {}
            ]
          },
          "AlarmType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.SAT_AlarmTypeDictionary"
              },
              {}
            ]
          },
          "SendResult": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.SAT_SendResultDictionary"
              },
              {}
            ]
          },
          "Alarm": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.SAT_Alarm"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.SAT_AlarmTypeDictionary": {
        "title": "WSAutoscan.Core.Model.SAT_AlarmTypeDictionary",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Description": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "Color": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "UsersGroupsAlarmTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.SAT_User_Group_AlarmType"
            },
            "description": "",
            "nullable": true
          },
          "AlarmsSent": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.SAT_AlarmSent"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Model.As.AS_CameraMobileConfigurationStarted": {
        "title": "WSAutoscan.Core.Model.As.AS_CameraMobileConfigurationStarted",
        "required": [
          "Id",
          "Started",
          "ConfigurationId",
          "StartedUserId"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Started": {
            "type": "string",
            "format": "date-time"
          },
          "Ended": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "ConfigurationId": {
            "type": "integer",
            "format": "int32"
          },
          "StartedUserId": {
            "type": "integer",
            "format": "int32"
          },
          "StoppedUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "DirectionToCheck": {
            "type": "string",
            "nullable": true
          },
          "StartedUser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_User"
              },
              {}
            ]
          },
          "StoppedUser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_User"
              },
              {}
            ]
          },
          "Configuration": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.As.AS_CameraMobileConfiguration"
              },
              {}
            ]
          },
          "RedVeloxTransits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.RedVelox.RedVelox_Transit"
            },
            "description": "",
            "nullable": true
          },
          "Validators": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.As.AS_CameraMobileConfiguration_Validator"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Model.As.AS_DttsisModalityCall": {
        "title": "WSAutoscan.Core.Model.As.AS_DttsisModalityCall",
        "required": [
          "Id",
          "ModalityCall"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "ModalityCall": {
            "type": "string"
          },
          "AS_DttsisModalityCall_DttsisTransitSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.As.AS_DttsisModalityCall_DttsisTransitSettings"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Model.As.As_Recorded_Note_Transits": {
        "title": "WSAutoscan.Core.Model.As.As_Recorded_Note_Transits",
        "required": [
          "SuiteId",
          "Note",
          "UsageTimes"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "SuiteId": {
            "type": "integer",
            "format": "int32"
          },
          "Note": {
            "type": "string"
          },
          "UsageTimes": {
            "type": "integer",
            "format": "int32"
          },
          "Suite": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Suite"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.DurationConstraintName": {
        "title": "WSAutoscan.Core.Model.DurationConstraintName",
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer"
      },
      "WSAutoscan.Core.Model.RedVelox.Red.Red_TransitDetails": {
        "title": "WSAutoscan.Core.Model.RedVelox.Red.Red_TransitDetails",
        "type": "object",
        "properties": {
          "TransitId": {
            "type": "integer",
            "format": "int64"
          },
          "YellowTimeMs": {
            "type": "integer",
            "format": "int64"
          },
          "RedTimeMs": {
            "type": "integer",
            "format": "int64"
          },
          "Transit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.RedVelox.RedVelox_Transit"
              },
              {}
            ]
          },
          "ViolationTypeDictionary": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.RedVelox.RedVelox_ViolationTypeDictionary"
              },
              {}
            ]
          },
          "ViolationTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "lat": {
            "type": "integer",
            "format": "int64"
          },
          "lng": {
            "type": "integer",
            "format": "int64"
          },
          "CommaId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Comma": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.RedVelox.Red.Red_CommaDictionary"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.RedVeloxStatistics": {
        "title": "WSAutoscan.Core.Model.RedVeloxStatistics",
        "required": [
          "Id",
          "TransitDate",
          "TotalTransits",
          "CustomerId",
          "GateId",
          "GateDescription",
          "TimeSlot",
          "ToValidate",
          "CancelPropos",
          "Cancel",
          "Confirmed",
          "Exported",
          "DisputedOnRoad",
          "Manutenzione",
          "DatiConfermati",
          "SuiteId",
          "discardWithStickers"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "TransitDate": {
            "type": "string",
            "format": "date"
          },
          "TotalTransits": {
            "type": "integer",
            "format": "int64"
          },
          "CustomerId": {
            "type": "integer",
            "format": "int32"
          },
          "GateId": {
            "type": "integer",
            "format": "int32"
          },
          "GateDescription": {
            "type": "string"
          },
          "TimeSlot": {
            "type": "integer",
            "format": "int32"
          },
          "ToValidate": {
            "type": "integer",
            "format": "int64"
          },
          "CancelPropos": {
            "type": "integer",
            "format": "int64"
          },
          "Cancel": {
            "type": "integer",
            "format": "int64"
          },
          "Confirmed": {
            "type": "integer",
            "format": "int64"
          },
          "Exported": {
            "type": "integer",
            "format": "int64"
          },
          "DisputedOnRoad": {
            "type": "integer",
            "format": "int64"
          },
          "Manutenzione": {
            "type": "integer",
            "format": "int64"
          },
          "DatiConfermati": {
            "type": "integer",
            "format": "int64"
          },
          "SuiteId": {
            "type": "integer",
            "format": "int32"
          },
          "discardWithStickers": {
            "type": "integer",
            "format": "int64"
          },
          "Suite": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Suite"
              },
              {}
            ]
          },
          "Customer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Customer"
              },
              {}
            ]
          },
          "Gate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Gate"
              },
              {}
            ]
          },
          "Statistic_Transits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.RedVelox.RedVelox_Statistic_Transits"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Model.SAT_Alarm_Scntt_Detail": {
        "title": "WSAutoscan.Core.Model.SAT_Alarm_Scntt_Detail",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "AlarmId": {
            "type": "integer",
            "format": "int32"
          },
          "ScnttCategory": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "ScnttRole": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "ScnttOffice": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "ScnttVehicle": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "ScnttVehicleType": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "ScnttAction": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "ScnttDateTime_In": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "ScnttNote": {
            "type": "string",
            "nullable": true
          },
          "Alarm": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.SAT_Alarm"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.SAT_Detail": {
        "title": "WSAutoscan.Core.Model.SAT_Detail",
        "type": "object",
        "properties": {
          "VehicleDetailId": {
            "type": "integer",
            "format": "int64"
          },
          "FieldVehicleDetailId": {
            "type": "integer",
            "format": "int32"
          },
          "Value": {
            "type": "string",
            "nullable": true
          },
          "VehicleDetail": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.SAT_VehicleDetail"
              },
              {}
            ]
          },
          "FieldVehicleDetail": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.SAT_FieldVehicleDetail"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.As.AS_CameraMobileConfiguration_Lane": {
        "title": "WSAutoscan.Core.Model.As.AS_CameraMobileConfiguration_Lane",
        "required": [
          "Id",
          "LaneId",
          "MobileConfigurationId"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "LaneId": {
            "type": "integer",
            "format": "int32"
          },
          "MobileConfigurationId": {
            "type": "integer",
            "format": "int32"
          },
          "CameraLane": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Camera_Lane"
              },
              {}
            ]
          },
          "CameraMobileConfiguration": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.As.AS_CameraMobileConfiguration"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.As.AS_IO_SendState": {
        "title": "WSAutoscan.Core.Model.As.AS_IO_SendState",
        "required": [
          "Id",
          "State"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "State": {
            "type": "string"
          },
          "ASIONotifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.ZTL_IO_Notification"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Model.RedVelox.Red.Red_CommaDictionary": {
        "title": "WSAutoscan.Core.Model.RedVelox.Red.Red_CommaDictionary",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Description": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Model.RedVelox.RedVelox_Statistic_Transits": {
        "title": "WSAutoscan.Core.Model.RedVelox.RedVelox_Statistic_Transits",
        "type": "object",
        "properties": {
          "VehicleId": {
            "type": "integer",
            "format": "int32"
          },
          "RedVeloxStatisticsId": {
            "type": "integer",
            "format": "int32"
          },
          "TransitsCount": {
            "type": "integer",
            "format": "int64",
            "default": 0
          },
          "Vehicle": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Vehicle"
              },
              {}
            ]
          },
          "RedVeloxStatistics": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.RedVeloxStatistics"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.RedVelox.RedVelox_StatusDictionary": {
        "title": "WSAutoscan.Core.Model.RedVelox.RedVelox_StatusDictionary",
        "type": "object",
        "properties": {
          "StatusId": {
            "type": "integer",
            "format": "int32"
          },
          "Name": {
            "type": "string",
            "nullable": true
          },
          "TransitStatus": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.RedVelox.RedVelox_TransitStatus"
            },
            "description": "",
            "nullable": true
          },
          "Transits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.RedVelox.RedVelox_Transit"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Model.SAT_Alarm_Dttsis_Detail": {
        "title": "WSAutoscan.Core.Model.SAT_Alarm_Dttsis_Detail",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "AlarmId": {
            "type": "integer",
            "format": "int32"
          },
          "DttsisCompagniaAssicuratrice": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "DttsisDataDecorrenzaAssicurazione": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "DttsisDataFineComporto": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "DttsisDataScadenzaAssicurazione": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "DttsisDataScadenzaRevisione": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "DttsisDataSospensioneAssicurazione": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "DttsisNumeroPolizza": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "DttsisRevisioneValida": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "DttsisSituazioneAl": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "DttsisTipoVeicolo": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "DttsisVeicoloAssicurato": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "Alarm": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.SAT_Alarm"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.SAT_AlarmStateDictionary": {
        "title": "WSAutoscan.Core.Model.SAT_AlarmStateDictionary",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Description": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "AlarmStates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.SAT_AlarmState"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Model.As.AS_CameraMobileConfiguration_Attributes": {
        "title": "WSAutoscan.Core.Model.As.AS_CameraMobileConfiguration_Attributes",
        "required": [
          "Id",
          "AttributeId",
          "MobileConfigurationId"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "AttributeId": {
            "type": "integer",
            "format": "int32"
          },
          "MobileConfigurationId": {
            "type": "integer",
            "format": "int32"
          },
          "CameraAttribute": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Camera_Attribute"
              },
              {}
            ]
          },
          "CameraMobileConfiguration": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.As.AS_CameraMobileConfiguration"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.As.AS_IO_GeneralResponse": {
        "title": "WSAutoscan.Core.Model.As.AS_IO_GeneralResponse",
        "required": [
          "Id",
          "ResponseType"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "ResponseType": {
            "type": "string"
          },
          "ASIONotificationResponses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.As.AS_IO_NotificationResponse"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Model.As.AS_IO_NotificationResponse": {
        "title": "WSAutoscan.Core.Model.As.AS_IO_NotificationResponse",
        "required": [
          "SendedDate",
          "AttemptsMade",
          "IOResponseId",
          "MunicipiumResponseId",
          "GeneralResponseId"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int64"
          },
          "SendedDate": {
            "type": "string",
            "format": "date-time"
          },
          "AttemptsMade": {
            "type": "integer",
            "format": "int32"
          },
          "IOResponseId": {
            "type": "integer",
            "format": "int32"
          },
          "MunicipiumResponseId": {
            "type": "integer",
            "format": "int32"
          },
          "IOError": {
            "type": "string",
            "nullable": true
          },
          "MunicipiumError": {
            "type": "string",
            "nullable": true
          },
          "GeneralResponseId": {
            "type": "integer",
            "format": "int32"
          },
          "GeneralError": {
            "type": "string",
            "nullable": true
          },
          "LastCheck": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "LastCheckMMC": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "IOResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.As.AS_IO_ChannelStateResult"
              },
              {}
            ]
          },
          "MunicipiumResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.As.AS_IO_ChannelStateResult"
              },
              {}
            ]
          },
          "GeneralResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.As.AS_IO_GeneralResponse"
              },
              {}
            ]
          },
          "ZtlNotification": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.ZTL_IO_Notification"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.As.AS_MediaType": {
        "title": "WSAutoscan.Core.Model.As.AS_MediaType",
        "type": "object",
        "properties": {
          "Id": {
            "maxLength": 5,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "nullable": true
          },
          "Suffix": {
            "type": "string",
            "nullable": true
          },
          "CameraOffsets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.As.AS_Camera_Offset"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Model.RedVelox.RedVelox_Settings": {
        "title": "WSAutoscan.Core.Model.RedVelox.RedVelox_Settings",
        "required": [
          "WidgetSliderMinuteStep",
          "ViolationsDeadlineDays",
          "ViolationsForeignDeadlineDays",
          "AutomaticScrollViolationConfirm",
          "AutomaticScrollViolationCancel",
          "AutomaticScrollDataConfirm",
          "AutomaticScrollDataCancel",
          "RetrieveNullNationTransit"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "ExportProtectionPassword": {
            "type": "string",
            "nullable": true
          },
          "ValidationProtectionPassword": {
            "type": "string",
            "nullable": true
          },
          "KeepAuthorizedTransitDays": {
            "type": "integer",
            "format": "int32"
          },
          "KeepExportedTransitdDays": {
            "type": "integer",
            "format": "int32"
          },
          "ExportFormat": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "BlurEnabled": {
            "type": "boolean"
          },
          "BlurLevel": {
            "maximum": 10.0,
            "minimum": 0.0,
            "type": "integer",
            "format": "int32"
          },
          "WidgetSliderMinuteStep": {
            "type": "integer",
            "format": "int32"
          },
          "ExportContextImg": {
            "type": "boolean"
          },
          "ExportVideo": {
            "type": "boolean"
          },
          "CalibrationDeadlineDays": {
            "type": "integer",
            "format": "int32"
          },
          "ViolationsDeadlineDays": {
            "type": "integer",
            "format": "int32"
          },
          "ViolationsForeignDeadlineDays": {
            "type": "integer",
            "format": "int32"
          },
          "ExportViolationDocument": {
            "type": "boolean"
          },
          "AutomaticScrollViolationConfirm": {
            "type": "boolean"
          },
          "AutomaticScrollViolationCancel": {
            "type": "boolean"
          },
          "AutomaticScrollDataConfirm": {
            "type": "boolean"
          },
          "AutomaticScrollDataCancel": {
            "type": "boolean"
          },
          "RetrieveNullNationTransit": {
            "type": "boolean"
          },
          "StartRetrieveNullNationTransit": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "DirectoryExportSave": {
            "type": "string",
            "nullable": true
          },
          "AuthorizeComma2Violations": {
            "type": "boolean",
            "default": false
          },
          "CropChoice": {
            "type": "boolean",
            "default": false
          },
          "ClearEnabled": {
            "type": "boolean",
            "default": true
          },
          "ReadSticker": {
            "type": "boolean",
            "default": false
          },
          "StickerMode": {
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          "VehicleId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ExcludeVisura": {
            "type": "boolean"
          },
          "Vehicle": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Vehicle"
              },
              {}
            ]
          },
          "ExportClaheBrightImages": {
            "type": "boolean",
            "default": true
          },
          "BlurAllImages": {
            "type": "boolean",
            "default": true
          }
        }
      },
      "WSAutoscan.Core.Model.RedVelox.RedVelox_Transit": {
        "title": "WSAutoscan.Core.Model.RedVelox.RedVelox_Transit",
        "required": [
          "TransitCameraId",
          "SiteAddress"
        ],
        "type": "object",
        "properties": {
          "TransitId": {
            "type": "integer",
            "format": "int64"
          },
          "TransitCameraId": {
            "type": "integer",
            "format": "int64"
          },
          "InsertDate": {
            "type": "string",
            "format": "date-time"
          },
          "TransitDate": {
            "type": "string",
            "format": "date-time"
          },
          "Plate": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "CameraId": {
            "type": "integer",
            "format": "int32"
          },
          "TransitPhotoId": {
            "type": "string",
            "nullable": true
          },
          "NationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "LastStatusDictionaryId": {
            "type": "integer",
            "format": "int32"
          },
          "LaneId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "OpMode": {
            "type": "string",
            "nullable": true
          },
          "OcrConfidency": {
            "type": "integer",
            "format": "int32"
          },
          "VehicleTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "Speed": {
            "type": "number"
          },
          "VehicleColor": {
            "type": "string",
            "nullable": true
          },
          "SiteAddress": {
            "maxLength": 128,
            "type": "string"
          },
          "VehicleBrand": {
            "type": "string",
            "nullable": true
          },
          "Direction": {
            "type": "string",
            "nullable": true
          },
          "Sticker1": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Sticker2": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "RedVeloxCropChoiceDictionaryId": {
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          "Vehicle": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Vehicle"
              },
              {}
            ]
          },
          "Camera": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Camera"
              },
              {}
            ]
          },
          "Nation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Nations"
              },
              {}
            ]
          },
          "Status": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.RedVelox.RedVelox_TransitStatus"
            },
            "description": "",
            "nullable": true
          },
          "DetailsRed": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.RedVelox.Red.Red_TransitDetails"
              },
              {}
            ]
          },
          "DetailsVelox": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.RedVelox.Velox.Velox_TransitDetails"
              },
              {}
            ]
          },
          "Photos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.RedVelox.RedVelox_TransitPhoto"
            },
            "description": "",
            "nullable": true
          },
          "OCR_Fallita": {
            "type": "boolean"
          },
          "Correzione_Manuale": {
            "type": "boolean"
          },
          "ViolationExportId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "DttsisDataId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "CameraMobileConfigurationStartedId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ViolationExport": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.RedVelox_Violation_Export"
              },
              {}
            ]
          },
          "DttsisData": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Dttsis_TransitData"
              },
              {}
            ]
          },
          "AS_Camera_Lane": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Camera_Lane"
              },
              {}
            ]
          },
          "TransitStatusDictionary": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.RedVelox.RedVelox_StatusDictionary"
              },
              {}
            ]
          },
          "CameraMobileConfigurationStarted": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.As.AS_CameraMobileConfigurationStarted"
              },
              {}
            ]
          },
          "RedVeloxTransitValidators": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.RedVelox.RedVelox_Transit_Validator"
            },
            "description": "",
            "nullable": true
          },
          "RedVeloxCropChoiceDictionary": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.RedVelox.Red.RedVeloxCropChoiceDictionary"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.RedVelox.RedVelox_TransitPhoto": {
        "title": "WSAutoscan.Core.Model.RedVelox.RedVelox_TransitPhoto",
        "required": [
          "Brightness",
          "Contrast"
        ],
        "type": "object",
        "properties": {
          "ImageId": {
            "type": "integer",
            "format": "int32"
          },
          "ImageName": {
            "type": "string",
            "nullable": true
          },
          "ImagePath": {
            "type": "string",
            "nullable": true
          },
          "MaxX": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "MaxY": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "MinX": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "MinY": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "StartTopLeftX": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "StartTopLeftY": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "StartTopRightX": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "StartTopRightY": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "StopTopLeftX": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "StopTopLeftY": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "StopTopRightX": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "StopTopRightY": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Brightness": {
            "type": "integer",
            "format": "int32"
          },
          "Contrast": {
            "type": "integer",
            "format": "int32"
          },
          "Height": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Width": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "IsVideo": {
            "type": "boolean"
          },
          "TransitId": {
            "type": "integer",
            "format": "int64"
          },
          "Transit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.RedVelox.RedVelox_Transit"
              },
              {}
            ]
          },
          "PhotoROIs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.RedVelox.RedVelox_TransitPhotoROI"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Model.RedVelox.RedVelox_TransitPhotoROI": {
        "title": "WSAutoscan.Core.Model.RedVelox.RedVelox_TransitPhotoROI",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "TransitPhotoId": {
            "type": "integer",
            "format": "int32"
          },
          "TransitPhoto": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.RedVelox.RedVelox_TransitPhoto"
              },
              {}
            ]
          },
          "Name": {
            "type": "string",
            "nullable": true
          },
          "Blurred": {
            "type": "boolean"
          },
          "MinX": {
            "type": "integer",
            "format": "int32"
          },
          "MinY": {
            "type": "integer",
            "format": "int32"
          },
          "MaxX": {
            "type": "integer",
            "format": "int32"
          },
          "MaxY": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "WSAutoscan.Core.Model.RedVelox.RedVelox_TransitStatus": {
        "title": "WSAutoscan.Core.Model.RedVelox.RedVelox_TransitStatus",
        "type": "object",
        "properties": {
          "TransitId": {
            "type": "integer",
            "format": "int64"
          },
          "StatusId": {
            "type": "integer",
            "format": "int32"
          },
          "Date": {
            "type": "string",
            "format": "date-time"
          },
          "Note": {
            "type": "string",
            "nullable": true
          },
          "Transit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.RedVelox.RedVelox_Transit"
              },
              {}
            ]
          },
          "StatusDictionary": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.RedVelox.RedVelox_StatusDictionary"
              },
              {}
            ]
          },
          "InsertUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "User": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_User"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.RedVelox.RedVelox_ViolationTypeDictionary": {
        "title": "WSAutoscan.Core.Model.RedVelox.RedVelox_ViolationTypeDictionary",
        "type": "object",
        "properties": {
          "ViolationId": {
            "type": "integer",
            "format": "int32"
          },
          "Name": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Model.SAT_Alarm": {
        "title": "WSAutoscan.Core.Model.SAT_Alarm",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "TransitId": {
            "type": "integer",
            "format": "int64"
          },
          "Plate": {
            "type": "string",
            "nullable": true
          },
          "Date": {
            "type": "string",
            "format": "date-time"
          },
          "Transit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.SAT_Transit"
              },
              {}
            ]
          },
          "ListNames": {
            "type": "string",
            "nullable": true
          },
          "Colour": {
            "type": "string",
            "nullable": true
          },
          "Exported": {
            "type": "boolean",
            "nullable": true
          },
          "AlarmStates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.SAT_AlarmState"
            },
            "description": "",
            "nullable": true
          },
          "AlarmSents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.SAT_AlarmSent"
            },
            "description": "",
            "nullable": true
          },
          "AlarmDttsisDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.SAT_Alarm_Dttsis_Detail"
            },
            "description": "",
            "nullable": true
          },
          "AlarmScnttDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.SAT_Alarm_Scntt_Detail"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Model.SAT_AlarmState": {
        "title": "WSAutoscan.Core.Model.SAT_AlarmState",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "AlarmId": {
            "type": "integer",
            "format": "int32"
          },
          "UserId": {
            "type": "integer",
            "format": "int32"
          },
          "Date": {
            "type": "string",
            "format": "date-time"
          },
          "StateId": {
            "type": "integer",
            "format": "int32"
          },
          "Note": {
            "type": "string",
            "nullable": true
          },
          "Alarm": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.SAT_Alarm"
              },
              {}
            ]
          },
          "User": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_User"
              },
              {}
            ]
          },
          "State": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.SAT_AlarmStateDictionary"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.SAT_List": {
        "title": "WSAutoscan.Core.Model.SAT_List",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Description": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "IdOwner": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "ListModeId": {
            "type": "integer",
            "format": "int32"
          },
          "Color": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "Enabled": {
            "type": "boolean"
          },
          "Groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.SAT_Group_List"
            },
            "description": "",
            "nullable": true
          },
          "ListDatas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.SAT_ListData"
            },
            "description": "",
            "nullable": true
          },
          "List_Customer": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.SAT_List_Customer"
            },
            "description": "",
            "nullable": true
          },
          "ListMode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.SAT_ListModeDictionary"
              },
              {}
            ]
          },
          "Transits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.SAT_List_Transit"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Model.SAT_Group": {
        "title": "WSAutoscan.Core.Model.SAT_Group",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "CustomerId": {
            "type": "integer",
            "format": "int32"
          },
          "Description": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "Customer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Customer"
              },
              {}
            ]
          },
          "Lists": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.SAT_Group_List"
            },
            "description": "",
            "nullable": true
          },
          "Users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.SAT_User_Group"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Model.SAT_PhotoTypeDictionary": {
        "title": "WSAutoscan.Core.Model.SAT_PhotoTypeDictionary",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Description": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "Photos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.SAT_TransitPhoto"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Model.SAT_ScnttTransits": {
        "title": "WSAutoscan.Core.Model.SAT_ScnttTransits",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "SendError": {
            "type": "boolean"
          },
          "SecondSend": {
            "type": "boolean"
          },
          "TransitId": {
            "type": "integer",
            "format": "int64"
          },
          "DetectId": {
            "type": "string",
            "nullable": true
          },
          "TransitDateTime": {
            "type": "string",
            "nullable": true
          },
          "Plate_Number": {
            "type": "string",
            "nullable": true
          },
          "Plate_Country": {
            "type": "string",
            "nullable": true
          },
          "LPR_Image": {
            "type": "string",
            "nullable": true
          },
          "OverviewImage": {
            "type": "string",
            "nullable": true
          },
          "Category": {
            "type": "string",
            "nullable": true
          },
          "Vehicle": {
            "type": "string",
            "nullable": true
          },
          "ErrorCode": {
            "type": "string",
            "nullable": true
          },
          "ErrorDesc": {
            "type": "string",
            "nullable": true
          },
          "Note": {
            "type": "string",
            "nullable": true
          },
          "Transit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.SAT_Transit"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.SAT_Settings": {
        "title": "WSAutoscan.Core.Model.SAT_Settings",
        "required": [
          "ExportedTransits",
          "EnableEnvClassStats"
        ],
        "type": "object",
        "properties": {
          "CustomerId": {
            "type": "integer",
            "format": "int32"
          },
          "Customer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Customer"
              },
              {}
            ]
          },
          "ImagesDays": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "PlateDays": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "AlarmDays": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ScnttEnabled": {
            "type": "boolean",
            "nullable": true
          },
          "ScnttHotListLastUpdate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "ScnttHotListMaxAgeDays": {
            "type": "integer",
            "format": "int32"
          },
          "ExportedTransits": {
            "type": "integer",
            "format": "int32"
          },
          "MuteAlarmDays": {
            "type": "integer",
            "format": "int32"
          },
          "MapQuestKey": {
            "type": "string",
            "nullable": true
          },
          "EnableEnvClassStats": {
            "type": "boolean"
          },
          "SATEnvSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.Sat.SAT_Env_Settings"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Model.SAT_TransitTypeDictionary": {
        "title": "WSAutoscan.Core.Model.SAT_TransitTypeDictionary",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Description": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "VehicleDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.SAT_VehicleDetail"
            },
            "description": "",
            "nullable": true
          },
          "History_VehicleDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.Sat.SAT_History_VehicleDetail"
            },
            "description": "",
            "nullable": true
          },
          "ListEntries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.SAT_ListData"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Model.Sat.SAT_History_Alarm": {
        "title": "WSAutoscan.Core.Model.Sat.SAT_History_Alarm",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "TransitId": {
            "type": "integer",
            "format": "int64"
          },
          "Plate": {
            "type": "string",
            "nullable": true
          },
          "Date": {
            "type": "string",
            "format": "date-time"
          },
          "Transit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.Sat.SAT_History_Transit"
              },
              {}
            ]
          },
          "ListNames": {
            "type": "string",
            "nullable": true
          },
          "Colour": {
            "type": "string",
            "nullable": true
          },
          "Exported": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Model.Statistic.SAT_Statistic": {
        "title": "WSAutoscan.Core.Model.Statistic.SAT_Statistic",
        "required": [
          "EnvClass",
          "Euro0",
          "Euro1",
          "Euro2",
          "Euro3",
          "Euro4",
          "Euro5",
          "Euro6",
          "NAP"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Date": {
            "type": "string",
            "format": "date-time"
          },
          "TimeSlot": {
            "type": "integer",
            "format": "int32"
          },
          "TransitNumber": {
            "type": "integer",
            "format": "int32"
          },
          "GateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "GateName": {
            "type": "string",
            "nullable": true
          },
          "CustomerId": {
            "type": "integer",
            "format": "int32"
          },
          "BlacklistAlarm": {
            "type": "integer",
            "format": "int32"
          },
          "InsuranceAlarm": {
            "type": "integer",
            "format": "int32"
          },
          "RevisionAlarm": {
            "type": "integer",
            "format": "int32"
          },
          "A1Alarm": {
            "type": "integer",
            "format": "int32"
          },
          "A2Alarm": {
            "type": "integer",
            "format": "int32"
          },
          "CAlarm": {
            "type": "integer",
            "format": "int32"
          },
          "Car": {
            "type": "integer",
            "format": "int32"
          },
          "CarTrailer": {
            "type": "integer",
            "format": "int32"
          },
          "Bus": {
            "type": "integer",
            "format": "int32"
          },
          "Unknown": {
            "type": "integer",
            "format": "int32"
          },
          "Lorry": {
            "type": "integer",
            "format": "int32"
          },
          "LorryTrailer": {
            "type": "integer",
            "format": "int32"
          },
          "Motorcycle": {
            "type": "integer",
            "format": "int32"
          },
          "Motorbike": {
            "type": "integer",
            "format": "int32"
          },
          "Rimorchio": {
            "type": "integer",
            "format": "int32"
          },
          "EnvClass": {
            "maximum": 2147483647.0,
            "minimum": 0.0,
            "type": "integer",
            "format": "int32"
          },
          "Euro0": {
            "maximum": 2147483647.0,
            "minimum": 0.0,
            "type": "integer",
            "format": "int32"
          },
          "Euro1": {
            "maximum": 2147483647.0,
            "minimum": 0.0,
            "type": "integer",
            "format": "int32"
          },
          "Euro2": {
            "maximum": 2147483647.0,
            "minimum": 0.0,
            "type": "integer",
            "format": "int32"
          },
          "Euro3": {
            "maximum": 2147483647.0,
            "minimum": 0.0,
            "type": "integer",
            "format": "int32"
          },
          "Euro4": {
            "maximum": 2147483647.0,
            "minimum": 0.0,
            "type": "integer",
            "format": "int32"
          },
          "Euro5": {
            "maximum": 2147483647.0,
            "minimum": 0.0,
            "type": "integer",
            "format": "int32"
          },
          "Euro6": {
            "maximum": 2147483647.0,
            "minimum": 0.0,
            "type": "integer",
            "format": "int32"
          },
          "NAP": {
            "maximum": 2147483647.0,
            "minimum": 0.0,
            "type": "integer",
            "format": "int32"
          },
          "Gate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Gate"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.ZTL_AuthorizationStateDictionary": {
        "title": "WSAutoscan.Core.Model.ZTL_AuthorizationStateDictionary",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Description": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Model.ZTL_AuthorizationTypeValidity": {
        "title": "WSAutoscan.Core.Model.ZTL_AuthorizationTypeValidity",
        "required": [
          "Name",
          "Duration",
          "ExtendedDuration"
        ],
        "type": "object",
        "properties": {
          "PermitTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "Name": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.DurationConstraintName"
              },
              {}
            ]
          },
          "Locked": {
            "type": "boolean"
          },
          "Duration": {
            "minLength": 3,
            "type": "string"
          },
          "ExtendedDuration": {
            "minLength": 3,
            "type": "string"
          },
          "ExtendedExpiryDay": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Model.ZTL_OperatingTimeInterval": {
        "title": "WSAutoscan.Core.Model.ZTL_OperatingTimeInterval",
        "type": "object",
        "properties": {
          "GateId": {
            "type": "integer",
            "format": "int32"
          },
          "Start": {
            "type": "string",
            "format": "date-time"
          },
          "End": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "WSAutoscan.Core.Model.SAT_List_Transit": {
        "title": "WSAutoscan.Core.Model.SAT_List_Transit",
        "type": "object",
        "properties": {
          "ListId": {
            "type": "integer",
            "format": "int32"
          },
          "List": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.SAT_List"
              },
              {}
            ]
          },
          "TransitId": {
            "type": "integer",
            "format": "int64"
          },
          "Transit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.SAT_Transit"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.SAT_Transit": {
        "title": "WSAutoscan.Core.Model.SAT_Transit",
        "required": [
          "Exported"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int64"
          },
          "Date": {
            "type": "string",
            "format": "date-time"
          },
          "InsertDate": {
            "type": "string",
            "format": "date-time"
          },
          "Nation": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "CameraId": {
            "type": "integer",
            "format": "int32"
          },
          "VehicleId": {
            "type": "integer",
            "format": "int32"
          },
          "OcrConfidency": {
            "type": "integer",
            "format": "int32"
          },
          "Direction": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "Exported": {
            "type": "boolean"
          },
          "Camera": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Camera"
              },
              {}
            ]
          },
          "Photos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.SAT_TransitPhoto"
            },
            "description": "",
            "nullable": true
          },
          "Vehicle": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Vehicle"
              },
              {}
            ]
          },
          "Alarms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.SAT_Alarm"
            },
            "description": "",
            "nullable": true
          },
          "ScnttTransits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.SAT_ScnttTransits"
            },
            "description": "",
            "nullable": true
          },
          "VehicleDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.SAT_VehicleDetail"
            },
            "description": "",
            "nullable": true
          },
          "ScnttControlsDone": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.SAT_ScnttControlDone"
            },
            "description": "",
            "nullable": true
          },
          "Lists": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.SAT_List_Transit"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Model.SAT_TransitPhoto": {
        "title": "WSAutoscan.Core.Model.SAT_TransitPhoto",
        "required": [
          "Brightness",
          "Contrast"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int64"
          },
          "ImageDescription": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "TransitId": {
            "type": "integer",
            "format": "int64"
          },
          "ImagePath": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "ImageName": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "Brightness": {
            "type": "integer",
            "format": "int32"
          },
          "Contrast": {
            "type": "integer",
            "format": "int32"
          },
          "PhotoPositionId": {
            "type": "integer",
            "format": "int32"
          },
          "PhotoTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "Obsolete": {
            "type": "boolean"
          },
          "Transit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.SAT_Transit"
              },
              {}
            ]
          },
          "PhotoPosition": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.SAT_PhotoPositionDictionary"
              },
              {}
            ]
          },
          "PhotoType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.SAT_PhotoTypeDictionary"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.SAT_User_Group": {
        "title": "WSAutoscan.Core.Model.SAT_User_Group",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "GroupId": {
            "type": "integer",
            "format": "int32"
          },
          "UserId": {
            "type": "integer",
            "format": "int32"
          },
          "Group": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.SAT_Group"
              },
              {}
            ]
          },
          "User": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_User"
              },
              {}
            ]
          },
          "UserGroupAlarmType": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.SAT_User_Group_AlarmType"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Model.SAT_User_Group_AlarmType": {
        "title": "WSAutoscan.Core.Model.SAT_User_Group_AlarmType",
        "type": "object",
        "properties": {
          "User_GroupId": {
            "type": "integer",
            "format": "int32"
          },
          "AlarmTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "Enabled": {
            "type": "boolean"
          },
          "AlarmType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.SAT_AlarmTypeDictionary"
              },
              {}
            ]
          },
          "User_Group": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.SAT_User_Group"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.Sat.SAT_Env_Settings": {
        "title": "WSAutoscan.Core.Model.Sat.SAT_Env_Settings",
        "required": [
          "CustomerId",
          "EnvId",
          "DttsisVehicleType",
          "PlateChars",
          "IsForAlarm"
        ],
        "type": "object",
        "properties": {
          "CustomerId": {
            "type": "integer",
            "format": "int32"
          },
          "EnvId": {
            "type": "integer",
            "format": "int32"
          },
          "DttsisVehicleType": {
            "type": "string"
          },
          "PlateChars": {
            "maxLength": 3,
            "type": "string"
          },
          "IsForAlarm": {
            "type": "boolean"
          },
          "SATSettings": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.SAT_Settings"
              },
              {}
            ]
          },
          "EnvironmentalClasses": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_EnvironmentalClass"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.Sat.SAT_History_VehicleDetail": {
        "title": "WSAutoscan.Core.Model.Sat.SAT_History_VehicleDetail",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int64"
          },
          "Date": {
            "type": "string",
            "format": "date-time"
          },
          "Description": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "TransitId": {
            "type": "integer",
            "format": "int64"
          },
          "TransitTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "IsTrailer": {
            "type": "boolean"
          },
          "TransitType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.SAT_TransitTypeDictionary"
              },
              {}
            ]
          },
          "Transit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.Sat.SAT_History_Transit"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.ZTL_Transit": {
        "title": "WSAutoscan.Core.Model.ZTL_Transit",
        "required": [
          "Plate",
          "Direction"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "InsertDate": {
            "type": "string",
            "format": "date-time"
          },
          "TransitDate": {
            "type": "string",
            "format": "date-time"
          },
          "Plate": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string"
          },
          "NationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Direction": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string"
          },
          "CameraId": {
            "type": "integer",
            "format": "int32"
          },
          "VehicleId": {
            "type": "integer",
            "format": "int32"
          },
          "LastTransitStatusDictionaryId": {
            "type": "integer",
            "format": "int32"
          },
          "ViolationExportId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "DuplicateOfId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "DttsisDataId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "ZtlPassDataId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "note": {
            "type": "string",
            "nullable": true
          },
          "Camera": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Camera"
              },
              {}
            ]
          },
          "Vehicle": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Vehicle"
              },
              {}
            ]
          },
          "TransitStatusTransits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.ZTL_Transit_TransitStatus"
            },
            "description": "",
            "nullable": true
          },
          "Nation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Nations"
              },
              {}
            ]
          },
          "TransitStatusDictionary": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.ZTL_TransitStatusDictionary"
              },
              {}
            ]
          },
          "ViolationExport": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.ZTL_Violation_Export"
              },
              {}
            ]
          },
          "DttsisData": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Dttsis_TransitData"
              },
              {}
            ]
          },
          "TransitAuthorizingTransits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.ZTL_Transit_Authorizing_Transit"
            },
            "description": "",
            "nullable": true
          },
          "Blacklists": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.ZTL_Blacklist_Transit"
            },
            "description": "",
            "nullable": true
          },
          "Notifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.ZTL_Blacklist_Notification"
            },
            "description": "",
            "nullable": true
          },
          "TransitPhotos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.ZTL_TransitPhoto"
            },
            "description": "",
            "nullable": true
          },
          "ZTL_Authorized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.ZTL_AuthorizedTransit"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.SAT_FieldVehicleDetail": {
        "title": "WSAutoscan.Core.Model.SAT_FieldVehicleDetail",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Field": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "Details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.SAT_Detail"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Model.SAT_Group_List": {
        "title": "WSAutoscan.Core.Model.SAT_Group_List",
        "type": "object",
        "properties": {
          "GroupId": {
            "type": "integer",
            "format": "int32"
          },
          "ListId": {
            "type": "integer",
            "format": "int32"
          },
          "List": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.SAT_List"
              },
              {}
            ]
          },
          "Group": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.SAT_Group"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.SAT_List_Customer": {
        "title": "WSAutoscan.Core.Model.SAT_List_Customer",
        "type": "object",
        "properties": {
          "ListId": {
            "type": "integer",
            "format": "int32"
          },
          "CustomerId": {
            "type": "integer",
            "format": "int32"
          },
          "List": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.SAT_List"
              },
              {}
            ]
          },
          "Customer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Customer"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.SAT_ListData": {
        "title": "WSAutoscan.Core.Model.SAT_ListData",
        "required": [
          "Data"
        ],
        "type": "object",
        "properties": {
          "ListId": {
            "type": "integer",
            "format": "int32"
          },
          "TypeId": {
            "type": "integer",
            "format": "int32"
          },
          "Data": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string"
          },
          "Note": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "ExtraEmail": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "ExtraMobileNumbers": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "ExpiryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "InserterId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Inserter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_User"
              },
              {}
            ]
          },
          "Timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "List": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.SAT_List"
              },
              {}
            ]
          },
          "Type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.SAT_TransitTypeDictionary"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.SAT_ScnttControlDone": {
        "title": "WSAutoscan.Core.Model.SAT_ScnttControlDone",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int64"
          },
          "TransitId": {
            "type": "integer",
            "format": "int64"
          },
          "Transit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.SAT_Transit"
              },
              {}
            ]
          },
          "Plate": {
            "maxLength": 16,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "Value": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "Office": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "Note": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "TransitSendedScntt": {
            "type": "boolean"
          },
          "AlarmSendedScntt": {
            "type": "boolean"
          },
          "Resend": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "SentInData": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "ErrorCode": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "TakeOverDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Model.SAT_VehicleDetail": {
        "title": "WSAutoscan.Core.Model.SAT_VehicleDetail",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int64"
          },
          "Description": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "TransitId": {
            "type": "integer",
            "format": "int64"
          },
          "TransitTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "IsTrailer": {
            "type": "boolean"
          },
          "Details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.SAT_Detail"
            },
            "description": "",
            "nullable": true
          },
          "TransitType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.SAT_TransitTypeDictionary"
              },
              {}
            ]
          },
          "Transit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.SAT_Transit"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.Sat.SAT_History_Transit": {
        "title": "WSAutoscan.Core.Model.Sat.SAT_History_Transit",
        "required": [
          "Exported"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int64"
          },
          "Date": {
            "type": "string",
            "format": "date-time"
          },
          "InsertDate": {
            "type": "string",
            "format": "date-time"
          },
          "Nation": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "CameraId": {
            "type": "integer",
            "format": "int32"
          },
          "VehicleId": {
            "type": "integer",
            "format": "int32"
          },
          "OcrConfidency": {
            "type": "integer",
            "format": "int32"
          },
          "Direction": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "Exported": {
            "type": "boolean"
          },
          "Camera": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Camera"
              },
              {}
            ]
          },
          "Vehicle": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Vehicle"
              },
              {}
            ]
          },
          "VehicleDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.Sat.SAT_History_VehicleDetail"
            },
            "description": "",
            "nullable": true
          },
          "Alarms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.Sat.SAT_History_Alarm"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Model.Sat.SAT_Transit_Data_Export_Log": {
        "title": "WSAutoscan.Core.Model.Sat.SAT_Transit_Data_Export_Log",
        "required": [
          "Id",
          "PlateCode",
          "SiteName",
          "NationId",
          "Date",
          "CameraId",
          "LogId"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int64"
          },
          "PlateCode": {
            "type": "string"
          },
          "SiteName": {
            "type": "string"
          },
          "NationId": {
            "type": "integer",
            "format": "int32"
          },
          "Date": {
            "type": "string",
            "format": "date-time"
          },
          "CameraId": {
            "type": "integer",
            "format": "int32"
          },
          "LogId": {
            "type": "string",
            "format": "uuid"
          },
          "Log": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Log"
              },
              {}
            ]
          },
          "Camera": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Camera"
              },
              {}
            ]
          },
          "Nation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Nations"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.ZTL_AuthorizationType_PrintTemplate": {
        "title": "WSAutoscan.Core.Model.ZTL_AuthorizationType_PrintTemplate",
        "required": [
          "IsForIOMunicipium"
        ],
        "type": "object",
        "properties": {
          "PermitTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "PermitType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.ZTL_AuthorizationType"
              },
              {}
            ]
          },
          "PrintTemplateId": {
            "type": "string",
            "nullable": true
          },
          "IsForIOMunicipium": {
            "type": "boolean"
          }
        }
      },
      "WSAutoscan.Core.Model.ZTL_AuthorizationType_User": {
        "title": "WSAutoscan.Core.Model.ZTL_AuthorizationType_User",
        "required": [
          "CanRead",
          "CanAdd",
          "CanDeleteOrUpdate"
        ],
        "type": "object",
        "properties": {
          "AuthorizationTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "UserId": {
            "type": "integer",
            "format": "int32"
          },
          "CanRead": {
            "type": "boolean"
          },
          "CanAdd": {
            "type": "boolean"
          },
          "CanDeleteOrUpdate": {
            "type": "boolean"
          },
          "AuthorizationType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.ZTL_AuthorizationType"
              },
              {}
            ]
          },
          "User": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_User"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.ZTL_AuthorizationTypeSchedule": {
        "title": "WSAutoscan.Core.Model.ZTL_AuthorizationTypeSchedule",
        "type": "object",
        "properties": {
          "PermitTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "PermitType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.ZTL_AuthorizationType"
              },
              {}
            ]
          },
          "DayDictionaryId": {
            "type": "integer",
            "format": "int32"
          },
          "Dow": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_DayDictionary"
              },
              {}
            ]
          },
          "StartTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.TimeSpan"
              },
              {}
            ]
          },
          "EndTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.TimeSpan"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.SAT_ListModeDictionary": {
        "title": "WSAutoscan.Core.Model.SAT_ListModeDictionary",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Description": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "Lists": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.SAT_List"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Model.SAT_PhotoPositionDictionary": {
        "title": "WSAutoscan.Core.Model.SAT_PhotoPositionDictionary",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Description": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "Note": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "Photos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.SAT_TransitPhoto"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Model.SAT_Role": {
        "title": "WSAutoscan.Core.Model.SAT_Role",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Description": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "Code": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "System": {
            "type": "boolean"
          },
          "Users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_User"
            },
            "description": "",
            "nullable": true
          },
          "Role_Permission": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.SAT_Role_Permission"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Model.SAT_Role_Permission": {
        "title": "WSAutoscan.Core.Model.SAT_Role_Permission",
        "type": "object",
        "properties": {
          "RoleId": {
            "type": "integer",
            "format": "int32"
          },
          "PermissionId": {
            "type": "integer",
            "format": "int32"
          },
          "Role": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.SAT_Role"
              },
              {}
            ]
          },
          "Permission": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Permission"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.SAT_SendResultDictionary": {
        "title": "WSAutoscan.Core.Model.SAT_SendResultDictionary",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Description": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "AlarmsSent": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.SAT_AlarmSent"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Model.Sat.SAT_Transit_Aggregation": {
        "title": "WSAutoscan.Core.Model.Sat.SAT_Transit_Aggregation",
        "required": [
          "TransitDate",
          "TimeSlot",
          "DttsisCat",
          "Direction",
          "CameraId",
          "Nap",
          "Euro0",
          "Euro1",
          "Euro2",
          "Euro3",
          "Euro4",
          "Euro5",
          "Euro6"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int64"
          },
          "TransitDate": {
            "type": "string",
            "format": "date-time"
          },
          "TimeSlot": {
            "type": "integer",
            "format": "int32"
          },
          "DttsisCat": {
            "type": "string"
          },
          "Direction": {
            "type": "string"
          },
          "CameraId": {
            "type": "integer",
            "format": "int32"
          },
          "Nap": {
            "type": "integer",
            "format": "int32"
          },
          "Euro0": {
            "type": "integer",
            "format": "int32"
          },
          "Euro1": {
            "type": "integer",
            "format": "int32"
          },
          "Euro2": {
            "type": "integer",
            "format": "int32"
          },
          "Euro3": {
            "type": "integer",
            "format": "int32"
          },
          "Euro4": {
            "type": "integer",
            "format": "int32"
          },
          "Euro5": {
            "type": "integer",
            "format": "int32"
          },
          "Euro6": {
            "type": "integer",
            "format": "int32"
          },
          "Camera": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Camera"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.ZTL_AuthorizationType": {
        "title": "WSAutoscan.Core.Model.ZTL_AuthorizationType",
        "required": [
          "EncryptedName",
          "EncryptedCodeName",
          "PrintableText",
          "Retroactive"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "EncryptedName": {
            "maxLength": 250,
            "minLength": 0,
            "type": "string"
          },
          "Name": {
            "type": "string",
            "nullable": true
          },
          "EncryptedCodeName": {
            "maxLength": 250,
            "minLength": 0,
            "type": "string"
          },
          "CodeName": {
            "type": "string",
            "nullable": true
          },
          "Active": {
            "type": "boolean"
          },
          "IsEditBlocked": {
            "type": "boolean"
          },
          "IsAvailableOnline": {
            "type": "boolean"
          },
          "IsAvailableOutside": {
            "type": "boolean"
          },
          "IsForDisabledPerson": {
            "type": "boolean"
          },
          "NotifyIfExpiring": {
            "type": "boolean"
          },
          "EmissionPrice": {
            "type": "number"
          },
          "EditPrice": {
            "type": "number"
          },
          "PrintableText": {
            "type": "string"
          },
          "Retroactive": {
            "type": "boolean"
          },
          "IsForZtlPassLombardia": {
            "type": "boolean"
          },
          "DailyMaxTransits": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "SendIONotification": {
            "type": "boolean"
          },
          "ApprovalRequired": {
            "type": "boolean"
          },
          "FrontOfficeURN": {
            "type": "string",
            "nullable": true
          },
          "FrontOfficeApplicantRole": {
            "type": "string",
            "nullable": true
          },
          "SimultaneousAccess": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ParkingSpaces": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "DurationConstraints": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.ZTL_AuthorizationTypeValidity"
              },
              {}
            ]
          },
          "PrintTemplates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.ZTL_AuthorizationType_PrintTemplate"
            },
            "description": "",
            "nullable": true
          },
          "AuthorizationTypeSchedules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.ZTL_AuthorizationTypeSchedule"
            },
            "description": "",
            "nullable": true
          },
          "AuthorizationTypeUsers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.ZTL_AuthorizationType_User"
            },
            "description": "",
            "nullable": true
          },
          "Extensions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.PermitTypeExtension"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Model.ZTL_Transit_TransitStatus": {
        "title": "WSAutoscan.Core.Model.ZTL_Transit_TransitStatus",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int64"
          },
          "TransitId": {
            "type": "integer",
            "format": "int32"
          },
          "TransitStatusDictionaryId": {
            "type": "integer",
            "format": "int32"
          },
          "InsertDate": {
            "type": "string",
            "format": "date-time"
          },
          "InsertUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Transit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.ZTL_Transit"
              },
              {}
            ]
          },
          "TransitStatusDictionary": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.ZTL_TransitStatusDictionary"
              },
              {}
            ]
          },
          "User": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_User"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.ZTL_TransitPhoto": {
        "title": "WSAutoscan.Core.Model.ZTL_TransitPhoto",
        "required": [
          "Contrast",
          "Brightness",
          "TransitId"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "ImageName": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "ImagePath": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "MinX": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "MinY": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "MaxX": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "MaxY": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Contrast": {
            "type": "integer",
            "format": "int32"
          },
          "Brightness": {
            "type": "integer",
            "format": "int32"
          },
          "Height": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Width": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "OcrConfidency": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "PhotoROIs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.ZTL_TransitPhotoROI"
            },
            "description": "",
            "nullable": true
          },
          "TransitId": {
            "type": "integer",
            "format": "int32"
          },
          "ZtlTransit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.ZTL_Transit"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.ZTL_TransitStatusDictionary": {
        "title": "WSAutoscan.Core.Model.ZTL_TransitStatusDictionary",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "TransitStatusTransits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.ZTL_Transit_TransitStatus"
            },
            "description": "",
            "nullable": true
          },
          "Transits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.ZTL_Transit"
            },
            "description": "",
            "nullable": true
          },
          "ZTLTransitAuthorizingSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.ZTL_Transit_Authorizing_Settings"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Model.Ztl.Permits.PermitAttachment": {
        "title": "WSAutoscan.Core.Model.Ztl.Permits.PermitAttachment",
        "required": [
          "EncryptedDescription",
          "FileName",
          "MimeType",
          "Guid",
          "UserId",
          "CustomerId",
          "DateInsert"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "PermitId": {
            "type": "integer",
            "format": "int64"
          },
          "Timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "Permit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.Permits.PermitVersion"
              },
              {}
            ]
          },
          "EncryptedDescription": {
            "maxLength": 400,
            "minLength": 0,
            "type": "string"
          },
          "Description": {
            "type": "string",
            "nullable": true
          },
          "FileName": {
            "type": "string"
          },
          "MimeType": {
            "type": "string"
          },
          "Guid": {
            "type": "string",
            "format": "uuid"
          },
          "UserId": {
            "type": "integer",
            "format": "int32"
          },
          "User": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_User"
              },
              {}
            ]
          },
          "CustomerId": {
            "type": "integer",
            "format": "int32"
          },
          "Customer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Customer"
              },
              {}
            ]
          },
          "DateInsert": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "WSAutoscan.Core.Model.Ztl.Permits.PermitTimeSlot": {
        "title": "WSAutoscan.Core.Model.Ztl.Permits.PermitTimeSlot",
        "type": "object",
        "properties": {
          "PermitId": {
            "type": "integer",
            "format": "int64"
          },
          "Timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "PartId": {
            "type": "integer",
            "format": "int32"
          },
          "Part": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.Permits.PermitPart"
              },
              {}
            ]
          },
          "StartTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.TimeSpan"
              },
              {}
            ]
          },
          "EndTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.TimeSpan"
              },
              {}
            ]
          },
          "DowId": {
            "type": "integer",
            "format": "int32"
          },
          "Dow": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_DayDictionary"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.Ztl.Permits.PermitVehicleAssociation": {
        "title": "WSAutoscan.Core.Model.Ztl.Permits.PermitVehicleAssociation",
        "type": "object",
        "properties": {
          "PermitId": {
            "type": "integer",
            "format": "int64"
          },
          "Timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "Permit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.Permits.PermitVersion"
              },
              {}
            ]
          },
          "VehiclePlate": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "CountryId": {
            "type": "integer",
            "format": "int32"
          },
          "Vehicle": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.RegisteredVehicle"
              },
              {}
            ]
          },
          "OwnerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Owner": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.ZTL_UserRegistry"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.Ztl.Permits.PermitVersion": {
        "title": "WSAutoscan.Core.Model.Ztl.Permits.PermitVersion",
        "required": [
          "EncryptedNotes",
          "EditReason"
        ],
        "type": "object",
        "properties": {
          "PermitId": {
            "type": "integer",
            "format": "int64"
          },
          "Permit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.Permits.Permit"
              },
              {}
            ]
          },
          "Timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "Year": {
            "type": "integer",
            "format": "int32"
          },
          "SerialNumber": {
            "type": "integer",
            "format": "int64"
          },
          "StateId": {
            "type": "integer",
            "format": "int32"
          },
          "State": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.ZTL_AuthorizationStateDictionary"
              },
              {}
            ]
          },
          "TypeId": {
            "type": "integer",
            "format": "int32"
          },
          "Type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.ZTL_AuthorizationType"
              },
              {}
            ]
          },
          "EncryptedNotes": {
            "maxLength": 2048,
            "minLength": 0,
            "type": "string"
          },
          "Notes": {
            "type": "string",
            "nullable": true
          },
          "EditReason": {
            "maxLength": 512,
            "minLength": 0,
            "type": "string"
          },
          "Payment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.Permits.PermitPayment"
              },
              {}
            ]
          },
          "UserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "User": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_User"
              },
              {}
            ]
          },
          "PrintDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "NotificationAttempt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "ExtendedExpiration": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "DailyMaxTransits": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "SimultaneousAccess": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ParkingSpaces": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ZtlPermitConciliaSyncStateDictionaryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Ztl_PermitConciliaSyncStateDictionary": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.Ztl_PermitConciliaSyncStateDictionary"
              },
              {}
            ]
          },
          "Vehicles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.Permits.PermitVehicleAssociation"
            },
            "description": "",
            "nullable": true
          },
          "RemovedVehicles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.Permits.PermitRemovedVehicleAssociation"
            },
            "description": "",
            "nullable": true
          },
          "Parts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.Permits.PermitPart"
            },
            "description": "",
            "nullable": true
          },
          "Prescriptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.Permits.PermitPrescription"
            },
            "description": "",
            "nullable": true
          },
          "Attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.Permits.PermitAttachment"
            },
            "description": "",
            "nullable": true
          },
          "ZTLIONotifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.ZTL_IO_Notification"
            },
            "description": "",
            "nullable": true
          },
          "ZtlPassFornituraPermit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.ZtlPassLombardia.ZtlPass_FornituraPermit"
              },
              {}
            ]
          },
          "ZTL_Authorized_List": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.ZTL_AuthorizedTransit"
            },
            "description": "",
            "nullable": true
          },
          "ExpiryDate": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "WSAutoscan.Core.Model.Ztl.ZTL_AuthorizedTransit": {
        "title": "WSAutoscan.Core.Model.Ztl.ZTL_AuthorizedTransit",
        "required": [
          "PlateHash",
          "TransitDate",
          "GateId",
          "PermitId",
          "PermitTimeStamp"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "PlateHash": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string"
          },
          "TransitDate": {
            "type": "string",
            "format": "date-time"
          },
          "GateId": {
            "type": "integer",
            "format": "int32"
          },
          "TransitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "PermitId": {
            "type": "integer",
            "format": "int64"
          },
          "PermitTimeStamp": {
            "type": "string",
            "format": "date-time"
          },
          "TransitExiteDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "IsAuthorized": {
            "type": "boolean"
          },
          "Transit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.ZTL_Transit"
              },
              {}
            ]
          },
          "Permit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.Permits.PermitVersion"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.Ztl.Ztl_FrontOfficeApplicationStatus": {
        "title": "WSAutoscan.Core.Model.Ztl.Ztl_FrontOfficeApplicationStatus",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "ApplicationId": {
            "type": "integer",
            "format": "int32"
          },
          "Application": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.Ztl_FrontOfficeApplication"
              },
              {}
            ]
          },
          "ApplicationStatusDictionaryId": {
            "type": "integer",
            "format": "int32"
          },
          "ApplicationStatusDictionary": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.Ztl_FrontOfficeApplicationStatusDictionary"
              },
              {}
            ]
          },
          "TimeStamp": {
            "type": "string",
            "format": "date-time"
          },
          "Notes": {
            "type": "string",
            "nullable": true
          },
          "UserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "User": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_User"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.ZTL_Zone": {
        "title": "WSAutoscan.Core.Model.ZTL_Zone",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Description": {
            "maxLength": 5000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "Date": {
            "type": "string",
            "format": "date-time"
          },
          "ZoneTypeDictionaryId": {
            "type": "integer",
            "format": "int32"
          },
          "ZoneTypeDictionary": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.ZTL_ZoneTypeDictionary"
              },
              {}
            ]
          },
          "Gates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Gate"
            },
            "description": "",
            "nullable": true
          },
          "ZtlDailyTransits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.ZTL_DailyTransit"
            },
            "description": "",
            "nullable": true
          },
          "ZtlZonesVechileTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.ZTL_ZoneVehicleType"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Model.ZTL_UnoperatingTimeInterval": {
        "title": "WSAutoscan.Core.Model.ZTL_UnoperatingTimeInterval",
        "type": "object",
        "properties": {
          "GateId": {
            "type": "integer",
            "format": "int32"
          },
          "Start": {
            "type": "string",
            "format": "date-time"
          },
          "End": {
            "type": "string",
            "format": "date-time"
          },
          "IsGeneric": {
            "type": "boolean"
          }
        }
      },
      "WSAutoscan.Core.Model.ZTL_ZoneTypeDictionary": {
        "title": "WSAutoscan.Core.Model.ZTL_ZoneTypeDictionary",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Description": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "Short": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "Zones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.ZTL_Zone"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Model.Ztl.Permits.ExternalPermit": {
        "title": "WSAutoscan.Core.Model.Ztl.Permits.ExternalPermit",
        "required": [
          "PlaceDescription"
        ],
        "type": "object",
        "properties": {
          "PermitId": {
            "type": "integer",
            "format": "int64"
          },
          "Permit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.Permits.Permit"
              },
              {}
            ]
          },
          "ExternalPlaceId": {
            "type": "integer",
            "format": "int32"
          },
          "PlaceDescription": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string"
          },
          "FreePassCreatedUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Model.Ztl.Permits.Permit": {
        "title": "WSAutoscan.Core.Model.Ztl.Permits.Permit",
        "required": [
          "Origin"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int64"
          },
          "IssueDate": {
            "type": "string",
            "format": "date-time"
          },
          "Timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "CurrentVersion": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.Permits.PermitVersion"
              },
              {}
            ]
          },
          "Origin": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string"
          },
          "ImportedExtPermitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "CustomerId": {
            "type": "integer",
            "format": "int32"
          },
          "Customer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Customer"
              },
              {}
            ]
          },
          "OwnerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Owner": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_User"
              },
              {}
            ]
          },
          "ApplicantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Applicant": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.ZTL_UserRegistry"
              },
              {}
            ]
          },
          "Versions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.Permits.PermitVersion"
            },
            "description": "",
            "nullable": true
          },
          "ExternalData": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.Permits.ExternalPermit"
              },
              {}
            ]
          },
          "OldPermits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.ZTL_Permit_Renew"
            },
            "description": "",
            "nullable": true
          },
          "NewPermits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.ZTL_Permit_Renew"
            },
            "description": "",
            "nullable": true
          },
          "IONotifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.ZTL_IO_Notification"
            },
            "description": "",
            "nullable": true
          },
          "FrontOfficeApplications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.Ztl_FrontOfficeApplication"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Model.Ztl.Permits.PermitPayment": {
        "title": "WSAutoscan.Core.Model.Ztl.Permits.PermitPayment",
        "required": [
          "Reason"
        ],
        "type": "object",
        "properties": {
          "PermitId": {
            "type": "integer",
            "format": "int64"
          },
          "Timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "Permit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.Permits.PermitVersion"
              },
              {}
            ]
          },
          "PaymentDate": {
            "type": "string",
            "format": "date-time"
          },
          "SerialNumber": {
            "type": "integer",
            "format": "int64"
          },
          "Amount": {
            "type": "number"
          },
          "EditOperation": {
            "type": "boolean"
          },
          "Reason": {
            "maxLength": 512,
            "minLength": 0,
            "type": "string"
          }
        }
      },
      "WSAutoscan.Core.Model.Ztl.Permits.PermitRemovedVehicleAssociation": {
        "title": "WSAutoscan.Core.Model.Ztl.Permits.PermitRemovedVehicleAssociation",
        "type": "object",
        "properties": {
          "PermitId": {
            "type": "integer",
            "format": "int64"
          },
          "Timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "Permit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.Permits.PermitVersion"
              },
              {}
            ]
          },
          "VehiclePlate": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "CountryId": {
            "type": "integer",
            "format": "int32"
          },
          "Vehicle": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.RegisteredVehicle"
              },
              {}
            ]
          },
          "EditTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "EditReasonType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.Permits.VehicleEditReasonType"
              },
              {}
            ]
          },
          "EditReason": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Model.Ztl.Permits.VehicleEditReasonType": {
        "title": "WSAutoscan.Core.Model.Ztl.Permits.VehicleEditReasonType",
        "required": [
          "Description",
          "MandatoryReason"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Description": {
            "type": "string"
          },
          "MandatoryReason": {
            "type": "boolean"
          },
          "RemovedVehicleAssociations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.Permits.PermitRemovedVehicleAssociation"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Model.Ztl.PermitTypeExtension": {
        "title": "WSAutoscan.Core.Model.Ztl.PermitTypeExtension",
        "type": "object",
        "properties": {
          "ExtensionId": {
            "type": "integer",
            "format": "int32"
          },
          "Extension": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.ZTL_PermitExtension"
              },
              {}
            ]
          },
          "PermitTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "PermitType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.ZTL_AuthorizationType"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.Ztl.RegisteredVehicle": {
        "title": "WSAutoscan.Core.Model.Ztl.RegisteredVehicle",
        "type": "object",
        "properties": {
          "Plate": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "CountryId": {
            "type": "integer",
            "format": "int32"
          },
          "Country": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Nations"
              },
              {}
            ]
          },
          "Brand": {
            "maxLength": 120,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "Model": {
            "maxLength": 120,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "Note": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "Origin": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "EnvironmentalClassId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "EnvironmentalClass": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_EnvironmentalClass"
              },
              {}
            ]
          },
          "VehicleTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "VehicleType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Vehicle"
              },
              {}
            ]
          },
          "PermitVehicles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.Permits.PermitVehicleAssociation"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Model.Ztl.ZTL_Blacklist_Notification": {
        "title": "WSAutoscan.Core.Model.Ztl.ZTL_Blacklist_Notification",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "TransitId": {
            "type": "integer",
            "format": "int32"
          },
          "BlacklistId": {
            "type": "integer",
            "format": "int32"
          },
          "InsertDate": {
            "type": "string",
            "format": "date-time"
          },
          "SendDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "Sended": {
            "type": "boolean"
          },
          "Attempts": {
            "type": "integer",
            "format": "int32"
          },
          "SendResult": {
            "type": "string",
            "nullable": true
          },
          "Transit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.ZTL_Transit"
              },
              {}
            ]
          },
          "Blacklist": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.ZTL_Blacklist"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.Ztl.ZTL_Blacklist_Transit": {
        "title": "WSAutoscan.Core.Model.Ztl.ZTL_Blacklist_Transit",
        "type": "object",
        "properties": {
          "BlacklistId": {
            "type": "integer",
            "format": "int32"
          },
          "Blacklist": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.ZTL_Blacklist"
              },
              {}
            ]
          },
          "TransitId": {
            "type": "integer",
            "format": "int32"
          },
          "Transit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.ZTL_Transit"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.Ztl.Ztl_FrontOfficeApplication_Gates": {
        "title": "WSAutoscan.Core.Model.Ztl.Ztl_FrontOfficeApplication_Gates",
        "type": "object",
        "properties": {
          "FrontOfficeApllicationId": {
            "type": "integer",
            "format": "int32"
          },
          "FrontOfficeApplication": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.Ztl_FrontOfficeApplication"
              },
              {}
            ]
          },
          "GateId": {
            "type": "integer",
            "format": "int32"
          },
          "Gate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Gate"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.Ztl.Ztl_FrontOfficeApplicationPeriod": {
        "title": "WSAutoscan.Core.Model.Ztl.Ztl_FrontOfficeApplicationPeriod",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "ApplicationId": {
            "type": "integer",
            "format": "int32"
          },
          "ValidFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "ValidTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "StartTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.TimeSpan"
              },
              {}
            ]
          },
          "EndTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/System.TimeSpan"
              },
              {}
            ]
          },
          "Application": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.Ztl_FrontOfficeApplication"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.Ztl.Ztl_FrontOfficeApplicationType": {
        "title": "WSAutoscan.Core.Model.Ztl.Ztl_FrontOfficeApplicationType",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Description": {
            "type": "string",
            "nullable": true
          },
          "FrontOfficeApplications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.Ztl_FrontOfficeApplication"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Model.ZTL_Violation_Export": {
        "title": "WSAutoscan.Core.Model.ZTL_Violation_Export",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "FileName": {
            "type": "string",
            "nullable": true
          },
          "DateExport": {
            "type": "string",
            "format": "date-time"
          },
          "UserId": {
            "type": "integer",
            "format": "int32"
          },
          "NumViolationExported": {
            "type": "integer",
            "format": "int32"
          },
          "Transits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.ZTL_Transit"
            },
            "description": "",
            "nullable": true
          },
          "User": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_User"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.Ztl.AS_IO_ZTL_Permit_State": {
        "title": "WSAutoscan.Core.Model.Ztl.AS_IO_ZTL_Permit_State",
        "required": [
          "Id",
          "State",
          "SendNotification"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "State": {
            "type": "string"
          },
          "SendNotification": {
            "type": "boolean"
          },
          "ASIOZTLPermitStateTexts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.AS_IO_ZTL_Permit_State_Text"
            },
            "description": "",
            "nullable": true
          },
          "ASIONotification": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.ZTL_IO_Notification"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Model.Ztl.Permits.PermitPrescription": {
        "title": "WSAutoscan.Core.Model.Ztl.Permits.PermitPrescription",
        "required": [
          "Text"
        ],
        "type": "object",
        "properties": {
          "PermitId": {
            "type": "integer",
            "format": "int64"
          },
          "Timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "Permit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.Permits.PermitVersion"
              },
              {}
            ]
          },
          "Category": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.PrescriptionCategory"
              },
              {}
            ]
          },
          "GroupId": {
            "type": "integer",
            "format": "int32"
          },
          "Text": {
            "maxLength": 256,
            "type": "string"
          }
        }
      },
      "WSAutoscan.Core.Model.Ztl.PrescriptionCategory": {
        "title": "WSAutoscan.Core.Model.Ztl.PrescriptionCategory",
        "enum": [
          0,
          1,
          2,
          3,
          4
        ],
        "type": "integer"
      },
      "WSAutoscan.Core.Model.Ztl.ZTL_BlacklistPlate": {
        "title": "WSAutoscan.Core.Model.Ztl.ZTL_BlacklistPlate",
        "required": [
          "Plate"
        ],
        "type": "object",
        "properties": {
          "BlacklistId": {
            "type": "integer",
            "format": "int32"
          },
          "Plate": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string"
          },
          "Note": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "ExpiryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "InsertDate": {
            "type": "string",
            "format": "date-time"
          },
          "Blacklist": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.ZTL_Blacklist"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.Ztl.Ztl_FrontOfficeApplicationNotes": {
        "title": "WSAutoscan.Core.Model.Ztl.Ztl_FrontOfficeApplicationNotes",
        "required": [
          "Id",
          "FrontOfficeApplicationId",
          "UserId",
          "Timestamp",
          "Notes"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "FrontOfficeApplicationId": {
            "type": "integer",
            "format": "int32"
          },
          "UserId": {
            "type": "integer",
            "format": "int32"
          },
          "Timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "Notes": {
            "type": "string"
          },
          "User": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_User"
              },
              {}
            ]
          },
          "FrontOfficeApplication": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.Ztl_FrontOfficeApplication"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.Ztl.Ztl_FrontOfficeApplicationStatusDictionary": {
        "title": "WSAutoscan.Core.Model.Ztl.Ztl_FrontOfficeApplicationStatusDictionary",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "ApplicationStatuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.Ztl_FrontOfficeApplicationStatus"
            },
            "description": "",
            "nullable": true
          },
          "Applications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.Ztl_FrontOfficeApplication"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Model.Ztl.Ztl_FrontOfficeApplicationVehicleAssociation": {
        "title": "WSAutoscan.Core.Model.Ztl.Ztl_FrontOfficeApplicationVehicleAssociation",
        "type": "object",
        "properties": {
          "ApplicationId": {
            "type": "integer",
            "format": "int32"
          },
          "Application": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.Ztl_FrontOfficeApplication"
              },
              {}
            ]
          },
          "VehiclePlate": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "CountryId": {
            "type": "integer",
            "format": "int32"
          },
          "Vehicle": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.RegisteredVehicle"
              },
              {}
            ]
          },
          "OwnerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Owner": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.ZTL_UserRegistry"
              },
              {}
            ]
          },
          "Removed": {
            "type": "boolean",
            "default": false
          }
        }
      },
      "WSAutoscan.Core.Model.ZTL_UserRegistry": {
        "title": "WSAutoscan.Core.Model.ZTL_UserRegistry",
        "required": [
          "Name"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Name": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string"
          },
          "Surname": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "FiscalCode": {
            "maxLength": 16,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "ResidenceCountryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ResidenceAddress": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "ResidenceCityId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ResidenceCity": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "ResidenceCap": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "PhoneNumber": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "MobileNumber": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "Email": {
            "maxLength": 80,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "Notes": {
            "maxLength": 512,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "HouseNumber": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "Category": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "BirthDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "BirthCountryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "BirthPlaceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "BirthPlace": {
            "maxLength": 400,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "Gender": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Enums.Gender"
              },
              {}
            ]
          },
          "ResidenceCountry": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Nations"
              },
              {}
            ]
          },
          "BirthCountry": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Nations"
              },
              {}
            ]
          },
          "ResidenceMunicipality": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Municipality"
              },
              {}
            ]
          },
          "BirthMunicipality": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Municipality"
              },
              {}
            ]
          },
          "PhysicalPerson": {
            "type": "boolean",
            "readOnly": true
          }
        }
      },
      "WSAutoscan.Core.Model.Ztl.AS_IO_ZTL_Permit_State_Text": {
        "title": "WSAutoscan.Core.Model.Ztl.AS_IO_ZTL_Permit_State_Text",
        "required": [
          "Id",
          "StateId",
          "Text",
          "Title",
          "IsDefault",
          "CustomerId"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "StateId": {
            "type": "integer",
            "format": "int32"
          },
          "Text": {
            "type": "string"
          },
          "Title": {
            "type": "string"
          },
          "IsDefault": {
            "type": "boolean"
          },
          "CustomerId": {
            "type": "integer",
            "format": "int32"
          },
          "Customer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Customer"
              },
              {}
            ]
          },
          "ASIOZTLPermitState": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.AS_IO_ZTL_Permit_State"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.Ztl.Permits.PermitGate": {
        "title": "WSAutoscan.Core.Model.Ztl.Permits.PermitGate",
        "type": "object",
        "properties": {
          "GateId": {
            "type": "integer",
            "format": "int32"
          },
          "Gate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Gate"
              },
              {}
            ]
          },
          "CustomerId": {
            "type": "integer",
            "format": "int32"
          },
          "PermitId": {
            "type": "integer",
            "format": "int64"
          },
          "Timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "PartId": {
            "type": "integer",
            "format": "int32"
          },
          "Part": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.Permits.PermitPart"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.Ztl.Permits.PermitPart": {
        "title": "WSAutoscan.Core.Model.Ztl.Permits.PermitPart",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "PermitId": {
            "type": "integer",
            "format": "int64"
          },
          "Timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "Permit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.Permits.PermitVersion"
              },
              {}
            ]
          },
          "Gates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.Permits.PermitGate"
            },
            "description": "",
            "nullable": true
          },
          "TimeSlots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.Permits.PermitTimeSlot"
            },
            "description": "",
            "nullable": true
          },
          "ValidityRanges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.Permits.PermitValidityRange"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Model.Ztl.Permits.PermitValidityRange": {
        "title": "WSAutoscan.Core.Model.Ztl.Permits.PermitValidityRange",
        "type": "object",
        "properties": {
          "PermitId": {
            "type": "integer",
            "format": "int64"
          },
          "Timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "PartId": {
            "type": "integer",
            "format": "int32"
          },
          "Part": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.Permits.PermitPart"
              },
              {}
            ]
          },
          "From": {
            "type": "string",
            "format": "date-time"
          },
          "To": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "WSAutoscan.Core.Model.Ztl.ZTL_Blacklist": {
        "title": "WSAutoscan.Core.Model.Ztl.ZTL_Blacklist",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Description": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "CustomerId": {
            "type": "integer",
            "format": "int32"
          },
          "Enabled": {
            "type": "boolean"
          },
          "NotifEmails": {
            "type": "string",
            "nullable": true
          },
          "Transits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.ZTL_Blacklist_Transit"
            },
            "description": "",
            "nullable": true
          },
          "BlacklistPlates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.ZTL_BlacklistPlate"
            },
            "description": "",
            "nullable": true
          },
          "Customer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Customer"
              },
              {}
            ]
          },
          "Notifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.ZTL_Blacklist_Notification"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Model.Ztl.ZTL_DailyTransit": {
        "title": "WSAutoscan.Core.Model.Ztl.ZTL_DailyTransit",
        "required": [
          "Hash",
          "TransitDate",
          "ZtlId"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Hash": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string"
          },
          "TransitDate": {
            "type": "string",
            "format": "date-time"
          },
          "ZtlId": {
            "type": "integer",
            "format": "int32"
          },
          "Ztl": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.ZTL_Zone"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.Ztl.Ztl_FrontOfficeApplication": {
        "title": "WSAutoscan.Core.Model.Ztl.Ztl_FrontOfficeApplication",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "ProtocolNumber": {
            "type": "integer",
            "format": "int32"
          },
          "ProtocolYear": {
            "type": "integer",
            "format": "int32"
          },
          "ProtocolClassification": {
            "type": "string",
            "nullable": true
          },
          "ProtocolDatetime": {
            "type": "string",
            "format": "date-time"
          },
          "DocumentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "IpaCode": {
            "type": "string",
            "nullable": true
          },
          "CustomerId": {
            "type": "integer",
            "format": "int32"
          },
          "Customer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Customer"
              },
              {}
            ]
          },
          "ApplicationTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ApplicationType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.Ztl_FrontOfficeApplicationType"
              },
              {}
            ]
          },
          "LastStatusDictionaryId": {
            "type": "integer",
            "format": "int32"
          },
          "LastStatusDictionary": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.Ztl_FrontOfficeApplicationStatusDictionary"
              },
              {}
            ]
          },
          "PermitId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "Permit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.Permits.Permit"
              },
              {}
            ]
          },
          "Urn": {
            "type": "string",
            "nullable": true
          },
          "PermitTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "PermitType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.ZTL_AuthorizationType"
              },
              {}
            ]
          },
          "Attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.Ztl_FrontOfficeApplicationAttachment"
            },
            "description": "",
            "nullable": true
          },
          "ApplicationStatuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.Ztl_FrontOfficeApplicationStatus"
            },
            "description": "",
            "nullable": true
          },
          "Notifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.Ztl_FrontOfficeApplicationNotification"
            },
            "description": "",
            "nullable": true
          },
          "ApplicantId": {
            "type": "integer",
            "format": "int32"
          },
          "Applicant": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.ZTL_UserRegistry"
              },
              {}
            ]
          },
          "Vehicles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.Ztl_FrontOfficeApplicationVehicleAssociation"
            },
            "description": "",
            "nullable": true
          },
          "Periods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.Ztl_FrontOfficeApplicationPeriod"
            },
            "description": "",
            "nullable": true
          },
          "Gates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.Ztl_FrontOfficeApplication_Gates"
            },
            "description": "",
            "nullable": true
          },
          "LastStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.Ztl_FrontOfficeApplicationStatus"
              },
              {}
            ]
          },
          "LastNotification": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.Ztl_FrontOfficeApplicationNotification"
              },
              {}
            ]
          },
          "ParentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Parent": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.Ztl_FrontOfficeApplication"
              },
              {}
            ]
          },
          "Additions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.Ztl_FrontOfficeApplication"
            },
            "description": "",
            "nullable": true
          },
          "RegistryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Registry": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.Ztl_FrontOfficeRegistry"
              },
              {}
            ]
          },
          "FrontOfficeApplicationNotes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.Ztl_FrontOfficeApplicationNotes"
            },
            "description": "",
            "nullable": true
          },
          "Standard": {
            "type": "boolean",
            "default": false
          }
        }
      },
      "WSAutoscan.Core.Model.Ztl.Ztl_FrontOfficeApplicationAttachment": {
        "title": "WSAutoscan.Core.Model.Ztl.Ztl_FrontOfficeApplicationAttachment",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Guid": {
            "type": "string",
            "format": "uuid"
          },
          "FilePath": {
            "type": "string",
            "nullable": true
          },
          "ApplicationId": {
            "type": "integer",
            "format": "int32"
          },
          "Application": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.Ztl_FrontOfficeApplication"
              },
              {}
            ]
          },
          "FileName": {
            "type": "string",
            "nullable": true
          },
          "ContentType": {
            "type": "string",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Model.Ztl.Ztl_FrontOfficeApplicationNotification": {
        "title": "WSAutoscan.Core.Model.Ztl.Ztl_FrontOfficeApplicationNotification",
        "required": [
          "SendStateId",
          "InsertDate"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int64"
          },
          "FrontOfficeApplicationId": {
            "type": "integer",
            "format": "int32"
          },
          "SendStateId": {
            "type": "integer",
            "format": "int32"
          },
          "InsertDate": {
            "type": "string",
            "format": "date-time"
          },
          "SendedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "SendResult": {
            "type": "string",
            "nullable": true
          },
          "SendState": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.ZtlFrontOfficeAttachmentSendState"
              },
              {}
            ]
          },
          "FrontOfficeApplication": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.Ztl_FrontOfficeApplication"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.Ztl.ZTL_PermitExtension": {
        "title": "WSAutoscan.Core.Model.Ztl.ZTL_PermitExtension",
        "required": [
          "Name"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Name": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string"
          },
          "ExpirationFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "ExpirationTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "ExtensionDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "ExtensionDays": {
            "type": "integer",
            "format": "int32"
          },
          "PermitTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.PermitTypeExtension"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Model.Ztl.Ztl_FrontOfficeRegistry": {
        "title": "WSAutoscan.Core.Model.Ztl.Ztl_FrontOfficeRegistry",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "CustomerId": {
            "type": "integer",
            "format": "int32"
          },
          "Year": {
            "type": "integer",
            "format": "int32"
          },
          "RegistryCode": {
            "type": "string",
            "nullable": true
          },
          "Applications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.Ztl_FrontOfficeApplication"
            },
            "description": "",
            "nullable": true
          },
          "Customer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Customer"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.Ztl.ZTL_IO_Notification": {
        "title": "WSAutoscan.Core.Model.Ztl.ZTL_IO_Notification",
        "required": [
          "Id",
          "IdLot",
          "IdNotification",
          "Title",
          "Text",
          "fiscalCode",
          "InsertDate",
          "StateId",
          "CanBeSended",
          "PermitId",
          "PermitVersionDate",
          "PermitVersionId"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int64"
          },
          "IdLot": {
            "type": "integer",
            "format": "int32"
          },
          "IdNotification": {
            "type": "integer",
            "format": "int32"
          },
          "Title": {
            "type": "string"
          },
          "Text": {
            "type": "string"
          },
          "fiscalCode": {
            "type": "string"
          },
          "InsertDate": {
            "type": "string",
            "format": "date-time"
          },
          "SendStateId": {
            "type": "integer",
            "format": "int32"
          },
          "StateId": {
            "type": "integer",
            "format": "int32"
          },
          "CanBeSended": {
            "type": "boolean"
          },
          "PermitId": {
            "type": "integer",
            "format": "int64"
          },
          "NotificationResponseId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "PermitVersionDate": {
            "type": "string",
            "format": "date-time"
          },
          "PermitVersionId": {
            "type": "integer",
            "format": "int64"
          },
          "SendState": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.As.AS_IO_SendState"
              },
              {}
            ]
          },
          "NotificationResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.As.AS_IO_NotificationResponse"
              },
              {}
            ]
          },
          "PermitVersion": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.Permits.PermitVersion"
              },
              {}
            ]
          },
          "Permit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.Permits.Permit"
              },
              {}
            ]
          },
          "ASIOZTLPermitState": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.AS_IO_ZTL_Permit_State"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.Ztl.ZTL_PermitConciliaSync": {
        "title": "WSAutoscan.Core.Model.Ztl.ZTL_PermitConciliaSync",
        "required": [
          "NrSyncronize",
          "NrTotal",
          "NrErrors",
          "NrSkipped",
          "CustomerId",
          "StartDate",
          "EndDate"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "NrSyncronize": {
            "type": "integer",
            "format": "int32"
          },
          "NrTotal": {
            "type": "integer",
            "format": "int32"
          },
          "NrErrors": {
            "type": "integer",
            "format": "int32"
          },
          "NrSkipped": {
            "type": "integer",
            "format": "int32"
          },
          "CustomerId": {
            "type": "integer",
            "format": "int32"
          },
          "StartDate": {
            "type": "string",
            "format": "date-time"
          },
          "EndDate": {
            "type": "string",
            "format": "date-time"
          },
          "Customer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Customer"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.Ztl.ZTL_Transit_Authorizing": {
        "title": "WSAutoscan.Core.Model.Ztl.ZTL_Transit_Authorizing",
        "required": [
          "Id",
          "Plate",
          "TransitDate",
          "InsertDate",
          "Direction",
          "NationId",
          "CameraId",
          "VehicleId",
          "OcrConfidency",
          "TransitId"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Plate": {
            "type": "string"
          },
          "TransitDate": {
            "type": "string",
            "format": "date-time"
          },
          "InsertDate": {
            "type": "string",
            "format": "date-time"
          },
          "Direction": {
            "type": "string"
          },
          "NationId": {
            "type": "integer",
            "format": "int32"
          },
          "CameraId": {
            "type": "integer",
            "format": "int32"
          },
          "VehicleId": {
            "type": "integer",
            "format": "int32"
          },
          "OcrConfidency": {
            "type": "integer",
            "format": "int32"
          },
          "TransitId": {
            "type": "integer",
            "format": "int64"
          },
          "TransitAuthorizingTransits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.ZTL_Transit_Authorizing_Transit"
            },
            "description": "",
            "nullable": true
          },
          "TransitAuthorizingPhotos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.ZTL_Transit_Authorizing_Photo"
            },
            "description": "",
            "nullable": true
          },
          "Nation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Nations"
              },
              {}
            ]
          },
          "Camera": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Camera"
              },
              {}
            ]
          },
          "Vehicle": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Vehicle"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.Ztl.ZTL_Transit_Authorizing_Photo": {
        "title": "WSAutoscan.Core.Model.Ztl.ZTL_Transit_Authorizing_Photo",
        "required": [
          "Id",
          "ImagePath",
          "ImageName",
          "Brightness",
          "Contrast",
          "ZTLTransitAuthorizingId"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "ImagePath": {
            "type": "string"
          },
          "ImageName": {
            "type": "string"
          },
          "Brightness": {
            "type": "integer",
            "format": "int32"
          },
          "Contrast": {
            "type": "integer",
            "format": "int32"
          },
          "MinX": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "MinY": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "MaxX": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "MaxY": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ZTLTransitAuthorizingId": {
            "type": "integer",
            "format": "int32"
          },
          "TransitAuthorizing": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.ZTL_Transit_Authorizing"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.DataAccess.Dal.TransitQueryBuilderTransitItem": {
        "title": "WSAutoscan.DataAccess.Dal.TransitQueryBuilderTransitItem",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int64"
          },
          "PlateCode": {
            "type": "string",
            "nullable": true
          },
          "Date": {
            "type": "string",
            "format": "date-time"
          },
          "CameraId": {
            "type": "integer",
            "format": "int32"
          },
          "SiteName": {
            "type": "string",
            "nullable": true
          },
          "Nation": {
            "type": "string",
            "nullable": true
          },
          "OcrConfidency": {
            "type": "integer",
            "format": "int32"
          },
          "ImageName": {
            "type": "string",
            "nullable": true
          },
          "ImagePath": {
            "type": "string",
            "nullable": true
          },
          "IsAlarm": {
            "type": "boolean"
          },
          "ListNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "",
            "nullable": true
          },
          "OtherPlates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.DataAccess.Dal.TransitQueryBuilderPlateItem"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Utility.Integration.AlarmEvent": {
        "title": "WSAutoscan.Utility.Integration.AlarmEvent",
        "type": "object",
        "properties": {
          "TransitId": {
            "type": "integer",
            "format": "int64"
          },
          "Timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "ViolationLists": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Model.Ztl.ZTL_ZoneVehicleType": {
        "title": "WSAutoscan.Core.Model.Ztl.ZTL_ZoneVehicleType",
        "required": [
          "ZoneId",
          "VehicleId"
        ],
        "type": "object",
        "properties": {
          "ZoneId": {
            "type": "integer",
            "format": "int32"
          },
          "VehicleId": {
            "type": "integer",
            "format": "int32"
          },
          "Zone": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.ZTL_Zone"
              },
              {}
            ]
          },
          "VehicleType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Vehicle"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.ZtlPassLombardia.ZtlPass_ConferimentoFornitura": {
        "title": "WSAutoscan.Core.Model.ZtlPassLombardia.ZtlPass_ConferimentoFornitura",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "CodFornitura": {
            "type": "string",
            "nullable": true
          },
          "CustomerId": {
            "type": "integer",
            "format": "int32"
          },
          "TsFornitura": {
            "type": "string",
            "format": "date-time"
          },
          "StatoFornitura": {
            "type": "string",
            "nullable": true
          },
          "HasError": {
            "type": "boolean"
          },
          "TsEsito": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "Customer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Customer"
              },
              {}
            ]
          },
          "FornituraPermit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.ZtlPassLombardia.ZtlPass_FornituraPermit"
              },
              {}
            ]
          },
          "Targhe": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.ZtlPassLombardia.ZtlPass_FornituraTarga"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Model.ZtlPassLombardia.ZtlPass_FornituraTarga": {
        "title": "WSAutoscan.Core.Model.ZtlPassLombardia.ZtlPass_FornituraTarga",
        "type": "object",
        "properties": {
          "FornituraId": {
            "type": "integer",
            "format": "int32"
          },
          "Targa": {
            "type": "string",
            "nullable": true
          },
          "NazioneTarga": {
            "type": "string",
            "nullable": true
          },
          "DtScadenza": {
            "type": "string",
            "format": "date-time"
          },
          "CodEnteAutorizzatore": {
            "type": "string",
            "nullable": true
          },
          "CodEliminazione": {
            "type": "string",
            "nullable": true
          },
          "CodEsito": {
            "type": "string",
            "nullable": true
          },
          "DescEsito": {
            "type": "string",
            "nullable": true
          },
          "TsEsito": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "Fornitura": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.ZtlPassLombardia.ZtlPass_ConferimentoFornitura"
              },
              {}
            ]
          },
          "EsitoFornitura": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.ZtlPassLombardia.ZtlPass_EsitoFornitura"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.DataAccess.Dal.TransitQueryBuilderPlateItem": {
        "title": "WSAutoscan.DataAccess.Dal.TransitQueryBuilderPlateItem",
        "type": "object",
        "properties": {
          "Code": {
            "type": "string",
            "nullable": true
          },
          "Type": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WSAutoscan.DataAccess.Dal.TransitQueryBuilderPlateType": {
        "title": "WSAutoscan.DataAccess.Dal.TransitQueryBuilderPlateType",
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer"
      },
      "WSAutoscan.Utility.DateAndTime.Iso8601Duration": {
        "title": "WSAutoscan.Utility.DateAndTime.Iso8601Duration",
        "type": "object",
        "properties": {
          "IsZero": {
            "type": "boolean",
            "readOnly": true
          }
        }
      },
      "WSAutoscan.Utility.ResponseImageFromNasDto": {
        "title": "WSAutoscan.Utility.ResponseImageFromNasDto",
        "type": "object",
        "properties": {
          "Success": {
            "type": "boolean"
          }
        }
      },
      "WSAutoscan.Core.Model.Ztl.ZTL_Transit_Authorizing_Settings": {
        "title": "WSAutoscan.Core.Model.Ztl.ZTL_Transit_Authorizing_Settings",
        "required": [
          "Id",
          "KeepAuthorizingTransitDays",
          "TransitAuthorizingStatusId"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "KeepAuthorizingTransitDays": {
            "type": "integer",
            "format": "int32"
          },
          "TransitAuthorizingStatusId": {
            "maximum": 5.0,
            "minimum": 3.0,
            "type": "integer",
            "format": "int32"
          },
          "TransitStatusDictionary": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.ZTL_TransitStatusDictionary"
              },
              {}
            ]
          },
          "Customer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Customer"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.Ztl.ZTL_ImportAuthSettings": {
        "title": "WSAutoscan.Core.Model.Ztl.ZTL_ImportAuthSettings",
        "required": [
          "ImportName"
        ],
        "type": "object",
        "properties": {
          "CustomerId": {
            "type": "integer",
            "format": "int32"
          },
          "ImportName": {
            "type": "string"
          },
          "LastImportTs": {
            "type": "string",
            "format": "date-time"
          },
          "Customer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Customer"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.ZtlPassLombardia.ZtlPass_ConferimentoRicerca": {
        "title": "WSAutoscan.Core.Model.ZtlPassLombardia.ZtlPass_ConferimentoRicerca",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "CodRicerca": {
            "type": "string",
            "nullable": true
          },
          "CustomerId": {
            "type": "integer",
            "format": "int32"
          },
          "TsFornitura": {
            "type": "string",
            "format": "date-time"
          },
          "StatoFornitura": {
            "type": "string",
            "nullable": true
          },
          "TsEsito": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "Customer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Customer"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.ZtlPassLombardia.ZtlPass_EsitoFornitura": {
        "title": "WSAutoscan.Core.Model.ZtlPassLombardia.ZtlPass_EsitoFornitura",
        "type": "object",
        "properties": {
          "CodEsito": {
            "type": "string",
            "nullable": true
          },
          "DescEsito": {
            "type": "string",
            "nullable": true
          },
          "EsitoNegativo": {
            "type": "boolean"
          },
          "Targhe": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.ZtlPassLombardia.ZtlPass_FornituraTarga"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Model.ZtlPassLombardia.ZtlPass_FornituraPermit": {
        "title": "WSAutoscan.Core.Model.ZtlPassLombardia.ZtlPass_FornituraPermit",
        "type": "object",
        "properties": {
          "FornituraId": {
            "type": "integer",
            "format": "int32"
          },
          "Fornitura": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.ZtlPassLombardia.ZtlPass_ConferimentoFornitura"
              },
              {}
            ]
          },
          "PermitId": {
            "type": "integer",
            "format": "int64"
          },
          "Timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "PermitVersion": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.Permits.PermitVersion"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.ZtlPassLombardia.ZtlPass_Settings": {
        "title": "WSAutoscan.Core.Model.ZtlPassLombardia.ZtlPass_Settings",
        "required": [
          "ConsumerKey",
          "ConsumerSecret",
          "CodIpaAutorizzatore"
        ],
        "type": "object",
        "properties": {
          "CustomerId": {
            "type": "integer",
            "format": "int32"
          },
          "DescEnte": {
            "type": "string",
            "nullable": true
          },
          "ConsumerKey": {
            "type": "string"
          },
          "ConsumerSecret": {
            "type": "string"
          },
          "CodIpaAutorizzatore": {
            "type": "string"
          },
          "Customer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Customer"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.DataAccess.Dal.DeviceStatus": {
        "title": "WSAutoscan.DataAccess.Dal.DeviceStatus",
        "type": "object",
        "properties": {
          "Ip": {
            "type": "string",
            "nullable": true
          },
          "Port": {
            "type": "integer",
            "format": "int32"
          },
          "Type": {
            "type": "string",
            "nullable": true
          },
          "GateId": {
            "type": "integer",
            "format": "int32"
          },
          "DisplayedMessage": {
            "type": "string",
            "nullable": true
          },
          "ErrorMessage": {
            "type": "string",
            "nullable": true
          },
          "Status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.ZTL_OldAuthorization.Devices.ZtlGateStatus"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.ZTL_OldAuthorization.Devices.ZtlGateStatus": {
        "title": "WSAutoscan.ZTL_OldAuthorization.Devices.ZtlGateStatus",
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer"
      },
      "WSAutoscan.Core.Model.Ztl.ZTL_Permit_Renew": {
        "title": "WSAutoscan.Core.Model.Ztl.ZTL_Permit_Renew",
        "required": [
          "OldPermitId",
          "NewPermitId",
          "Created"
        ],
        "type": "object",
        "properties": {
          "OldPermitId": {
            "type": "integer",
            "format": "int64"
          },
          "NewPermitId": {
            "type": "integer",
            "format": "int64"
          },
          "Created": {
            "type": "string",
            "format": "date-time"
          },
          "OldPermit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.Permits.Permit"
              },
              {}
            ]
          },
          "NewPermit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.Permits.Permit"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.Ztl.Ztl_PermitConciliaSyncStateDictionary": {
        "title": "WSAutoscan.Core.Model.Ztl.Ztl_PermitConciliaSyncStateDictionary",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Description": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "PermitVersions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.Permits.PermitVersion"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Core.Model.Ztl.ZTL_RecordedPrescription": {
        "title": "WSAutoscan.Core.Model.Ztl.ZTL_RecordedPrescription",
        "required": [
          "CustomerId",
          "Text"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "CustomerId": {
            "type": "integer",
            "format": "int32"
          },
          "Customer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_Customer"
              },
              {}
            ]
          },
          "Category": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.PrescriptionCategory"
              },
              {}
            ]
          },
          "Text": {
            "maxLength": 256,
            "type": "string"
          }
        }
      },
      "WSAutoscan.Core.Model.Ztl.ZTL_Transit_Authorizing_Transit": {
        "title": "WSAutoscan.Core.Model.Ztl.ZTL_Transit_Authorizing_Transit",
        "type": "object",
        "properties": {
          "ZtlTransitId": {
            "type": "integer",
            "format": "int32"
          },
          "ZtlTransitAuthorizingId": {
            "type": "integer",
            "format": "int32"
          },
          "ZtlTransitAuthorizing": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.ZTL_Transit_Authorizing"
              },
              {}
            ]
          },
          "ZTLTransit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.ZTL_Transit"
              },
              {}
            ]
          }
        }
      },
      "WSAutoscan.Core.Model.Ztl.ZTL_TransitPhotoROI": {
        "title": "WSAutoscan.Core.Model.Ztl.ZTL_TransitPhotoROI",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "TransitPhotoId": {
            "type": "integer",
            "format": "int32"
          },
          "TransitPhoto": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WSAutoscan.Core.Model.ZTL_TransitPhoto"
              },
              {}
            ]
          },
          "Name": {
            "type": "string",
            "nullable": true
          },
          "Blurred": {
            "type": "boolean"
          },
          "MinX": {
            "type": "integer",
            "format": "int32"
          },
          "MinY": {
            "type": "integer",
            "format": "int32"
          },
          "MaxX": {
            "type": "integer",
            "format": "int32"
          },
          "MaxY": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "WSAutoscan.Core.Model.Ztl.ZtlFrontOfficeAttachmentSendState": {
        "title": "WSAutoscan.Core.Model.Ztl.ZtlFrontOfficeAttachmentSendState",
        "required": [
          "Description"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Description": {
            "type": "string"
          },
          "AttachmentsToSend": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WSAutoscan.Core.Model.Ztl.Ztl_FrontOfficeApplicationNotification"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "WSAutoscan.Utility.Xml.Transit.TransitMessage": {
        "title": "WSAutoscan.Utility.Xml.Transit.TransitMessage",
        "type": "object",
        "properties": {
          "DATE": {
            "type": "string",
            "nullable": true
          },
          "TIME": {
            "type": "string",
            "nullable": true
          },
          "TR_DATE": {
            "type": "string",
            "nullable": true
          },
          "TR_TIME": {
            "type": "string",
            "nullable": true
          },
          "DATETIME": {
            "type": "string",
            "format": "date-time"
          },
          "NETBIOSNAME": {
            "type": "string",
            "nullable": true
          },
          "PLATE": {
            "type": "string",
            "nullable": true
          },
          "PLATE_ADR": {
            "type": "string",
            "nullable": true
          },
          "PLATE_TRL": {
            "type": "string",
            "nullable": true
          },
          "PLATE_STRING": {
            "type": "string",
            "nullable": true
          },
          "PLATE_COUNTRY": {
            "type": "string",
            "nullable": true
          },
          "OCRSCORE": {
            "type": "string",
            "nullable": true
          },
          "TRANSIT_ID": {
            "type": "string",
            "nullable": true
          },
          "VEHICLE_TYPE": {
            "type": "string",
            "nullable": true
          },
          "VEHICLE_TYPE_NUM": {
            "type": "string",
            "nullable": true
          },
          "DIRECTION": {
            "type": "string",
            "nullable": true
          },
          "CLASS": {
            "type": "string",
            "nullable": true
          },
          "CLASS_STRING": {
            "type": "string",
            "nullable": true
          },
          "IMAGENAME": {
            "type": "string",
            "nullable": true
          },
          "IMAGEPATH": {
            "type": "string",
            "nullable": true
          },
          "VEHICLE_BRAND": {
            "type": "string",
            "nullable": true
          },
          "VEHICLE_COLOR": {
            "type": "string",
            "nullable": true
          },
          "VEHICLE_MODEL": {
            "type": "string",
            "nullable": true
          },
          "SPEED": {
            "type": "string",
            "nullable": true
          },
          "Encryption": {
            "type": "string",
            "nullable": true
          },
          "SPEED_LIMIT_STICKERS": {
            "type": "string",
            "nullable": true
          },
          "OPMODE": {
            "type": "string",
            "nullable": true
          },
          "LANE_ID": {
            "type": "string",
            "nullable": true
          },
          "IMAGEID": {
            "type": "string",
            "nullable": true
          },
          "SITE_ADDRESS": {
            "type": "string",
            "nullable": true
          },
          "YELLOW_TIME_MS": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "RED_TIME_MS": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "VIOLATION_TYPE": {
            "type": "string",
            "nullable": true
          },
          "VIOL_LIMIT": {
            "type": "integer",
            "format": "int32"
          },
          "VELOX": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "securitySchemes": {
      "Authorization": {
        "type": "apiKey",
        "description": "Token required for authorization",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [],
  "tags": [
    {
      "name": "Alarm",
      "description": ""
    },
    {
      "name": "AuthorizationAttachments",
      "description": ""
    },
    {
      "name": "Backup",
      "description": ""
    },
    {
      "name": "Calibration",
      "description": ""
    },
    {
      "name": "CalibrationAttachment",
      "description": ""
    },
    {
      "name": "Camera",
      "description": ""
    },
    {
      "name": "CameraMaintenance",
      "description": ""
    },
    {
      "name": "CameraMaintenanceNas",
      "description": ""
    },
    {
      "name": "CameraMaintenanceReport",
      "description": ""
    },
    {
      "name": "CameraMobile",
      "description": ""
    },
    {
      "name": "CameraMobileConfiguration",
      "description": ""
    },
    {
      "name": "Customer",
      "description": ""
    },
    {
      "name": "Diagnostics",
      "description": ""
    },
    {
      "name": "Dttsis",
      "description": ""
    },
    {
      "name": "DttsisModalityCall",
      "description": ""
    },
    {
      "name": "EditReasons",
      "description": ""
    },
    {
      "name": "Feature",
      "description": ""
    },
    {
      "name": "Forniture",
      "description": ""
    },
    {
      "name": "Gate",
      "description": ""
    },
    {
      "name": "Group",
      "description": ""
    },
    {
      "name": "Holiday",
      "description": ""
    },
    {
      "name": "IOZtlNotification",
      "description": ""
    },
    {
      "name": "IOZtlPermitState",
      "description": ""
    },
    {
      "name": "IOZTLPermitStateText",
      "description": ""
    },
    {
      "name": "License",
      "description": ""
    },
    {
      "name": "List",
      "description": ""
    },
    {
      "name": "Log",
      "description": ""
    },
    {
      "name": "Login",
      "description": ""
    },
    {
      "name": "Mobile",
      "description": ""
    },
    {
      "name": "MobileCameraMobileConfiguration",
      "description": ""
    },
    {
      "name": "MobileCameraMobileConfigurationStarted",
      "description": ""
    },
    {
      "name": "MobileCameraValidatorStarted",
      "description": ""
    },
    {
      "name": "MobileDttsis",
      "description": ""
    },
    {
      "name": "MobileUser",
      "description": ""
    },
    {
      "name": "MobileVehicle",
      "description": ""
    },
    {
      "name": "Module",
      "description": ""
    },
    {
      "name": "ModuloAlberghi",
      "description": ""
    },
    {
      "name": "Municipality",
      "description": ""
    },
    {
      "name": "Nas",
      "description": ""
    },
    {
      "name": "Nation",
      "description": ""
    },
    {
      "name": "Pdnd",
      "description": ""
    },
    {
      "name": "PdP",
      "description": ""
    },
    {
      "name": "Prescriptions",
      "description": ""
    },
    {
      "name": "Prometheus",
      "description": ""
    },
    {
      "name": "PrometheusRequest",
      "description": ""
    },
    {
      "name": "PushNotification",
      "description": ""
    },
    {
      "name": "RecordedNoteTransits",
      "description": ""
    },
    {
      "name": "RedMobile",
      "description": ""
    },
    {
      "name": "RedRule",
      "description": ""
    },
    {
      "name": "RedRuleTypes",
      "description": ""
    },
    {
      "name": "RedVelox",
      "description": ""
    },
    {
      "name": "RedVeloxDashboard",
      "description": ""
    },
    {
      "name": "RedVeloxMobile",
      "description": ""
    },
    {
      "name": "RedVeloxSettings",
      "description": ""
    },
    {
      "name": "RedVeloxStatistic",
      "description": ""
    },
    {
      "name": "RedVeloxStickerVehicle",
      "description": ""
    },
    {
      "name": "RedVeloxTransitPhoto",
      "description": ""
    },
    {
      "name": "RedVeloxViolation",
      "description": ""
    },
    {
      "name": "ReportPassThrough",
      "description": ""
    },
    {
      "name": "Ricerche",
      "description": ""
    },
    {
      "name": "RoadMap",
      "description": ""
    },
    {
      "name": "RoadMapMobile",
      "description": ""
    },
    {
      "name": "SatMobile",
      "description": ""
    },
    {
      "name": "SatTransitAggregation",
      "description": ""
    },
    {
      "name": "SatTransitDataExportLog",
      "description": ""
    },
    {
      "name": "SatTransitIntegration",
      "description": ""
    },
    {
      "name": "Scntt",
      "description": ""
    },
    {
      "name": "Settings",
      "description": ""
    },
    {
      "name": "SMS",
      "description": ""
    },
    {
      "name": "Statistic",
      "description": ""
    },
    {
      "name": "Telegram",
      "description": ""
    },
    {
      "name": "Transit",
      "description": ""
    },
    {
      "name": "Updates",
      "description": ""
    },
    {
      "name": "User",
      "description": ""
    },
    {
      "name": "ValidationTransitData",
      "description": ""
    },
    {
      "name": "Vehicle",
      "description": ""
    },
    {
      "name": "VeloxMobile",
      "description": ""
    },
    {
      "name": "VeloxRule",
      "description": ""
    },
    {
      "name": "VeloxRuleTypes",
      "description": ""
    },
    {
      "name": "Version",
      "description": ""
    },
    {
      "name": "ZtlAuthorization",
      "description": ""
    },
    {
      "name": "ZtlAuthorizationExtension",
      "description": ""
    },
    {
      "name": "ZtlAuthorizationType",
      "description": ""
    },
    {
      "name": "ZtlAuthorizedTransit",
      "description": ""
    },
    {
      "name": "ZtlBlacklist",
      "description": ""
    },
    {
      "name": "ZtlCommon",
      "description": ""
    },
    {
      "name": "ZtlDashboard",
      "description": ""
    },
    {
      "name": "ZtlFrontOfficeApplication",
      "description": ""
    },
    {
      "name": "ZtlFrontOfficeNotes",
      "description": ""
    },
    {
      "name": "ZtlFrontOfficeRegistry",
      "description": ""
    },
    {
      "name": "ZtlGate",
      "description": ""
    },
    {
      "name": "ZtlPermitConcilia",
      "description": ""
    },
    {
      "name": "ZtlPermitTypeUser",
      "description": ""
    },
    {
      "name": "ZtlRule",
      "description": ""
    },
    {
      "name": "ZtlSatRedVeloxTransit",
      "description": ""
    },
    {
      "name": "ZtlSatSettings",
      "description": ""
    },
    {
      "name": "ZtlSettings",
      "description": ""
    },
    {
      "name": "ZtlStatistic",
      "description": ""
    },
    {
      "name": "ZtlTransitAuthorizing",
      "description": ""
    },
    {
      "name": "ZtlTransitAuthorizingPhoto",
      "description": ""
    },
    {
      "name": "ZtlTransitAuthorizingSettings",
      "description": ""
    },
    {
      "name": "ZtlTransitPhoto",
      "description": ""
    },
    {
      "name": "ZtlUserRegistry",
      "description": ""
    },
    {
      "name": "ZtlViolation",
      "description": ""
    },
    {
      "name": "ZtlViolationExport",
      "description": ""
    },
    {
      "name": "ZtlZone",
      "description": ""
    }
  ]
}