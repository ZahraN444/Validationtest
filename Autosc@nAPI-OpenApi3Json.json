{
  "openapi": "3.0.0",
  "info": {
    "title": "Autosc@nAPI",
    "contact": {},
    "version": "v1"
  },
  "servers": [
    {
      "url": "https://{defaultHost}",
      "variables": {
        "defaultHost": {
          "default": "www.example.com"
        }
      }
    }
  ],
  "paths": {
 
    "/api/ztl/prescriptions/categories": {
      "get": {
        "tags": [
          "Prescriptions"
        ],
        "summary": "ApiZtlPrescriptionsCategories_GET",
        "description": "",
        "operationId": "ApiZtlPrescriptionsCategories_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Prometheus/Test": {
      "get": {
        "tags": [
          "Prometheus"
        ],
        "summary": "ApiPrometheusTest_GET",
        "description": "",
        "operationId": "ApiPrometheusTest_GET",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/Prometheus/GetAuthorizationTypes": {
      "get": {
        "tags": [
          "Prometheus"
        ],
        "summary": "ApiPrometheusGetAuthorizationTypes_GET",
        "description": "",
        "operationId": "ApiPrometheusGetAuthorizationTypes_GET",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Prometheus.Dto.ExternalAuthorizationTypeDto"
                  },
                  "description": ""
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Prometheus.Dto.ExternalAuthorizationTypeDto"
                  },
                  "description": ""
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Prometheus.Dto.ExternalAuthorizationTypeDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/Prometheus/GetAuthorizationTypesFiltered": {
      "get": {
        "tags": [
          "Prometheus"
        ],
        "summary": "ApiPrometheusGetAuthorizationTypesFiltered_GET",
        "description": "",
        "operationId": "ApiPrometheusGetAuthorizationTypesFiltered_GET",
        "parameters": [
          {
            "name": "idList",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Prometheus.Dto.ExternalAuthorizationTypeDto"
                  },
                  "description": ""
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Prometheus.Dto.ExternalAuthorizationTypeDto"
                  },
                  "description": ""
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Prometheus.Dto.ExternalAuthorizationTypeDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/Prometheus/GetAuthorizations": {
      "post": {
        "tags": [
          "Prometheus"
        ],
        "summary": "ApiPrometheusGetAuthorizations_POST",
        "description": "",
        "operationId": "ApiPrometheusGetAuthorizations_POST",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Prometheus.Dto.GetExternalAuthorizationsRequestDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.Prometheus.Dto.GetExternalAuthorizationsResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.Prometheus.Dto.GetExternalAuthorizationsResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.Prometheus.Dto.GetExternalAuthorizationsResponseDto"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/Prometheus/places/{id}/permit-count": {
      "get": {
        "tags": [
          "Prometheus"
        ],
        "summary": "ApiPrometheusPlacesPermitCountById_GET",
        "description": "",
        "operationId": "ApiPrometheusPlacesPermitCountById_GET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/Prometheus/available-templates/{permitId}": {
      "get": {
        "tags": [
          "Prometheus"
        ],
        "summary": "ApiPrometheusAvailableTemplates_GET",
        "description": "",
        "operationId": "ApiPrometheusAvailableTemplates_GET",
        "parameters": [
          {
            "name": "permitId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": ""
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": ""
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/Prometheus/GetAllPermitType/{customerId}": {
      "get": {
        "tags": [
          "Prometheus"
        ],
        "summary": "ApiPrometheusGetAllPermitType_GET",
        "description": "",
        "operationId": "ApiPrometheusGetAllPermitType_GET",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Prometheus.Dto.ExternalAuthorizationTypeDto"
                  },
                  "description": ""
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Prometheus.Dto.ExternalAuthorizationTypeDto"
                  },
                  "description": ""
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Prometheus.Dto.ExternalAuthorizationTypeDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/Prometheus/DownloadApiKey/{autoscanId}": {
      "get": {
        "tags": [
          "Prometheus"
        ],
        "summary": "ApiPrometheusDownloadApiKeyByAutoscanId_GET",
        "description": "",
        "operationId": "ApiPrometheusDownloadApiKeyByAutoscanId_GET",
        "parameters": [
          {
            "name": "autoscanId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.Prometheus.Dto.SetApikeyAsyncResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.Prometheus.Dto.SetApikeyAsyncResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.Prometheus.Dto.SetApikeyAsyncResponseDto"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/Prometheus/SendAuthorization": {
      "post": {
        "tags": [
          "Prometheus"
        ],
        "summary": "ApiPrometheusSendAuthorization_POST",
        "description": "",
        "operationId": "ApiPrometheusSendAuthorization_POST",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Prometheus.Dto.SendAuthorizationRequestDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/api/Prometheus/DeleteAuthorization/{id}": {
      "delete": {
        "tags": [
          "Prometheus"
        ],
        "summary": "ApiPrometheusDeleteAuthorizationById_DELETE",
        "description": "",
        "operationId": "ApiPrometheusDeleteAuthorizationById_DELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/api/Prometheus/GetCustomers": {
      "get": {
        "tags": [
          "Prometheus"
        ],
        "summary": "Prende tutti Customers, per popolare la select-box degli enti. Contrlla l'apikey se esiste e in caso affermativo restituisce tutti gli enti.",
        "description": "",
        "operationId": "PrendetuttiCustomers,perpopolarelaselect-boxdeglienti.Contrllal'apikeyseesisteeincasoaffermativorestituiscetuttiglienti.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Prometheus.Dto.PrometheusCustomerDto"
                  },
                  "description": ""
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Prometheus.Dto.PrometheusCustomerDto"
                  },
                  "description": ""
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Prometheus.Dto.PrometheusCustomerDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/Prometheus/SetApikey/{autoscanId}": {
      "post": {
        "tags": [
          "Prometheus"
        ],
        "summary": "ApiPrometheusSetApikeyByAutoscanId_POST",
        "description": "",
        "operationId": "ApiPrometheusSetApikeyByAutoscanId_POST",
        "parameters": [
          {
            "name": "autoscanId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.Prometheus.Dto.SetApikeyAsyncResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.Prometheus.Dto.SetApikeyAsyncResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.Prometheus.Dto.SetApikeyAsyncResponseDto"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/Prometheus/GetZonesAndGates": {
      "get": {
        "tags": [
          "Prometheus"
        ],
        "summary": "ApiPrometheusGetZonesAndGates_GET",
        "description": "",
        "operationId": "ApiPrometheusGetZonesAndGates_GET",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlSettings.Dto.ZoneMin"
                  },
                  "description": ""
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlSettings.Dto.ZoneMin"
                  },
                  "description": ""
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlSettings.Dto.ZoneMin"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/Prometheus/GetAuthorizationToModify/{requestId}": {
      "get": {
        "tags": [
          "Prometheus"
        ],
        "summary": "ApiPrometheusGetAuthorizationToModify_GET",
        "description": "",
        "operationId": "ApiPrometheusGetAuthorizationToModify_GET",
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/api/Prometheus/{pathSegments}": {
      "get": {
        "tags": [
          "Prometheus"
        ],
        "summary": "ApiPrometheusByPathSegments_GET",
        "description": "",
        "operationId": "ApiPrometheusByPathSegments_GET",
        "parameters": [
          {
            "name": "pathSegments",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/System.IO.Stream"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/System.IO.Stream"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/System.IO.Stream"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/Prometheus/CountRequestByPlaceId/{placeId}/{maxActiveRequests}": {
      "get": {
        "tags": [
          "PrometheusRequest"
        ],
        "summary": "ApiPrometheusCountRequestByPlaceId_GET",
        "description": "",
        "operationId": "ApiPrometheusCountRequestByPlaceId_GET",
        "parameters": [
          {
            "name": "placeId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxActiveRequests",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.Prometheus.Dto.CountRequestPlaceDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.Prometheus.Dto.CountRequestPlaceDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.Prometheus.Dto.CountRequestPlaceDto"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/PushNotification/AddTokenAsync": {
      "post": {
        "tags": [
          "PushNotification"
        ],
        "summary": "ApiPushNotificationAddTokenAsync_POST",
        "description": "",
        "operationId": "ApiPushNotificationAddTokenAsync_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.PushNotification.Dto.AS_PushNotificationTokenDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/PushNotification/RemoveTokenAsync": {
      "post": {
        "tags": [
          "PushNotification"
        ],
        "summary": "ApiPushNotificationRemoveTokenAsync_POST",
        "description": "",
        "operationId": "ApiPushNotificationRemoveTokenAsync_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.PushNotification.Dto.AS_PushNotificationTokenDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RecordedNoteTransits/AllBySuite/{suite}": {
      "get": {
        "tags": [
          "RecordedNoteTransits"
        ],
        "summary": "ApiRecordedNoteTransitsAllBySuiteBySuite_GET",
        "description": "",
        "operationId": "ApiRecordedNoteTransitsAllBySuiteBySuite_GET",
        "parameters": [
          {
            "name": "suite",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/WSAutoscan.Core.Enums.AS_SuiteEnum"
                },
                {}
              ]
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RecordedNoteTransits/Delete/{id}": {
      "delete": {
        "tags": [
          "RecordedNoteTransits"
        ],
        "summary": "ApiRecordedNoteTransitsDeleteById_DELETE",
        "description": "",
        "operationId": "ApiRecordedNoteTransitsDeleteById_DELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RecordedNoteTransits/Add": {
      "post": {
        "tags": [
          "RecordedNoteTransits"
        ],
        "summary": "ApiRecordedNoteTransitsAdd_POST",
        "description": "",
        "operationId": "ApiRecordedNoteTransitsAdd_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.RecordedNoteTransits.Dto.RecordedTransitNoteRequest"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Mobile/LastTransitsRed/{direction}/{cameraId}": {
      "get": {
        "tags": [
          "RedMobile"
        ],
        "summary": "ApiMobileLastTransitsRedByDirection_GET",
        "description": "",
        "operationId": "ApiMobileLastTransitsRedByDirection_GET",
        "parameters": [
          {
            "name": "direction",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/WSAutoscan.Core.Enums.TransitDirection"
                },
                {}
              ]
            }
          },
          {
            "name": "cameraId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Transit.Dto.MobileRedVeloxTransitDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Mobile/LastTransitsRed/{direction}": {
      "get": {
        "tags": [
          "RedMobile"
        ],
        "summary": "ApiMobileLastTransitsRedByDirection_GET",
        "description": "",
        "operationId": "GetApiMobileLastTransitsRedByDirection_GET",
        "parameters": [
          {
            "name": "direction",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/WSAutoscan.Core.Enums.TransitDirection"
                },
                {}
              ]
            }
          },
          {
            "name": "camerasIds",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Transit.Dto.MobileRedVeloxTransitDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Mobile/GetRedRuleExpire/{gateId}": {
      "get": {
        "tags": [
          "RedMobile"
        ],
        "summary": "ApiMobileGetRedRuleExpireByGateId_GET",
        "description": "",
        "operationId": "ApiMobileGetRedRuleExpireByGateId_GET",
        "parameters": [
          {
            "name": "gateId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.RedRule.Dto.RedExpireRuleDto"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Mobile/RedCommas": {
      "get": {
        "tags": [
          "RedMobile"
        ],
        "summary": "Recupera la lista dei Comma (dell'Art.146) per le Violazioni Red.",
        "description": "",
        "operationId": "RecuperalalistadeiComma(dell'Art.146)perleViolazioniRed.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista dei Comma.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.RedVelox.Dto.RedVelox_CommasDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Mobile/CreateRedRule": {
      "post": {
        "tags": [
          "RedMobile"
        ],
        "summary": "ApiMobileCreateRedRule_POST",
        "description": "",
        "operationId": "ApiMobileCreateRedRule_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.RedRule.Dto.CreateRedRuleMobileDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Mobile/StopRedRule": {
      "post": {
        "tags": [
          "RedMobile"
        ],
        "summary": "ApiMobileStopRedRule_POST",
        "description": "",
        "operationId": "ApiMobileStopRedRule_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.RedRule.Dto.StopRedRuleMobileDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Red/Rule/GetAllRules": {
      "get": {
        "tags": [
          "RedRule"
        ],
        "summary": "Esegue una ricerca per prendere tutte le regole del rosso",
        "description": "",
        "operationId": "Esegueunaricercaperprenderetutteleregoledelrosso",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista con tutte le regole del rosso",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.RedRule.Dto.RedRuleDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Red/Rule/{ruleId}": {
      "delete": {
        "tags": [
          "RedRule"
        ],
        "summary": "Elimina una regola del rosso",
        "description": "",
        "operationId": "Eliminaunaregoladelrosso",
        "parameters": [
          {
            "name": "ruleId",
            "in": "path",
            "description": "Id della regola da eliminare",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Regola eliminata correttamente",
            "headers": {},
            "content": {}
          },
          "401": {
            "description": "Non si dispongono dei permessi per scrivere regole del rosso",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Red/Rule/CountRules/{ruleTypeId}": {
      "get": {
        "tags": [
          "RedRule"
        ],
        "summary": "Conta il numero di regole del rosso",
        "description": "",
        "operationId": "Contailnumerodiregoledelrosso",
        "parameters": [
          {
            "name": "ruleTypeId",
            "in": "path",
            "description": "Tipologia di regole per cui effettuare il conteggio",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Numero di regole per la tipologia selezionata",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/System.Threading.Tasks.Task1System.Int32System.Private.CoreLibVersion4.0.0.0CultureneutralPublicKeyToken7cec85d7bea7798e"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Red/Rule/AddOrUpdateRuleAsync": {
      "post": {
        "tags": [
          "RedRule"
        ],
        "summary": "Aggiunge o modifica una regola del rosso",
        "description": "",
        "operationId": "Aggiungeomodificaunaregoladelrosso",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Dto della regola da aggiungere/modificare",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.RedRule.Dto.RedRuleDto"
                  },
                  {
                    "description": "Dto della regola da aggiungere/modificare"
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "La regola e' stata aggiunta/modificata correttamente",
            "headers": {},
            "content": {}
          },
          "401": {
            "description": "Non si dispongono dei permessi per scrivere regole del rosso",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Red/Rule/{ruleId}/active": {
      "put": {
        "tags": [
          "RedRule"
        ],
        "summary": "Setta lo stato di attiva o disattivo di una regola del rosso",
        "description": "",
        "operationId": "Settalostatodiattivaodisattivodiunaregoladelrosso",
        "parameters": [
          {
            "name": "ruleId",
            "in": "path",
            "description": "Id della regola",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "True se la regola e' da attivare - false se la regola e' da disattivare",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "boolean",
                "description": "True se la regola e' da attivare - false se la regola e' da disattivare"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Lo stato della regola e' stato impostato correttamente",
            "headers": {},
            "content": {}
          },
          "401": {
            "description": "Non si dispongono dei permessi per scrivere regole del rosso",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Red/RuleTypes/GetAll": {
      "get": {
        "tags": [
          "RedRuleTypes"
        ],
        "summary": "Esegue una ricerca per ottenere tutti i tipi di regola del rosso",
        "description": "",
        "operationId": "Esegueunaricercaperotteneretuttiitipidiregoladelrosso",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista dei tipi di regola del rosso",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.RedRuleTypesService.Dto.RedRuleTypeDto"
                  },
                  "description": ""
                }
              }
            }
          },
          "401": {
            "description": "Se non si dispongono dei permessi per leggere le regole del rosso",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/Transit/GetTransitsWithoutPhotos": {
      "get": {
        "tags": [
          "RedVelox"
        ],
        "summary": "Ricerca i transiti RedSpeed che non hanno una foto associata.",
        "description": "",
        "operationId": "RicercaitransitiRedSpeedchenonhannounafotoassociata.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Risultato della ricerca.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/WSAutoscan.Application.RedVelox.Dto.RedVeloxSearchResponseDto"
                    },
                    {
                      "description": "Risultato di una ricerca filtrata dei transiti RedSpeed."
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/Transit/sanctioned-interval-hint": {
      "get": {
        "tags": [
          "RedVelox"
        ],
        "summary": "Calcola l'intervallo di date che contiene tutte le violazioni RedSpeed sanzionate.",
        "description": "",
        "operationId": "Calcolal'intervallodidatechecontienetutteleviolazioniRedSpeedsanzionate.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Modifica avvenuta con successo.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Intervallo di date per le violazioni RedSpeed esportabili."
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/Transit/latest_transit/{cameraId}": {
      "get": {
        "tags": [
          "RedVelox"
        ],
        "summary": "Ricerca l'ultimo transito rilevato da una Camera RedSpeed.",
        "description": "",
        "operationId": "Ricercal'ultimotransitorilevatodaunaCameraRedSpeed.",
        "parameters": [
          {
            "name": "cameraId",
            "in": "path",
            "description": "ID della Camera.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dati dell'ultimo transito rilevato.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/WSAutoscan.Application.Transit.Dto.RedVeloxLastTransitDto"
                    },
                    {
                      "description": "Dati dell'ultimo transito RedSpeed rilevato da una Camera."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Nel caso di transito non trovato.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/Transit/UpdateTransitAsync": {
      "put": {
        "tags": [
          "RedVelox"
        ],
        "summary": "Modifica i dati di un transito RedSpeed.",
        "description": "",
        "operationId": "ModificaidatidiuntransitoRedSpeed.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Dati del transito che si intende modificare.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.RedVelox.Dto.RedVeloxUpdateRequestDto"
                  },
                  {
                    "description": "Dati del transito che si intende modificare."
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Modifica avvenuta con successo.",
            "headers": {},
            "content": {}
          },
          "400": {
            "description": "Nel caso lo stato del transito non permette modifiche dei dati.",
            "headers": {},
            "content": {}
          },
          "404": {
            "description": "Nel caso di transito non trovato.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/Transit/AllViolationType": {
      "get": {
        "tags": [
          "RedVelox"
        ],
        "summary": "Recupera la lista delle violazioni RedSpeed.",
        "description": "",
        "operationId": "RecuperalalistadelleviolazioniRedSpeed.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista dei Tipi di Violazione.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Core.Model.RedVelox.RedVelox_ViolationTypeDictionary"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/Transit/{transitId}/status": {
      "put": {
        "tags": [
          "RedVelox"
        ],
        "summary": "Modifica lo stato di un transito RedSpeed.",
        "description": "",
        "operationId": "ModificalostatodiuntransitoRedSpeed.",
        "parameters": [
          {
            "name": "transitId",
            "in": "path",
            "description": "ID del transito.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Nuovo stato del transito.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.RedVelox.Dto.RedVelox_TransitStatusDto"
                  },
                  {
                    "description": "Nuovo stato del transito."
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Risultato della ricerca.",
            "headers": {},
            "content": {}
          },
          "400": {
            "description": "Motivo per cui non è stato possibile impostare il nuovo stato.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/Transit/massiveStatus": {
      "put": {
        "tags": [
          "RedVelox"
        ],
        "summary": "Modifica lo stato di un transito RedSpeed.",
        "description": "",
        "operationId": "PutModificalostatodiuntransitoRedSpeed.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Lista dei transitId e valore dello stato da aggiornare in maniera massiva",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.RedVelox.Dto.RedVelox_MassiveTransitStatusDto"
                  },
                  {
                    "description": "Lista dei transitId e valore dello stato da aggiornare in maniera massiva"
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Risultato della ricerca.",
            "headers": {},
            "content": {}
          },
          "400": {
            "description": "Motivo per cui non è stato possibile impostare il nuovo stato.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/Transit/RedCommas": {
      "get": {
        "tags": [
          "RedVelox"
        ],
        "summary": "Recupera la lista dei Comma (dell'Art.146) per le Violazioni Red.",
        "description": "",
        "operationId": "GetRecuperalalistadeiComma(dell'Art.146)perleViolazioniRed.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista dei Comma.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.RedVelox.Dto.RedVelox_CommasDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/Transit/Search": {
      "post": {
        "tags": [
          "RedVelox"
        ],
        "summary": "Esegue una ricerca filtrata dei transiti RedSpeed.",
        "description": "",
        "operationId": "EsegueunaricercafiltratadeitransitiRedSpeed.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Parametri per la ricerca filtrata.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.RedVelox.Dto.RedVeloxSearchRequestDto"
                  },
                  {
                    "description": "Parametri per la ricerca filtrata."
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Risultato della ricerca.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/WSAutoscan.Application.RedVelox.Dto.RedVeloxSearchResponseDto"
                    },
                    {
                      "description": "Risultato di una ricerca filtrata dei transiti RedSpeed."
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Se i parametri di ricerca non sono presenti.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/Transit/GetDetail/{transitId}": {
      "get": {
        "tags": [
          "RedVelox"
        ],
        "summary": "Ottiene i dettagli di uno specifico transito RedSpeed.",
        "description": "",
        "operationId": "OttieneidettaglidiunospecificotransitoRedSpeed.",
        "parameters": [
          {
            "name": "transitId",
            "in": "path",
            "description": "ID del transito.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dettagli del transito.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/WSAutoscan.Application.RedVelox.Dto.RedVeloxDetailDto"
                    },
                    {
                      "description": "Dettaglio di un transito RedSpeed."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Nel caso di transito non trovato.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/Dashboard/ViolationDeadLineNum": {
      "get": {
        "tags": [
          "RedVeloxDashboard"
        ],
        "summary": "Ritorna il numero di violazioni italiane ed estere in scadenza",
        "description": "",
        "operationId": "Ritornailnumerodiviolazioniitalianeedestereinscadenza",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Oggetto contentente il numero dei transiti in scadenza e in scadenza estera",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/System.Threading.Tasks.Task1WSAutoscan.Application.RedVelox.Dto.ViolationDeadLineNumDtoWSAutoscan.ApplicationVersion1.0.0.0CultureneutralPublicKeyTokennull"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/Dashboard/GetViolationsStatusNum": {
      "post": {
        "tags": [
          "RedVeloxDashboard"
        ],
        "summary": "Esegue una ricerca per il numero dei transiti red/velox suddivisi per stati",
        "description": "",
        "operationId": "Esegueunaricercaperilnumerodeitransitired/veloxsuddivisiperstati",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Lista degli stati dei transiti per cui eseguire la ricerca",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "description": "Lista degli stati dei transiti per cui eseguire la ricerca"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Lista contentente il numero dei transiti divisi per stato",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.RedVelox.Dto.RedVelox_ViolationsStatusNum"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Mobile/redvelox/Disputed/{transitId}": {
      "get": {
        "tags": [
          "RedVeloxMobile"
        ],
        "summary": "Verifica se a un transito RedSpeed è nello stato stato di \"Contestato in strada\".",
        "description": "",
        "operationId": "VerificaseauntransitoRedSpeedènellostatostatodi\"Contestatoinstrada\".",
        "parameters": [
          {
            "name": "transitId",
            "in": "path",
            "description": "ID del transito.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {},
            "content": {}
          },
          "404": {
            "description": "Not Found",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Mobile/RedVeloxPhotos/{transitId}": {
      "get": {
        "tags": [
          "RedVeloxMobile"
        ],
        "summary": "ApiMobileRedVeloxPhotosByTransitId_GET",
        "description": "",
        "operationId": "ApiMobileRedVeloxPhotosByTransitId_GET",
        "parameters": [
          {
            "name": "transitId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Mobile/Disptued/{transitId}": {
      "get": {
        "tags": [
          "RedVeloxMobile"
        ],
        "summary": "ApiMobileDisptuedByTransitId_GET",
        "description": "",
        "operationId": "ApiMobileDisptuedByTransitId_GET",
        "parameters": [
          {
            "name": "transitId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": true,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Mobile/UpdateRedVeloxTransit": {
      "post": {
        "tags": [
          "RedVeloxMobile"
        ],
        "summary": "ApiMobileUpdateRedVeloxTransit_POST",
        "description": "",
        "operationId": "ApiMobileUpdateRedVeloxTransit_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.RedVelox.Dto.RedVeloxUpdateRequestDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Mobile/RedVeloxStatus": {
      "put": {
        "tags": [
          "RedVeloxMobile"
        ],
        "summary": "ApiMobileRedVeloxStatus_PUT",
        "description": "",
        "operationId": "ApiMobileRedVeloxStatus_PUT",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.RedVelox.Dto.Mobile.RedVeloxTransitStatusMobileDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Mobile/{token}/RedVeloxStatus": {
      "put": {
        "tags": [
          "RedVeloxMobile"
        ],
        "summary": "ApiMobileRedVeloxStatusByToken_PUT",
        "description": "",
        "operationId": "ApiMobileRedVeloxStatusByToken_PUT",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.RedVelox.Dto.Mobile.RedVeloxTransitStatusMobileDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/api/Mobile/RedVeloxTransit/{transiId}/{token}": {
      "get": {
        "tags": [
          "RedVeloxMobile"
        ],
        "summary": "Per ora usato solo da concilia mobile",
        "description": "",
        "operationId": "Perorausatosolodaconciliamobile",
        "parameters": [
          {
            "name": "transiId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "token",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/api/RedVelox/Settings/IsBlurEnabled": {
      "get": {
        "tags": [
          "RedVeloxSettings"
        ],
        "summary": "Indica se è attivo l'offuscamento delle immagini dei transiti.",
        "description": "",
        "operationId": "Indicaseèattivol'offuscamentodelleimmaginideitransiti.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/Settings/AddOrUpdateSettingsAsync": {
      "post": {
        "tags": [
          "RedVeloxSettings"
        ],
        "summary": "Salva i settings per il modulo RedVelox.",
        "description": "",
        "operationId": "SalvaisettingsperilmoduloRedVelox.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Settings da salvare.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.RedVelox.Dto.RedVeloxSettingsDto"
                  },
                  {
                    "description": "Settings da salvare."
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "204": {
            "description": "Se il salvataggio è avvenuto correttamente.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/Settings/GetSettings": {
      "get": {
        "tags": [
          "RedVeloxSettings"
        ],
        "summary": "Restituisce i settings per il modulo RedVelox.",
        "description": "",
        "operationId": "RestituisceisettingsperilmoduloRedVelox.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/WSAutoscan.Application.RedVelox.Dto.RedVeloxSettingsDto"
                    },
                    {
                      "description": "Impostazioni del modulo RedVelox."
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/Settings/UpdateStickerUseCase/{stickerMode}": {
      "post": {
        "tags": [
          "RedVeloxSettings"
        ],
        "summary": "ApiRedVeloxSettingsUpdateStickerUseCase_POST",
        "description": "",
        "operationId": "ApiRedVeloxSettingsUpdateStickerUseCase_POST",
        "parameters": [
          {
            "name": "stickerMode",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/redVelox/Statistic/SaveStatistics": {
      "post": {
        "tags": [
          "RedVeloxStatistic"
        ],
        "summary": "Salva su database le statistiche dei trnaisti red/velox provenienti dal nas",
        "description": "",
        "operationId": "Salvasudatabaselestatistichedeitrnaistired/veloxprovenientidalnas",
        "parameters": [],
        "requestBody": {
          "description": "Lista delle statistiche da salvare",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.RedVeloxStatistic.Dto.StatisticTransitMessageDto"
                },
                "description": "Lista delle statistiche da salvare"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Salvataggio andato a buon fine",
            "headers": {},
            "content": {}
          },
          "401": {
            "description": "Nel caso in cui sia attiva l'autenticazione nas/autoscan e non sia corretta",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/api/redVelox/Statistic/group": {
      "get": {
        "tags": [
          "RedVeloxStatistic"
        ],
        "summary": "Esegue una ricerca per le statistiche red/velox",
        "description": "",
        "operationId": "Esegueunaricercaperlestatistichered/velox",
        "parameters": [
          {
            "name": "GateId",
            "in": "query",
            "description": "Id del gate",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "From",
            "in": "query",
            "description": "Data di inizio della ricerca",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "To",
            "in": "query",
            "description": "Data di fine della ricerca",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "By",
            "in": "query",
            "description": "Livello di raggruppamento per cui si vuole eseguire la ricerca",
            "style": "form",
            "explode": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/WSAutoscan.Core.Dal.RedVeloxGroupingLevel"
                },
                {
                  "description": "Livello di raggruppamento per cui si vuole eseguire la ricerca"
                }
              ]
            }
          },
          {
            "name": "TypeId",
            "in": "query",
            "description": "Suite per cui eseguire la ricerca, red o velox",
            "style": "form",
            "explode": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/WSAutoscan.Core.Enums.AS_SuiteEnum"
                },
                {
                  "description": "Suite per cui eseguire la ricerca, red o velox"
                }
              ]
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista delle statistiche red/velox aggregate per data",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/System.Threading.Tasks.Task1System.ValueTuple3System.Collections.Generic.IEnumerable1WSAutoscan.Core.Dal.RedVeloxDataPointWSAutoscan.CoreVersion1.0.0.0CultureneutralPublicKeyTokennullSystem.Private.CoreLibVersion4.0.0.0CultureneutralPublicKeyToken7cec85d7bea7798eSystem.Collections.Generic.IEnumerable1WSAutoscan.Core.Dal.RedVeloxDataPointWSAutoscan.CoreVersion1.0.0.0CultureneutralPublicKeyTokennullSystem.Private.CoreLibVersion4.0.0.0CultureneutralPublicKeyToken7cec85d7bea7798eSystem.Collections.Generic.IEnumerable1WSAutoscan.Core.Dal.RedVeloxDataPointWSAutoscan.CoreVersion1.0.0.0CultureneutralPublicKeyTokennullSystem.Private.CoreLibVersion4.0.0.0CultureneutralPublicKeyToken7cec85d7bea7798eSystem.Private.CoreLibVersion4.0.0.0CultureneutralPublicKeyToken7cec85d7bea7798e"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/redVelox/Statistic/gates": {
      "get": {
        "tags": [
          "RedVeloxStatistic"
        ],
        "summary": "Ricerca tutti i gate red/velox a cui l'utente puo' accedere",
        "description": "",
        "operationId": "Ricercatuttiigatered/veloxacuil'utentepuo'accedere",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista dei gate red/velox a cui l'utente puo' accedere",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {},
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/redVelox/Statistic/VeloxGroup": {
      "get": {
        "tags": [
          "RedVeloxStatistic"
        ],
        "summary": "Esegue una ricerca per le velocita' medie dei transiti speed",
        "description": "",
        "operationId": "Esegueunaricercaperlevelocita'mediedeitransitispeed",
        "parameters": [
          {
            "name": "GateId",
            "in": "query",
            "description": "Id del gate",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "From",
            "in": "query",
            "description": "Data di inizio della ricerca",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "To",
            "in": "query",
            "description": "Data di fine della ricerca",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "By",
            "in": "query",
            "description": "Livello di raggruppamento per cui si vuole eseguire la ricerca",
            "style": "form",
            "explode": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/WSAutoscan.Core.Dal.RedVeloxGroupingLevel"
                },
                {
                  "description": "Livello di raggruppamento per cui si vuole eseguire la ricerca"
                }
              ]
            }
          },
          {
            "name": "TypeId",
            "in": "query",
            "description": "Suite per cui eseguire la ricerca, red o velox",
            "style": "form",
            "explode": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/WSAutoscan.Core.Enums.AS_SuiteEnum"
                },
                {
                  "description": "Suite per cui eseguire la ricerca, red o velox"
                }
              ]
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista con le velocita' medie transiti speed",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/System.Threading.Tasks.Task1Microsoft.AspNetCore.Mvc.ActionResult1System.Collections.Generic.IEnumerable1WSAutoscan.Core.Dal.VeloxAverageSpeedDataPointWSAutoscan.CoreVersion1.0.0.0CultureneutralPublicKeyTokennullSystem.Private.CoreLibVersion4.0.0.0CultureneutralPublicKeyToken7cec85d7bea7798eMicrosoft.AspNetCore.Mvc.CoreVersion2.2.5.0CultureneutralPublicKeyTokenadb9793829ddae60"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/StickerVehicle/GetAllStickerVehicle": {
      "get": {
        "tags": [
          "RedVeloxStickerVehicle"
        ],
        "summary": "ApiRedVeloxStickerVehicleGetAllStickerVehicle_GET",
        "description": "",
        "operationId": "ApiRedVeloxStickerVehicleGetAllStickerVehicle_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.RedVeloxStickerVehicle.Dto.RedVeloxStickerVehicleDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/StickerVehicle/deleteStickerToVehicle/{Id}": {
      "delete": {
        "tags": [
          "RedVeloxStickerVehicle"
        ],
        "summary": "ApiRedVeloxStickerVehicleDeleteStickerToVehicle_DELETE",
        "description": "",
        "operationId": "ApiRedVeloxStickerVehicleDeleteStickerToVehicle_DELETE",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/StickerVehicle/AddOrUpdateStickerVehicleAsync": {
      "post": {
        "tags": [
          "RedVeloxStickerVehicle"
        ],
        "summary": "ApiRedVeloxStickerVehicleAddOrUpdateStickerVehicleAsync_POST",
        "description": "",
        "operationId": "ApiRedVeloxStickerVehicleAddOrUpdateStickerVehicleAsync_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.RedVeloxStickerVehicle.Dto.RedVeloxStickerVehicleDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/TransitPhoto/UserBlurredAreas": {
      "delete": {
        "tags": [
          "RedVeloxTransitPhoto"
        ],
        "summary": "Elimina un'area offuscate dall'utente da una foto di un transito.",
        "description": "",
        "operationId": "Eliminaun'areaoffuscatedall'utentedaunafotodiuntransito.",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/json-patch+json"
              ],
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Area offuscata eliminata.",
            "headers": {},
            "content": {}
          },
          "401": {
            "description": "L'utente non è autorizzato ad accedere alla foto.",
            "headers": {},
            "content": {}
          },
          "404": {
            "description": "Il file della foto non è stato trovato.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "put": {
        "tags": [
          "RedVeloxTransitPhoto"
        ],
        "summary": "Imposta le coordinate delle aree offuscate dall'utente all'interno di una foto di un transito.",
        "description": "",
        "operationId": "Impostalecoordinatedelleareeoffuscatedall'utenteall'internodiunafotodiuntransito.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Definizione delle aree da offuscare.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.RedVeloxTransitPhoto.Dto.BlurAreaUpdateRequest"
                  },
                  {
                    "description": "Definizione delle aree da offuscare."
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Coordinate modificate.",
            "headers": {},
            "content": {}
          },
          "400": {
            "description": "Le coordinate non sono valide.",
            "headers": {},
            "content": {}
          },
          "401": {
            "description": "L'utente non è autorizzato ad accedere alla foto.",
            "headers": {},
            "content": {}
          },
          "404": {
            "description": "Il file della foto non è stato trovato.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/TransitPhoto/ClaheImageBrightness/{imageName}/{suiteId}": {
      "get": {
        "tags": [
          "RedVeloxTransitPhoto"
        ],
        "summary": "ApiRedVeloxTransitPhotoClaheImageBrightness_GET",
        "description": "",
        "operationId": "ApiRedVeloxTransitPhotoClaheImageBrightness_GET",
        "parameters": [
          {
            "name": "imageName",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "suiteId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {},
            "content": {}
          },
          "404": {
            "description": "Not Found",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/TransitPhoto/VehicleCoordinates/{imageName}": {
      "get": {
        "tags": [
          "RedVeloxTransitPhoto"
        ],
        "summary": "Recuperare le coordinate della posizione del veicolo all'interno di una foto di un transito.",
        "description": "",
        "operationId": "Recuperarelecoordinatedellaposizionedelveicoloall'internodiunafotodiuntransito.",
        "parameters": [
          {
            "name": "imageName",
            "in": "path",
            "description": "Nome della foto.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Coordinate trovate. Potrebbero non essere valide se nella foto non è stata specificata la posizione del veicolo.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/WSAutoscan.Application.RedVeloxTransitPhoto.Dto.VehicleCoordinatesDto"
                    },
                    {
                      "description": "Area che rappresenta la posizione del veicolo."
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "L'utente non è autorizzato ad accedere alla foto.",
            "headers": {},
            "content": {}
          },
          "404": {
            "description": "Il file della foto non è stato trovato.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/TransitPhoto/VehicleCoordinates/{imageName}/{cameraId}": {
      "put": {
        "tags": [
          "RedVeloxTransitPhoto"
        ],
        "summary": "Imposta le coordinate del veicolo all'interno di una foto di un transito.",
        "description": "",
        "operationId": "Impostalecoordinatedelveicoloall'internodiunafotodiuntransito.",
        "parameters": [
          {
            "name": "imageName",
            "in": "path",
            "description": "Nome della foto.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cameraId",
            "in": "path",
            "description": "ID della Camera che ha generato la foto.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Coordinate del veicolo.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.RedVeloxTransitPhoto.Dto.VehicleCoordinatesDto"
                  },
                  {
                    "description": "Coordinate del veicolo."
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Coordinate modificate.",
            "headers": {},
            "content": {}
          },
          "401": {
            "description": "L'utente non è autorizzato ad accedere alla foto.",
            "headers": {},
            "content": {}
          },
          "404": {
            "description": "Il file della foto non è stato trovato.",
            "headers": {},
            "content": {}
          },
          "400": {
            "description": "Le coordinate non sono valide.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/TransitPhoto/SetCoordinatesTransitPhoto/{imageName}/{cameraId}": {
      "put": {
        "tags": [
          "RedVeloxTransitPhoto"
        ],
        "summary": "Imposta le coordinate della targa all'interno di una foto di un transito.",
        "description": "",
        "operationId": "Impostalecoordinatedellatargaall'internodiunafotodiuntransito.",
        "parameters": [
          {
            "name": "imageName",
            "in": "path",
            "description": "Nome della foto.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cameraId",
            "in": "path",
            "description": "ID della Camera che ha generato la foto.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Coordinate della targa.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.RedVeloxTransitPhoto.Dto.PlateCoordinatesDto"
                  },
                  {
                    "description": "Coordinate della targa."
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Coordinate modificate.",
            "headers": {},
            "content": {}
          },
          "400": {
            "description": "Le coordinate non sono valide.",
            "headers": {},
            "content": {}
          },
          "401": {
            "description": "L'utente non è autorizzato ad accedere alla foto.",
            "headers": {},
            "content": {}
          },
          "404": {
            "description": "Il file della foto non è stato trovato.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/TransitPhoto/filter": {
      "put": {
        "tags": [
          "RedVeloxTransitPhoto"
        ],
        "summary": "Imposta un filtro di correzione per una foto di un transito.",
        "description": "",
        "operationId": "Impostaunfiltrodicorrezioneperunafotodiuntransito.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Filtro da applicare alla foto del transito.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.RedVeloxTransitPhoto.Dto.MediaFilterDto"
                  },
                  {
                    "description": "Filtro da applicare alla foto del transito."
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Filtro applicato.",
            "headers": {},
            "content": {}
          },
          "400": {
            "description": "Filtro non valido.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/TransitPhoto/GetImage/{imageName}/{cameraId}/{token}": {
      "get": {
        "tags": [
          "RedVeloxTransitPhoto"
        ],
        "summary": "Ricerca un media di un transito e ne ritorna il contenuto in byte.\r\nQuesto metodo non richiede che l'utente sia loggato, ma è necessario presentare\r\nun token di autenticazione valido.",
        "description": "",
        "operationId": "Ricercaunmediadiuntransitoeneritornailcontenutoinbyte.\r\nQuestometodononrichiedechel'utentesialoggato,maènecessariopresentare\r\nuntokendiautenticazionevalido.",
        "parameters": [
          {
            "name": "imageName",
            "in": "path",
            "description": "Nome del media.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cameraId",
            "in": "path",
            "description": "ID della Camera che ha generato il media.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "path",
            "description": "Token di autenticazione.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Media trovato.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "L'utente non è autorizzato ad accedere al media.",
            "headers": {},
            "content": {}
          },
          "404": {
            "description": "Il file del media non è stato trovato.",
            "headers": {},
            "content": {}
          },
          "410": {
            "description": "Il parametro imageName non corrisponde a nessun media.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/api/RedVelox/TransitPhoto/GetImageBlob/{imageName}/{cameraId}": {
      "get": {
        "tags": [
          "RedVeloxTransitPhoto"
        ],
        "summary": "Ricerca un media di un transito e ne ritorna il contenuto in byte.\r\nQuesta operazione è considerata come un 'Download' del media e perciò sarà regisrtata.",
        "description": "",
        "operationId": "Ricercaunmediadiuntransitoeneritornailcontenutoinbyte.\r\nQuestaoperazioneèconsideratacomeun'Download'delmediaeperciòsaràregisrtata.",
        "parameters": [
          {
            "name": "imageName",
            "in": "path",
            "description": "Nome del media.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cameraId",
            "in": "path",
            "description": "ID della Camera che ha generato il media.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Media trovato.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "L'utente non è autorizzato ad accedere al media.",
            "headers": {},
            "content": {}
          },
          "404": {
            "description": "Il file del media non è stato trovato.",
            "headers": {},
            "content": {}
          },
          "410": {
            "description": "Il parametro imageName non corrisponde a nessun media.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/TransitPhoto/GetCoordinatesTransitPhoto": {
      "get": {
        "tags": [
          "RedVeloxTransitPhoto"
        ],
        "summary": "Recuperare le coordinate della posizione della targa e delle riga di arresto all'interno di una foto di un transito.",
        "description": "",
        "operationId": "Recuperarelecoordinatedellaposizionedellatargaedellerigadiarrestoall'internodiunafotodiuntransito.",
        "parameters": [
          {
            "name": "imageName",
            "in": "query",
            "description": "Nome della foto.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Coordinate trovate.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.RedVeloxTransitPhoto.Dto.CoordinatesTransitPhoto"
                }
              }
            }
          },
          "401": {
            "description": "L'utente non è autorizzato ad accedere alla foto.",
            "headers": {},
            "content": {}
          },
          "404": {
            "description": "Il file della foto non è stato trovato.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/TransitPhoto/UserBlurredAreas/{imageName}": {
      "get": {
        "tags": [
          "RedVeloxTransitPhoto"
        ],
        "summary": "Recuperare le coordinate delle aree offuscate dall'utente all'interno di una foto di un transito.",
        "description": "",
        "operationId": "Recuperarelecoordinatedelleareeoffuscatedall'utenteall'internodiunafotodiuntransito.",
        "parameters": [
          {
            "name": "imageName",
            "in": "path",
            "description": "Nome della foto.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Coordinate trovate.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.RedVeloxTransitPhoto.Dto.UserBlurredAreaDto"
                  },
                  "description": ""
                }
              }
            }
          },
          "401": {
            "description": "L'utente non è autorizzato ad accedere alla foto.",
            "headers": {},
            "content": {}
          },
          "404": {
            "description": "Il file della foto non è stato trovato.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/TransitPhoto/GetImagesByTransitId/{transitId}/{cameraId}": {
      "get": {
        "tags": [
          "RedVeloxTransitPhoto"
        ],
        "summary": "Recupera i media relativi ad un transito e li restituisce in un file ZIP.",
        "description": "",
        "operationId": "RecuperaimediarelativiaduntransitoelirestituisceinunfileZIP.",
        "parameters": [
          {
            "name": "transitId",
            "in": "path",
            "description": "ID del transito.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "cameraId",
            "in": "path",
            "description": "ID della Camera che ha generato la foto.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Media trovati.",
            "headers": {},
            "content": {}
          },
          "404": {
            "description": "Non sono stati trovati i media del transito.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/Violation/DeleteExportedViolation": {
      "post": {
        "tags": [
          "RedVeloxViolation"
        ],
        "summary": "Cancella un'esportazione già effettuata dallo storico delle esportazioni",
        "description": "",
        "operationId": "Cancellaun'esportazionegiàeffettuatadallostoricodelleesportazioni",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64"
                },
                "description": ""
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/Violation/SanctioningUsers": {
      "get": {
        "tags": [
          "RedVeloxViolation"
        ],
        "summary": "ApiRedVeloxViolationSanctioningUsers_GET",
        "description": "",
        "operationId": "ApiRedVeloxViolationSanctioningUsers_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/Violation/Exports/direct": {
      "get": {
        "tags": [
          "RedVeloxViolation"
        ],
        "summary": "Esportazione diretta delle Violazioni RedSpeed.",
        "description": "",
        "operationId": "EsportazionedirettadelleViolazioniRedSpeed.",
        "parameters": [
          {
            "name": "From",
            "in": "query",
            "description": "Restringe la ricerca alle Violazioni avvenute a partire da questo istante.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "To",
            "in": "query",
            "description": "Restringe la ricerca alle Violazioni avvenute a fino a questo istante.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "GateIds",
            "in": "query",
            "description": "Restringe la ricerca alle Violazioni avvenute per questi Varchi.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "ModuleTypeId",
            "in": "query",
            "description": "Restringe la ricerca alle Violazioni avvenute per questi moduli. Valori validi: [2,3] dove 2 => RED e 3 => VELOX.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "CommaId",
            "in": "query",
            "description": "ID del Comma (dell'Art.146) per cui restringere la ricerca. Valori validi: [1,2] dove 1 => \"Comma 2\" e 2 => \"Comma 3\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "Nations",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Nationality",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "UserIds",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Se il file ZIP è stato generato correttamente.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Se non è presente nessuna Violazione RedSpeed che corrisponde al filtro.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/Violation/GetRedVeloxTodaysTransitsAndViolations": {
      "get": {
        "tags": [
          "RedVeloxViolation"
        ],
        "summary": "Restituisce un riepilogo delle Violazioni RedVelox della sola data odierna.",
        "description": "",
        "operationId": "RestituisceunriepilogodelleViolazioniRedVeloxdellasoladataodierna.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Riepilogo delle violazioni RedVelox.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/WSAutoscan.Application.RedVelox.Dto.RedVelox_DayTransitsAndViolationsDto"
                    },
                    {
                      "description": "Riepilogo delle violazioni RedSpeed."
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/Violation/GetExportedTransitsToCancel/{violationExportId}": {
      "get": {
        "tags": [
          "RedVeloxViolation"
        ],
        "summary": "ApiRedVeloxViolationGetExportedTransitsToCancel_GET",
        "description": "",
        "operationId": "ApiRedVeloxViolationGetExportedTransitsToCancel_GET",
        "parameters": [
          {
            "name": "violationExportId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/Violation/export": {
      "post": {
        "tags": [
          "RedVeloxViolation"
        ],
        "summary": "Effettua l'esportazione di una lista di Violazioni RedSpeed.",
        "description": "",
        "operationId": "Effettual'esportazionediunalistadiViolazioniRedSpeed.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Lista di ID delle violazioni RedSpeed da esportare.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64"
                },
                "description": "Lista di ID delle violazioni RedSpeed da esportare."
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Se il file ZIP è stato generato correttamente.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Se non è stato passato nessun ID delle violazioni.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/Violation/exports/{exportId}": {
      "get": {
        "tags": [
          "RedVeloxViolation"
        ],
        "summary": "Rigenera un'Esportazione RedSpeed già effettuata.",
        "description": "",
        "operationId": "Rigeneraun'EsportazioneRedSpeedgiàeffettuata.",
        "parameters": [
          {
            "name": "exportId",
            "in": "path",
            "description": "ID dell'Esportazione RedSpeed da rigenerare.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Se il file ZIP è stato generato correttamente.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/Violation/sanctioned": {
      "get": {
        "tags": [
          "RedVeloxViolation"
        ],
        "summary": "Ricerca filtrata di tutte le Violazioni RedSpeed che possono essere esportate.",
        "description": "",
        "operationId": "RicercafiltrataditutteleViolazioniRedSpeedchepossonoessereesportate.",
        "parameters": [
          {
            "name": "From",
            "in": "query",
            "description": "Restringe la ricerca alle Violazioni avvenute a partire da questo istante.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "To",
            "in": "query",
            "description": "Restringe la ricerca alle Violazioni avvenute a fino a questo istante.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "GateIds",
            "in": "query",
            "description": "Restringe la ricerca alle Violazioni avvenute per questi Varchi.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "ModuleTypeId",
            "in": "query",
            "description": "Restringe la ricerca alle Violazioni avvenute per questi moduli. Valori validi: [2,3] dove 2 => RED e 3 => VELOX.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "CommaId",
            "in": "query",
            "description": "ID del Comma (dell'Art.146) per cui restringere la ricerca. Valori validi: [1,2] dove 1 => \"Comma 2\" e 2 => \"Comma 3\".",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "Nations",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Nationality",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "UserIds",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista delle violazioni esportabili.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Risultato di una ricerca filtrata delle Violazioni RedSpeed esportabili."
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/Violation/exports": {
      "get": {
        "tags": [
          "RedVeloxViolation"
        ],
        "summary": "Ricerca tutte le esportazioni di Violazioni RedSpeed effettuate.",
        "description": "",
        "operationId": "RicercatutteleesportazionidiViolazioniRedSpeedeffettuate.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cronologia delle esportazioni.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RedVelox/Violation/exportViolationDocument": {
      "post": {
        "tags": [
          "RedVeloxViolation"
        ],
        "summary": "Effettua l'esportazione del documento fotografico di una singola violazione RedSpeed.",
        "description": "",
        "operationId": "Effettual'esportazionedeldocumentofotograficodiunasingolaviolazioneRedSpeed.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "ID della violazione",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "description": "ID della violazione",
                "format": "int32"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Se il documento è stato creato o trovato correttamente.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Se non è stato passato l'ID della violazione.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/reports/{reportName}": {
      "post": {
        "tags": [
          "ReportPassThrough"
        ],
        "summary": "ApiReportsByReportName_POST",
        "description": "",
        "operationId": "ApiReportsByReportName_POST",
        "parameters": [
          {
            "name": "reportName",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "object",
                "additionalProperties": {}
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/reports/{pathSegments}": {
      "get": {
        "tags": [
          "ReportPassThrough"
        ],
        "summary": "ApiReportsByPathSegments_GET",
        "description": "",
        "operationId": "ApiReportsByPathSegments_GET",
        "parameters": [
          {
            "name": "pathSegments",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztlpass/ricerche": {
      "get": {
        "tags": [
          "Ricerche"
        ],
        "summary": "ApiZtlpassRicerche_GET",
        "description": "",
        "operationId": "ApiZtlpassRicerche_GET",
        "parameters": [
          {
            "name": "transitId",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/RoadMap/RoadMap": {
      "post": {
        "tags": [
          "RoadMap"
        ],
        "summary": "ApiRoadMapRoadMap_POST",
        "description": "",
        "operationId": "ApiRoadMapRoadMap_POST",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.RoadMap.Dto.RoadMapDto"
                },
                "description": ""
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      },
      "get": {
        "tags": [
          "RoadMap"
        ],
        "summary": "ApiRoadMapRoadMap_GET",
        "description": "",
        "operationId": "ApiRoadMapRoadMap_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Mobile/RoadMap": {
      "get": {
        "tags": [
          "RoadMapMobile"
        ],
        "summary": "ApiMobileRoadMap_GET",
        "description": "",
        "operationId": "ApiMobileRoadMap_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Mobile/sat/Status": {
      "put": {
        "tags": [
          "SatMobile"
        ],
        "summary": "Imposta gli allarmi di un transito Sat come \"chiusi\" (o \"gestiti\").\r\nNOTA: Versione chiamata da app \"Autosc@n\".",
        "description": "",
        "operationId": "ImpostagliallarmidiuntransitoSatcome\"chiusi\"(o\"gestiti\").\r\nNOTA:Versionechiamatadaapp\"Autosc@n\".",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Dati del transito da impostare.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Transit.Dto.SatTransitStatusMobileDto"
                  },
                  {
                    "description": "Dati del transito da impostare."
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Mobile/sat/Transit/{transitId}/{token}": {
      "get": {
        "tags": [
          "SatMobile"
        ],
        "summary": "ApiMobileSatTransitByTransitIdAndToken_GET",
        "description": "",
        "operationId": "ApiMobileSatTransitByTransitIdAndToken_GET",
        "parameters": [
          {
            "name": "transitId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "token",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.Transit.Dto.MobileSatTransitDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/api/Mobile/sat/Disputed/{transitId}": {
      "get": {
        "tags": [
          "SatMobile"
        ],
        "summary": "Verifica se a un transito Sat è nello stato stato di \"Contestato in strada\".",
        "description": "",
        "operationId": "VerificaseauntransitoSatènellostatostatodi\"Contestatoinstrada\".",
        "parameters": [
          {
            "name": "transitId",
            "in": "path",
            "description": "ID del transito.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {},
            "content": {}
          },
          "404": {
            "description": "Not Found",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Mobile/sat/{token}/Status": {
      "put": {
        "tags": [
          "SatMobile"
        ],
        "summary": "Imposta gli allarmi di un transito Sat come \"chiusi\" (o \"gestiti\").\r\nNOTA: Versione chiamata da app \"Concilia mobile\".",
        "description": "",
        "operationId": "ImpostagliallarmidiuntransitoSatcome\"chiusi\"(o\"gestiti\").\r\nNOTA:Versionechiamatadaapp\"Conciliamobile\".",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Token di autenticazione.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Dati del transito da impostare.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Transit.Dto.SatTransitStatusMobileDto"
                  },
                  {
                    "description": "Dati del transito da impostare."
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {},
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/api/Sat/Report/Reports": {
      "get": {
        "tags": [
          "SatTransitAggregation"
        ],
        "summary": "Restituisce una lista con tutti i report sat disponibili",
        "description": "",
        "operationId": "Restituisceunalistacontuttiireportsatdisponibili",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Sat/Report/Report": {
      "post": {
        "tags": [
          "SatTransitAggregation"
        ],
        "summary": "ApiSatReportReport_POST",
        "description": "",
        "operationId": "ApiSatReportReport_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.SatTransitAggregation.Report.Dto.SatReportRequestDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/SatTransitDataExportLog/SatTransitDataExportLog/{logId}": {
      "get": {
        "tags": [
          "SatTransitDataExportLog"
        ],
        "summary": "ApiSatTransitDataExportLogSatTransitDataExportLog_GET",
        "description": "",
        "operationId": "ApiSatTransitDataExportLogSatTransitDataExportLog_GET",
        "parameters": [
          {
            "name": "logId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/integration/sat/transits/{transitId}/attributes": {
      "put": {
        "tags": [
          "SatTransitIntegration"
        ],
        "summary": "ApiIntegrationSatTransitsAttributes_PUT",
        "description": "",
        "operationId": "ApiIntegrationSatTransitsAttributes_PUT",
        "parameters": [
          {
            "name": "transitId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "get": {
        "tags": [
          "SatTransitIntegration"
        ],
        "summary": "ApiIntegrationSatTransitsAttributes_GET",
        "description": "",
        "operationId": "ApiIntegrationSatTransitsAttributes_GET",
        "parameters": [
          {
            "name": "transitId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/integration/sat/alarms": {
      "post": {
        "tags": [
          "SatTransitIntegration"
        ],
        "summary": "ApiIntegrationSatAlarms_POST",
        "description": "",
        "operationId": "ApiIntegrationSatAlarms_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Utility.Integration.AlarmEvent"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Scntt/SendTransitsByErrorCode/{errorCode}": {
      "post": {
        "tags": [
          "Scntt"
        ],
        "summary": "ApiScnttSendTransitsByErrorCode_POST",
        "description": "",
        "operationId": "ApiScnttSendTransitsByErrorCode_POST",
        "parameters": [
          {
            "name": "errorCode",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/Scntt/SecondSendingAlarm": {
      "post": {
        "tags": [
          "Scntt"
        ],
        "summary": "ApiScnttSecondSendingAlarm_POST",
        "description": "",
        "operationId": "ApiScnttSecondSendingAlarm_POST",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/Scntt/GetErrorDictionary": {
      "get": {
        "tags": [
          "Scntt"
        ],
        "summary": "ApiScnttGetErrorDictionary_GET",
        "description": "",
        "operationId": "ApiScnttGetErrorDictionary_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Scntt.Dto.ScnttErrorDictionaryDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Scntt/GetErrorLogs/{id}": {
      "get": {
        "tags": [
          "Scntt"
        ],
        "summary": "ApiScnttGetErrorLogsById_GET",
        "description": "",
        "operationId": "ApiScnttGetErrorLogsById_GET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Scntt.Dto.ScnttErrorLogsDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/Settings/global": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "ApiSettingsGlobal_GET",
        "description": "",
        "operationId": "ApiSettingsGlobal_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.Setting.Dto.SAT_SettingsDto"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Settings/customer": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "ApiSettingsCustomer_GET",
        "description": "",
        "operationId": "ApiSettingsCustomer_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.Setting.Dto.SAT_SettingsDto"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Settings/GetSettingsAsync/{id}": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "ApiSettingsGetSettingsAsyncById_GET",
        "description": "",
        "operationId": "ApiSettingsGetSettingsAsyncById_GET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.Setting.Dto.SAT_SettingsDto"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Settings/AddOrUpdateSettingsAsync": {
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "ApiSettingsAddOrUpdateSettingsAsync_POST",
        "description": "",
        "operationId": "ApiSettingsAddOrUpdateSettingsAsync_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Setting.Dto.SAT_SettingsDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Settings/GetScnttCredential": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "ApiSettingsGetScnttCredential_GET",
        "description": "",
        "operationId": "ApiSettingsGetScnttCredential_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Api.Controllers.SettingsControllerScnttCredentialDto"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztlpass/settings/{customerId}": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "ApiZtlpassSettingsByCustomerId_GET",
        "description": "",
        "operationId": "ApiZtlpassSettingsByCustomerId_GET",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "put": {
        "tags": [
          "Settings"
        ],
        "summary": "ApiZtlpassSettingsByCustomerId_PUT",
        "description": "",
        "operationId": "ApiZtlpassSettingsByCustomerId_PUT",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlPassLombardia.Dto.ZtlPass_SettingsDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/SMS/GetCreditASync": {
      "get": {
        "tags": [
          "SMS"
        ],
        "summary": "ApiSMSGetCreditASync_GET",
        "description": "",
        "operationId": "ApiSMSGetCreditASync_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.SMS.Dto.SMSCreditDto"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Statistic/GetListGate": {
      "get": {
        "tags": [
          "Statistic"
        ],
        "summary": "ApiStatisticGetListGate_GET",
        "description": "",
        "operationId": "ApiStatisticGetListGate_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Statistic/GetStatisticsByMonth": {
      "get": {
        "tags": [
          "Statistic"
        ],
        "summary": "ApiStatisticGetStatisticsByMonth_GET",
        "description": "",
        "operationId": "ApiStatisticGetStatisticsByMonth_GET",
        "parameters": [
          {
            "name": "month",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "gate",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "year",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "dateFrom",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "dateTo",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.Statistic.Dto.ObjectStatisticDto"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Statistic/AddMultipleStatisticAsync": {
      "post": {
        "tags": [
          "Statistic"
        ],
        "summary": "ApiStatisticAddMultipleStatisticAsync_POST",
        "description": "",
        "operationId": "ApiStatisticAddMultipleStatisticAsync_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.Statistic.Dto.SAT_StatisticDto"
                },
                "description": ""
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Statistic/GetStatisticsByYear": {
      "get": {
        "tags": [
          "Statistic"
        ],
        "summary": "ApiStatisticGetStatisticsByYear_GET",
        "description": "",
        "operationId": "ApiStatisticGetStatisticsByYear_GET",
        "parameters": [
          {
            "name": "gate",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "year",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.Statistic.Dto.ObjectStatisticDto"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Statistic/GetStatisticsByDay": {
      "get": {
        "tags": [
          "Statistic"
        ],
        "summary": "ApiStatisticGetStatisticsByDay_GET",
        "description": "",
        "operationId": "ApiStatisticGetStatisticsByDay_GET",
        "parameters": [
          {
            "name": "gate",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.Statistic.Dto.ObjectStatisticDto"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Statistic/GetYears": {
      "get": {
        "tags": [
          "Statistic"
        ],
        "summary": "ApiStatisticGetYears_GET",
        "description": "",
        "operationId": "ApiStatisticGetYears_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Statistic/AddSingleStatisticAsync": {
      "post": {
        "tags": [
          "Statistic"
        ],
        "summary": "ApiStatisticAddSingleStatisticAsync_POST",
        "description": "",
        "operationId": "ApiStatisticAddSingleStatisticAsync_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Statistic.Dto.SAT_StatisticDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Statistic/GetStatisticsBySeconds": {
      "get": {
        "tags": [
          "Statistic"
        ],
        "summary": "ApiStatisticGetStatisticsBySeconds_GET",
        "description": "",
        "operationId": "ApiStatisticGetStatisticsBySeconds_GET",
        "parameters": [
          {
            "name": "gate",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateFrom",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "dateTo",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Statistic/TransitProcessingTime": {
      "get": {
        "tags": [
          "Statistic"
        ],
        "summary": "ApiStatisticTransitProcessingTime_GET",
        "description": "",
        "operationId": "ApiStatisticTransitProcessingTime_GET",
        "parameters": [
          {
            "name": "seconds",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Statistic/GetStatisticsByDate": {
      "get": {
        "tags": [
          "Statistic"
        ],
        "summary": "ApiStatisticGetStatisticsByDate_GET",
        "description": "",
        "operationId": "ApiStatisticGetStatisticsByDate_GET",
        "parameters": [
          {
            "name": "gate",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateFrom",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "dateTo",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.Statistic.Dto.ObjectStatisticDto"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Statistic/group": {
      "get": {
        "tags": [
          "Statistic"
        ],
        "summary": "ApiStatisticGroup_GET",
        "description": "",
        "operationId": "ApiStatisticGroup_GET",
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "by",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "gateId",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Statistic/TestAggregazione": {
      "get": {
        "tags": [
          "Statistic"
        ],
        "summary": "ApiStatisticTestAggregazione_GET",
        "description": "",
        "operationId": "ApiStatisticTestAggregazione_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Statistic/years": {
      "get": {
        "tags": [
          "Statistic"
        ],
        "summary": "ApiStatisticYears_GET",
        "description": "",
        "operationId": "ApiStatisticYears_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Statistic/gates": {
      "get": {
        "tags": [
          "Statistic"
        ],
        "summary": "ApiStatisticGates_GET",
        "description": "",
        "operationId": "ApiStatisticGates_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {},
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Statistic/grouped": {
      "get": {
        "tags": [
          "Statistic"
        ],
        "summary": "ApiStatisticGrouped_GET",
        "description": "",
        "operationId": "ApiStatisticGrouped_GET",
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "by",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "gateId",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Telegram/revokeTelegramNot": {
      "post": {
        "tags": [
          "Telegram"
        ],
        "summary": "Revoca le notifiche telegram per un particolare utente",
        "description": "",
        "operationId": "Revocalenotifichetelegramperunparticolareutente",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Id dell'utente a cui revocare le notifiche telegram",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "description": "Id dell'utente a cui revocare le notifiche telegram",
                "format": "int32"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Le notifiche sono state revocate",
            "headers": {},
            "content": {}
          },
          "204": {
            "description": "Le notifiche non sono state revocate",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Telegram/ComparePhoneNumber": {
      "post": {
        "tags": [
          "Telegram"
        ],
        "summary": "Controllo il numero di telefono inviatomi dall'utente con quelli salvati su db",
        "description": "",
        "operationId": "Controlloilnumeroditelefonoinviatomidall'utenteconquellisalvatisudb",
        "parameters": [],
        "requestBody": {
          "description": "Informazioni dell'utente da controllare",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Telegram.Dto.UserToInsert"
                  },
                  {
                    "description": "Informazioni dell'utente da controllare"
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Il numero di telefono e' presente su db",
            "headers": {},
            "content": {}
          },
          "204": {
            "description": "Il numero di telefono non e' presente su db",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/api/Telegram/SendTelegramLinkEmail": {
      "post": {
        "tags": [
          "Telegram"
        ],
        "summary": "Invia una mail con il link del bot di telegram ad un utente",
        "description": "",
        "operationId": "Inviaunamailconillinkdelbotditelegramadunutente",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Id dell'utente a cui inviare la mail",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "description": "Id dell'utente a cui inviare la mail",
                "format": "int32"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "La mail e' stata inviata",
            "headers": {},
            "content": {}
          },
          "204": {
            "description": "La mail non e' stata inviata",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Transit/Get/{takeTop}": {
      "get": {
        "tags": [
          "Transit"
        ],
        "summary": "ApiTransitGetByTakeTop_GET",
        "description": "",
        "operationId": "ApiTransitGetByTakeTop_GET",
        "parameters": [
          {
            "name": "takeTop",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Transit.Dto.SAT_TransitDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Transit/GetImage/{imageName}/{cameraId}/{token}": {
      "get": {
        "tags": [
          "Transit"
        ],
        "summary": "ApiTransitGetImageTokenByImageName_GET",
        "description": "",
        "operationId": "ApiTransitGetImageTokenByImageName_GET",
        "parameters": [
          {
            "name": "imageName",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cameraId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/api/Transit/GetImageBlob/{imageName}/{cameraId}": {
      "get": {
        "tags": [
          "Transit"
        ],
        "summary": "ApiTransitGetImageBlobByImageName_GET",
        "description": "",
        "operationId": "ApiTransitGetImageBlobByImageName_GET",
        "parameters": [
          {
            "name": "imageName",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cameraId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Transit/ChangePlateAsync": {
      "post": {
        "tags": [
          "Transit"
        ],
        "summary": "ApiTransitChangePlateAsync_POST",
        "description": "",
        "operationId": "ApiTransitChangePlateAsync_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Transit.Dto.SAT_TransitChangeDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Transit/Search": {
      "post": {
        "tags": [
          "Transit"
        ],
        "summary": "ApiTransitSearch_POST",
        "description": "",
        "operationId": "ApiTransitSearch_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Transit.Dto.SAT_TransitSearchInputDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.DataAccess.Dal.TransitQueryBuilderTransitItem"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Transit/GetTransitsByIds": {
      "post": {
        "tags": [
          "Transit"
        ],
        "summary": "ApiTransitGetTransitsByIds_POST",
        "description": "",
        "operationId": "ApiTransitGetTransitsByIds_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64"
                },
                "description": ""
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Transit.Dto.SAT_TransitDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Transit/GetDayTransit": {
      "get": {
        "tags": [
          "Transit"
        ],
        "summary": "ApiTransitGetDayTransit_GET",
        "description": "",
        "operationId": "ApiTransitGetDayTransit_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Transit/CheckOnReceiveTransit": {
      "post": {
        "tags": [
          "Transit"
        ],
        "summary": "ApiTransitCheckOnReceiveTransit_POST",
        "description": "",
        "operationId": "ApiTransitCheckOnReceiveTransit_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Api.Controllers.Sat.TransitControllerPlateQuery"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Api.Controllers.Sat.TransitControllerPlateQueryResponse"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Transit/driving-license/{drivingLicense}": {
      "get": {
        "tags": [
          "Transit"
        ],
        "summary": "ApiTransitDrivingLicenseByDrivingLicense_GET",
        "description": "",
        "operationId": "ApiTransitDrivingLicenseByDrivingLicense_GET",
        "parameters": [
          {
            "name": "drivingLicense",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.Dttsis.InspectionDetails.DrivingLicenseDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Transit/GetAllTransitStatus": {
      "get": {
        "tags": [
          "Transit"
        ],
        "summary": "ApiTransitGetAllTransitStatus_GET",
        "description": "",
        "operationId": "ApiTransitGetAllTransitStatus_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Transit.Dto.ZTL_TransitStatusDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Transit/filter": {
      "put": {
        "tags": [
          "Transit"
        ],
        "summary": "ApiTransitFilter_PUT",
        "description": "",
        "operationId": "ApiTransitFilter_PUT",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Transit.Dto.ImageFilterDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "400": {
            "description": "Bad Request",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Transit/GetDetails": {
      "post": {
        "tags": [
          "Transit"
        ],
        "summary": "ApiTransitGetDetails_POST",
        "description": "",
        "operationId": "ApiTransitGetDetails_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Transit.Dto.SAT_TransitDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.Transit.Dto.SAT_TransitDetailsDto"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Transit/ChangeAdrAsync": {
      "post": {
        "tags": [
          "Transit"
        ],
        "summary": "ApiTransitChangeAdrAsync_POST",
        "description": "",
        "operationId": "ApiTransitChangeAdrAsync_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Transit.Dto.SAT_TransitChangeDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Transit/GetImageData/{imageName}/{cameraId}/{token}": {
      "get": {
        "tags": [
          "Transit"
        ],
        "summary": "ApiTransitGetImageDataTokenByImageName_GET",
        "description": "",
        "operationId": "ApiTransitGetImageDataTokenByImageName_GET",
        "parameters": [
          {
            "name": "imageName",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cameraId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/api/Transit/ChangeTrlAsync": {
      "post": {
        "tags": [
          "Transit"
        ],
        "summary": "ApiTransitChangeTrlAsync_POST",
        "description": "",
        "operationId": "ApiTransitChangeTrlAsync_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Transit.Dto.SAT_TransitChangeDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Transit/ChangeNationAsync": {
      "post": {
        "tags": [
          "Transit"
        ],
        "summary": "ApiTransitChangeNationAsync_POST",
        "description": "",
        "operationId": "ApiTransitChangeNationAsync_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Transit.Dto.SAT_TransitChangeDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Transit/GetTransitId/{plate}/{date}/{nation}": {
      "get": {
        "tags": [
          "Transit"
        ],
        "summary": "ApiTransitGetTransitIdNationByPlate_GET",
        "description": "",
        "operationId": "ApiTransitGetTransitIdNationByPlate_GET",
        "parameters": [
          {
            "name": "plate",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "nation",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Transit/trails/{plateType}/{plate}": {
      "get": {
        "tags": [
          "Transit"
        ],
        "summary": "ApiTransitTrailsByPlateTypeAndPlate_GET",
        "description": "",
        "operationId": "ApiTransitTrailsByPlateTypeAndPlate_GET",
        "parameters": [
          {
            "name": "plate",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "plateType",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/WSAutoscan.DataAccess.Dal.TransitQueryBuilderPlateType"
                },
                {}
              ]
            }
          },
          {
            "name": "since",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/System.TimeSpan"
                },
                {}
              ]
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.DataAccess.Dal.TransitQueryBuilderTransitItem"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Transit/GetImage/{imageName}/{token}": {
      "get": {
        "tags": [
          "Transit"
        ],
        "summary": "ApiTransitGetImageByImageNameAndToken_GET",
        "description": "",
        "operationId": "ApiTransitGetImageByImageNameAndToken_GET",
        "parameters": [
          {
            "name": "imageName",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/api/Transit/ChangeDetailAsync": {
      "post": {
        "tags": [
          "Transit"
        ],
        "summary": "ApiTransitChangeDetailAsync_POST",
        "description": "",
        "operationId": "ApiTransitChangeDetailAsync_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Transit.Dto.SAT_TransitChangeDetailDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Transit/GetTransitInWarning": {
      "get": {
        "tags": [
          "Transit"
        ],
        "summary": "ApiTransitGetTransitInWarning_GET",
        "description": "",
        "operationId": "ApiTransitGetTransitInWarning_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Transit/GetPhotoInWarning": {
      "get": {
        "tags": [
          "Transit"
        ],
        "summary": "ApiTransitGetPhotoInWarning_GET",
        "description": "",
        "operationId": "ApiTransitGetPhotoInWarning_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Transit/ClaheImageBrightness/{imageName}": {
      "get": {
        "tags": [
          "Transit"
        ],
        "summary": "ApiTransitClaheImageBrightness_GET",
        "description": "",
        "operationId": "ApiTransitClaheImageBrightness_GET",
        "parameters": [
          {
            "name": "imageName",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {},
            "content": {}
          },
          "404": {
            "description": "Not Found",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Transit/Export": {
      "post": {
        "tags": [
          "Transit"
        ],
        "summary": "ApiTransitExport_POST",
        "description": "",
        "operationId": "ApiTransitExport_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Api.Controllers.Sat.TransitControllerSearchParamAndCredential"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/updates/license": {
      "get": {
        "tags": [
          "Updates"
        ],
        "summary": "ApiUpdatesLicense_GET",
        "description": "",
        "operationId": "ApiUpdatesLicense_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.Updates.Dto.LicenseDataResponseDto"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/User/GetAllSatUsers": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Ottiene la lista degli utenti che hanno accesso al sat facenti parte del customer dell'utente loggato",
        "description": "",
        "operationId": "Ottienelalistadegliutentichehannoaccessoalsatfacentipartedelcustomerdell'utenteloggato",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista utenti con accesso al sat",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.User.Dto.AS_UserDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/User/AddUserAsync": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "ApiUserAddUserAsync_POST",
        "description": "",
        "operationId": "ApiUserAddUserAsync_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.User.Dto.UserDataWithPermissions"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/User/UpdateUserAsync": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "ApiUserUpdateUserAsync_POST",
        "description": "",
        "operationId": "ApiUserUpdateUserAsync_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.User.Dto.UserDataWithPermissions"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/User/ChangePasswordUserAsync": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "ApiUserChangePasswordUserAsync_POST",
        "description": "",
        "operationId": "ApiUserChangePasswordUserAsync_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.User.Dto.ChangePasswordDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/WSAutoscan.Application.User.Dto.ChangePasswordResultDto"
                    },
                    {
                      "description": "Risultato di un'operazione di cambio password."
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/User/UpdateUserMonitor": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "ApiUserUpdateUserMonitor_POST",
        "description": "",
        "operationId": "ApiUserUpdateUserMonitor_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.User.Dto.AS_User_MonitorDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/User/ResetPassword": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "ApiUserResetPassword_POST",
        "description": "",
        "operationId": "ApiUserResetPassword_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.User.Dto.ChangePasswordDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/WSAutoscan.Application.User.Dto.ChangePasswordResultDto"
                    },
                    {
                      "description": "Risultato di un'operazione di cambio password."
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/User/GetUserComplete/{userGuid}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Ottiene l'utente completo tramite il GUID passato",
        "description": "",
        "operationId": "Ottienel'utentecompletotramiteilGUIDpassato",
        "parameters": [
          {
            "name": "userGuid",
            "in": "path",
            "description": "Guid univoco dell'utente",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Utente",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/WSAutoscan.Application.User.Dto.AS_UserDto"
                    },
                    {
                      "description": "Utente completo"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/User/getAllActiveZtlUsers": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Ottiene la lista degli utenti attivi con accesso allo ztl facenti parte del customer dell'utente loggato",
        "description": "",
        "operationId": "Ottienelalistadegliutentiattiviconaccessoalloztlfacentipartedelcustomerdell'utenteloggato",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista utenti attivi con accesso allo ztl",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.User.Dto.AS_UserMinForZtlDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/User/GetUserMonitor/{userId}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "ApiUserGetUserMonitorByUserId_GET",
        "description": "",
        "operationId": "ApiUserGetUserMonitorByUserId_GET",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.User.Dto.AS_User_MonitorDto"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/User/GetAllUsers": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Ritorna tutti gli utenti appartenenti allo stesso ente di chi ha eseguito la chiamata",
        "description": "",
        "operationId": "Ritornatuttigliutentiappartenentiallostessoentedichihaeseguitolachiamata",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista degli utenti",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.User.Dto.AS_UserDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/User/GetAllActiveUsers": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Ottiene la lista di tutti gli utenti attivi facenti parte del customer dell'utente loggato",
        "description": "",
        "operationId": "Ottienelalistadituttigliutentiattivifacentipartedelcustomerdell'utenteloggato",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista di tutti gli utenti attivi",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.User.Dto.AS_UserDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/User/AddOrUpdateUserAuthorizationTypesAsync": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "ApiUserAddOrUpdateUserAuthorizationTypesAsync_POST",
        "description": "",
        "operationId": "ApiUserAddOrUpdateUserAuthorizationTypesAsync_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.User.Dto.ZTL_AuthorizationType_UserDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "204": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/User/GetLoggedUser": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "ApiUserGetLoggedUser_GET",
        "description": "",
        "operationId": "ApiUserGetLoggedUser_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/WSAutoscan.Application.User.Dto.AS_UserBasicDto"
                    },
                    {
                      "description": "Utente basic"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/User/GetUserByGuid/{guid}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "ApiUserGetUserByGuidByGuid_GET",
        "description": "",
        "operationId": "ApiUserGetUserByGuidByGuid_GET",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/WSAutoscan.Application.User.Dto.AS_UserDto"
                    },
                    {
                      "description": "Utente completo"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/User/GetRoleByUserGuid/{guid}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "ApiUserGetRoleByUserGuidByGuid_GET",
        "description": "",
        "operationId": "ApiUserGetRoleByUserGuidByGuid_GET",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.User.Dto.SAT_RoleDto"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/User/ChangePersonalData": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "ApiUserChangePersonalData_POST",
        "description": "",
        "operationId": "ApiUserChangePersonalData_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.User.Dto.PersonalData"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/User/GetPersonalData": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "ApiUserGetPersonalData_GET",
        "description": "",
        "operationId": "ApiUserGetPersonalData_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.User.Dto.PersonalData"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/User/GetAllPermissions": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "ApiUserGetAllPermissions_GET",
        "description": "",
        "operationId": "ApiUserGetAllPermissions_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.User.Dto.AS_PermissionDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/User/GetAllSuiteModule": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "ApiUserGetAllSuiteModule_GET",
        "description": "",
        "operationId": "ApiUserGetAllSuiteModule_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.User.Dto.AS_SuiteDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ValidationTransitData/{violationId}/{suite}": {
      "get": {
        "tags": [
          "ValidationTransitData"
        ],
        "summary": "ApiValidationTransitDataByViolationId_GET",
        "description": "",
        "operationId": "ApiValidationTransitDataByViolationId_GET",
        "parameters": [
          {
            "name": "violationId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "suite",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/WSAutoscan.Core.Enums.AS_SuiteEnum"
                },
                {}
              ]
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/vehicle/GetDttsisVehicleTypes": {
      "get": {
        "tags": [
          "Vehicle"
        ],
        "summary": "ApiVehicleGetDttsisVehicleTypes_GET",
        "description": "",
        "operationId": "ApiVehicleGetDttsisVehicleTypes_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/vehicle/GetAllVehicleTypes": {
      "get": {
        "tags": [
          "Vehicle"
        ],
        "summary": "ApiVehicleGetAllVehicleTypes_GET",
        "description": "",
        "operationId": "ApiVehicleGetAllVehicleTypes_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/vehicle/GetVehicleTypesMin": {
      "get": {
        "tags": [
          "Vehicle"
        ],
        "summary": "ApiVehicleGetVehicleTypesMin_GET",
        "description": "",
        "operationId": "ApiVehicleGetVehicleTypesMin_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Vehicle.Dto.AS_VehicleMinDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/vehicle/GetVehicleTypes": {
      "get": {
        "tags": [
          "Vehicle"
        ],
        "summary": "ApiVehicleGetVehicleTypes_GET",
        "description": "",
        "operationId": "ApiVehicleGetVehicleTypes_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Vehicle.Dto.AS_VehicleDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/vehicle/GetVehicleTypesByDesc": {
      "get": {
        "tags": [
          "Vehicle"
        ],
        "summary": "ApiVehicleGetVehicleTypesByDesc_GET",
        "description": "",
        "operationId": "ApiVehicleGetVehicleTypesByDesc_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Vehicle.Dto.AS_VehicleDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/vehicle/GetVehicleCamDesc": {
      "get": {
        "tags": [
          "Vehicle"
        ],
        "summary": "ApiVehicleGetVehicleCamDesc_GET",
        "description": "",
        "operationId": "ApiVehicleGetVehicleCamDesc_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Vehicle.Dto.VehicleCameraDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/vehicle/AddOrUpdateVehicleTypesAsync": {
      "post": {
        "tags": [
          "Vehicle"
        ],
        "summary": "ApiVehicleAddOrUpdateVehicleTypesAsync_POST",
        "description": "",
        "operationId": "ApiVehicleAddOrUpdateVehicleTypesAsync_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Vehicle.Dto.AS_VehicleDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/vehicle/{vehicleId}": {
      "delete": {
        "tags": [
          "Vehicle"
        ],
        "summary": "ApiVehicleByVehicleId_DELETE",
        "description": "",
        "operationId": "ApiVehicleByVehicleId_DELETE",
        "parameters": [
          {
            "name": "vehicleId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/fuellings": {
      "get": {
        "tags": [
          "Vehicle"
        ],
        "summary": "ApiFuellings_GET",
        "description": "",
        "operationId": "ApiFuellings_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_VehicleFuelling"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/environmental-classes": {
      "get": {
        "tags": [
          "Vehicle"
        ],
        "summary": "ApiEnvironmentalClasses_GET",
        "description": "",
        "operationId": "ApiEnvironmentalClasses_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Core.Model.AS_EnvironmentalClass"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Mobile/LastTransitsVelox/{direction}/{cameraId}": {
      "get": {
        "tags": [
          "VeloxMobile"
        ],
        "summary": "ApiMobileLastTransitsVeloxByDirection_GET",
        "description": "",
        "operationId": "ApiMobileLastTransitsVeloxByDirection_GET",
        "parameters": [
          {
            "name": "direction",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/WSAutoscan.Core.Enums.TransitDirection"
                },
                {}
              ]
            }
          },
          {
            "name": "cameraId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Transit.Dto.MobileRedVeloxTransitDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Mobile/StopVeloxRule": {
      "post": {
        "tags": [
          "VeloxMobile"
        ],
        "summary": "ApiMobileStopVeloxRule_POST",
        "description": "",
        "operationId": "ApiMobileStopVeloxRule_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.VeloxRule.Dto.StopVeloxRuleMobileDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Mobile/CreateVeloxRule": {
      "post": {
        "tags": [
          "VeloxMobile"
        ],
        "summary": "ApiMobileCreateVeloxRule_POST",
        "description": "",
        "operationId": "ApiMobileCreateVeloxRule_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.VeloxRule.Dto.CreateVeloxRuleMobileDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Mobile/GetVeloxRuleExpire/{gateId}": {
      "get": {
        "tags": [
          "VeloxMobile"
        ],
        "summary": "ApiMobileGetVeloxRuleExpireByGateId_GET",
        "description": "",
        "operationId": "ApiMobileGetVeloxRuleExpireByGateId_GET",
        "parameters": [
          {
            "name": "gateId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.VeloxRule.Dto.VeloxExpireRuleDto"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Mobile/VeloxTransit/{transiId}/{token}": {
      "get": {
        "tags": [
          "VeloxMobile"
        ],
        "summary": "Per ora usato solo da concilia mobile",
        "description": "",
        "operationId": "GetPerorausatosolodaconciliamobile",
        "parameters": [
          {
            "name": "transiId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "token",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/api/Mobile/LastTransitsVelox/{direction}": {
      "get": {
        "tags": [
          "VeloxMobile"
        ],
        "summary": "ApiMobileLastTransitsVeloxByDirection_GET",
        "description": "",
        "operationId": "GetApiMobileLastTransitsVeloxByDirection_GET",
        "parameters": [
          {
            "name": "direction",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/WSAutoscan.Core.Enums.TransitDirection"
                },
                {}
              ]
            }
          },
          {
            "name": "camerasIds",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Transit.Dto.MobileRedVeloxTransitDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Velox/Rule/AddOrUpdateRuleAsync": {
      "post": {
        "tags": [
          "VeloxRule"
        ],
        "summary": "Aggiunge o modifica una regola della velocita'",
        "description": "",
        "operationId": "Aggiungeomodificaunaregoladellavelocita'",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Dto della regola da aggiungere/modificare",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.VeloxRule.Dto.VeloxRuleDto"
                  },
                  {
                    "description": "Dto della regola da aggiungere/modificare"
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "La regola e' stata aggiunta/modificata correttamente",
            "headers": {},
            "content": {}
          },
          "401": {
            "description": "Non si dispongono dei permessi per scrivere regole di velocita'",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Velox/Rule/{ruleId}": {
      "delete": {
        "tags": [
          "VeloxRule"
        ],
        "summary": "Elimina una regola della velocita'",
        "description": "",
        "operationId": "Eliminaunaregoladellavelocita'",
        "parameters": [
          {
            "name": "ruleId",
            "in": "path",
            "description": "Id della regola da eliminare",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Regola eliminata correttamente",
            "headers": {},
            "content": {}
          },
          "401": {
            "description": "Non si dispongono dei permessi per scrivere regole di velocita'",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Velox/Rule/GetAllRules": {
      "get": {
        "tags": [
          "VeloxRule"
        ],
        "summary": "Esegue una ricerca per prendere tutte le regole della velocita'",
        "description": "",
        "operationId": "Esegueunaricercaperprenderetutteleregoledellavelocita'",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista con tutte le regole della velocita'",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.VeloxRule.Dto.VeloxRuleDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Velox/Rule/{ruleId}/active": {
      "put": {
        "tags": [
          "VeloxRule"
        ],
        "summary": "Setta lo stato di attiva o disattivo di una regola della velocita'",
        "description": "",
        "operationId": "Settalostatodiattivaodisattivodiunaregoladellavelocita'",
        "parameters": [
          {
            "name": "ruleId",
            "in": "path",
            "description": "Id della regola",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "True se la regola e' da attivare - false se la regola e' da disattivare",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "boolean",
                "description": "True se la regola e' da attivare - false se la regola e' da disattivare"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Lo stato della regola e' stato impostato correttamente",
            "headers": {},
            "content": {}
          },
          "401": {
            "description": "Non si dispongono dei permessi per scrivere regole di velocita'",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Velox/Rule/CountRules/{ruleTypeId}": {
      "get": {
        "tags": [
          "VeloxRule"
        ],
        "summary": "Conta il numero di regole della vlocita'",
        "description": "",
        "operationId": "Contailnumerodiregoledellavlocita'",
        "parameters": [
          {
            "name": "ruleTypeId",
            "in": "path",
            "description": "Tipologia di regole per cui effettuare il conteggio",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Numero di regole per la tipologia selezionata",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/System.Threading.Tasks.Task1System.Int32System.Private.CoreLibVersion4.0.0.0CultureneutralPublicKeyToken7cec85d7bea7798e"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Velox/RuleTypes/GetAll": {
      "get": {
        "tags": [
          "VeloxRuleTypes"
        ],
        "summary": "Esegue una ricerca per ottenere tutti i tipi di regola della velocita'",
        "description": "",
        "operationId": "Esegueunaricercaperotteneretuttiitipidiregoladellavelocita'",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista dei tipi di regola della velocita'",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.VeloxRuleTypesService.Dto.VeloxRuleTypeDto"
                  },
                  "description": ""
                }
              }
            }
          },
          "401": {
            "description": "Se non si dispongono dei permessi per leggere le regole della velocita'",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Version": {
      "get": {
        "tags": [
          "Version"
        ],
        "summary": "Prende il numero di versione del progetto",
        "description": "",
        "operationId": "Prendeilnumerodiversionedelprogetto",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return del numero di versione del progetto",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/Ztl/Authorization/GetCountUnhandledExternalPermits": {
      "get": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Conta le Autorizzazioni Esterne che non sono state ancora gestite.",
        "description": "",
        "operationId": "ContaleAutorizzazioniEsternechenonsonostateancoragestite.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "I totali delle Autorizzazioni Esterne non gestite, divisi per Stato.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.ExternalAuthorizationsStatusCount"
                  },
                  "description": ""
                }
              }
            }
          },
          "401": {
            "description": "Se l'Utente non ha il permesso di accedere alle Autorizzazioni Esterne.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/permits/GetDistinctPlaceDescriptionList": {
      "get": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Restituisce l'elenco distinto delle placeDescriptions.1",
        "description": "",
        "operationId": "Restituiscel'elencodistintodelleplaceDescriptions.1",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Authorization/{permitId}/details": {
      "get": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Richiama il dettaglio di un'Autorizzazione.",
        "description": "",
        "operationId": "Richiamaildettagliodiun'Autorizzazione.",
        "parameters": [
          {
            "name": "permitId",
            "in": "path",
            "description": "ID dell'Autorizzazione.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.PermitDetailDto"
                }
              }
            }
          },
          "401": {
            "description": "Se l'Utente non ha il permesso di lettura per le Autorizzazioni.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/permits/{permitId}/details": {
      "get": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Richiama il dettaglio di un'Autorizzazione.1",
        "description": "",
        "operationId": "Richiamaildettagliodiun'Autorizzazione.1",
        "parameters": [
          {
            "name": "permitId",
            "in": "path",
            "description": "ID dell'Autorizzazione.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.PermitDetailDto"
                }
              }
            }
          },
          "401": {
            "description": "Se l'Utente non ha il permesso di lettura per le Autorizzazioni.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Authorization/AddOrUpdateAuthorization": {
      "post": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Crea o modifica un'Autorizzazione.",
        "description": "",
        "operationId": "Creaomodificaun'Autorizzazione.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Dati dell'Autorizzazione da creare o modificare.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.AuthorizationRequestDto"
                  },
                  {
                    "description": "Dati dell'Autorizzazione da creare o modificare."
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.PermitModificationResponseDto"
                  },
                  "description": ""
                }
              }
            }
          },
          "401": {
            "description": "Se l'Utente non ha il permesso di scrittura per le Autorizzazioni.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/permits/{id}": {
      "get": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Recupera i dettagli della versione corrente di un'Autorizzazione.1",
        "description": "",
        "operationId": "Recuperaidettaglidellaversionecorrentediun'Autorizzazione.1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID dell'Autorizzazione.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.PermitVersionDto"
                }
              }
            }
          },
          "401": {
            "description": "Se l'Utente non ha il permesso di lettura per le Autorizzazioni.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/permits/ExportXlsx": {
      "post": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Genera un file '.zip' contenente un file '.xslx' che riporta i dati delle Autorizzazioni specificate.1",
        "description": "",
        "operationId": "Generaunfile'.zip'contenenteunfile'.xslx'cheriportaidatidelleAutorizzazionispecificate.1",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Lista di ID delle Autorizzazioni da esportare nel file.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64"
                },
                "description": "Lista di ID delle Autorizzazioni da esportare nel file."
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {}
          },
          "400": {
            "description": "La lista di ID è nulla.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/permits/GetExternalAuthorizations": {
      "post": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Esegue una ricerca delle Autorizzazioni Esterne.1",
        "description": "",
        "operationId": "EsegueunaricercadelleAutorizzazioniEsterne.1",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Filtri di ricerca.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.GetPermissionsRequestDto"
                  },
                  {
                    "description": "Filtri di ricerca."
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.ExternalAuthorizationDto"
                  },
                  "description": ""
                }
              }
            }
          },
          "401": {
            "description": "Se l'Utente non ha il permesso di accesso alle Autorizzazioni Esterne.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Authorization/{permitId}/printings": {
      "post": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Marca un'Autorizzazione come 'stampata'.",
        "description": "",
        "operationId": "Marcaun'Autorizzazionecome'stampata'.",
        "parameters": [
          {
            "name": "permitId",
            "in": "path",
            "description": "ID dell'Autorizzazione.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/permits/{permitId}/getChildrenOrParent": {
      "get": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Recupera le Autorizzazioni 'figlie' dei rinnovi per scadenza eseguiti su un'Autorizzazione.1",
        "description": "",
        "operationId": "RecuperaleAutorizzazioni'figlie'deirinnoviperscadenzaeseguitisuun'Autorizzazione.1",
        "parameters": [
          {
            "name": "permitId",
            "in": "path",
            "description": "ID dell'Autorizzazione.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.ZtlRenewService.Dto.ChildrenParent"
                }
              }
            }
          },
          "401": {
            "description": "Se l'Utente non ha il permesso di lettura per le Autorizzazioni.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/permits/{permitId}/print-templates": {
      "get": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Recupera gli identificativi dei Template ti stampa per un'Autorizzazione.1",
        "description": "",
        "operationId": "RecuperagliidentificativideiTemplatetistampaperun'Autorizzazione.1",
        "parameters": [
          {
            "name": "permitId",
            "in": "path",
            "description": "ID dell'Autorizzazione.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/permits/{permitId}/payments": {
      "get": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Recupera i pagamenti associati a un'Autorizzazione.1",
        "description": "",
        "operationId": "Recuperaipagamentiassociatiaun'Autorizzazione.1",
        "parameters": [
          {
            "name": "permitId",
            "in": "path",
            "description": "ID dell'Autorizzazione.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "description": ""
                }
              }
            }
          },
          "401": {
            "description": "Se l'Utente non ha il permesso di accesso alla contabilità delle Autorizzazioni.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Authorization/GetAuthorizations": {
      "post": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Esegue una ricerca delle Autorizzazioni.",
        "description": "",
        "operationId": "EsegueunaricercadelleAutorizzazioni.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Filtri di ricerca.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.GetPermissionsRequestDto"
                  },
                  {
                    "description": "Filtri di ricerca."
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.AuthorizationDto"
                  },
                  "description": ""
                }
              }
            }
          },
          "401": {
            "description": "Se l'Utente non ha il permesso di lettura per le Autorizzazioni.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/permits/GetAuthorizations": {
      "post": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Esegue una ricerca delle Autorizzazioni.1",
        "description": "",
        "operationId": "EsegueunaricercadelleAutorizzazioni.1",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Filtri di ricerca.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.GetPermissionsRequestDto"
                  },
                  {
                    "description": "Filtri di ricerca."
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.AuthorizationDto"
                  },
                  "description": ""
                }
              }
            }
          },
          "401": {
            "description": "Se l'Utente non ha il permesso di lettura per le Autorizzazioni.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Authorization/ExportExternalXlsx": {
      "post": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Genera un file '.zip' contenente un file '.xslx' che riporta i dati delle Autorizzazioni Esterne specificate.",
        "description": "",
        "operationId": "Generaunfile'.zip'contenenteunfile'.xslx'cheriportaidatidelleAutorizzazioniEsternespecificate.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Lista di ID delle Autorizzazioni Esterne da esportare nel file.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64"
                },
                "description": "Lista di ID delle Autorizzazioni Esterne da esportare nel file."
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {}
          },
          "400": {
            "description": "La lista di ID è nulla o vuota.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Authorization/ExportXlsx": {
      "post": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Genera un file '.zip' contenente un file '.xslx' che riporta i dati delle Autorizzazioni specificate.",
        "description": "",
        "operationId": "Generaunfile'.zip'contenenteunfile'.xslx'cheriportaidatidelleAutorizzazionispecificate.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Lista di ID delle Autorizzazioni da esportare nel file.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64"
                },
                "description": "Lista di ID delle Autorizzazioni da esportare nel file."
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {}
          },
          "400": {
            "description": "La lista di ID è nulla.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Authorization/GetExternalAuthorizations": {
      "post": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Esegue una ricerca delle Autorizzazioni Esterne.",
        "description": "",
        "operationId": "EsegueunaricercadelleAutorizzazioniEsterne.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Filtri di ricerca.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.GetPermissionsRequestDto"
                  },
                  {
                    "description": "Filtri di ricerca."
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.ExternalAuthorizationDto"
                  },
                  "description": ""
                }
              }
            }
          },
          "401": {
            "description": "Se l'Utente non ha il permesso di accesso alle Autorizzazioni Esterne.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Authorization/GetDistinctPlaceDescriptionList": {
      "get": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Restituisce l'elenco distinto delle placeDescriptions.",
        "description": "",
        "operationId": "Restituiscel'elencodistintodelleplaceDescriptions.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Authorization/{permitId}/getChildrenOrParent": {
      "get": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Recupera le Autorizzazioni 'figlie' dei rinnovi per scadenza eseguiti su un'Autorizzazione.",
        "description": "",
        "operationId": "RecuperaleAutorizzazioni'figlie'deirinnoviperscadenzaeseguitisuun'Autorizzazione.",
        "parameters": [
          {
            "name": "permitId",
            "in": "path",
            "description": "ID dell'Autorizzazione.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.ZtlRenewService.Dto.ChildrenParent"
                }
              }
            }
          },
          "401": {
            "description": "Se l'Utente non ha il permesso di lettura per le Autorizzazioni.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/permits/vehicle-data/{plate}": {
      "get": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Recupera i dati di un Veicolo autorizzato a partire dalla sua targa.1",
        "description": "",
        "operationId": "RecuperaidatidiunVeicoloautorizzatoapartiredallasuatarga.1",
        "parameters": [
          {
            "name": "plate",
            "in": "path",
            "description": "Targa del veicolo.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.RegisteredVehicleDto"
                    },
                    {
                      "description": "Veicolo associato a un'Autorizzazione."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Se il Veicolo non è stato trovato.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Authorization/GetAllStates": {
      "get": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Recupera tutti gli Stati che un'Autorizzazione può assumere.",
        "description": "",
        "operationId": "RecuperatuttigliStaticheun'Autorizzazionepuòassumere.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/permits/AddOrUpdateAuthorization": {
      "post": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Crea o modifica un'Autorizzazione.1",
        "description": "",
        "operationId": "Creaomodificaun'Autorizzazione.1",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Dati dell'Autorizzazione da creare o modificare.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.AuthorizationRequestDto"
                  },
                  {
                    "description": "Dati dell'Autorizzazione da creare o modificare."
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.PermitModificationResponseDto"
                  },
                  "description": ""
                }
              }
            }
          },
          "401": {
            "description": "Se l'Utente non ha il permesso di scrittura per le Autorizzazioni.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Authorization/{permitId}/payments": {
      "get": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Recupera i pagamenti associati a un'Autorizzazione.",
        "description": "",
        "operationId": "Recuperaipagamentiassociatiaun'Autorizzazione.",
        "parameters": [
          {
            "name": "permitId",
            "in": "path",
            "description": "ID dell'Autorizzazione.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "description": ""
                }
              }
            }
          },
          "401": {
            "description": "Se l'Utente non ha il permesso di accesso alla contabilità delle Autorizzazioni.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/permits/ExportExternalXlsx": {
      "post": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Genera un file '.zip' contenente un file '.xslx' che riporta i dati delle Autorizzazioni Esterne specificate.1",
        "description": "",
        "operationId": "Generaunfile'.zip'contenenteunfile'.xslx'cheriportaidatidelleAutorizzazioniEsternespecificate.1",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Lista di ID delle Autorizzazioni Esterne da esportare nel file.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64"
                },
                "description": "Lista di ID delle Autorizzazioni Esterne da esportare nel file."
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {}
          },
          "400": {
            "description": "La lista di ID è nulla o vuota.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/permits/GetCountUnhandledExternalPermits": {
      "get": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Conta le Autorizzazioni Esterne che non sono state ancora gestite.1",
        "description": "",
        "operationId": "ContaleAutorizzazioniEsternechenonsonostateancoragestite.1",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "I totali delle Autorizzazioni Esterne non gestite, divisi per Stato.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.ExternalAuthorizationsStatusCount"
                  },
                  "description": ""
                }
              }
            }
          },
          "401": {
            "description": "Se l'Utente non ha il permesso di accedere alle Autorizzazioni Esterne.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/permits/{permitId}/printings": {
      "post": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Marca un'Autorizzazione come 'stampata'.1",
        "description": "",
        "operationId": "Marcaun'Autorizzazionecome'stampata'.1",
        "parameters": [
          {
            "name": "permitId",
            "in": "path",
            "description": "ID dell'Autorizzazione.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Authorization/vehicle-data/{plate}": {
      "get": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Recupera i dati di un Veicolo autorizzato a partire dalla sua targa.",
        "description": "",
        "operationId": "RecuperaidatidiunVeicoloautorizzatoapartiredallasuatarga.",
        "parameters": [
          {
            "name": "plate",
            "in": "path",
            "description": "Targa del veicolo.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.RegisteredVehicleDto"
                    },
                    {
                      "description": "Veicolo associato a un'Autorizzazione."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Se il Veicolo non è stato trovato.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/permits/GetAllStates": {
      "get": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Recupera tutti gli Stati che un'Autorizzazione può assumere.1",
        "description": "",
        "operationId": "RecuperatuttigliStaticheun'Autorizzazionepuòassumere.1",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Authorization/{id}": {
      "get": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Recupera i dettagli della versione corrente di un'Autorizzazione.",
        "description": "",
        "operationId": "Recuperaidettaglidellaversionecorrentediun'Autorizzazione.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID dell'Autorizzazione.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.PermitVersionDto"
                }
              }
            }
          },
          "401": {
            "description": "Se l'Utente non ha il permesso di lettura per le Autorizzazioni.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Authorization/{permitId}/print-templates": {
      "get": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Recupera gli identificativi dei Template ti stampa per un'Autorizzazione.",
        "description": "",
        "operationId": "RecuperagliidentificativideiTemplatetistampaperun'Autorizzazione.",
        "parameters": [
          {
            "name": "permitId",
            "in": "path",
            "description": "ID dell'Autorizzazione.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Authorization/revocations": {
      "post": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Revoca un'Autorizzazione. L'Autorizzazione sarà valida fino alla data di revoca compresa.",
        "description": "",
        "operationId": "Revocaun'Autorizzazione.L'Autorizzazionesaràvalidafinoalladatadirevocacompresa.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Dati della revoca.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.RevokePermitDto"
                  },
                  {
                    "description": "Dati della revoca."
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {}
          },
          "401": {
            "description": "Se l'Utente non ha il permesso di scrittura per le Autorizzazioni.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Authorization/ChangeAuthorizationStatus": {
      "post": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Cambia lo stato di un'Autorizzazione.",
        "description": "",
        "operationId": "Cambialostatodiun'Autorizzazione.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Dati del cambio di stato.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.AuthorizationStatusDto"
                  },
                  {
                    "description": "Dati del cambio di stato."
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {}
          },
          "401": {
            "description": "Se l'Utente non ha il permesso di scrittura per le Autorizzazioni.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Authorization/ChangeAuthorizationsStatus": {
      "post": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Cambia lo stato di più Autorizzazioni.",
        "description": "",
        "operationId": "CambialostatodipiùAutorizzazioni.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Dati dei cambio di stato.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.AuthorizationStatusDto"
                },
                "description": "Dati dei cambio di stato."
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {}
          },
          "401": {
            "description": "Se l'Utente non ha il permesso di scrittura per le Autorizzazioni.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/permits/ChangeAuthorizationsStatus": {
      "post": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Cambia lo stato di più Autorizzazioni.1",
        "description": "",
        "operationId": "CambialostatodipiùAutorizzazioni.1",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Dati dei cambio di stato.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.AuthorizationStatusDto"
                },
                "description": "Dati dei cambio di stato."
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {}
          },
          "401": {
            "description": "Se l'Utente non ha il permesso di scrittura per le Autorizzazioni.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/permits/{permitId}": {
      "delete": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Elimina un'Autorizzazione. L'Autorizzazione non sarà più valida da subito, ed eventuali transiti non autorizzati saranno considerati come sanzionabili.1",
        "description": "",
        "operationId": "Eliminaun'Autorizzazione.L'Autorizzazionenonsaràpiùvalidadasubito,edeventualitransitinonautorizzatisarannoconsideraticomesanzionabili.1",
        "parameters": [
          {
            "name": "permitId",
            "in": "path",
            "description": "ID dell'Autorizzazione.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {}
          },
          "401": {
            "description": "Se l'Utente non ha il permesso di scrittura per le Autorizzazioni.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Authorization/Historic-details": {
      "post": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Recupera lo Storico di un'Autorizzazione a partire da una specifica Versione.",
        "description": "",
        "operationId": "RecuperaloStoricodiun'AutorizzazioneapartiredaunaspecificaVersione.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Dati della Versione dell'Autorizzazione.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.VersionDetails"
                  },
                  {
                    "description": "Dati della Versione dell'Autorizzazione."
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.PermitDetailDto"
                }
              }
            }
          },
          "401": {
            "description": "Se l'Utente non ha il permesso di lettura per le Autorizzazioni.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Authorization/massive-renewal": {
      "post": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Esegue il rinnovo massivo di più Autorizzazioni.",
        "description": "",
        "operationId": "EsegueilrinnovomassivodipiùAutorizzazioni.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Specifiche del rinnovo massivo.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.MassivePermitRenewalRequest"
                  },
                  {
                    "description": "Specifiche del rinnovo massivo."
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.AuthorizationDto"
                  },
                  "description": ""
                }
              }
            }
          },
          "401": {
            "description": "Se l'Utente non ha il permesso di scrittura per le Autorizzazioni.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Authorization/vehicle-edit-type": {
      "get": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Recupera le motivazioni per modificare un Veicolo associato a un'Autorizzazione.",
        "description": "",
        "operationId": "RecuperalemotivazionipermodificareunVeicoloassociatoaun'Autorizzazione.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.VehicleEditReasonTypeDto"
                  },
                  "description": ""
                }
              }
            }
          },
          "401": {
            "description": "Se l'Utente non ha il permesso di lettura per le Autorizzazioni.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/permits/{plate}/plate-associated-permit": {
      "get": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Recupera le Autorizzazioni associate a una targa.1",
        "description": "",
        "operationId": "RecuperaleAutorizzazioniassociateaunatarga.1",
        "parameters": [
          {
            "name": "plate",
            "in": "path",
            "description": "Targa per la quale ricercare le Autorizzazioni.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.AuthorizationDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Authorization/serial-number/{serialNumber}": {
      "get": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "ApiZtlAuthorizationSerialNumber_GET",
        "description": "",
        "operationId": "ApiZtlAuthorizationSerialNumber_GET",
        "parameters": [
          {
            "name": "serialNumber",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Authorization/duplicate": {
      "post": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Crea delle autorizzazioni duplicate.",
        "description": "",
        "operationId": "Creadelleautorizzazioniduplicate.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Dati delle autorizzazioni da duplicare.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.AuthorizationDuplicateRequestDto"
                  },
                  {
                    "description": "Dati delle autorizzazioni da duplicare."
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "400": {
            "description": "Bad Request",
            "headers": {},
            "content": {}
          },
          "500": {
            "description": "Server Error",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/permits/revocations": {
      "post": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Revoca un'Autorizzazione. L'Autorizzazione sarà valida fino alla data di revoca compresa.1",
        "description": "",
        "operationId": "Revocaun'Autorizzazione.L'Autorizzazionesaràvalidafinoalladatadirevocacompresa.1",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Dati della revoca.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.RevokePermitDto"
                  },
                  {
                    "description": "Dati della revoca."
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {}
          },
          "401": {
            "description": "Se l'Utente non ha il permesso di scrittura per le Autorizzazioni.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/permits/Historic-details": {
      "post": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Recupera lo Storico di un'Autorizzazione a partire da una specifica Versione.1",
        "description": "",
        "operationId": "RecuperaloStoricodiun'AutorizzazioneapartiredaunaspecificaVersione.1",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Dati della Versione dell'Autorizzazione.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.VersionDetails"
                  },
                  {
                    "description": "Dati della Versione dell'Autorizzazione."
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.PermitDetailDto"
                }
              }
            }
          },
          "401": {
            "description": "Se l'Utente non ha il permesso di lettura per le Autorizzazioni.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Authorization/{id}/history": {
      "get": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Recupera lo Storico completo di un'Autorizzazione.",
        "description": "",
        "operationId": "RecuperaloStoricocompletodiun'Autorizzazione.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID dell'Autorizzazione.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.AuthorizationVersionDto"
                  },
                  "description": ""
                }
              }
            }
          },
          "401": {
            "description": "Se l'Utente non ha il permesso di lettura per le Autorizzazioni.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/permits/{id}/history": {
      "get": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Recupera lo Storico completo di un'Autorizzazione.1",
        "description": "",
        "operationId": "RecuperaloStoricocompletodiun'Autorizzazione.1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID dell'Autorizzazione.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.AuthorizationVersionDto"
                  },
                  "description": ""
                }
              }
            }
          },
          "401": {
            "description": "Se l'Utente non ha il permesso di lettura per le Autorizzazioni.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Authorization/{permitId}/renewal": {
      "post": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Esegue il rinnovo di un'Autorizzazione.",
        "description": "",
        "operationId": "Esegueilrinnovodiun'Autorizzazione.",
        "parameters": [
          {
            "name": "permitId",
            "in": "path",
            "description": "ID dell'Autorizzazione.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Specifiche del rinnovo.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.PermitRenewalRequest"
                  },
                  {
                    "description": "Specifiche del rinnovo."
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.AuthorizationDto"
                  },
                  "description": ""
                }
              }
            }
          },
          "401": {
            "description": "Se l'Utente non ha il permesso di scrittura per le Autorizzazioni.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/permits/massive-renewal": {
      "post": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Esegue il rinnovo massivo di più Autorizzazioni.1",
        "description": "",
        "operationId": "EsegueilrinnovomassivodipiùAutorizzazioni.1",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Specifiche del rinnovo massivo.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.MassivePermitRenewalRequest"
                  },
                  {
                    "description": "Specifiche del rinnovo massivo."
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.AuthorizationDto"
                  },
                  "description": ""
                }
              }
            }
          },
          "401": {
            "description": "Se l'Utente non ha il permesso di scrittura per le Autorizzazioni.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/permits/FrontOfficePermitToHandle": {
      "get": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Conta le Istanze dallo Sportello che non sono state ancora gestite.1",
        "description": "",
        "operationId": "ContaleIstanzedalloSportellochenonsonostateancoragestite.1",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/permits/ChangeAuthorizationStatus": {
      "post": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Cambia lo stato di un'Autorizzazione.1",
        "description": "",
        "operationId": "Cambialostatodiun'Autorizzazione.1",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Dati del cambio di stato.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.AuthorizationStatusDto"
                  },
                  {
                    "description": "Dati del cambio di stato."
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {}
          },
          "401": {
            "description": "Se l'Utente non ha il permesso di scrittura per le Autorizzazioni.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Authorization/{permitId}": {
      "delete": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Elimina un'Autorizzazione. L'Autorizzazione non sarà più valida da subito, ed eventuali transiti non autorizzati saranno considerati come sanzionabili.",
        "description": "",
        "operationId": "Eliminaun'Autorizzazione.L'Autorizzazionenonsaràpiùvalidadasubito,edeventualitransitinonautorizzatisarannoconsideraticomesanzionabili.",
        "parameters": [
          {
            "name": "permitId",
            "in": "path",
            "description": "ID dell'Autorizzazione.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {}
          },
          "401": {
            "description": "Se l'Utente non ha il permesso di scrittura per le Autorizzazioni.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/permits/serial-number/{serialNumber}": {
      "get": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "ApiZtlPermitsSerialNumberBySerialNumber_GET",
        "description": "",
        "operationId": "ApiZtlPermitsSerialNumberBySerialNumber_GET",
        "parameters": [
          {
            "name": "serialNumber",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/permits/{permitId}/renewal": {
      "post": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Esegue il rinnovo di un'Autorizzazione.1",
        "description": "",
        "operationId": "Esegueilrinnovodiun'Autorizzazione.1",
        "parameters": [
          {
            "name": "permitId",
            "in": "path",
            "description": "ID dell'Autorizzazione.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Specifiche del rinnovo.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.PermitRenewalRequest"
                  },
                  {
                    "description": "Specifiche del rinnovo."
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.AuthorizationDto"
                  },
                  "description": ""
                }
              }
            }
          },
          "401": {
            "description": "Se l'Utente non ha il permesso di scrittura per le Autorizzazioni.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/permits/vehicle-edit-type": {
      "get": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Recupera le motivazioni per modificare un Veicolo associato a un'Autorizzazione.1",
        "description": "",
        "operationId": "RecuperalemotivazionipermodificareunVeicoloassociatoaun'Autorizzazione.1",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.VehicleEditReasonTypeDto"
                  },
                  "description": ""
                }
              }
            }
          },
          "401": {
            "description": "Se l'Utente non ha il permesso di lettura per le Autorizzazioni.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Authorization/{plate}/plate-associated-permit": {
      "get": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Recupera le Autorizzazioni associate a una targa.",
        "description": "",
        "operationId": "RecuperaleAutorizzazioniassociateaunatarga.",
        "parameters": [
          {
            "name": "plate",
            "in": "path",
            "description": "Targa per la quale ricercare le Autorizzazioni.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.AuthorizationDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Authorization/FrontOfficePermitToHandle": {
      "get": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Conta le Istanze dallo Sportello che non sono state ancora gestite.",
        "description": "",
        "operationId": "ContaleIstanzedalloSportellochenonsonostateancoragestite.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/permits/duplicate": {
      "post": {
        "tags": [
          "ZtlAuthorization"
        ],
        "summary": "Crea delle autorizzazioni duplicate.1",
        "description": "",
        "operationId": "Creadelleautorizzazioniduplicate.1",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Dati delle autorizzazioni da duplicare.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.AuthorizationDuplicateRequestDto"
                  },
                  {
                    "description": "Dati delle autorizzazioni da duplicare."
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          },
          "400": {
            "description": "Bad Request",
            "headers": {},
            "content": {}
          },
          "500": {
            "description": "Server Error",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/authorizationExtension": {
      "get": {
        "tags": [
          "ZtlAuthorizationExtension"
        ],
        "summary": "ApiZtlAuthorizationExtension_GET",
        "description": "",
        "operationId": "ApiZtlAuthorizationExtension_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorizationExtension.Dto.AuthorizationExtensionDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "ZtlAuthorizationExtension"
        ],
        "summary": "ApiZtlAuthorizationExtension_POST",
        "description": "",
        "operationId": "ApiZtlAuthorizationExtension_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorizationExtension.Dto.AuthorizationExtensionDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "put": {
        "tags": [
          "ZtlAuthorizationExtension"
        ],
        "summary": "ApiZtlAuthorizationExtension_PUT",
        "description": "",
        "operationId": "ApiZtlAuthorizationExtension_PUT",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorizationExtension.Dto.AuthorizationExtensionDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/authorizationExtension/{extensionId}": {
      "get": {
        "tags": [
          "ZtlAuthorizationExtension"
        ],
        "summary": "ApiZtlAuthorizationExtension_GET",
        "description": "",
        "operationId": "GetApiZtlAuthorizationExtension_GET",
        "parameters": [
          {
            "name": "extensionId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorizationExtension.Dto.AuthorizationExtensionDto"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "ZtlAuthorizationExtension"
        ],
        "summary": "ApiZtlAuthorizationExtension_DELETE",
        "description": "",
        "operationId": "ApiZtlAuthorizationExtension_DELETE",
        "parameters": [
          {
            "name": "extensionId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/AuthorizationType/duration-constraints": {
      "get": {
        "tags": [
          "ZtlAuthorizationType"
        ],
        "summary": "ApiZtlAuthorizationTypeDurationConstraints_GET",
        "description": "",
        "operationId": "ApiZtlAuthorizationTypeDurationConstraints_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/AuthorizationType": {
      "post": {
        "tags": [
          "ZtlAuthorizationType"
        ],
        "summary": "ApiZtlAuthorizationType_POST",
        "description": "",
        "operationId": "ApiZtlAuthorizationType_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorizationType.Dto.ZtlAuthorizationTypeDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "get": {
        "tags": [
          "ZtlAuthorizationType"
        ],
        "summary": "ApiZtlAuthorizationType_GET",
        "description": "",
        "operationId": "ApiZtlAuthorizationType_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorizationType.Dto.ZtlAuthorizationTypeDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/AuthorizationType/{id}": {
      "get": {
        "tags": [
          "ZtlAuthorizationType"
        ],
        "summary": "ApiZtlAuthorizationTypeById_GET",
        "description": "",
        "operationId": "ApiZtlAuthorizationTypeById_GET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorizationType.Dto.ZtlAuthorizationTypeDto"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "put": {
        "tags": [
          "ZtlAuthorizationType"
        ],
        "summary": "ApiZtlAuthorizationTypeById_PUT",
        "description": "",
        "operationId": "ApiZtlAuthorizationTypeById_PUT",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorizationType.Dto.ZtlAuthorizationTypeDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "ZtlAuthorizationType"
        ],
        "summary": "ApiZtlAuthorizationTypeById_DELETE",
        "description": "",
        "operationId": "ApiZtlAuthorizationTypeById_DELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/AuthorizationType/usages": {
      "get": {
        "tags": [
          "ZtlAuthorizationType"
        ],
        "summary": "ApiZtlAuthorizationTypeUsages_GET",
        "description": "",
        "operationId": "ApiZtlAuthorizationTypeUsages_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/AuthorizationType/external-types": {
      "get": {
        "tags": [
          "ZtlAuthorizationType"
        ],
        "summary": "ApiZtlAuthorizationTypeExternalTypes_GET",
        "description": "",
        "operationId": "ApiZtlAuthorizationTypeExternalTypes_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorizationType.Dto.ZtlAuthorizationTypeDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/AuthorizationType/available-types": {
      "get": {
        "tags": [
          "ZtlAuthorizationType"
        ],
        "summary": "ApiZtlAuthorizationTypeAvailableTypes_GET",
        "description": "",
        "operationId": "ApiZtlAuthorizationTypeAvailableTypes_GET",
        "parameters": [
          {
            "name": "PermitId",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "OperationType",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "IncludeInactive",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorizationType.Dto.ZtlAuthorizationTypeDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/ZtlAuthorizedTransit/GetTransitAuthorizedList/{ztlTransitId}": {
      "get": {
        "tags": [
          "ZtlAuthorizedTransit"
        ],
        "summary": "ApiZtlZtlAuthorizedTransitGetTransitAuthorizedList_GET",
        "description": "",
        "operationId": "ApiZtlZtlAuthorizedTransitGetTransitAuthorizedList_GET",
        "parameters": [
          {
            "name": "ztlTransitId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorizedTransit.Dto.ZtlAuthorizedTransitDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Blacklist/AllBlacklist": {
      "get": {
        "tags": [
          "ZtlBlacklist"
        ],
        "summary": "Effettua una ricerca di tutte le Blacklist.",
        "description": "",
        "operationId": "EffettuaunaricercaditutteleBlacklist.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Blacklist trovate con successo.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Blacklist/BlacklistDetailById/{blacklistId}": {
      "get": {
        "tags": [
          "ZtlBlacklist"
        ],
        "summary": "Recupera i dettagli di una Blacklist.",
        "description": "",
        "operationId": "RecuperaidettaglidiunaBlacklist.",
        "parameters": [
          {
            "name": "blacklistId",
            "in": "path",
            "description": "Id della Blacklist.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dettagli della Blacklist trovati con successo.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Blacklist/DeleteBlacklistAsync": {
      "post": {
        "tags": [
          "ZtlBlacklist"
        ],
        "summary": "Elimina una Blacklist.",
        "description": "",
        "operationId": "EliminaunaBlacklist.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Id della Blacklist.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "description": "Id della Blacklist.",
                "format": "int32"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Blacklist/AddOrUpdateBlacklistAsync": {
      "post": {
        "tags": [
          "ZtlBlacklist"
        ],
        "summary": "Crea o modifica una Blacklist.",
        "description": "",
        "operationId": "CreaomodificaunaBlacklist.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Dati con cui creare o modificare la Blacklist",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlBlacklist.Dto.ZtlBlacklistDto"
                  },
                  {
                    "description": "Dati con cui creare o modificare la Blacklist"
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Common/GetDayDictionary": {
      "get": {
        "tags": [
          "ZtlCommon"
        ],
        "summary": "ApiZtlCommonGetDayDictionary_GET",
        "description": "",
        "operationId": "ApiZtlCommonGetDayDictionary_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Api.Controllers.ZtlCommonControllerZTL_DayDictionaryDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Common/GetRevalidateStatus": {
      "get": {
        "tags": [
          "ZtlCommon"
        ],
        "summary": "ApiZtlCommonGetRevalidateStatus_GET",
        "description": "",
        "operationId": "ApiZtlCommonGetRevalidateStatus_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Dashboard/global-status": {
      "get": {
        "tags": [
          "ZtlDashboard"
        ],
        "summary": "ApiZtlDashboardGlobalStatus_GET",
        "description": "",
        "operationId": "ApiZtlDashboardGlobalStatus_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlSettings.Dto.ZTL_ZtlZoneGateCameraDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/front-office-application/attachment/{guid}": {
      "get": {
        "tags": [
          "ZtlFrontOfficeApplication"
        ],
        "summary": "Scarica un file allegato ad un'istanza presentata dallo sportello telematico.",
        "description": "",
        "operationId": "Scaricaunfileallegatoadun'istanzapresentatadallosportellotelematico.",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "description": "GUID del file.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "File dell'allegato.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/front-office-application/{applicationId}": {
      "put": {
        "tags": [
          "ZtlFrontOfficeApplication"
        ],
        "summary": "Modifica un'istanza presentata dallo sportello telematico.",
        "description": "",
        "operationId": "Modificaun'istanzapresentatadallosportellotelematico.",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "ID dell'istanza.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Valori da modificare dell'istanza.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlFrontOfficeApplication.Dto.UpdateFrontOfficeApplicationDto"
                  },
                  {
                    "description": "Valori da modificare dell'istanza."
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Istanza modificata.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.ZtlFrontOfficeApplication.Dto.ZtlFrontOfficeApplicationUpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "In caso di errori nella richiesta.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/front-office-application/associate-permit": {
      "post": {
        "tags": [
          "ZtlFrontOfficeApplication"
        ],
        "summary": "ApiZtlFrontOfficeApplicationAssociatePermit_POST",
        "description": "",
        "operationId": "ApiZtlFrontOfficeApplicationAssociatePermit_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlFrontOfficeApplication.Dto.ZtlFrontOfficeAplicationAssociatePermitDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/front-office-application": {
      "get": {
        "tags": [
          "ZtlFrontOfficeApplication"
        ],
        "summary": "Ricerca filtrata delle istanze presentate dallo sportello telematico.",
        "description": "",
        "operationId": "Ricercafiltratadelleistanzepresentatedallosportellotelematico.",
        "parameters": [
          {
            "name": "DateFrom",
            "in": "query",
            "description": "Filtra le istanze con data di protocollazione a partire da a questa data.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "description": "Filtra le istanze con data di protocollazione fino a questa data.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Waiting",
            "in": "query",
            "description": "Filtra per istanze in attesa di approvazione.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Approved",
            "in": "query",
            "description": "Filtra per istanze approvate.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Rejected",
            "in": "query",
            "description": "Filtra per istanze rifiutate.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ExpiredAdditionRequested",
            "in": "query",
            "description": "Filtra per istanze in attesa di integrazione scadute",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "AdditionsRequested",
            "in": "query",
            "description": "Filtra per istanze in attesa di integrazione.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "WithAdditions",
            "in": "query",
            "description": "Filtra per istanze con integrazioni associate.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Notified",
            "in": "query",
            "description": "Filtra per istanze notificate.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ApplicationTypes",
            "in": "query",
            "description": "Filtra per tipologie di istanza.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "ProtocolNumber",
            "in": "query",
            "description": "Numero di protocollo.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ProtocolYear",
            "in": "query",
            "description": "Anno di protocollo.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FiscalCode",
            "in": "query",
            "description": "Codice Fiscale del richiedente.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Istanze ottenute.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlFrontOfficeApplication.ZtlFrontOfficeApplicationDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/front-office-application/{applicationId}/preview": {
      "get": {
        "tags": [
          "ZtlFrontOfficeApplication"
        ],
        "summary": "Genera i dati dell'Autorizzazione ZTL che verrebbe creata a partire da un'istanza presentata dallo sportello telematico.",
        "description": "",
        "operationId": "Generaidatidell'AutorizzazioneZTLcheverrebbecreataapartiredaun'istanzapresentatadallosportellotelematico.",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "ID dell'istanza.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dati dell'Autorizzazione.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.ZtlFrontOfficeApplication.Dto.ZtlFrontOfficeAuthorizationRequestDto"
                }
              }
            }
          },
          "400": {
            "description": "In caso di errori nella richiesta.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/front-office-application/application-types": {
      "get": {
        "tags": [
          "ZtlFrontOfficeApplication"
        ],
        "summary": "Recupera tutte le tipologie di istanza.",
        "description": "",
        "operationId": "Recuperatutteletipologiediistanza.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Elenco delle tipologie di istanza.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlFrontOfficeApplication.Dto.ZtlFrontOfficeApplicationTypeDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/front-office-notes/notes": {
      "post": {
        "tags": [
          "ZtlFrontOfficeNotes"
        ],
        "summary": "ApiZtlFrontOfficeNotesNotes_POST",
        "description": "",
        "operationId": "ApiZtlFrontOfficeNotesNotes_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlFrontOfficeNotes.Dto.FrontOfficeNotesRequestDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/front-office-notes/notes/{applicationId}": {
      "get": {
        "tags": [
          "ZtlFrontOfficeNotes"
        ],
        "summary": "ApiZtlFrontOfficeNotesNotes_GET",
        "description": "",
        "operationId": "ApiZtlFrontOfficeNotesNotes_GET",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/frontofficeregistry/registries": {
      "get": {
        "tags": [
          "ZtlFrontOfficeRegistry"
        ],
        "summary": "ApiFrontofficeregistryRegistries_GET",
        "description": "",
        "operationId": "ApiFrontofficeregistryRegistries_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "ZtlFrontOfficeRegistry"
        ],
        "summary": "ApiFrontofficeregistryRegistries_POST",
        "description": "",
        "operationId": "ApiFrontofficeregistryRegistries_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.ZtlFrontOfficeRegistry.Dto.ZtlFrontOfficeRegistryDto"
                },
                "description": ""
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/frontofficeregistry/registries/{year}": {
      "get": {
        "tags": [
          "ZtlFrontOfficeRegistry"
        ],
        "summary": "ApiFrontofficeregistryRegistriesByYear_GET",
        "description": "",
        "operationId": "ApiFrontofficeregistryRegistriesByYear_GET",
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/gate": {
      "get": {
        "tags": [
          "ZtlGate"
        ],
        "summary": "ApiZtlGate_GET",
        "description": "",
        "operationId": "ApiZtlGate_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.Gate.Dto.ZtlGateDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/gate/available": {
      "get": {
        "tags": [
          "ZtlGate"
        ],
        "summary": "ApiZtlGateAvailable_GET",
        "description": "",
        "operationId": "ApiZtlGateAvailable_GET",
        "parameters": [
          {
            "name": "zoneId",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/gate/{gateId}/operating-times": {
      "get": {
        "tags": [
          "ZtlGate"
        ],
        "summary": "ApiZtlGateOperatingTimesByGateId_GET",
        "description": "",
        "operationId": "ApiZtlGateOperatingTimesByGateId_GET",
        "parameters": [
          {
            "name": "gateId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/api/ztl/gate/{gateId}/unoperating-times": {
      "get": {
        "tags": [
          "ZtlGate"
        ],
        "summary": "ApiZtlGateUnoperatingTimesByGateId_GET",
        "description": "",
        "operationId": "ApiZtlGateUnoperatingTimesByGateId_GET",
        "parameters": [
          {
            "name": "gateId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/api/ztl/gate/unoperating-times": {
      "get": {
        "tags": [
          "ZtlGate"
        ],
        "summary": "ApiZtlGateUnoperatingTimes_GET",
        "description": "",
        "operationId": "ApiZtlGateUnoperatingTimes_GET",
        "parameters": [
          {
            "name": "gates",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "monthRange",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/api/ztl/gate/operating-times": {
      "get": {
        "tags": [
          "ZtlGate"
        ],
        "summary": "ApiZtlGateOperatingTimes_GET",
        "description": "",
        "operationId": "ApiZtlGateOperatingTimes_GET",
        "parameters": [
          {
            "name": "gates",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "monthRange",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/api/ztl/gate/{gateId}/devices": {
      "get": {
        "tags": [
          "ZtlGate"
        ],
        "summary": "ApiZtlGateDevicesByGateId_GET",
        "description": "",
        "operationId": "ApiZtlGateDevicesByGateId_GET",
        "parameters": [
          {
            "name": "gateId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.DataAccess.Dal.DeviceStatus"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/concilia/sincronizzazione": {
      "post": {
        "tags": [
          "ZtlPermitConcilia"
        ],
        "summary": "ApiZtlConciliaSincronizzazione_POST",
        "description": "",
        "operationId": "ApiZtlConciliaSincronizzazione_POST",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlPermitConcilia.Dto.ZtlPermitConciliaSincronizzazioneRequest"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      },
      "get": {
        "tags": [
          "ZtlPermitConcilia"
        ],
        "summary": "ApiZtlConciliaSincronizzazione_GET",
        "description": "",
        "operationId": "ApiZtlConciliaSincronizzazione_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/concilia/autorizzazione/{id_autorizzazione}": {
      "put": {
        "tags": [
          "ZtlPermitConcilia"
        ],
        "summary": "ApiZtlConciliaAutorizzazione_PUT",
        "description": "",
        "operationId": "ApiZtlConciliaAutorizzazione_PUT",
        "parameters": [
          {
            "name": "id_autorizzazione",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlPermitConcilia.Dto.ZtlPermitConicliaRequestDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "ZtlPermitConcilia"
        ],
        "summary": "ApiZtlConciliaAutorizzazione_DELETE",
        "description": "",
        "operationId": "ApiZtlConciliaAutorizzazione_DELETE",
        "parameters": [
          {
            "name": "id_autorizzazione",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/api/Ztl/PermitTypeUser/can-add": {
      "get": {
        "tags": [
          "ZtlPermitTypeUser"
        ],
        "summary": "ApiZtlPermitTypeUserCanAdd_GET",
        "description": "",
        "operationId": "ApiZtlPermitTypeUserCanAdd_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/PermitTypeUser/CanAcceptAllFreePass": {
      "get": {
        "tags": [
          "ZtlPermitTypeUser"
        ],
        "summary": "ApiZtlPermitTypeUserCanAcceptAllFreePass_GET",
        "description": "",
        "operationId": "ApiZtlPermitTypeUserCanAcceptAllFreePass_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Rule/surrogates": {
      "post": {
        "tags": [
          "ZtlRule"
        ],
        "summary": "ApiZtlRuleSurrogates_POST",
        "description": "",
        "operationId": "ApiZtlRuleSurrogates_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlRule.Dto.ZtlSurrogateRule"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "get": {
        "tags": [
          "ZtlRule"
        ],
        "summary": "ApiZtlRuleSurrogates_GET",
        "description": "",
        "operationId": "ApiZtlRuleSurrogates_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlRule.Dto.ZtlSurrogateRule"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Rule/GetAllRules": {
      "get": {
        "tags": [
          "ZtlRule"
        ],
        "summary": "ApiZtlRuleGetAllRules_GET",
        "description": "",
        "operationId": "ApiZtlRuleGetAllRules_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlRule.Dto.ZtlRuleDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Rule/{ruleId}/active": {
      "put": {
        "tags": [
          "ZtlRule"
        ],
        "summary": "ApiZtlRuleActiveByRuleId_PUT",
        "description": "",
        "operationId": "ApiZtlRuleActiveByRuleId_PUT",
        "parameters": [
          {
            "name": "ruleId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "boolean"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Rule/{ruleId}": {
      "delete": {
        "tags": [
          "ZtlRule"
        ],
        "summary": "ApiZtlRuleByRuleId_DELETE",
        "description": "",
        "operationId": "ApiZtlRuleByRuleId_DELETE",
        "parameters": [
          {
            "name": "ruleId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Rule/GetRulesByGate/{gateId}": {
      "get": {
        "tags": [
          "ZtlRule"
        ],
        "summary": "ApiZtlRuleGetRulesByGateByGateId_GET",
        "description": "",
        "operationId": "ApiZtlRuleGetRulesByGateByGateId_GET",
        "parameters": [
          {
            "name": "gateId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlRule.Dto.ZtlRuleMinDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Rule/active-rules": {
      "get": {
        "tags": [
          "ZtlRule"
        ],
        "summary": "Controlla se esistono regole attive da oggi in futuro",
        "description": "",
        "operationId": "Controllaseesistonoregoleattivedaoggiinfuturo",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ritorno booleano",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Rule/AddOrUpdateRuleAsync": {
      "post": {
        "tags": [
          "ZtlRule"
        ],
        "summary": "ApiZtlRuleAddOrUpdateRuleAsync_POST",
        "description": "",
        "operationId": "ApiZtlRuleAddOrUpdateRuleAsync_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlRule.Dto.ZtlRuleDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Transit/SendTransits": {
      "post": {
        "tags": [
          "ZtlSatRedVeloxTransit"
        ],
        "summary": "Salva su file i transiti inviati dal nas da elaborare in un successivo momento",
        "description": "",
        "operationId": "Salvasufileitransitiinviatidalnasdaelaborareinunsuccessivomomento",
        "parameters": [],
        "requestBody": {
          "description": "Lista di transiti da elaborare",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WSAutoscan.Utility.Xml.Transit.TransitMessage"
                },
                "description": "Lista di transiti da elaborare"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Transiti elaborati correttamente",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Utility.Xml.Transit.TransitMessage"
                  },
                  "description": ""
                }
              }
            }
          },
          "401": {
            "description": "Nel caso in cui sia abilitata l'autenticazione autoscan/nas e il nas non si sia registrato correttamente",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/api/Transit/UploadImageMP": {
      "post": {
        "tags": [
          "ZtlSatRedVeloxTransit"
        ],
        "summary": "Salva su database le foto provenienti dal nas",
        "description": "",
        "operationId": "Salvasudatabaselefotoprovenientidalnas",
        "parameters": [
          {
            "name": "Path",
            "in": "query",
            "description": "Percorso del file",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "encoding": {},
              "schema": {
                "type": "object",
                "properties": {
                  "File": {
                    "type": "string",
                    "description": "Lista con informazioni dei file",
                    "format": "binary"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "L'elaborazione del file e' andata a buon fine",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Utility.ResponseImageFromNasDto"
                }
              }
            }
          },
          "401": {
            "description": "Nel caso in cui sia abilitata l'autenticazione autoscan/nas e il nas non si sia registrato correttamente",
            "headers": {},
            "content": {}
          },
          "415": {
            "description": "Nel caso in cui i file inviati dal nas non siano del mediatype corretto",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/api/Transit/SendTransitRealTime": {
      "post": {
        "tags": [
          "ZtlSatRedVeloxTransit"
        ],
        "summary": "Processa immediatamente i transiti arrivati dal nas",
        "description": "",
        "operationId": "Processaimmediatamenteitransitiarrivatidalnas",
        "parameters": [],
        "requestBody": {
          "description": "Transito da processare/salvare",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Utility.Xml.Transit.TransitMessage"
                  },
                  {
                    "description": "Transito da processare/salvare"
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Transito elaborato correttamente",
            "headers": {},
            "content": {}
          },
          "401": {
            "description": "Nel caso in cui sia abilitata l'autenticazione autoscan/nas e il nas non si sia registrato correttamente",
            "headers": {},
            "content": {}
          },
          "400": {
            "description": "Errore durante la processazione del transito",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/api/ZtlSat/Settings/GetSettings": {
      "get": {
        "tags": [
          "ZtlSatSettings"
        ],
        "summary": "ApiZtlSatSettingsGetSettings_GET",
        "description": "",
        "operationId": "ApiZtlSatSettingsGetSettings_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.ZtlSettings.Dto.ZtlSettingsDto"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Settings/IsBlurEnabledOnViolation": {
      "get": {
        "tags": [
          "ZtlSettings"
        ],
        "summary": "ApiZtlSettingsIsBlurEnabledOnViolation_GET",
        "description": "",
        "operationId": "ApiZtlSettingsIsBlurEnabledOnViolation_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Settings/AddOrUpdateSettingsAsync": {
      "post": {
        "tags": [
          "ZtlSettings"
        ],
        "summary": "ApiZtlSettingsAddOrUpdateSettingsAsync_POST",
        "description": "",
        "operationId": "ApiZtlSettingsAddOrUpdateSettingsAsync_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlSettings.Dto.ZtlSettingsDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Settings/customer": {
      "put": {
        "tags": [
          "ZtlSettings"
        ],
        "summary": "ApiZtlSettingsCustomer_PUT",
        "description": "",
        "operationId": "ApiZtlSettingsCustomer_PUT",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlSettings.Dto.ZtlCustomerSettingsDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "get": {
        "tags": [
          "ZtlSettings"
        ],
        "summary": "ApiZtlSettingsCustomer_GET",
        "description": "",
        "operationId": "ApiZtlSettingsCustomer_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.ZtlSettings.Dto.ZtlCustomerSettingsDto"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Settings/GetSettings": {
      "get": {
        "tags": [
          "ZtlSettings"
        ],
        "summary": "ApiZtlSettingsGetSettings_GET",
        "description": "",
        "operationId": "ApiZtlSettingsGetSettings_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.ZtlSettings.Dto.ZtlSettingsDto"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Settings/AskReasonExternalAuthorization": {
      "get": {
        "tags": [
          "ZtlSettings"
        ],
        "summary": "ApiZtlSettingsAskReasonExternalAuthorization_GET",
        "description": "",
        "operationId": "ApiZtlSettingsAskReasonExternalAuthorization_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Settings/counter": {
      "get": {
        "tags": [
          "ZtlSettings"
        ],
        "summary": "ApiZtlSettingsCounter_GET",
        "description": "",
        "operationId": "ApiZtlSettingsCounter_GET",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "put": {
        "tags": [
          "ZtlSettings"
        ],
        "summary": "ApiZtlSettingsCounter_PUT",
        "description": "",
        "operationId": "ApiZtlSettingsCounter_PUT",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Statistic/GetGates": {
      "get": {
        "tags": [
          "ZtlStatistic"
        ],
        "summary": "ApiZtlStatisticGetGates_GET",
        "description": "",
        "operationId": "ApiZtlStatisticGetGates_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Statistic/GetStatisticsAuthorizationType": {
      "get": {
        "tags": [
          "ZtlStatistic"
        ],
        "summary": "ApiZtlStatisticGetStatisticsAuthorizationType_GET",
        "description": "",
        "operationId": "ApiZtlStatisticGetStatisticsAuthorizationType_GET",
        "parameters": [
          {
            "name": "year",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "dateFrom",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "dateTo",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "gateIds",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlStatistic.Dto.ZtlStatisticAuthorizationTypeDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Statistic/GetYears": {
      "get": {
        "tags": [
          "ZtlStatistic"
        ],
        "summary": "ApiZtlStatisticGetYears_GET",
        "description": "",
        "operationId": "ApiZtlStatisticGetYears_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Statistic/GetStatisticsByYears": {
      "get": {
        "tags": [
          "ZtlStatistic"
        ],
        "summary": "ApiZtlStatisticGetStatisticsByYears_GET",
        "description": "",
        "operationId": "ApiZtlStatisticGetStatisticsByYears_GET",
        "parameters": [
          {
            "name": "dateFrom",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "dateTo",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "gateIds",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlStatistic.Dto.ZtlStatisticDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Statistic/GetStatisticsByYear": {
      "get": {
        "tags": [
          "ZtlStatistic"
        ],
        "summary": "ApiZtlStatisticGetStatisticsByYear_GET",
        "description": "",
        "operationId": "ApiZtlStatisticGetStatisticsByYear_GET",
        "parameters": [
          {
            "name": "year",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "dateFrom",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "dateTo",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "gateIds",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlStatistic.Dto.ZtlStatisticDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Statistic/GetStatisticsByMonth": {
      "get": {
        "tags": [
          "ZtlStatistic"
        ],
        "summary": "ApiZtlStatisticGetStatisticsByMonth_GET",
        "description": "",
        "operationId": "ApiZtlStatisticGetStatisticsByMonth_GET",
        "parameters": [
          {
            "name": "month",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "year",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "dateFrom",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "dateTo",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "gateIds",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlStatistic.Dto.ZtlStatisticDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Statistic/GetStatisticsGate": {
      "get": {
        "tags": [
          "ZtlStatistic"
        ],
        "summary": "ApiZtlStatisticGetStatisticsGate_GET",
        "description": "",
        "operationId": "ApiZtlStatisticGetStatisticsGate_GET",
        "parameters": [
          {
            "name": "year",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "dateFrom",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "dateTo",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "gateIds",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlStatistic.Dto.ZtlStatisticGateDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Statistic/GetStatisticsByDay": {
      "get": {
        "tags": [
          "ZtlStatistic"
        ],
        "summary": "ApiZtlStatisticGetStatisticsByDay_GET",
        "description": "",
        "operationId": "ApiZtlStatisticGetStatisticsByDay_GET",
        "parameters": [
          {
            "name": "calendarDay",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "gateIds",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlStatistic.Dto.ZtlStatisticDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Statistic/GetStatisticsVehicleType": {
      "get": {
        "tags": [
          "ZtlStatistic"
        ],
        "summary": "ApiZtlStatisticGetStatisticsVehicleType_GET",
        "description": "",
        "operationId": "ApiZtlStatisticGetStatisticsVehicleType_GET",
        "parameters": [
          {
            "name": "year",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "dateFrom",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "dateTo",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "gateIds",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlStatistic.Dto.ZtlStatisticVehicleTypeDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/ZtlTransitAuthorizing/ZtlTransitAuthorizingCounter": {
      "get": {
        "tags": [
          "ZtlTransitAuthorizing"
        ],
        "summary": "ApiZtlZtlTransitAuthorizingZtlTransitAuthorizingCounter_GET",
        "description": "",
        "operationId": "ApiZtlZtlTransitAuthorizingZtlTransitAuthorizingCounter_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/ZtlTransitAuthorizing/ZtlTransitAuthorizing/{ztlTransitId}": {
      "get": {
        "tags": [
          "ZtlTransitAuthorizing"
        ],
        "summary": "ApiZtlZtlTransitAuthorizingZtlTransitAuthorizing_GET",
        "description": "",
        "operationId": "ApiZtlZtlTransitAuthorizingZtlTransitAuthorizing_GET",
        "parameters": [
          {
            "name": "ztlTransitId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/ZtlTransitAuthorizing/ZtlTransitAuthorizing": {
      "post": {
        "tags": [
          "ZtlTransitAuthorizing"
        ],
        "summary": "Restituisce tutti i transiti autorizzanti per un certo customer",
        "description": "",
        "operationId": "Restituiscetuttiitransitiautorizzantiperuncertocustomer",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlTransitAuthorizingService.Dto.ZtlTransitAuthorizingSearchDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/ZtlTransitAuthorizing/UpdateZtlTransitAuthorizing": {
      "post": {
        "tags": [
          "ZtlTransitAuthorizing"
        ],
        "summary": "ApiZtlZtlTransitAuthorizingUpdateZtlTransitAuthorizing_POST",
        "description": "",
        "operationId": "ApiZtlZtlTransitAuthorizingUpdateZtlTransitAuthorizing_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlTransitAuthorizingService.Dto.ZtlTransitAuthorizingRequestUpdateDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/ZtlTransitAuthorizingPhoto/ZtlTransitAuthorizingPhoto": {
      "post": {
        "tags": [
          "ZtlTransitAuthorizingPhoto"
        ],
        "summary": "ApiZtlZtlTransitAuthorizingPhotoZtlTransitAuthorizingPhoto_POST",
        "description": "",
        "operationId": "ApiZtlZtlTransitAuthorizingPhotoZtlTransitAuthorizingPhoto_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlTransitAuthorizingPhoto.Dto.ContrastBrightnessDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/ZtlTransitAuthorizingPhoto/ZtlTransitAuthorizingPhoto/{transitId}": {
      "get": {
        "tags": [
          "ZtlTransitAuthorizingPhoto"
        ],
        "summary": "ApiZtlZtlTransitAuthorizingPhotoZtlTransitAuthorizingPhoto_GET",
        "description": "",
        "operationId": "ApiZtlZtlTransitAuthorizingPhotoZtlTransitAuthorizingPhoto_GET",
        "parameters": [
          {
            "name": "transitId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/ZtlTransitAuthorizingPhoto/plate/{imageName}/{cameraId}/{token}": {
      "get": {
        "tags": [
          "ZtlTransitAuthorizingPhoto"
        ],
        "summary": "ApiZtlZtlTransitAuthorizingPhotoPlateToken_GET",
        "description": "",
        "operationId": "ApiZtlZtlTransitAuthorizingPhotoPlateToken_GET",
        "parameters": [
          {
            "name": "imageName",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cameraId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/api/ztl/ZtlTransitAuthorizingSettings/ZtlTransitAuthorizingSettings": {
      "get": {
        "tags": [
          "ZtlTransitAuthorizingSettings"
        ],
        "summary": "ApiZtlZtlTransitAuthorizingSettingsZtlTransitAuthorizingSettings_GET",
        "description": "",
        "operationId": "ApiZtlZtlTransitAuthorizingSettingsZtlTransitAuthorizingSettings_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "ZtlTransitAuthorizingSettings"
        ],
        "summary": "ApiZtlZtlTransitAuthorizingSettingsZtlTransitAuthorizingSettings_POST",
        "description": "",
        "operationId": "ApiZtlZtlTransitAuthorizingSettingsZtlTransitAuthorizingSettings_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlTransitAuthorizingSettings.Dto.ZtlTransitAuthorizingSettingsDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/TransitPhoto/UserBlurredAreas/{imageName}": {
      "get": {
        "tags": [
          "ZtlTransitPhoto"
        ],
        "summary": "Recuperare le coordinate delle aree offuscate dall'utente all'interno di una foto di un transito.",
        "description": "",
        "operationId": "GetRecuperarelecoordinatedelleareeoffuscatedall'utenteall'internodiunafotodiuntransito.",
        "parameters": [
          {
            "name": "imageName",
            "in": "path",
            "description": "Nome della foto.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Coordinate trovate.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlViolationPhoto.Dto.UserBlurredAreaDto"
                  },
                  "description": ""
                }
              }
            }
          },
          "401": {
            "description": "L'utente non è autorizzato ad accedere alla foto.",
            "headers": {},
            "content": {}
          },
          "404": {
            "description": "Il file della foto non è stato trovato.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/TransitPhoto/UserBlurredAreas": {
      "put": {
        "tags": [
          "ZtlTransitPhoto"
        ],
        "summary": "Imposta le coordinate delle aree offuscate dall'utente all'interno di una foto di un transito.",
        "description": "",
        "operationId": "PutImpostalecoordinatedelleareeoffuscatedall'utenteall'internodiunafotodiuntransito.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Definizione delle aree da offuscare.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlViolationPhoto.Dto.BlurAreaUpdateRequest"
                  },
                  {
                    "description": "Definizione delle aree da offuscare."
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Coordinate modificate.",
            "headers": {},
            "content": {}
          },
          "400": {
            "description": "Le coordinate non sono valide.",
            "headers": {},
            "content": {}
          },
          "401": {
            "description": "L'utente non è autorizzato ad accedere alla foto.",
            "headers": {},
            "content": {}
          },
          "404": {
            "description": "Il file della foto non è stato trovato.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "ZtlTransitPhoto"
        ],
        "summary": "Elimina un'area offuscate dall'utente da una foto di un transito.",
        "description": "",
        "operationId": "DeleteEliminaun'areaoffuscatedall'utentedaunafotodiuntransito.",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/json-patch+json"
              ],
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Area offuscata eliminata.",
            "headers": {},
            "content": {}
          },
          "401": {
            "description": "L'utente non è autorizzato ad accedere alla foto.",
            "headers": {},
            "content": {}
          },
          "404": {
            "description": "Il file della foto non è stato trovato.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/TransitPhoto/filter": {
      "put": {
        "tags": [
          "ZtlTransitPhoto"
        ],
        "summary": "Imposta un filtro di correzione per una foto di un transito.",
        "description": "",
        "operationId": "PutImpostaunfiltrodicorrezioneperunafotodiuntransito.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Filtro da applicare alla foto del transito.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlViolationPhoto.Dto.MediaFilterDto"
                  },
                  {
                    "description": "Filtro da applicare alla foto del transito."
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Filtro applicato.",
            "headers": {},
            "content": {}
          },
          "400": {
            "description": "Filtro non valido.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/TransitPhoto/ClaheImageBrightness/{imageName}": {
      "get": {
        "tags": [
          "ZtlTransitPhoto"
        ],
        "summary": "ApiZtlTransitPhotoClaheImageBrightness_GET",
        "description": "",
        "operationId": "ApiZtlTransitPhotoClaheImageBrightness_GET",
        "parameters": [
          {
            "name": "imageName",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {},
            "content": {}
          },
          "404": {
            "description": "Not Found",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/TransitPhoto/GetCoordinatesTransitPhoto": {
      "get": {
        "tags": [
          "ZtlTransitPhoto"
        ],
        "summary": "Recuperare le coordinate della posizione della targa all'interno di una foto di un transito.",
        "description": "",
        "operationId": "Recuperarelecoordinatedellaposizionedellatargaall'internodiunafotodiuntransito.",
        "parameters": [
          {
            "name": "imageName",
            "in": "query",
            "description": "Nome della foto.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Coordinate trovate.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.ZtlViolationPhoto.Dto.PlateCoordinatesDto"
                }
              }
            }
          },
          "401": {
            "description": "L'utente non è autorizzato ad accedere alla foto.",
            "headers": {},
            "content": {}
          },
          "404": {
            "description": "Il file della foto non è stato trovato.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/TransitPhoto/SetCoordinatesTransitPhoto/{imageName}/{cameraId}": {
      "put": {
        "tags": [
          "ZtlTransitPhoto"
        ],
        "summary": "Imposta le coordinate della targa all'interno di una foto di un transito.",
        "description": "",
        "operationId": "PutImpostalecoordinatedellatargaall'internodiunafotodiuntransito.",
        "parameters": [
          {
            "name": "imageName",
            "in": "path",
            "description": "Nome della foto.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cameraId",
            "in": "path",
            "description": "ID della Camera che ha generato la foto.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Coordinate della targa.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlViolationPhoto.Dto.PlateCoordinatesDto"
                  },
                  {
                    "description": "Coordinate della targa."
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Coordinate modificate.",
            "headers": {},
            "content": {}
          },
          "400": {
            "description": "Le coordinate non sono valide.",
            "headers": {},
            "content": {}
          },
          "401": {
            "description": "L'utente non è autorizzato ad accedere alla foto.",
            "headers": {},
            "content": {}
          },
          "404": {
            "description": "Il file della foto non è stato trovato.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/TransitPhoto/VehicleCoordinates/{imageName}": {
      "get": {
        "tags": [
          "ZtlTransitPhoto"
        ],
        "summary": "Recuperare le coordinate della posizione del veicolo all'interno di una foto di un transito.",
        "description": "",
        "operationId": "GetRecuperarelecoordinatedellaposizionedelveicoloall'internodiunafotodiuntransito.",
        "parameters": [
          {
            "name": "imageName",
            "in": "path",
            "description": "Nome della foto.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Coordinate trovate. Potrebbero non essere valide se nella foto non è stata specificata la posizione del veicolo.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.ZtlViolationPhoto.Dto.VehicleCoordinatesDto"
                }
              }
            }
          },
          "401": {
            "description": "L'utente non è autorizzato ad accedere alla foto.",
            "headers": {},
            "content": {}
          },
          "404": {
            "description": "Il file della foto non è stato trovato.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/TransitPhoto/VehicleCoordinates/{imageName}/{cameraId}": {
      "put": {
        "tags": [
          "ZtlTransitPhoto"
        ],
        "summary": "Imposta le coordinate del veicolo all'interno di una foto di un transito.",
        "description": "",
        "operationId": "PutImpostalecoordinatedelveicoloall'internodiunafotodiuntransito.",
        "parameters": [
          {
            "name": "imageName",
            "in": "path",
            "description": "Nome della foto.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cameraId",
            "in": "path",
            "description": "ID della Camera che ha generato la foto.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Coordinate del veicolo.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlViolationPhoto.Dto.VehicleCoordinatesDto"
                  },
                  {
                    "description": "Coordinate del veicolo."
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Coordinate modificate.",
            "headers": {},
            "content": {}
          },
          "401": {
            "description": "L'utente non è autorizzato ad accedere alla foto.",
            "headers": {},
            "content": {}
          },
          "404": {
            "description": "Il file della foto non è stato trovato.",
            "headers": {},
            "content": {}
          },
          "400": {
            "description": "Le coordinate non sono valide.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/TransitPhoto/GetImageBlob/{imageName}/{cameraId}": {
      "get": {
        "tags": [
          "ZtlTransitPhoto"
        ],
        "summary": "Ricerca una doto di un transito e ne ritorna il contenuto in byte.\r\nQuesta operazione è considerata come un 'Download' del media e perciò sarà regisrtata.",
        "description": "",
        "operationId": "Ricercaunadotodiuntransitoeneritornailcontenutoinbyte.\r\nQuestaoperazioneèconsideratacomeun'Download'delmediaeperciòsaràregisrtata.",
        "parameters": [
          {
            "name": "imageName",
            "in": "path",
            "description": "Nome della foto.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cameraId",
            "in": "path",
            "description": "ID della Camera che ha generato la foto.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Foto trovata.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "L'utente non è autorizzato ad accedere alla foto.",
            "headers": {},
            "content": {}
          },
          "404": {
            "description": "Il file della foto non è stato trovato.",
            "headers": {},
            "content": {}
          },
          "410": {
            "description": "Il parametro imageName non corrisponde a nessuna foto.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/TransitPhoto/GetImage/{imageName}/{cameraId}/{token}": {
      "get": {
        "tags": [
          "ZtlTransitPhoto"
        ],
        "summary": "Ricerca una foto di un transito e ne ritorna il contenuto in byte.\r\nQuesto metodo non richiede che l'utente sia loggato, ma è necessario presentare\r\nun token di autenticazione valido.",
        "description": "",
        "operationId": "Ricercaunafotodiuntransitoeneritornailcontenutoinbyte.\r\nQuestometodononrichiedechel'utentesialoggato,maènecessariopresentare\r\nuntokendiautenticazionevalido.",
        "parameters": [
          {
            "name": "imageName",
            "in": "path",
            "description": "Nome della foto.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cameraId",
            "in": "path",
            "description": "ID della Camera che ha generato la foto.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "path",
            "description": "Token di autenticazione.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Foto trovata.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "L'utente non è autorizzato ad accedere alla foto.",
            "headers": {},
            "content": {}
          },
          "404": {
            "description": "Il file della foto non è stato trovato.",
            "headers": {},
            "content": {}
          },
          "410": {
            "description": "Il parametro imageName non corrisponde a nessuna foto.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/api/ztl/users": {
      "get": {
        "tags": [
          "ZtlUserRegistry"
        ],
        "summary": "ApiZtlUsers_GET",
        "description": "",
        "operationId": "ApiZtlUsers_GET",
        "parameters": [
          {
            "name": "fullname",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fiscalCode",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "category",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Core.Model.ZTL_UserRegistry"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "ZtlUserRegistry"
        ],
        "summary": "ApiZtlUsers_POST",
        "description": "",
        "operationId": "ApiZtlUsers_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlUserRegistry.ZtlPersonDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Core.Model.ZTL_UserRegistry"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/users/{userId}": {
      "get": {
        "tags": [
          "ZtlUserRegistry"
        ],
        "summary": "ApiZtlUsersByUserId_GET",
        "description": "",
        "operationId": "ApiZtlUsersByUserId_GET",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Core.Model.ZTL_UserRegistry"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "put": {
        "tags": [
          "ZtlUserRegistry"
        ],
        "summary": "ApiZtlUsersByUserId_PUT",
        "description": "",
        "operationId": "ApiZtlUsersByUserId_PUT",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlUserRegistry.ZtlPersonDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Core.Model.ZTL_UserRegistry"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/ztl/users/categories": {
      "get": {
        "tags": [
          "ZtlUserRegistry"
        ],
        "summary": "ApiZtlUsersCategories_GET",
        "description": "",
        "operationId": "ApiZtlUsersCategories_GET",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Violation/Search": {
      "post": {
        "tags": [
          "ZtlViolation"
        ],
        "summary": "Esegue una ricerca filtrata dei transiti RedSpeed.",
        "description": "",
        "operationId": "PostEsegueunaricercafiltratadeitransitiRedSpeed.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Parametri per la ricerca filtrata.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ViolationSearch.Dto.ViolationSearchRequestDto"
                  },
                  {
                    "description": "Parametri per la ricerca filtrata."
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.ViolationSearch.Dto.ViolationSearchResponseDto"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Violation/UpdateTransitAsync": {
      "post": {
        "tags": [
          "ZtlViolation"
        ],
        "summary": "ApiZtlViolationUpdateTransitAsync_POST",
        "description": "",
        "operationId": "ApiZtlViolationUpdateTransitAsync_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlViolation.Dto.UpdateTransitRequestDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Violation/GetDetail/{violationId}": {
      "get": {
        "tags": [
          "ZtlViolation"
        ],
        "summary": "ApiZtlViolationGetDetailByViolationId_GET",
        "description": "",
        "operationId": "ApiZtlViolationGetDetailByViolationId_GET",
        "parameters": [
          {
            "name": "violationId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.ZtlViolation.Dto.GetDetailResponseDto"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Violation/massiveStatus": {
      "put": {
        "tags": [
          "ZtlViolation"
        ],
        "summary": "Modifica massiva degli stati dei transiti ZTL.",
        "description": "",
        "operationId": "ModificamassivadeglistatideitransitiZTL.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Lista dei transitId e valore dello stato da aggiornare in maniera massiva",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlViolation.Dto.MassiveChangeViolationStatus"
                  },
                  {
                    "description": "Lista dei transitId e valore dello stato da aggiornare in maniera massiva"
                  }
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Modifica avvenuta con successo.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Violation/GetDayTransitsAndViolations": {
      "get": {
        "tags": [
          "ZtlViolation"
        ],
        "summary": "ApiZtlViolationGetDayTransitsAndViolations_GET",
        "description": "",
        "operationId": "ApiZtlViolationGetDayTransitsAndViolations_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.ZtlViolation.Dto.DayTransitsAndViolationsDto"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Violation/latest_transit/{cameraId}": {
      "get": {
        "tags": [
          "ZtlViolation"
        ],
        "summary": "ApiZtlViolationLatestTransitByCameraId_GET",
        "description": "",
        "operationId": "ApiZtlViolationLatestTransitByCameraId_GET",
        "parameters": [
          {
            "name": "cameraId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/WSAutoscan.Application.Transit.Dto.ZtlLastTransitDto"
                    },
                    {
                      "description": "Dati dell'ultimo transito ZTL rilevato da una Camera."
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Violation/GetExportedTransitsToCancel/{violationExportId}": {
      "get": {
        "tags": [
          "ZtlViolation"
        ],
        "summary": "ApiZtlViolationGetExportedTransitsToCancel_GET",
        "description": "",
        "operationId": "ApiZtlViolationGetExportedTransitsToCancel_GET",
        "parameters": [
          {
            "name": "violationExportId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Risultato di una ricerca filtrata delle Violazioni ZTL esportabili."
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Violation/GetViolationDuplicate/{violationId}": {
      "get": {
        "tags": [
          "ZtlViolation"
        ],
        "summary": "ApiZtlViolationGetViolationDuplicate_GET",
        "description": "",
        "operationId": "ApiZtlViolationGetViolationDuplicate_GET",
        "parameters": [
          {
            "name": "violationId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.ViolationSearch.Dto.ViolationSearchResponseDto"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Violation/DailyTransitsDetail/{transitId}": {
      "get": {
        "tags": [
          "ZtlViolation"
        ],
        "summary": "ApiZtlViolationDailyTransitsDetail_GET",
        "description": "",
        "operationId": "ApiZtlViolationDailyTransitsDetail_GET",
        "parameters": [
          {
            "name": "transitId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.Transit.Dto.DailyTransitsDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Violation/sanctioned-interval-hint": {
      "get": {
        "tags": [
          "ZtlViolation"
        ],
        "summary": "ApiZtlViolationSanctionedIntervalHint_GET",
        "description": "",
        "operationId": "ApiZtlViolationSanctionedIntervalHint_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Intervallo di date per le violazioni ZTL esportabili."
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Violation/GetSanctioningUsers": {
      "get": {
        "tags": [
          "ZtlViolation"
        ],
        "summary": "ApiZtlViolationGetSanctioningUsers_GET",
        "description": "",
        "operationId": "ApiZtlViolationGetSanctioningUsers_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.User.Dto.AS_UserBasicDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Violation/sanctioned": {
      "get": {
        "tags": [
          "ZtlViolation"
        ],
        "summary": "ApiZtlViolationSanctioned_GET",
        "description": "",
        "operationId": "ApiZtlViolationSanctioned_GET",
        "parameters": [
          {
            "name": "From",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "To",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "ZoneTypeId",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "UserIds",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "GateIds",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "Nations",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Nationality",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Risultato di una ricerca filtrata delle Violazioni ZTL esportabili."
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Violation/{violationId}/status": {
      "put": {
        "tags": [
          "ZtlViolation"
        ],
        "summary": "ApiZtlViolationStatusByViolationId_PUT",
        "description": "",
        "operationId": "ApiZtlViolationStatusByViolationId_PUT",
        "parameters": [
          {
            "name": "violationId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlViolation.Dto.ChangeViolationStatus"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Violation/GetViolationsStatusNum": {
      "post": {
        "tags": [
          "ZtlViolation"
        ],
        "summary": "Ottiene il numero delle violazioni ZTL che risultano essere in un determinato stato.",
        "description": "",
        "operationId": "OttieneilnumerodelleviolazioniZTLcherisultanoessereinundeterminatostato.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "ID degli stati.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "description": "ID degli stati."
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Richiesta avvenuta con successo.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlAuthorization.Dto.ViolationsStatusNumDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Violation/ViolationDeadLineNum": {
      "get": {
        "tags": [
          "ZtlViolation"
        ],
        "summary": "ApiZtlViolationViolationDeadLineNum_GET",
        "description": "",
        "operationId": "ApiZtlViolationViolationDeadLineNum_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.ZtlViolation.Dto.ViolationDeadLineNumDto"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Violation/Exports": {
      "get": {
        "tags": [
          "ZtlViolationExport"
        ],
        "summary": "Ricerca tutte le esportazioni di Violazioni ZTL effettuate per l'Ente di appartenenza dell'Utente loggato.",
        "description": "",
        "operationId": "RicercatutteleesportazionidiViolazioniZTLeffettuateperl'Entediappartenenzadell'Utenteloggato.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cronologia delle esportazioni.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "ZtlViolationExport"
        ],
        "summary": "Effettua l'esportazione di una lista di Violazioni ZTL.",
        "description": "",
        "operationId": "Effettual'esportazionediunalistadiViolazioniZTL.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Lista di ID delle violazioni ZTL da esportare.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "description": "Lista di ID delle violazioni ZTL da esportare."
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Se il file ZIP è stato generato correttamente.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Se non è stato passato nessun ID delle violazioni.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Violation/Exports/{exportId}": {
      "get": {
        "tags": [
          "ZtlViolationExport"
        ],
        "summary": "Rigenera un'Esportazione ZTL già effettuata.",
        "description": "",
        "operationId": "Rigeneraun'EsportazioneZTLgiàeffettuata.",
        "parameters": [
          {
            "name": "exportId",
            "in": "path",
            "description": "ID dell'Esportazione ZTL da rigenerare.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Se il file ZIP è stato generato correttamente.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Violation/Exports/DeleteExportedViolation": {
      "post": {
        "tags": [
          "ZtlViolationExport"
        ],
        "summary": "Cancella un'esportazione già effettuata dallo storico delle esportazioni",
        "description": "",
        "operationId": "PostCancellaun'esportazionegiàeffettuatadallostoricodelleesportazioni",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "description": ""
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Violation/Exports/direct": {
      "get": {
        "tags": [
          "ZtlViolationExport"
        ],
        "summary": "Esportazione diretta delle Violazioni ZTL.",
        "description": "",
        "operationId": "EsportazionedirettadelleViolazioniZTL.",
        "parameters": [
          {
            "name": "From",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "To",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "ZoneTypeId",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "UserIds",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "GateIds",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "Nations",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Nationality",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Se il file ZIP è stato generato correttamente.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Se non è presente nessuna Violazione ZTL che corrisponde al filtro.",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Zone": {
      "get": {
        "tags": [
          "ZtlZone"
        ],
        "summary": "ApiZtlZone_GET",
        "description": "",
        "operationId": "ApiZtlZone_GET",
        "parameters": [
          {
            "name": "unrestricted",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlSettings.Dto.Zone"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "ZtlZone"
        ],
        "summary": "ApiZtlZone_POST",
        "description": "",
        "operationId": "ApiZtlZone_POST",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlSettings.Dto.ZTL_ZoneDto"
                  },
                  {}
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Zone/{id}": {
      "get": {
        "tags": [
          "ZtlZone"
        ],
        "summary": "ApiZtlZoneById_GET",
        "description": "",
        "operationId": "ApiZtlZoneById_GET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WSAutoscan.Application.ZtlSettings.Dto.ZTL_ZoneDto"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Zone/GetZoneTypes": {
      "get": {
        "tags": [
          "ZtlZone"
        ],
        "summary": "ApiZtlZoneGetZoneTypes_GET",
        "description": "",
        "operationId": "ApiZtlZoneGetZoneTypes_GET",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WSAutoscan.Application.ZtlSettings.Dto.ZTL_ZoneTypeDictionaryDto"
                  },
                  "description": ""
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Ztl/Zone/{zoneId}": {
      "delete": {
        "tags": [
          "ZtlZone"
        ],
        "summary": "ApiZtlZoneByZoneId_DELETE",
        "description": "",
        "operationId": "ApiZtlZoneByZoneId_DELETE",
        "parameters": [
          {
            "name": "zoneId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token required for authorization",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    }
  },

  "security": []

}