{
  "openapi": "3.1.0",
  "info": {
    "title": "Lob",
    "description": "The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p>\n",
    "contact": {
      "name": "Lob Developer Experience",
      "url": "https://support.lob.com/",
      "email": "lob-openapi@lob.com"
    },
    "version": "1.19.18"
  },
  "jsonSchemaDialect": "https://json-schema.org/draft/2020-12/schema",
  "servers": [
    {
      "url": "https://api.lob.com/v1",
      "description": "production",
      "variables": {}
    }
  ],
  "paths": {
    "/addresses": {
      "get": {
        "tags": [
          "Addresses"
        ],
        "summary": "addresses_list",
        "description": "Returns a list of your addresses. The addresses are returned sorted by creation date, with the most recently created addresses appearing first.",
        "operationId": "addresses_list",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "How many results to return.",
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 100.0,
              "minimum": 1.0,
              "type": "integer",
              "contentEncoding": "int32",
              "default": 10,
              "examples": [
                10
              ]
            }
          },
          {
            "name": "before/after",
            "in": "query",
            "description": "`before` and `after` are both optional but only one of them can be in the query at a time.",
            "style": "form",
            "explode": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/beforeafter"
                },
                {
                  "description": "`before` and `after` are both optional but only one of them can be in the query at a time."
                }
              ]
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Request that the response include the total count by specifying `include=[\"total_count\"]`.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "date_created",
            "in": "query",
            "description": "Filter by date created. Accepted formats are ISO-8601 date or datetime, e.g. `{ \"gt\": \"2012-01-01\", \"lt\": \"2012-01-31T12:34:56Z\" }` where `gt` is >, `lt` is <, `gte` is ≥, and `lte` is ≤.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          {
            "name": "metadata",
            "in": "query",
            "description": "Filter by metadata key-value pair`.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A dictionary with a data property that contains an array of up to `limit` addresses. Each entry in the array is a separate address object. The previous and next page of address entries can be retrieved by calling the endpoint contained in the `previous_url` and `next_url` fields in the API response respectively.<br>If no more addresses are available beyond the current set of returned results, the `next_url` field will be empty.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/all_addresses"
                    },
                    {
                      "examples": [
                        {
                          "data": [
                            {
                              "id": "adr_e68217bd744d65c8",
                              "description": "Harry - Office",
                              "name": "HARRY ZHANG",
                              "company": "LOB",
                              "phone": "5555555555",
                              "email": "harry@lob.com",
                              "address_line1": "210 KING ST STE 6100",
                              "address_line2": null,
                              "address_city": "SAN FRANCISCO",
                              "address_state": "CA",
                              "address_zip": "94107-1741",
                              "address_country": "UNITED STATES",
                              "metadata": {},
                              "date_created": "2019-08-12T00:16:00.361Z",
                              "date_modified": "2019-08-12T00:16:00.361Z",
                              "object": "address"
                            },
                            {
                              "id": "adr_asdi2y3riuasasoi",
                              "description": "Harry - Office",
                              "name": "Harry Zhang",
                              "company": "Lob",
                              "phone": "5555555555",
                              "email": "harry@lob.com",
                              "metadata": {},
                              "address_line1": "370 WATER ST",
                              "address_line2": "",
                              "address_city": "SUMMERSIDE",
                              "address_state": "PRINCE EDWARD ISLAND",
                              "address_zip": "C1N 1C4",
                              "address_country": "CANADA",
                              "date_created": "2019-09-20T00:14:00.361Z",
                              "date_modified": "2019-09-20T00:14:00.361Z",
                              "object": "address"
                            }
                          ],
                          "object": "list",
                          "next_url": "https://api.lob.com/v1/addresses?limit=2&after=eyJkYXRlT2Zmc2V0IjoiMjAxOS0wOC0wN1QyMTo1OTo0Ni43NjRaIiwiaWRPZmZzZXQiOiJhZHJfODMwYmYwZWFiZGFhYTQwOSJ9",
                          "previous_url": null,
                          "count": 2
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "data": [
                    {
                      "id": "adr_e68217bd744d65c8",
                      "description": "Harry - Office",
                      "name": "HARRY ZHANG",
                      "company": "LOB",
                      "phone": "5555555555",
                      "email": "harry@lob.com",
                      "address_line1": "210 KING ST STE 6100",
                      "address_line2": null,
                      "address_city": "SAN FRANCISCO",
                      "address_state": "CA",
                      "address_zip": "94107-1741",
                      "address_country": "UNITED STATES",
                      "metadata": {},
                      "date_created": "2019-08-12T00:16:00.361Z",
                      "date_modified": "2019-08-12T00:16:00.361Z",
                      "object": "address"
                    },
                    {
                      "id": "adr_asdi2y3riuasasoi",
                      "description": "Harry - Office",
                      "name": "Harry Zhang",
                      "company": "Lob",
                      "phone": "5555555555",
                      "email": "harry@lob.com",
                      "metadata": {},
                      "address_line1": "370 WATER ST",
                      "address_line2": "",
                      "address_city": "SUMMERSIDE",
                      "address_state": "PRINCE EDWARD ISLAND",
                      "address_zip": "C1N 1C4",
                      "address_country": "CANADA",
                      "date_created": "2019-09-20T00:14:00.361Z",
                      "date_modified": "2019-09-20T00:14:00.361Z",
                      "object": "address"
                    }
                  ],
                  "object": "list",
                  "next_url": "https://api.lob.com/v1/addresses?limit=2&after=eyJkYXRlT2Zmc2V0IjoiMjAxOS0wOC0wN1QyMTo1OTo0Ni43NjRaIiwiaWRPZmZzZXQiOiJhZHJfODMwYmYwZWFiZGFhYTQwOSJ9",
                  "previous_url": null,
                  "count": 2
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Addresses0Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "not_found",
                            "message": "address not found",
                            "status_code": 404
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "not_found",
                    "message": "address not found",
                    "status_code": 404
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Addresses"
        ],
        "summary": "address_create",
        "description": "Creates a new address given information",
        "operationId": "address_create",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "examples": [
                  "{\"description\":\"Harry - Office\",\"name\":\"Harry Zhang\",\"company\":\"Lob\",\"email\":\"harry@lob.com\",\"phone\":\"5555555555\",\"address_line1\":\"210 King St\",\"address_line2\":\"# 6100\",\"address_city\":\"San Francisco\",\"address_state\":\"CA\",\"address_zip\":\"94107\",\"address_country\":\"US\"}",
                  "{\"description\":\"Harry - Office\",\"name\":\"Harry Zhang\",\"company\":\"Lob\",\"email\":\"harry@lob.com\",\"phone\":\"5555555555\",\"address_line1\":\"NCOA\",\"address_line2\":\"#6100\",\"address_city\":\"San Francisco\",\"address_state\":\"CA\",\"address_zip\":\"94107\",\"address_country\":\"US\"}",
                  "{\"description\":\"Harry - Office\",\"name\":\"Harry Zhang\",\"company\":\"Lob\",\"email\":\"harry@lob.com\",\"phone\":\"5555555555\",\"address_line1\":\"370 WATER ST\",\"address_line2\":\"\",\"address_city\":\"SUMMERSIDE\",\"address_state\":\"PRINCE EDWARD ISLAND\",\"address_zip\":\"C1N 1C4\",\"address_country\":\"CA\"}"
                ],
                "contentMediaType": "application/json"
              },
              "examples": {
                "full_us": {
                  "value": {
                    "description": "Harry - Office",
                    "name": "Harry Zhang",
                    "company": "Lob",
                    "email": "harry@lob.com",
                    "phone": "5555555555",
                    "address_line1": "210 King St",
                    "address_line2": "# 6100",
                    "address_city": "San Francisco",
                    "address_state": "CA",
                    "address_zip": "94107",
                    "address_country": "US"
                  }
                },
                "ncoa_us_test": {
                  "value": {
                    "description": "Harry - Office",
                    "name": "Harry Zhang",
                    "company": "Lob",
                    "email": "harry@lob.com",
                    "phone": "5555555555",
                    "address_line1": "NCOA",
                    "address_line2": "#6100",
                    "address_city": "San Francisco",
                    "address_state": "CA",
                    "address_zip": "94107",
                    "address_country": "US"
                  }
                },
                "full_intl": {
                  "value": {
                    "description": "Harry - Office",
                    "name": "Harry Zhang",
                    "company": "Lob",
                    "email": "harry@lob.com",
                    "phone": "5555555555",
                    "address_line1": "370 WATER ST",
                    "address_line2": "",
                    "address_city": "SUMMERSIDE",
                    "address_state": "PRINCE EDWARD ISLAND",
                    "address_zip": "C1N 1C4",
                    "address_country": "CA"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Echos the writable fields of a newly created address object.",
            "headers": {
              "ratelimit-limit": {
                "description": "The rate limit for a given endpoint.",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "The rate limit for a given endpoint.",
                      "examples": [
                        "150"
                      ],
                      "contentMediaType": "text/plain"
                    },
                    "example": "150"
                  }
                }
              },
              "ratelimit-remaining": {
                "description": "The number of requests remaining in the current window.",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "The number of requests remaining in the current window.",
                      "examples": [
                        "100"
                      ],
                      "contentMediaType": "text/plain"
                    },
                    "example": "100"
                  }
                }
              },
              "ratelimit-reset": {
                "description": "The time at which the rate limit window resets in  <a href=\"https://en.wikipedia.org/wiki/Unix_time\" target=\"_blank\">UTC epoch seconds</a>\n",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "The time at which the rate limit window resets in  <a href=\"https://en.wikipedia.org/wiki/Unix_time\" target=\"_blank\">UTC epoch seconds</a>\n",
                      "examples": [
                        "1528749846"
                      ],
                      "contentMediaType": "text/plain"
                    },
                    "example": "1528749846"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "examples": [
                    "{\"id\":\"adr_d3489cd64c791ab5\",\"description\":\"Harry - Office\",\"name\":\"HARRY ZHANG\",\"company\":\"LOB\",\"phone\":\"5555555555\",\"email\":\"harry@lob.com\",\"address_line1\":\"210 KING ST STE 6100\",\"address_city\":\"SAN FRANCISCO\",\"address_state\":\"CA\",\"address_zip\":\"94107\",\"address_country\":\"UNITED STATES\",\"metadata\":{},\"date_created\":\"2017-09-05T17:47:53.767Z\",\"date_modified\":\"2017-09-05T17:47:53.767Z\",\"object\":\"address\"}",
                    "{\"id\":\"adr_b9f49f464c836203\",\"description\":\"Harry - Office\",\"name\":\"HARRY ZHANG\",\"company\":\"LOB\",\"phone\":\"5555555555\",\"email\":\"harry@lob.com\",\"address_line1\":\"370 WATER ST\",\"address_city\":\"SUMMERSIDE\",\"address_state\":\"PRINCE EDWARD ISLAND\",\"address_zip\":\"C1N 1C4\",\"address_country\":\"CANADA\",\"metadata\":{},\"date_created\":\"2021-11-29T20:55:46.843Z\",\"date_modified\":\"2021-11-29T20:56:46.843Z\",\"object\":\"address\"}",
                    "{\"id\":\"adr_d3489cd64c791ab5\",\"description\":\"Harry - Office\",\"name\":\"HARRY ZHANG\",\"company\":\"LOB\",\"phone\":\"5555555555\",\"email\":\"harry@lob.com\",\"address_line1\":\"████\",\"address_line2\":\"████\",\"address_city\":\"SAN FRANCISCO\",\"address_state\":\"CA\",\"address_zip\":\"94107\",\"address_country\":\"UNITED STATES\",\"metadata\":{},\"date_created\":\"2017-09-05T17:47:53.767Z\",\"date_modified\":\"2017-09-05T17:47:53.767Z\",\"recipient_moved\":true,\"inline\":false,\"object\":\"address\"}",
                    "{\"id\":\"adr_e463565030210e12\",\"description\":null,\"name\":\"TEST KEYS DO NOT VERIFY ADDRESSES\",\"company\":null,\"phone\":null,\"email\":null,\"address_line1\":\"████\",\"address_line2\":\"████\",\"address_city\":\"SAN FRANCISCO\",\"address_state\":\"CA\",\"address_zip\":\"94107\",\"address_country\":\"UNITED STATES\",\"metadata\":{},\"date_created\":\"2019-12-05T19:39:19.932Z\",\"date_modified\":\"2019-12-05T19:39:19.932Z\",\"recipient_moved\":true,\"inline\":false,\"object\":\"address\"}"
                  ],
                  "contentMediaType": "application/json"
                },
                "examples": {
                  "full_us": {
                    "value": {
                      "id": "adr_d3489cd64c791ab5",
                      "description": "Harry - Office",
                      "name": "HARRY ZHANG",
                      "company": "LOB",
                      "phone": "5555555555",
                      "email": "harry@lob.com",
                      "address_line1": "210 KING ST STE 6100",
                      "address_city": "SAN FRANCISCO",
                      "address_state": "CA",
                      "address_zip": "94107",
                      "address_country": "UNITED STATES",
                      "metadata": {},
                      "date_created": "2017-09-05T17:47:53.767Z",
                      "date_modified": "2017-09-05T17:47:53.767Z",
                      "object": "address"
                    }
                  },
                  "full_intl": {
                    "value": {
                      "id": "adr_b9f49f464c836203",
                      "description": "Harry - Office",
                      "name": "HARRY ZHANG",
                      "company": "LOB",
                      "phone": "5555555555",
                      "email": "harry@lob.com",
                      "address_line1": "370 WATER ST",
                      "address_city": "SUMMERSIDE",
                      "address_state": "PRINCE EDWARD ISLAND",
                      "address_zip": "C1N 1C4",
                      "address_country": "CANADA",
                      "metadata": {},
                      "date_created": "2021-11-29T20:55:46.843Z",
                      "date_modified": "2021-11-29T20:56:46.843Z",
                      "object": "address"
                    }
                  },
                  "ncoa_us_live": {
                    "value": {
                      "id": "adr_d3489cd64c791ab5",
                      "description": "Harry - Office",
                      "name": "HARRY ZHANG",
                      "company": "LOB",
                      "phone": "5555555555",
                      "email": "harry@lob.com",
                      "address_line1": "████",
                      "address_line2": "████",
                      "address_city": "SAN FRANCISCO",
                      "address_state": "CA",
                      "address_zip": "94107",
                      "address_country": "UNITED STATES",
                      "metadata": {},
                      "date_created": "2017-09-05T17:47:53.767Z",
                      "date_modified": "2017-09-05T17:47:53.767Z",
                      "recipient_moved": true,
                      "inline": false,
                      "object": "address"
                    }
                  },
                  "ncoa_us_test": {
                    "value": {
                      "id": "adr_e463565030210e12",
                      "description": null,
                      "name": "TEST KEYS DO NOT VERIFY ADDRESSES",
                      "company": null,
                      "phone": null,
                      "email": null,
                      "address_line1": "████",
                      "address_line2": "████",
                      "address_city": "SAN FRANCISCO",
                      "address_state": "CA",
                      "address_zip": "94107",
                      "address_country": "UNITED STATES",
                      "metadata": {},
                      "date_created": "2019-12-05T19:39:19.932Z",
                      "date_modified": "2019-12-05T19:39:19.932Z",
                      "recipient_moved": true,
                      "inline": false,
                      "object": "address"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Addresses0Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "not_found",
                            "message": "address not found",
                            "status_code": 404
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "not_found",
                    "message": "address not found",
                    "status_code": 404
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/addresses/{adr_id}": {
      "get": {
        "tags": [
          "Addresses"
        ],
        "summary": "address_retrieve",
        "description": "Retrieves the details of an existing address. You need only supply the unique identifier that was returned upon address creation.",
        "operationId": "address_retrieve",
        "parameters": [
          {
            "name": "adr_id",
            "in": "path",
            "description": "id of the address",
            "required": true,
            "style": "simple",
            "schema": {
              "pattern": "^adr_[a-zA-Z0-9]+$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an address object if a valid identifier was provided.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/address"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Addresses0Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "not_found",
                            "message": "address not found",
                            "status_code": 404
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "not_found",
                    "message": "address not found",
                    "status_code": 404
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Addresses"
        ],
        "summary": "address_delete",
        "description": "Deletes the details of an existing address. You need only supply the unique identifier that was returned upon address creation.",
        "operationId": "address_delete",
        "parameters": [
          {
            "name": "adr_id",
            "in": "path",
            "description": "id of the address",
            "required": true,
            "style": "simple",
            "schema": {
              "pattern": "^adr_[a-zA-Z0-9]+$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/AddressesResponse1"
                    },
                    {
                      "examples": [
                        {
                          "id": "adr_123456789",
                          "deleted": true
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "id": "adr_123456789",
                  "deleted": true
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Addresses0Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "not_found",
                            "message": "address not found",
                            "status_code": 404
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "not_found",
                    "message": "address not found",
                    "status_code": 404
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/bank_accounts/{bank_id}/verify": {
      "post": {
        "tags": [
          "Bank Accounts"
        ],
        "summary": "bank_account_verify",
        "description": "Verify a bank account in order to create a check.",
        "operationId": "bank_account_verify",
        "parameters": [
          {
            "name": "bank_id",
            "in": "path",
            "description": "id of the bank account to be verified",
            "required": true,
            "style": "simple",
            "schema": {
              "pattern": "^bank_[a-zA-Z0-9]+$",
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Content-Type"
                },
                {}
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "amounts"
                ],
                "type": "object",
                "properties": {
                  "amounts": {
                    "maxItems": 2,
                    "minItems": 2,
                    "type": "array",
                    "items": {
                      "maximum": 100.0,
                      "minimum": 1.0,
                      "type": "integer",
                      "contentEncoding": "int32"
                    },
                    "description": "In live mode, an array containing the two micro deposits (in cents) placed in the bank account. In test mode, no micro deposits will be placed, so any two integers between `1` and `100` will work.",
                    "examples": [
                      [
                        1,
                        100
                      ]
                    ]
                  }
                },
                "contentMediaType": "application/x-www-form-urlencoded"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Returns a bank_account object",
            "headers": {
              "ratelimit-limit": {
                "description": "The rate limit for a given endpoint.",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "The rate limit for a given endpoint.",
                      "examples": [
                        "150"
                      ],
                      "contentMediaType": "text/plain"
                    },
                    "example": "150"
                  }
                }
              },
              "ratelimit-remaining": {
                "description": "The number of requests remaining in the current window.",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "The number of requests remaining in the current window.",
                      "examples": [
                        "100"
                      ],
                      "contentMediaType": "text/plain"
                    },
                    "example": "100"
                  }
                }
              },
              "ratelimit-reset": {
                "description": "The time at which the rate limit window resets in  <a href=\"https://en.wikipedia.org/wiki/Unix_time\" target=\"_blank\">UTC epoch seconds</a>\n",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "The time at which the rate limit window resets in  <a href=\"https://en.wikipedia.org/wiki/Unix_time\" target=\"_blank\">UTC epoch seconds</a>\n",
                      "examples": [
                        "1528749846"
                      ],
                      "contentMediaType": "text/plain"
                    },
                    "example": "1528749846"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/bank_account"
                    },
                    {
                      "examples": [
                        {
                          "id": "bank_8cad8df5354d33f",
                          "signature_url": "https://lob-assets.com/letters/asd_asdfghjklqwertyu.pdf?version=45&expires=1234567890&signature=a",
                          "description": "Test Bank Account",
                          "metadata": {},
                          "routing_number": "322271627",
                          "fractional_routing_number": "25-3/440",
                          "check_template": "jpm",
                          "account_number": "123456789",
                          "account_type": "company",
                          "signatory": "John Doe",
                          "bank_name": "J.P. MORGAN CHASE BANK, N.A.,",
                          "bank_city": "Columbus",
                          "bank_state": "OH",
                          "bank_zip": "43240",
                          "verified": false,
                          "date_created": "2015-11-06T19:24:24.440Z",
                          "date_modified": "2015-11-06T19:24:24.440Z",
                          "object": "bank_account"
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "id": "bank_8cad8df5354d33f",
                  "signature_url": "https://lob-assets.com/letters/asd_asdfghjklqwertyu.pdf?version=45&expires=1234567890&signature=a",
                  "description": "Test Bank Account",
                  "metadata": {},
                  "routing_number": "322271627",
                  "fractional_routing_number": "25-3/440",
                  "check_template": "jpm",
                  "account_number": "123456789",
                  "account_type": "company",
                  "signatory": "John Doe",
                  "bank_name": "J.P. MORGAN CHASE BANK, N.A.,",
                  "bank_city": "Columbus",
                  "bank_state": "OH",
                  "bank_zip": "43240",
                  "verified": false,
                  "date_created": "2015-11-06T19:24:24.440Z",
                  "date_modified": "2015-11-06T19:24:24.440Z",
                  "object": "bank_account"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/BankAccountsVerify0Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "invalid",
                            "message": "routing_number is required",
                            "status_code": 422
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "invalid",
                    "message": "routing_number is required",
                    "status_code": 422
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/bank_accounts/{bank_id}": {
      "get": {
        "tags": [
          "Bank Accounts"
        ],
        "summary": "bank_account_retrieve",
        "description": "Retrieves the details of an existing bank account. You need only supply the unique bank account identifier that was returned upon bank account creation.",
        "operationId": "bank_account_retrieve",
        "parameters": [
          {
            "name": "bank_id",
            "in": "path",
            "description": "id of the bank account",
            "required": true,
            "style": "simple",
            "schema": {
              "pattern": "^bank_[a-zA-Z0-9]+$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a bank account object",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/bank_account"
                    },
                    {
                      "examples": [
                        {
                          "id": "bank_8cad8df5354d33f",
                          "signature_url": "https://lob-assets.com/letters/asd_asdfghjklqwertyu.pdf?version=45&expires=1234567890&signature=a",
                          "description": "Test Bank Account",
                          "metadata": {},
                          "routing_number": "322271627",
                          "fractional_routing_number": "25-3/440",
                          "check_template": "jpm",
                          "account_number": "123456789",
                          "account_type": "company",
                          "signatory": "John Doe",
                          "bank_name": "J.P. MORGAN CHASE BANK, N.A.,",
                          "bank_city": "Columbus",
                          "bank_state": "OH",
                          "bank_zip": "43240",
                          "verified": false,
                          "date_created": "2015-11-06T19:24:24.440Z",
                          "date_modified": "2015-11-06T19:24:24.440Z",
                          "object": "bank_account"
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "id": "bank_8cad8df5354d33f",
                  "signature_url": "https://lob-assets.com/letters/asd_asdfghjklqwertyu.pdf?version=45&expires=1234567890&signature=a",
                  "description": "Test Bank Account",
                  "metadata": {},
                  "routing_number": "322271627",
                  "fractional_routing_number": "25-3/440",
                  "check_template": "jpm",
                  "account_number": "123456789",
                  "account_type": "company",
                  "signatory": "John Doe",
                  "bank_name": "J.P. MORGAN CHASE BANK, N.A.,",
                  "bank_city": "Columbus",
                  "bank_state": "OH",
                  "bank_zip": "43240",
                  "verified": false,
                  "date_created": "2015-11-06T19:24:24.440Z",
                  "date_modified": "2015-11-06T19:24:24.440Z",
                  "object": "bank_account"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/BankAccounts0Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "invalid",
                            "message": "routing_number is required",
                            "status_code": 422
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "invalid",
                    "message": "routing_number is required",
                    "status_code": 422
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Bank Accounts"
        ],
        "summary": "bank_account_delete",
        "description": "Permanently deletes a bank account. It cannot be undone.",
        "operationId": "bank_account_delete",
        "parameters": [
          {
            "name": "bank_id",
            "in": "path",
            "description": "id of the bank account",
            "required": true,
            "style": "simple",
            "schema": {
              "pattern": "^bank_[a-zA-Z0-9]+$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/BankAccountsResponse1"
                    },
                    {
                      "examples": [
                        {
                          "id": "bank_123456789",
                          "deleted": true
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "id": "bank_123456789",
                  "deleted": true
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/BankAccounts0Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "invalid",
                            "message": "routing_number is required",
                            "status_code": 422
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "invalid",
                    "message": "routing_number is required",
                    "status_code": 422
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/bank_accounts": {
      "get": {
        "tags": [
          "Bank Accounts"
        ],
        "summary": "bank_accounts_list",
        "description": "Returns a list of your bank accounts. The bank accounts are returned sorted by creation date, with the most recently created bank accounts appearing first.",
        "operationId": "bank_accounts_list",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "How many results to return.",
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 100.0,
              "minimum": 1.0,
              "type": "integer",
              "contentEncoding": "int32",
              "default": 10,
              "examples": [
                10
              ]
            }
          },
          {
            "name": "before/after",
            "in": "query",
            "description": "`before` and `after` are both optional but only one of them can be in the query at a time.",
            "style": "form",
            "explode": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/beforeafter"
                },
                {
                  "description": "`before` and `after` are both optional but only one of them can be in the query at a time."
                }
              ]
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Request that the response include the total count by specifying `include=[\"total_count\"]`.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "date_created",
            "in": "query",
            "description": "Filter by date created. Accepted formats are ISO-8601 date or datetime, e.g. `{ \"gt\": \"2012-01-01\", \"lt\": \"2012-01-31T12:34:56Z\" }` where `gt` is >, `lt` is <, `gte` is ≥, and `lte` is ≤.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          {
            "name": "metadata",
            "in": "query",
            "description": "Filter by metadata key-value pair`.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A dictionary with a data property that contains an array of up to `limit` bank_accounts. Each entry in the array is a separate bank_account. The previous and next page of bank_accounts can be retrieved by calling the endpoint contained in the `previous_url` and `next_url` fields in the API response respectively.<br>If no more bank_accounts are available beyond the current set of returned results, the `next_url` field will be empty.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/all_bank_accounts"
                    },
                    {
                      "examples": [
                        {
                          "data": [
                            {
                              "id": "bank_0e3fb07eba0b35b",
                              "signature_url": "https://lob-assets.com/letters/asd_asdfghjklqwertyu.pdf?version=45&expires=1234567890&signature=a",
                              "description": "Example bank account",
                              "metadata": {},
                              "routing_number": "122100024",
                              "account_number": "1234564789",
                              "account_type": "company",
                              "signatory": "John Doe",
                              "bank_name": "JPMORGAN CHASE BANK, NA",
                              "verified": true,
                              "date_created": "2019-03-30T13:13:22.200Z",
                              "date_modified": "2019-03-30T13:13:23.385Z",
                              "object": "bank_account"
                            },
                            {
                              "id": "bank_eba93f7de3c02d9",
                              "description": "Example bank account",
                              "metadata": {},
                              "routing_number": "122100024",
                              "account_number": "1234564789",
                              "account_type": "company",
                              "signatory": "John Doe",
                              "bank_name": "JPMORGAN CHASE BANK, NA",
                              "verified": true,
                              "date_created": "2019-03-30T13:11:06.809Z",
                              "date_modified": "2019-03-30T13:11:07.872Z",
                              "object": "bank_account"
                            }
                          ],
                          "object": "list",
                          "next_url": "https://api.lob.com/v1/bank_accounts?limit=2&after=eyJkYXRlT2Zmc2V0IjoiMjAxOS0wMy0zMFQxMzoxMTowNi44MDlaIiwiaWRPZmZzZXQiOiJiYW5rX2ViYTkzZjdkZTNjMDJkOSJ9",
                          "previous_url": null,
                          "count": 2
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "data": [
                    {
                      "id": "bank_0e3fb07eba0b35b",
                      "signature_url": "https://lob-assets.com/letters/asd_asdfghjklqwertyu.pdf?version=45&expires=1234567890&signature=a",
                      "description": "Example bank account",
                      "metadata": {},
                      "routing_number": "122100024",
                      "account_number": "1234564789",
                      "account_type": "company",
                      "signatory": "John Doe",
                      "bank_name": "JPMORGAN CHASE BANK, NA",
                      "verified": true,
                      "date_created": "2019-03-30T13:13:22.200Z",
                      "date_modified": "2019-03-30T13:13:23.385Z",
                      "object": "bank_account"
                    },
                    {
                      "id": "bank_eba93f7de3c02d9",
                      "description": "Example bank account",
                      "metadata": {},
                      "routing_number": "122100024",
                      "account_number": "1234564789",
                      "account_type": "company",
                      "signatory": "John Doe",
                      "bank_name": "JPMORGAN CHASE BANK, NA",
                      "verified": true,
                      "date_created": "2019-03-30T13:11:06.809Z",
                      "date_modified": "2019-03-30T13:11:07.872Z",
                      "object": "bank_account"
                    }
                  ],
                  "object": "list",
                  "next_url": "https://api.lob.com/v1/bank_accounts?limit=2&after=eyJkYXRlT2Zmc2V0IjoiMjAxOS0wMy0zMFQxMzoxMTowNi44MDlaIiwiaWRPZmZzZXQiOiJiYW5rX2ViYTkzZjdkZTNjMDJkOSJ9",
                  "previous_url": null,
                  "count": 2
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/BankAccounts0Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "invalid",
                            "message": "routing_number is required",
                            "status_code": 422
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "invalid",
                    "message": "routing_number is required",
                    "status_code": 422
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Bank Accounts"
        ],
        "summary": "bank_account_create",
        "description": "Creates a new bank account with the provided properties. Bank accounts created in live mode will need to be verified via micro deposits before being able to send live checks. The deposits will appear in the bank account in 2-3 business days and have the description \"VERIFICATION\".",
        "operationId": "bank_account_create",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Content-Type"
                },
                {}
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "routing_number",
                  "account_number",
                  "account_type",
                  "signatory"
                ],
                "type": "object",
                "properties": {
                  "routing_number": {
                    "maxLength": 9,
                    "minLength": 9,
                    "type": "string",
                    "description": "Must be a <a href=\"https://www.frbservices.org/index.html\" target=\"_blank\">valid US routing number</a>.",
                    "examples": [
                      "322271627"
                    ]
                  },
                  "account_number": {
                    "maxLength": 17,
                    "type": "string",
                    "examples": [
                      "123456789"
                    ]
                  },
                  "account_type": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/AccountType"
                      },
                      {}
                    ]
                  },
                  "signatory": {
                    "maxLength": 30,
                    "type": "string",
                    "description": "The signatory associated with your account. This name will be printed on checks created with this bank account. If you prefer to use a custom signature image on your checks instead, please create your bank account from the <a href=\"https://dashboard.lob.com/#/login\" target=\"_blank\">Dashboard</a>.",
                    "examples": [
                      "Jane Doe"
                    ]
                  },
                  "description": {
                    "maxLength": 255,
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "An internal description that identifies this resource. Must be no longer than 255 characters.",
                    "examples": [
                      "Test Bank Account"
                    ]
                  },
                  "check_template": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/CheckTemplate"
                      },
                      {}
                    ]
                  },
                  "fractional_routing_number": {
                    "type": "string",
                    "description": "The fractional routing number for your home bank account. Required for the `jpm` check template only. Please contact a bank representative if you do not know the fractional routing number associated with your home bank institution."
                  },
                  "city": {
                    "type": "string",
                    "description": "The city associated with your home bank account. Required for the `jpm` check template only. Please contact a bank representative if you do not know the city associated with your home bank institution."
                  },
                  "state": {
                    "type": "string",
                    "description": "The state associated with your home bank account. Required for the `jpm` check template only. Please contact a bank representative if you do not know the state associated with your home bank institution."
                  },
                  "zipcode": {
                    "type": "string",
                    "description": "The zipcode associated with your home bank account. Required for the `jpm` check template only. Please contact a bank representative if you do not know the zipcode associated with your home bank institution."
                  },
                  "metadata": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Use metadata to store custom information for tagging and labeling back to your internal systems. Must be an object with up to 20 key-value pairs. Keys must be at most 40 characters and values must be at most 500 characters. Neither can contain the characters `\"` and `\\`. i.e. '{\"customer_id\" : \"NEWYORK2015\"}' Nested objects are not supported.  See [Metadata](#section/Metadata) for more information."
                  }
                },
                "contentMediaType": "application/x-www-form-urlencoded"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Returns a bank_account object",
            "headers": {
              "ratelimit-limit": {
                "description": "The rate limit for a given endpoint.",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "The rate limit for a given endpoint.",
                      "examples": [
                        "150"
                      ],
                      "contentMediaType": "text/plain"
                    },
                    "example": "150"
                  }
                }
              },
              "ratelimit-remaining": {
                "description": "The number of requests remaining in the current window.",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "The number of requests remaining in the current window.",
                      "examples": [
                        "100"
                      ],
                      "contentMediaType": "text/plain"
                    },
                    "example": "100"
                  }
                }
              },
              "ratelimit-reset": {
                "description": "The time at which the rate limit window resets in  <a href=\"https://en.wikipedia.org/wiki/Unix_time\" target=\"_blank\">UTC epoch seconds</a>\n",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "The time at which the rate limit window resets in  <a href=\"https://en.wikipedia.org/wiki/Unix_time\" target=\"_blank\">UTC epoch seconds</a>\n",
                      "examples": [
                        "1528749846"
                      ],
                      "contentMediaType": "text/plain"
                    },
                    "example": "1528749846"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/bank_account"
                    },
                    {
                      "examples": [
                        {
                          "id": "bank_8cad8df5354d33f",
                          "signature_url": "https://lob-assets.com/letters/asd_asdfghjklqwertyu.pdf?version=45&expires=1234567890&signature=a",
                          "description": "Test Bank Account",
                          "metadata": {},
                          "routing_number": "322271627",
                          "fractional_routing_number": "25-3/440",
                          "check_template": "jpm",
                          "account_number": "123456789",
                          "account_type": "company",
                          "signatory": "John Doe",
                          "bank_name": "J.P. MORGAN CHASE BANK, N.A.,",
                          "bank_city": "Columbus",
                          "bank_state": "OH",
                          "bank_zip": "43240",
                          "verified": false,
                          "date_created": "2015-11-06T19:24:24.440Z",
                          "date_modified": "2015-11-06T19:24:24.440Z",
                          "object": "bank_account"
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "id": "bank_8cad8df5354d33f",
                  "signature_url": "https://lob-assets.com/letters/asd_asdfghjklqwertyu.pdf?version=45&expires=1234567890&signature=a",
                  "description": "Test Bank Account",
                  "metadata": {},
                  "routing_number": "322271627",
                  "fractional_routing_number": "25-3/440",
                  "check_template": "jpm",
                  "account_number": "123456789",
                  "account_type": "company",
                  "signatory": "John Doe",
                  "bank_name": "J.P. MORGAN CHASE BANK, N.A.,",
                  "bank_city": "Columbus",
                  "bank_state": "OH",
                  "bank_zip": "43240",
                  "verified": false,
                  "date_created": "2015-11-06T19:24:24.440Z",
                  "date_modified": "2015-11-06T19:24:24.440Z",
                  "object": "bank_account"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/BankAccounts0Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "invalid",
                            "message": "routing_number is required",
                            "status_code": 422
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "invalid",
                    "message": "routing_number is required",
                    "status_code": 422
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/billing_groups/{bg_id}": {
      "get": {
        "tags": [
          "Billing Groups"
        ],
        "summary": "billing_group_retrieve",
        "description": "Retrieves the details of an existing billing_group. You need only supply the unique billing_group identifier that was returned upon billing_group creation.",
        "operationId": "billing_group_retrieve",
        "parameters": [
          {
            "name": "bg_id",
            "in": "path",
            "description": "id of the billing_group",
            "required": true,
            "style": "simple",
            "schema": {
              "pattern": "^bg_[a-zA-Z0-9]+$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a billing_group object.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/billing_group"
                    },
                    {
                      "examples": [
                        {
                          "id": "bg_c94e83ca2cd5121",
                          "name": "Marketing Dept",
                          "description": "Usage group used for the Marketing Dept resource sends",
                          "date_created": "2017-11-07T22:56:10.962Z",
                          "date_modified": "2017-11-07T22:56:10.962Z",
                          "object": "billing_group"
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "id": "bg_c94e83ca2cd5121",
                  "name": "Marketing Dept",
                  "description": "Usage group used for the Marketing Dept resource sends",
                  "date_created": "2017-11-07T22:56:10.962Z",
                  "date_modified": "2017-11-07T22:56:10.962Z",
                  "object": "billing_group"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/BillingGroups0Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "not_found",
                            "message": "billing_group not found",
                            "status_code": 404
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "not_found",
                    "message": "billing_group not found",
                    "status_code": 404
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Billing Groups"
        ],
        "summary": "billing_group_update",
        "description": "Updates all editable attributes of the billing_group with the given id.",
        "operationId": "billing_group_update",
        "parameters": [
          {
            "name": "bg_id",
            "in": "path",
            "description": "id of the billing_group",
            "required": true,
            "style": "simple",
            "schema": {
              "pattern": "^bg_[a-zA-Z0-9]+$",
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Content-Type"
                },
                {}
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "maxLength": 255,
                    "type": "string",
                    "description": "Description of the billing group.",
                    "examples": [
                      "Usage group used for the Marketing Dept resource sends"
                    ]
                  },
                  "name": {
                    "maxLength": 255,
                    "type": "string",
                    "description": "Name of the billing group.",
                    "examples": [
                      "Marketing Dept"
                    ]
                  }
                },
                "contentMediaType": "application/x-www-form-urlencoded"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Returns a billing group object",
            "headers": {
              "ratelimit-limit": {
                "description": "The rate limit for a given endpoint.",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "The rate limit for a given endpoint.",
                      "examples": [
                        "150"
                      ],
                      "contentMediaType": "text/plain"
                    },
                    "example": "150"
                  }
                }
              },
              "ratelimit-remaining": {
                "description": "The number of requests remaining in the current window.",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "The number of requests remaining in the current window.",
                      "examples": [
                        "100"
                      ],
                      "contentMediaType": "text/plain"
                    },
                    "example": "100"
                  }
                }
              },
              "ratelimit-reset": {
                "description": "The time at which the rate limit window resets in  <a href=\"https://en.wikipedia.org/wiki/Unix_time\" target=\"_blank\">UTC epoch seconds</a>\n",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "The time at which the rate limit window resets in  <a href=\"https://en.wikipedia.org/wiki/Unix_time\" target=\"_blank\">UTC epoch seconds</a>\n",
                      "examples": [
                        "1528749846"
                      ],
                      "contentMediaType": "text/plain"
                    },
                    "example": "1528749846"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/billing_group"
                    },
                    {
                      "examples": [
                        {
                          "id": "bg_c94e83ca2cd5121",
                          "name": "Marketing Dept",
                          "description": "Usage group used for the Marketing Dept resource sends",
                          "date_created": "2017-11-07T22:56:10.962Z",
                          "date_modified": "2017-11-07T22:56:10.962Z",
                          "object": "billing_group"
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "id": "bg_c94e83ca2cd5121",
                  "name": "Marketing Dept",
                  "description": "Usage group used for the Marketing Dept resource sends",
                  "date_created": "2017-11-07T22:56:10.962Z",
                  "date_modified": "2017-11-07T22:56:10.962Z",
                  "object": "billing_group"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/BillingGroups0Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "invalid",
                            "message": "message about incorrect parameter",
                            "status_code": 422
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "invalid",
                    "message": "message about incorrect parameter",
                    "status_code": 422
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/billing_groups": {
      "get": {
        "tags": [
          "Billing Groups"
        ],
        "summary": "billing_groups_list",
        "description": "Returns a list of your billing_groups. The billing_groups are returned sorted by creation date, with the most recently created billing_groups appearing first.",
        "operationId": "billing_groups_list",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "How many results to return.",
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 100.0,
              "minimum": 1.0,
              "type": "integer",
              "contentEncoding": "int32",
              "default": 10,
              "examples": [
                10
              ]
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "An integer that designates the offset at which to begin returning results. Defaults to 0.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "contentEncoding": "int32",
              "default": 0
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Request that the response include the total count by specifying `include=[\"total_count\"]`.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "date_created",
            "in": "query",
            "description": "Filter by date created. Accepted formats are ISO-8601 date or datetime, e.g. `{ \"gt\": \"2012-01-01\", \"lt\": \"2012-01-31T12:34:56Z\" }` where `gt` is >, `lt` is <, `gte` is ≥, and `lte` is ≤.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          {
            "name": "date_modified",
            "in": "query",
            "description": "Filter by date modified. Accepted formats are ISO-8601 date or datetime, e.g. `{ \"gt\": \"2012-01-01\", \"lt\": \"2012-01-31T12:34:56Z\" }` where `gt` is >, `lt` is <, `gte` is ≥, and `lte` is ≤.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "Sorts items by ascending or descending dates. Use either `date_created` or `date_modified`, not both.",
            "style": "form",
            "explode": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/sort_by"
                },
                {
                  "description": "Sorts items by ascending or descending dates. Use either `date_created` or `date_modified`, not both."
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of billing_groups.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/BillingGroupsResponse"
                    },
                    {
                      "examples": [
                        {
                          "data": [
                            {
                              "id": "bg_d5a5a89da9106f8",
                              "description": "Test billing_group",
                              "metadata": {},
                              "date_created": "2019-07-27T23:49:01.511Z",
                              "date_modified": "2019-07-27T23:49:01.511Z",
                              "object": "billing_group"
                            },
                            {
                              "id": "bg_59b2150ae120887",
                              "description": "Test billing_group",
                              "metadata": {},
                              "date_created": "2019-03-29T10:22:34.642Z",
                              "date_modified": "2019-03-29T10:22:34.642Z",
                              "object": "billing_group"
                            }
                          ],
                          "object": "list",
                          "next_url": null,
                          "prev_url": null,
                          "count": 2
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "data": [
                    {
                      "id": "bg_d5a5a89da9106f8",
                      "description": "Test billing_group",
                      "metadata": {},
                      "date_created": "2019-07-27T23:49:01.511Z",
                      "date_modified": "2019-07-27T23:49:01.511Z",
                      "object": "billing_group"
                    },
                    {
                      "id": "bg_59b2150ae120887",
                      "description": "Test billing_group",
                      "metadata": {},
                      "date_created": "2019-03-29T10:22:34.642Z",
                      "date_modified": "2019-03-29T10:22:34.642Z",
                      "object": "billing_group"
                    }
                  ],
                  "object": "list",
                  "next_url": null,
                  "prev_url": null,
                  "count": 2
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/BillingGroups0Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "not_found",
                            "message": "billing_group not found",
                            "status_code": 404
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "not_found",
                    "message": "billing_group not found",
                    "status_code": 404
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Billing Groups"
        ],
        "summary": "billing_group_create",
        "description": "Creates a new billing_group with the provided properties.",
        "operationId": "billing_group_create",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/billing_group_editable"
                  },
                  {
                    "examples": [
                      {
                        "name": "Marketing Dept",
                        "description": "Usage group used for the Marketing Dept resource sends"
                      }
                    ]
                  }
                ],
                "contentMediaType": "application/json"
              },
              "example": {
                "name": "Marketing Dept",
                "description": "Usage group used for the Marketing Dept resource sends"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns a billing group object",
            "headers": {
              "ratelimit-limit": {
                "description": "The rate limit for a given endpoint.",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "The rate limit for a given endpoint.",
                      "examples": [
                        "150"
                      ],
                      "contentMediaType": "text/plain"
                    },
                    "example": "150"
                  }
                }
              },
              "ratelimit-remaining": {
                "description": "The number of requests remaining in the current window.",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "The number of requests remaining in the current window.",
                      "examples": [
                        "100"
                      ],
                      "contentMediaType": "text/plain"
                    },
                    "example": "100"
                  }
                }
              },
              "ratelimit-reset": {
                "description": "The time at which the rate limit window resets in  <a href=\"https://en.wikipedia.org/wiki/Unix_time\" target=\"_blank\">UTC epoch seconds</a>\n",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "The time at which the rate limit window resets in  <a href=\"https://en.wikipedia.org/wiki/Unix_time\" target=\"_blank\">UTC epoch seconds</a>\n",
                      "examples": [
                        "1528749846"
                      ],
                      "contentMediaType": "text/plain"
                    },
                    "example": "1528749846"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/billing_group"
                    },
                    {
                      "examples": [
                        {
                          "id": "bg_c94e83ca2cd5121",
                          "name": "Marketing Dept",
                          "description": "Usage group used for the Marketing Dept resource sends",
                          "date_created": "2017-11-07T22:56:10.962Z",
                          "date_modified": "2017-11-07T22:56:10.962Z",
                          "object": "billing_group"
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "id": "bg_c94e83ca2cd5121",
                  "name": "Marketing Dept",
                  "description": "Usage group used for the Marketing Dept resource sends",
                  "date_created": "2017-11-07T22:56:10.962Z",
                  "date_modified": "2017-11-07T22:56:10.962Z",
                  "object": "billing_group"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/BillingGroups0Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "invalid",
                            "message": "message about incorrect parameter",
                            "status_code": 422
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "invalid",
                    "message": "message about incorrect parameter",
                    "status_code": 422
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/buckslips/{buckslip_id}/orders": {
      "get": {
        "tags": [
          "Buckslip Orders"
        ],
        "summary": "buckslip_orders_retrieve",
        "description": "Retrieves the buckslip orders associated with the given buckslip id.",
        "operationId": "buckslip_orders_retrieve",
        "parameters": [
          {
            "name": "buckslip_id",
            "in": "path",
            "description": "The ID of the buckslip to which the buckslip orders belong.",
            "required": true,
            "style": "simple",
            "schema": {
              "pattern": "^bck_[a-zA-Z0-9]+$",
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "How many results to return.",
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 100.0,
              "minimum": 1.0,
              "type": "integer",
              "contentEncoding": "int32",
              "default": 10,
              "examples": [
                10
              ]
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "An integer that designates the offset at which to begin returning results. Defaults to 0.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "contentEncoding": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the buckslip orders associated with the given buckslip id",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/BuckslipsOrdersResponse"
                    },
                    {
                      "examples": [
                        {
                          "data": [
                            {
                              "id": "bo_e0f8a0562a06bea7f",
                              "buckslip_id": "bck_6afffd19045076c",
                              "status": "available",
                              "quantity_ordered": 5000,
                              "unit_price": 0.75,
                              "cancelled_reason": "No longer needed",
                              "availability_date": "2021-10-12T21:41:48.326Z",
                              "expected_availability_date": "2021-11-04T21:03:18.871Z",
                              "date_created": "2021-10-07T21:03:18.871Z",
                              "date_modified": "2021-10-16T01:00:30.144Z",
                              "object": "buckslip_order"
                            }
                          ],
                          "object": "list",
                          "next_url": null,
                          "previous_url": null,
                          "count": 1
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "data": [
                    {
                      "id": "bo_e0f8a0562a06bea7f",
                      "buckslip_id": "bck_6afffd19045076c",
                      "status": "available",
                      "quantity_ordered": 5000,
                      "unit_price": 0.75,
                      "cancelled_reason": "No longer needed",
                      "availability_date": "2021-10-12T21:41:48.326Z",
                      "expected_availability_date": "2021-11-04T21:03:18.871Z",
                      "date_created": "2021-10-07T21:03:18.871Z",
                      "date_modified": "2021-10-16T01:00:30.144Z",
                      "object": "buckslip_order"
                    }
                  ],
                  "object": "list",
                  "next_url": null,
                  "previous_url": null,
                  "count": 1
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/BuckslipsOrders0Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "not_found",
                            "message": "buckslip not found",
                            "status_code": 404
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "not_found",
                    "message": "buckslip not found",
                    "status_code": 404
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Buckslip Orders"
        ],
        "summary": "buckslip_order_create",
        "description": "Creates a new buckslip order given information",
        "operationId": "buckslip_order_create",
        "parameters": [
          {
            "name": "buckslip_id",
            "in": "path",
            "description": "The ID of the buckslip to which the buckslip orders belong.",
            "required": true,
            "style": "simple",
            "schema": {
              "pattern": "^bck_[a-zA-Z0-9]+$",
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Content-Type"
                },
                {}
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "quantity"
                ],
                "type": "object",
                "properties": {
                  "quantity": {
                    "maximum": 10000000.0,
                    "minimum": 5000.0,
                    "type": "integer",
                    "description": "The quantity of buckslips in the order (minimum 5,000).",
                    "contentEncoding": "int32",
                    "examples": [
                      10000
                    ]
                  }
                },
                "contentMediaType": "application/x-www-form-urlencoded"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Buckslip order created successfully",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/buckslip_order"
                    },
                    {
                      "examples": [
                        {
                          "id": "bo_e0f8a0562a06bea7f",
                          "buckslip_id": "bck_6afffd19045076c",
                          "status": "available",
                          "quantity_ordered": 10000,
                          "unit_price": 0.75,
                          "cancelled_reason": "No longer needed",
                          "availability_date": "2021-10-12T21:41:48.326Z",
                          "expected_availability_date": "2021-11-04T21:03:18.871Z",
                          "date_created": "2021-10-07T21:03:18.871Z",
                          "date_modified": "2021-10-16T01:00:30.144Z",
                          "object": "buckslip_order"
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "examples": {
                  "basic": {
                    "value": {
                      "id": "bo_e0f8a0562a06bea7f",
                      "buckslip_id": "bck_6afffd19045076c",
                      "status": "available",
                      "quantity_ordered": 10000,
                      "unit_price": 0.75,
                      "cancelled_reason": "No longer needed",
                      "availability_date": "2021-10-12T21:41:48.326Z",
                      "expected_availability_date": "2021-11-04T21:03:18.871Z",
                      "date_created": "2021-10-07T21:03:18.871Z",
                      "date_modified": "2021-10-16T01:00:30.144Z",
                      "object": "buckslip_order"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/BuckslipsOrders0Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "invalid",
                            "message": "message about incorrect parameter",
                            "status_code": 422
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "invalid",
                    "message": "message about incorrect parameter",
                    "status_code": 422
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/buckslips": {
      "get": {
        "tags": [
          "Buckslips"
        ],
        "summary": "buckslips_list",
        "description": "Returns a list of your buckslips. The buckslips are returned sorted by creation date, with the most recently created buckslips appearing first.",
        "operationId": "buckslips_list",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "How many results to return.",
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 100.0,
              "minimum": 1.0,
              "type": "integer",
              "contentEncoding": "int32",
              "default": 10,
              "examples": [
                10
              ]
            }
          },
          {
            "name": "before/after",
            "in": "query",
            "description": "`before` and `after` are both optional but only one of them can be in the query at a time.",
            "style": "form",
            "explode": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/beforeafter"
                },
                {
                  "description": "`before` and `after` are both optional but only one of them can be in the query at a time."
                }
              ]
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Request that the response include the total count by specifying `include=[\"total_count\"]`.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of buckslip objects",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuckslipsResponse"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Buckslips0Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "invalid",
                            "message": "message about incorrect parameter",
                            "status_code": 422
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "invalid",
                    "message": "message about incorrect parameter",
                    "status_code": 422
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Buckslips"
        ],
        "summary": "buckslip_create",
        "description": "Creates a new buckslip given information",
        "operationId": "buckslip_create",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/buckslip_editable"
                  },
                  {
                    "examples": [
                      {
                        "description": "Test buckslip",
                        "front": "https://s3-us-west-2.amazonaws.com/public.lob.com/assets/buckslip.pdf",
                        "back": "https://s3-us-west-2.amazonaws.com/public.lob.com/assets/buckslip.pdf"
                      }
                    ]
                  }
                ],
                "contentMediaType": "application/json"
              },
              "example": {
                "description": "Test buckslip",
                "front": "https://s3-us-west-2.amazonaws.com/public.lob.com/assets/buckslip.pdf",
                "back": "https://s3-us-west-2.amazonaws.com/public.lob.com/assets/buckslip.pdf"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Buckslip created successfully",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/buckslip"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Buckslips0Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "invalid",
                            "message": "message about incorrect parameter",
                            "status_code": 422
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "invalid",
                    "message": "message about incorrect parameter",
                    "status_code": 422
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/buckslips/{buckslip_id}": {
      "get": {
        "tags": [
          "Buckslips"
        ],
        "summary": "buckslip_retrieve",
        "description": "Retrieves the details of an existing buckslip. You need only supply the unique customer identifier that was returned upon buckslip creation.",
        "operationId": "buckslip_retrieve",
        "parameters": [
          {
            "name": "buckslip_id",
            "in": "path",
            "description": "id of the buckslip",
            "required": true,
            "style": "simple",
            "schema": {
              "pattern": "^bck_[a-zA-Z0-9]+$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a buckslip object",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/buckslip"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Buckslips0Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "invalid",
                            "message": "message about incorrect parameter",
                            "status_code": 422
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "invalid",
                    "message": "message about incorrect parameter",
                    "status_code": 422
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "Buckslips"
        ],
        "summary": "buckslip_update",
        "description": "Update the details of an existing buckslip. You need only supply the unique identifier that was returned upon buckslip creation.",
        "operationId": "buckslip_update",
        "parameters": [
          {
            "name": "buckslip_id",
            "in": "path",
            "description": "id of the buckslip",
            "required": true,
            "style": "simple",
            "schema": {
              "pattern": "^bck_[a-zA-Z0-9]+$",
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Content-Type"
                },
                {}
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "maxLength": 255,
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Description of the buckslip.",
                    "examples": [
                      "Test buckslip"
                    ]
                  },
                  "auto_reorder": {
                    "type": "boolean",
                    "description": "Allows for auto reordering",
                    "examples": [
                      true
                    ]
                  },
                  "reorder_quantity": {
                    "maximum": 10000000.0,
                    "minimum": 5000.0,
                    "type": "number",
                    "description": "The quantity of items to be reordered (only required when auto_reorder is true).",
                    "contentEncoding": "double"
                  }
                },
                "contentMediaType": "application/x-www-form-urlencoded"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Returns a buckslip object",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/buckslip"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Buckslips0Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "invalid",
                            "message": "message about incorrect parameter",
                            "status_code": 422
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "invalid",
                    "message": "message about incorrect parameter",
                    "status_code": 422
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Buckslips"
        ],
        "summary": "buckslip_delete",
        "description": "Delete an existing buckslip. You need only supply the unique identifier that was returned upon buckslip creation.",
        "operationId": "buckslip_delete",
        "parameters": [
          {
            "name": "buckslip_id",
            "in": "path",
            "description": "id of the buckslip",
            "required": true,
            "style": "simple",
            "schema": {
              "pattern": "^bck_[a-zA-Z0-9]+$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted the buckslip",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuckslipsResponse1"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Buckslips0Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "invalid",
                            "message": "message about incorrect parameter",
                            "status_code": 422
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "invalid",
                    "message": "message about incorrect parameter",
                    "status_code": 422
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/campaigns": {
      "get": {
        "tags": [
          "Campaigns"
        ],
        "summary": "campaigns_list",
        "description": "Returns a list of your campaigns. The campaigns are returned sorted by creation date, with the most recently created campaigns appearing first.",
        "operationId": "campaigns_list",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "How many results to return.",
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 100.0,
              "minimum": 1.0,
              "type": "integer",
              "contentEncoding": "int32",
              "default": 10,
              "examples": [
                10
              ]
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Request that the response include the total count by specifying `include=[\"total_count\"]`.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "before/after",
            "in": "query",
            "description": "`before` and `after` are both optional but only one of them can be in the query at a time.",
            "style": "form",
            "explode": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/beforeafter"
                },
                {
                  "description": "`before` and `after` are both optional but only one of them can be in the query at a time."
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A dictionary with a data property that contains an array of up to `limit` campaigns. Each entry in the array is a separate campaign. The previous and next page of campaigns can be retrieved by calling the endpoint contained in the `previous_url` and `next_url` fields in the API response respectively.<br>If no more campaigns are available beyond the current set of returned results, the `next_url` field will be empty.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/all_campaigns"
                    },
                    {
                      "examples": [
                        {
                          "data": [
                            {
                              "id": "cmp_e05ee61ff80764b",
                              "billing_group_id": "bg_fe3079dcdd80e5ae",
                              "name": "My Campaign",
                              "description": "My Campaign's description",
                              "schedule_type": "immediate",
                              "send_date": null,
                              "target_delivery_date": null,
                              "cancel_window_campaign_minutes": 60,
                              "metadata": {},
                              "use_type": "marketing",
                              "is_draft": true,
                              "deleted": false,
                              "creatives": [],
                              "uploads": [],
                              "auto_cancel_if_ncoa": false,
                              "date_created": "2017-09-05T17:47:53.767Z",
                              "date_modified": "2017-09-05T17:47:53.767Z",
                              "object": "campaign"
                            }
                          ],
                          "object": "list",
                          "previous_url": null,
                          "next_url": null,
                          "count": 1
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "data": [
                    {
                      "id": "cmp_e05ee61ff80764b",
                      "billing_group_id": "bg_fe3079dcdd80e5ae",
                      "name": "My Campaign",
                      "description": "My Campaign's description",
                      "schedule_type": "immediate",
                      "send_date": null,
                      "target_delivery_date": null,
                      "cancel_window_campaign_minutes": 60,
                      "metadata": {},
                      "use_type": "marketing",
                      "is_draft": true,
                      "deleted": false,
                      "creatives": [],
                      "uploads": [],
                      "auto_cancel_if_ncoa": false,
                      "date_created": "2017-09-05T17:47:53.767Z",
                      "date_modified": "2017-09-05T17:47:53.767Z",
                      "object": "campaign"
                    }
                  ],
                  "object": "list",
                  "previous_url": null,
                  "next_url": null,
                  "count": 1
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Campaigns"
        ],
        "summary": "campaign_create",
        "description": "Creates a new campaign with the provided properties. See how to launch your first campaign [here](https://help.lob.com/print-and-mail/building-a-mail-strategy/campaign-or-triggered-sends/launch-your-first-campaign).",
        "operationId": "campaign_create",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Content-Type"
                },
                {}
              ]
            }
          },
          {
            "name": "x-lang-output",
            "in": "header",
            "description": "* `native` - Translate response to the native language of the country in the request\n* `match` - match the response to the language in the request\n\nDefault response is in English.",
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/x-lang-output1"
                },
                {
                  "description": "* `native` - Translate response to the native language of the country in the request\n* `match` - match the response to the language in the request\n\nDefault response is in English."
                }
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "name",
                  "schedule_type",
                  "use_type"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the campaign.",
                    "examples": [
                      "My Demo Campaign"
                    ]
                  },
                  "schedule_type": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/cmp_schedule_type"
                      },
                      {}
                    ]
                  },
                  "use_type": {},
                  "billing_group_id": {
                    "pattern": "^bg_[a-zA-Z0-9]+$",
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Unique identifier prefixed with `bg_`."
                  },
                  "description": {
                    "maxLength": 255,
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "An internal description that identifies this resource. Must be no longer than 255 characters.",
                    "examples": [
                      "My Campaign's description"
                    ]
                  },
                  "target_delivery_date": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "If `schedule_type` is `target_delivery_date`, provide a targeted delivery date for mail pieces in this campaign.",
                    "contentEncoding": "date-time"
                  },
                  "send_date": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "If `schedule_type` is `scheduled_send_date`, provide a date to send this campaign.",
                    "contentEncoding": "date-time"
                  },
                  "cancel_window_campaign_minutes": {
                    "type": [
                      "integer",
                      "null"
                    ],
                    "description": "A window, in minutes, within which the campaign can be canceled.",
                    "contentEncoding": "int32"
                  },
                  "metadata": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Use metadata to store custom information for tagging and labeling back to your internal systems. Must be an object with up to 20 key-value pairs. Keys must be at most 40 characters and values must be at most 500 characters. Neither can contain the characters `\"` and `\\`. i.e. '{\"customer_id\" : \"NEWYORK2015\"}' Nested objects are not supported.  See [Metadata](#section/Metadata) for more information."
                  },
                  "auto_cancel_if_ncoa": {
                    "type": "boolean",
                    "description": "Whether or not a mail piece should be automatically canceled and not sent if the address is updated via NCOA."
                  }
                },
                "contentMediaType": "application/x-www-form-urlencoded"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Campaign created successfully",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/campaign"
                    },
                    {
                      "examples": [
                        {
                          "id": "cmp_e05ee61ff80764b",
                          "billing_group_id": "bg_fe3079dcdd80e5ae",
                          "name": "My Campaign",
                          "description": "My Campaign's description",
                          "schedule_type": "immediate",
                          "cancel_window_campaign_minutes": 60,
                          "metadata": {},
                          "use_type": "marketing",
                          "is_draft": true,
                          "deleted": false,
                          "creatives": [],
                          "uploads": [],
                          "auto_cancel_if_ncoa": false,
                          "date_created": "2017-09-05T17:47:53.767Z",
                          "date_modified": "2017-09-05T17:47:53.767Z",
                          "object": "campaign"
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "id": "cmp_e05ee61ff80764b",
                  "billing_group_id": "bg_fe3079dcdd80e5ae",
                  "name": "My Campaign",
                  "description": "My Campaign's description",
                  "schedule_type": "immediate",
                  "cancel_window_campaign_minutes": 60,
                  "metadata": {},
                  "use_type": "marketing",
                  "is_draft": true,
                  "deleted": false,
                  "creatives": [],
                  "uploads": [],
                  "auto_cancel_if_ncoa": false,
                  "date_created": "2017-09-05T17:47:53.767Z",
                  "date_modified": "2017-09-05T17:47:53.767Z",
                  "object": "campaign"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Campaigns0Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "not_found",
                            "message": "campaign not found",
                            "status_code": 404
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "not_found",
                    "message": "campaign not found",
                    "status_code": 404
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/campaigns/{cmp_id}": {
      "get": {
        "tags": [
          "Campaigns"
        ],
        "summary": "campaign_retrieve",
        "description": "Retrieves the details of an existing campaign. You need only supply the unique campaign identifier that was returned upon campaign creation.",
        "operationId": "campaign_retrieve",
        "parameters": [
          {
            "name": "cmp_id",
            "in": "path",
            "description": "id of the campaign",
            "required": true,
            "style": "simple",
            "schema": {
              "pattern": "^cmp_[a-zA-Z0-9]+$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a campaign object",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/campaign"
                    },
                    {
                      "examples": [
                        {
                          "id": "cmp_e05ee61ff80764b",
                          "billing_group_id": "bg_fe3079dcdd80e5ae",
                          "name": "My Campaign",
                          "description": "My Campaign's description",
                          "schedule_type": "immediate",
                          "cancel_window_campaign_minutes": 60,
                          "metadata": {},
                          "use_type": "marketing",
                          "is_draft": true,
                          "deleted": false,
                          "creatives": [],
                          "uploads": [],
                          "auto_cancel_if_ncoa": false,
                          "date_created": "2017-09-05T17:47:53.767Z",
                          "date_modified": "2017-09-05T17:47:53.767Z",
                          "object": "campaign"
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "id": "cmp_e05ee61ff80764b",
                  "billing_group_id": "bg_fe3079dcdd80e5ae",
                  "name": "My Campaign",
                  "description": "My Campaign's description",
                  "schedule_type": "immediate",
                  "cancel_window_campaign_minutes": 60,
                  "metadata": {},
                  "use_type": "marketing",
                  "is_draft": true,
                  "deleted": false,
                  "creatives": [],
                  "uploads": [],
                  "auto_cancel_if_ncoa": false,
                  "date_created": "2017-09-05T17:47:53.767Z",
                  "date_modified": "2017-09-05T17:47:53.767Z",
                  "object": "campaign"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Campaigns0Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "not_found",
                            "message": "campaign not found",
                            "status_code": 404
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "not_found",
                    "message": "campaign not found",
                    "status_code": 404
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "Campaigns"
        ],
        "summary": "campaign_update",
        "description": "Update the details of an existing campaign. You need only supply the unique identifier that was returned upon campaign creation.",
        "operationId": "campaign_update",
        "parameters": [
          {
            "name": "cmp_id",
            "in": "path",
            "description": "id of the campaign",
            "required": true,
            "style": "simple",
            "schema": {
              "pattern": "^cmp_[a-zA-Z0-9]+$",
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Content-Type"
                },
                {}
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "maxLength": 255,
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "An internal description that identifies this resource. Must be no longer than 255 characters.",
                    "examples": [
                      "Test campaign"
                    ]
                  },
                  "schedule_type": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/cmp_schedule_type"
                      },
                      {}
                    ]
                  },
                  "target_delivery_date": {
                    "type": "string",
                    "description": "If `schedule_type` is `target_delivery_date`, provide a targeted delivery date for mail pieces in this campaign.",
                    "contentEncoding": "date-time"
                  },
                  "send_date": {
                    "type": "string",
                    "description": "If `schedule_type` is `scheduled_send_date`, provide a date to send this campaign.",
                    "contentEncoding": "date-time"
                  },
                  "cancel_window_campaign_minutes": {
                    "type": "integer",
                    "description": "A window, in minutes, within which the campaign can be canceled.",
                    "contentEncoding": "int32"
                  },
                  "metadata": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Use metadata to store custom information for tagging and labeling back to your internal systems. Must be an object with up to 20 key-value pairs. Keys must be at most 40 characters and values must be at most 500 characters. Neither can contain the characters `\"` and `\\`. i.e. '{\"customer_id\" : \"NEWYORK2015\"}' Nested objects are not supported.  See [Metadata](#section/Metadata) for more information."
                  },
                  "is_draft": {
                    "type": "boolean",
                    "description": "Whether or not the campaign is still a draft. Can either be excluded or `false`."
                  },
                  "use_type": {},
                  "auto_cancel_if_ncoa": {
                    "type": "boolean",
                    "description": "Whether or not a mail piece should be automatically canceled and not sent if the address is updated via NCOA."
                  }
                },
                "contentMediaType": "application/x-www-form-urlencoded"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Returns a campaign object",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/campaign"
                    },
                    {
                      "examples": [
                        {
                          "id": "cmp_e05ee61ff80764b",
                          "billing_group_id": "bg_fe3079dcdd80e5ae",
                          "name": "My Campaign",
                          "description": "My Campaign's description",
                          "schedule_type": "immediate",
                          "cancel_window_campaign_minutes": 60,
                          "metadata": {},
                          "use_type": "marketing",
                          "is_draft": true,
                          "deleted": false,
                          "creatives": [],
                          "uploads": [],
                          "auto_cancel_if_ncoa": false,
                          "date_created": "2017-09-05T17:47:53.767Z",
                          "date_modified": "2017-09-05T17:47:53.767Z",
                          "object": "campaign"
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "id": "cmp_e05ee61ff80764b",
                  "billing_group_id": "bg_fe3079dcdd80e5ae",
                  "name": "My Campaign",
                  "description": "My Campaign's description",
                  "schedule_type": "immediate",
                  "cancel_window_campaign_minutes": 60,
                  "metadata": {},
                  "use_type": "marketing",
                  "is_draft": true,
                  "deleted": false,
                  "creatives": [],
                  "uploads": [],
                  "auto_cancel_if_ncoa": false,
                  "date_created": "2017-09-05T17:47:53.767Z",
                  "date_modified": "2017-09-05T17:47:53.767Z",
                  "object": "campaign"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Campaigns0Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "not_found",
                            "message": "campaign not found",
                            "status_code": 404
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "not_found",
                    "message": "campaign not found",
                    "status_code": 404
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Campaigns"
        ],
        "summary": "campaign_delete",
        "description": "Delete an existing campaign. You need only supply the unique identifier that was returned upon campaign creation. Deleting a campaign also deletes any associated mail pieces that have been created but not sent. A campaign's `send_date` matches its associated mail pieces' `send_date`s.",
        "operationId": "campaign_delete",
        "parameters": [
          {
            "name": "cmp_id",
            "in": "path",
            "description": "id of the campaign",
            "required": true,
            "style": "simple",
            "schema": {
              "pattern": "^cmp_[a-zA-Z0-9]+$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted the campaign.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CampaignsResponse4"
                    },
                    {
                      "examples": [
                        {
                          "id": "cmp_e05ee61ff80764b",
                          "deleted": true
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "id": "cmp_e05ee61ff80764b",
                  "deleted": true
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Campaigns0Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "not_found",
                            "message": "campaign not found",
                            "status_code": 404
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "not_found",
                    "message": "campaign not found",
                    "status_code": 404
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/campaigns/{cmp_id}/send": {
      "post": {
        "tags": [
          "Campaigns"
        ],
        "summary": "campaign_send",
        "description": "Sends a campaign. You need only supply the unique campaign identifier that was returned upon campaign creation.",
        "operationId": "campaign_send",
        "parameters": [
          {
            "name": "cmp_id",
            "in": "path",
            "description": "id of the campaign",
            "required": true,
            "style": "simple",
            "schema": {
              "pattern": "^cmp_[a-zA-Z0-9]+$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a campaign object",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/campaign"
                    },
                    {
                      "examples": [
                        {
                          "id": "cmp_e05ee61ff80764b",
                          "billing_group_id": "bg_fe3079dcdd80e5ae",
                          "name": "My Campaign",
                          "description": "My Campaign's description",
                          "schedule_type": "immediate",
                          "cancel_window_campaign_minutes": 60,
                          "metadata": {},
                          "use_type": "marketing",
                          "is_draft": true,
                          "deleted": false,
                          "creatives": [],
                          "uploads": [],
                          "auto_cancel_if_ncoa": false,
                          "date_created": "2017-09-05T17:47:53.767Z",
                          "date_modified": "2017-09-05T17:47:53.767Z",
                          "object": "campaign"
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "id": "cmp_e05ee61ff80764b",
                  "billing_group_id": "bg_fe3079dcdd80e5ae",
                  "name": "My Campaign",
                  "description": "My Campaign's description",
                  "schedule_type": "immediate",
                  "cancel_window_campaign_minutes": 60,
                  "metadata": {},
                  "use_type": "marketing",
                  "is_draft": true,
                  "deleted": false,
                  "creatives": [],
                  "uploads": [],
                  "auto_cancel_if_ncoa": false,
                  "date_created": "2017-09-05T17:47:53.767Z",
                  "date_modified": "2017-09-05T17:47:53.767Z",
                  "object": "campaign"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CampaignsSend0Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "not_found",
                            "message": "campaign not found",
                            "status_code": 404
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "not_found",
                    "message": "campaign not found",
                    "status_code": 404
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/cards/{card_id}/orders": {
      "get": {
        "tags": [
          "Card Orders"
        ],
        "summary": "card_orders_retrieve",
        "description": "Retrieves the card orders associated with the given card id.",
        "operationId": "card_orders_retrieve",
        "parameters": [
          {
            "name": "card_id",
            "in": "path",
            "description": "The ID of the card to which the card orders belong.",
            "required": true,
            "style": "simple",
            "schema": {
              "pattern": "^card_[a-zA-Z0-9]+$",
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "How many results to return.",
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 100.0,
              "minimum": 1.0,
              "type": "integer",
              "contentEncoding": "int32",
              "default": 10,
              "examples": [
                10
              ]
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "An integer that designates the offset at which to begin returning results. Defaults to 0.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "contentEncoding": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the card orders associated with the given card id",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CardsOrdersResponse"
                    },
                    {
                      "examples": [
                        {
                          "data": [
                            {
                              "id": "co_e0f8a0562a06bea7f",
                              "card_id": "card_6afffd19045076c",
                              "status": "available",
                              "inventory": 9500,
                              "quantity_ordered": 10000,
                              "unit_price": 0.75,
                              "cancelled_reason": "No longer needed",
                              "availability_date": "2021-10-12T21:41:48.326Z",
                              "expected_availability_date": "2021-11-04T21:03:18.871Z",
                              "date_created": "2021-10-07T21:03:18.871Z",
                              "date_modified": "2021-10-16T01:00:30.144Z",
                              "object": "card_order"
                            }
                          ],
                          "object": "list",
                          "next_url": null,
                          "previous_url": null,
                          "count": 1
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "data": [
                    {
                      "id": "co_e0f8a0562a06bea7f",
                      "card_id": "card_6afffd19045076c",
                      "status": "available",
                      "inventory": 9500,
                      "quantity_ordered": 10000,
                      "unit_price": 0.75,
                      "cancelled_reason": "No longer needed",
                      "availability_date": "2021-10-12T21:41:48.326Z",
                      "expected_availability_date": "2021-11-04T21:03:18.871Z",
                      "date_created": "2021-10-07T21:03:18.871Z",
                      "date_modified": "2021-10-16T01:00:30.144Z",
                      "object": "card_order"
                    }
                  ],
                  "object": "list",
                  "next_url": null,
                  "previous_url": null,
                  "count": 1
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CardsOrders0Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "not_found",
                            "message": "card not found",
                            "status_code": 404
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "not_found",
                    "message": "card not found",
                    "status_code": 404
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Card Orders"
        ],
        "summary": "card_order_create",
        "description": "Creates a new card order given information",
        "operationId": "card_order_create",
        "parameters": [
          {
            "name": "card_id",
            "in": "path",
            "description": "The ID of the card to which the card orders belong.",
            "required": true,
            "style": "simple",
            "schema": {
              "pattern": "^card_[a-zA-Z0-9]+$",
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Content-Type"
                },
                {}
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "quantity"
                ],
                "type": "object",
                "properties": {
                  "quantity": {
                    "maximum": 10000000.0,
                    "minimum": 10000.0,
                    "type": "integer",
                    "description": "The quantity of cards in the order (minimum 10,000).",
                    "contentEncoding": "int32",
                    "examples": [
                      10000
                    ]
                  }
                },
                "contentMediaType": "application/x-www-form-urlencoded"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Card order created successfully",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/card_order"
                    },
                    {
                      "examples": [
                        {
                          "id": "co_e0f8a0562a06bea7f",
                          "card_id": "card_6afffd19045076c",
                          "status": "available",
                          "inventory": 9500,
                          "quantity_ordered": 10000,
                          "unit_price": 0.75,
                          "cancelled_reason": "No longer needed",
                          "availability_date": "2021-10-12T21:41:48.326Z",
                          "expected_availability_date": "2021-11-04T21:03:18.871Z",
                          "date_created": "2021-10-07T21:03:18.871Z",
                          "date_modified": "2021-10-16T01:00:30.144Z",
                          "object": "card_order"
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "examples": {
                  "basic": {
                    "value": {
                      "id": "co_e0f8a0562a06bea7f",
                      "card_id": "card_6afffd19045076c",
                      "status": "available",
                      "inventory": 9500,
                      "quantity_ordered": 10000,
                      "unit_price": 0.75,
                      "cancelled_reason": "No longer needed",
                      "availability_date": "2021-10-12T21:41:48.326Z",
                      "expected_availability_date": "2021-11-04T21:03:18.871Z",
                      "date_created": "2021-10-07T21:03:18.871Z",
                      "date_modified": "2021-10-16T01:00:30.144Z",
                      "object": "card_order"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CardsOrders0Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "not_found",
                            "message": "to address not found",
                            "status_code": 404
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "not_found",
                    "message": "to address not found",
                    "status_code": 404
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/cards": {
      "get": {
        "tags": [
          "Cards"
        ],
        "summary": "cards_list",
        "description": "Returns a list of your cards. The cards are returned sorted by creation date, with the most recently created addresses appearing first.",
        "operationId": "cards_list",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "How many results to return.",
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 100.0,
              "minimum": 1.0,
              "type": "integer",
              "contentEncoding": "int32",
              "default": 10,
              "examples": [
                10
              ]
            }
          },
          {
            "name": "before/after",
            "in": "query",
            "description": "`before` and `after` are both optional but only one of them can be in the query at a time.",
            "style": "form",
            "explode": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/beforeafter"
                },
                {
                  "description": "`before` and `after` are both optional but only one of them can be in the query at a time."
                }
              ]
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Request that the response include the total count by specifying `include=[\"total_count\"]`.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of card objects",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CardsResponse"
                    },
                    {
                      "examples": [
                        {
                          "data": [
                            {
                              "id": "card_7a6d73c5c8457fc",
                              "account_id": "fa9ea650fc7b31a89f92",
                              "description": null,
                              "url": "https://lob-assets.com/cards/card_c51ae96f5cebf3e.pdf?version=v1&expires=1636910992&signature=mnsDH2DAxdkN9VibdlLMxJC86sME5WYDqkNtmvGwdNsAaUWfbnv0rJhJ1mR8Ol4uxQq61j5wYZ0r3s-lBkQfDA",
                              "size": "2.125x3.375",
                              "auto_reorder": false,
                              "reorder_quantity": null,
                              "raw_url": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_raw.pdf?version=v1&expires=1636910992&signature=-bZo31FMAp2vmNaZKyXn_Qa4APqwtNinw76FrQ7uyQejFZw6VBQQYfoiQ642iXh0H2K5i2aOo8_BAkt3UJdVDw",
                              "front_original_url": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_raw.pdf?version=v1&expires=1636910992&signature=-bZo31FMAp2vmNaZKyXn_Qa4APqwtNinw76FrQ7uyQejFZw6VBQQYfoiQ642iXh0H2K5i2aOo8_BAkt3UJdVDw",
                              "back_original_url": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_raw.pdf?version=v1&expires=1636910992&signature=-bZo31FMAp2vmNaZKyXn_Qa4APqwtNinw76FrQ7uyQejFZw6VBQQYfoiQ642iXh0H2K5i2aOo8_BAkt3UJdVDw",
                              "thumbnails": [
                                {
                                  "small": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_small_1.png?version=v1&expires=1636910992&signature=mrv8JDvpZK4I8WUGH0tPdtK-My5oes0Ltj_gL7BDw96SpCTTeZFHkz81SzclyFP9dQRtlsvAsjcuGcTBvCvOCg",
                                  "medium": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_medium_1.png?version=v1&expires=1636910992&signature=VgL_2Ckm_kxKiWGgWtdNoy9HHOn8dGYSVOn7UqyCbwdbVlUtx28TRN4Bo8Iru3n0keKp9He0YhKT1ILotznMDA",
                                  "large": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_large_1.png?version=v1&expires=1636910992&signature=FKSzymA13j-CQ0uk20cGHZTzT3vimzNBYrgp-xifLFg4mMdo1BZALR5O0aF_jVhsX614hKP35ONdYl47TQxXAw"
                                }
                              ],
                              "available_quantity": 10000,
                              "pending_quantity": 0,
                              "countries": null,
                              "status": "rendered",
                              "mode": "test",
                              "orientation": "horizontal",
                              "threshold_amount": 0,
                              "date_created": "2021-03-24T22:51:42.838Z",
                              "date_modified": "2021-03-24T22:51:42.838Z",
                              "send_date": "2021-03-24T22:51:42.838Z",
                              "object": "card"
                            }
                          ],
                          "object": "list",
                          "previous_url": null,
                          "next_url": null,
                          "count": 1
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "data": [
                    {
                      "id": "card_7a6d73c5c8457fc",
                      "account_id": "fa9ea650fc7b31a89f92",
                      "description": null,
                      "url": "https://lob-assets.com/cards/card_c51ae96f5cebf3e.pdf?version=v1&expires=1636910992&signature=mnsDH2DAxdkN9VibdlLMxJC86sME5WYDqkNtmvGwdNsAaUWfbnv0rJhJ1mR8Ol4uxQq61j5wYZ0r3s-lBkQfDA",
                      "size": "2.125x3.375",
                      "auto_reorder": false,
                      "reorder_quantity": null,
                      "raw_url": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_raw.pdf?version=v1&expires=1636910992&signature=-bZo31FMAp2vmNaZKyXn_Qa4APqwtNinw76FrQ7uyQejFZw6VBQQYfoiQ642iXh0H2K5i2aOo8_BAkt3UJdVDw",
                      "front_original_url": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_raw.pdf?version=v1&expires=1636910992&signature=-bZo31FMAp2vmNaZKyXn_Qa4APqwtNinw76FrQ7uyQejFZw6VBQQYfoiQ642iXh0H2K5i2aOo8_BAkt3UJdVDw",
                      "back_original_url": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_raw.pdf?version=v1&expires=1636910992&signature=-bZo31FMAp2vmNaZKyXn_Qa4APqwtNinw76FrQ7uyQejFZw6VBQQYfoiQ642iXh0H2K5i2aOo8_BAkt3UJdVDw",
                      "thumbnails": [
                        {
                          "small": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_small_1.png?version=v1&expires=1636910992&signature=mrv8JDvpZK4I8WUGH0tPdtK-My5oes0Ltj_gL7BDw96SpCTTeZFHkz81SzclyFP9dQRtlsvAsjcuGcTBvCvOCg",
                          "medium": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_medium_1.png?version=v1&expires=1636910992&signature=VgL_2Ckm_kxKiWGgWtdNoy9HHOn8dGYSVOn7UqyCbwdbVlUtx28TRN4Bo8Iru3n0keKp9He0YhKT1ILotznMDA",
                          "large": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_large_1.png?version=v1&expires=1636910992&signature=FKSzymA13j-CQ0uk20cGHZTzT3vimzNBYrgp-xifLFg4mMdo1BZALR5O0aF_jVhsX614hKP35ONdYl47TQxXAw"
                        }
                      ],
                      "available_quantity": 10000,
                      "pending_quantity": 0,
                      "countries": null,
                      "status": "rendered",
                      "mode": "test",
                      "orientation": "horizontal",
                      "threshold_amount": 0,
                      "date_created": "2021-03-24T22:51:42.838Z",
                      "date_modified": "2021-03-24T22:51:42.838Z",
                      "send_date": "2021-03-24T22:51:42.838Z",
                      "object": "card"
                    }
                  ],
                  "object": "list",
                  "previous_url": null,
                  "next_url": null,
                  "count": 1
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Cards0Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "not_found",
                            "message": "to address not found",
                            "status_code": 404
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "not_found",
                    "message": "to address not found",
                    "status_code": 404
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Cards"
        ],
        "summary": "card_create",
        "description": "Creates a new card given information",
        "operationId": "card_create",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/card_editable"
                  },
                  {
                    "examples": [
                      {
                        "description": "Test card",
                        "front": "https://s3-us-west-2.amazonaws.com/public.lob.com/assets/card_horizontal.pdf",
                        "back": "https://s3-us-west-2.amazonaws.com/public.lob.com/assets/card_horizontal.pdf",
                        "size": "2.125x3.375"
                      }
                    ]
                  }
                ],
                "contentMediaType": "application/json"
              },
              "example": {
                "description": "Test card",
                "front": "https://s3-us-west-2.amazonaws.com/public.lob.com/assets/card_horizontal.pdf",
                "back": "https://s3-us-west-2.amazonaws.com/public.lob.com/assets/card_horizontal.pdf",
                "size": "2.125x3.375"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Card created successfully",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/card"
                    },
                    {
                      "examples": [
                        {
                          "id": "card_7a6d73c5c8457fc",
                          "account_id": "fa9ea650fc7b31a89f92",
                          "description": "Test card",
                          "url": "https://lob-assets.com/cards/card_c51ae96f5cebf3e.pdf?version=v1&expires=1636910992&signature=mnsDH2DAxdkN9VibdlLMxJC86sME5WYDqkNtmvGwdNsAaUWfbnv0rJhJ1mR8Ol4uxQq61j5wYZ0r3s-lBkQfDA",
                          "size": "2.125x3.375",
                          "auto_reorder": false,
                          "reorder_quantity": null,
                          "raw_url": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_raw.pdf?version=v1&expires=1636910992&signature=-bZo31FMAp2vmNaZKyXn_Qa4APqwtNinw76FrQ7uyQejFZw6VBQQYfoiQ642iXh0H2K5i2aOo8_BAkt3UJdVDw",
                          "front_original_url": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_raw.pdf?version=v1&expires=1636910992&signature=-bZo31FMAp2vmNaZKyXn_Qa4APqwtNinw76FrQ7uyQejFZw6VBQQYfoiQ642iXh0H2K5i2aOo8_BAkt3UJdVDw",
                          "back_original_url": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_raw.pdf?version=v1&expires=1636910992&signature=-bZo31FMAp2vmNaZKyXn_Qa4APqwtNinw76FrQ7uyQejFZw6VBQQYfoiQ642iXh0H2K5i2aOo8_BAkt3UJdVDw",
                          "thumbnails": [
                            {
                              "small": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_small_1.png?version=v1&expires=1636910992&signature=mrv8JDvpZK4I8WUGH0tPdtK-My5oes0Ltj_gL7BDw96SpCTTeZFHkz81SzclyFP9dQRtlsvAsjcuGcTBvCvOCg",
                              "medium": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_medium_1.png?version=v1&expires=1636910992&signature=VgL_2Ckm_kxKiWGgWtdNoy9HHOn8dGYSVOn7UqyCbwdbVlUtx28TRN4Bo8Iru3n0keKp9He0YhKT1ILotznMDA",
                              "large": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_large_1.png?version=v1&expires=1636910992&signature=FKSzymA13j-CQ0uk20cGHZTzT3vimzNBYrgp-xifLFg4mMdo1BZALR5O0aF_jVhsX614hKP35ONdYl47TQxXAw"
                            },
                            {
                              "small": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_small_2.png?version=v1&expires=1636910992&signature=IWsmPa_ULlv2yyqjX564d_YfHHY_M7i9YxDnw-WXDr2jtOFcArmRZQbnHeE9g_rYxnddJbgosuv8-c2utiu7Cg",
                              "medium": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_medium_2.png?version=v1&expires=1636910992&signature=zxK7VKGiTvz5Ywrkaydd0v3GcYf58R7A08J4tNfI7-aiNODDcTF3l0MqY13n9Pyc8RXSdD0XVBY-OpbA1VM-Ag",
                              "large": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_large_2.png?version=v1&expires=1636910992&signature=r0OFUhh315ZwN0raMZdIwJd2oCIEYsz0BABaMxIuO1PKTD0ckGWrhcGdzk2dlWQ6vSvp0CUQ5k1RXGqkIIqkDw"
                            }
                          ],
                          "available_quantity": 10000,
                          "pending_quantity": 0,
                          "countries": null,
                          "status": "rendered",
                          "mode": "test",
                          "orientation": "horizontal",
                          "threshold_amount": 0,
                          "date_created": "2021-03-24T22:51:42.838Z",
                          "date_modified": "2021-03-24T22:51:42.838Z",
                          "send_date": "2021-03-24T22:51:42.838Z",
                          "object": "card"
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "examples": {
                  "basic": {
                    "value": {
                      "id": "card_7a6d73c5c8457fc",
                      "account_id": "fa9ea650fc7b31a89f92",
                      "description": "Test card",
                      "url": "https://lob-assets.com/cards/card_c51ae96f5cebf3e.pdf?version=v1&expires=1636910992&signature=mnsDH2DAxdkN9VibdlLMxJC86sME5WYDqkNtmvGwdNsAaUWfbnv0rJhJ1mR8Ol4uxQq61j5wYZ0r3s-lBkQfDA",
                      "size": "2.125x3.375",
                      "auto_reorder": false,
                      "reorder_quantity": null,
                      "raw_url": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_raw.pdf?version=v1&expires=1636910992&signature=-bZo31FMAp2vmNaZKyXn_Qa4APqwtNinw76FrQ7uyQejFZw6VBQQYfoiQ642iXh0H2K5i2aOo8_BAkt3UJdVDw",
                      "front_original_url": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_raw.pdf?version=v1&expires=1636910992&signature=-bZo31FMAp2vmNaZKyXn_Qa4APqwtNinw76FrQ7uyQejFZw6VBQQYfoiQ642iXh0H2K5i2aOo8_BAkt3UJdVDw",
                      "back_original_url": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_raw.pdf?version=v1&expires=1636910992&signature=-bZo31FMAp2vmNaZKyXn_Qa4APqwtNinw76FrQ7uyQejFZw6VBQQYfoiQ642iXh0H2K5i2aOo8_BAkt3UJdVDw",
                      "thumbnails": [
                        {
                          "small": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_small_1.png?version=v1&expires=1636910992&signature=mrv8JDvpZK4I8WUGH0tPdtK-My5oes0Ltj_gL7BDw96SpCTTeZFHkz81SzclyFP9dQRtlsvAsjcuGcTBvCvOCg",
                          "medium": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_medium_1.png?version=v1&expires=1636910992&signature=VgL_2Ckm_kxKiWGgWtdNoy9HHOn8dGYSVOn7UqyCbwdbVlUtx28TRN4Bo8Iru3n0keKp9He0YhKT1ILotznMDA",
                          "large": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_large_1.png?version=v1&expires=1636910992&signature=FKSzymA13j-CQ0uk20cGHZTzT3vimzNBYrgp-xifLFg4mMdo1BZALR5O0aF_jVhsX614hKP35ONdYl47TQxXAw"
                        },
                        {
                          "small": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_small_2.png?version=v1&expires=1636910992&signature=IWsmPa_ULlv2yyqjX564d_YfHHY_M7i9YxDnw-WXDr2jtOFcArmRZQbnHeE9g_rYxnddJbgosuv8-c2utiu7Cg",
                          "medium": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_medium_2.png?version=v1&expires=1636910992&signature=zxK7VKGiTvz5Ywrkaydd0v3GcYf58R7A08J4tNfI7-aiNODDcTF3l0MqY13n9Pyc8RXSdD0XVBY-OpbA1VM-Ag",
                          "large": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_large_2.png?version=v1&expires=1636910992&signature=r0OFUhh315ZwN0raMZdIwJd2oCIEYsz0BABaMxIuO1PKTD0ckGWrhcGdzk2dlWQ6vSvp0CUQ5k1RXGqkIIqkDw"
                        }
                      ],
                      "available_quantity": 10000,
                      "pending_quantity": 0,
                      "countries": null,
                      "status": "rendered",
                      "mode": "test",
                      "orientation": "horizontal",
                      "threshold_amount": 0,
                      "date_created": "2021-03-24T22:51:42.838Z",
                      "date_modified": "2021-03-24T22:51:42.838Z",
                      "send_date": "2021-03-24T22:51:42.838Z",
                      "object": "card"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Cards0Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "not_found",
                            "message": "to address not found",
                            "status_code": 404
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "not_found",
                    "message": "to address not found",
                    "status_code": 404
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/cards/{card_id}": {
      "get": {
        "tags": [
          "Cards"
        ],
        "summary": "card_retrieve",
        "description": "Retrieves the details of an existing card. You need only supply the unique customer identifier that was returned upon card creation.",
        "operationId": "card_retrieve",
        "parameters": [
          {
            "name": "card_id",
            "in": "path",
            "description": "id of the card",
            "required": true,
            "style": "simple",
            "schema": {
              "pattern": "^card_[a-zA-Z0-9]+$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a card object",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/card"
                    },
                    {
                      "examples": [
                        {
                          "id": "card_7a6d73c5c8457fc",
                          "account_id": "fa9ea650fc7b31a89f92",
                          "description": "Test card",
                          "url": "https://lob-assets.com/cards/card_c51ae96f5cebf3e.pdf?version=v1&expires=1636910992&signature=mnsDH2DAxdkN9VibdlLMxJC86sME5WYDqkNtmvGwdNsAaUWfbnv0rJhJ1mR8Ol4uxQq61j5wYZ0r3s-lBkQfDA",
                          "size": "2.125x3.375",
                          "auto_reorder": false,
                          "reorder_quantity": null,
                          "raw_url": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_raw.pdf?version=v1&expires=1636910992&signature=-bZo31FMAp2vmNaZKyXn_Qa4APqwtNinw76FrQ7uyQejFZw6VBQQYfoiQ642iXh0H2K5i2aOo8_BAkt3UJdVDw",
                          "front_original_url": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_raw.pdf?version=v1&expires=1636910992&signature=-bZo31FMAp2vmNaZKyXn_Qa4APqwtNinw76FrQ7uyQejFZw6VBQQYfoiQ642iXh0H2K5i2aOo8_BAkt3UJdVDw",
                          "back_original_url": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_raw.pdf?version=v1&expires=1636910992&signature=-bZo31FMAp2vmNaZKyXn_Qa4APqwtNinw76FrQ7uyQejFZw6VBQQYfoiQ642iXh0H2K5i2aOo8_BAkt3UJdVDw",
                          "thumbnails": [
                            {
                              "small": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_small_1.png?version=v1&expires=1636910992&signature=mrv8JDvpZK4I8WUGH0tPdtK-My5oes0Ltj_gL7BDw96SpCTTeZFHkz81SzclyFP9dQRtlsvAsjcuGcTBvCvOCg",
                              "medium": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_medium_1.png?version=v1&expires=1636910992&signature=VgL_2Ckm_kxKiWGgWtdNoy9HHOn8dGYSVOn7UqyCbwdbVlUtx28TRN4Bo8Iru3n0keKp9He0YhKT1ILotznMDA",
                              "large": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_large_1.png?version=v1&expires=1636910992&signature=FKSzymA13j-CQ0uk20cGHZTzT3vimzNBYrgp-xifLFg4mMdo1BZALR5O0aF_jVhsX614hKP35ONdYl47TQxXAw"
                            },
                            {
                              "small": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_small_2.png?version=v1&expires=1636910992&signature=IWsmPa_ULlv2yyqjX564d_YfHHY_M7i9YxDnw-WXDr2jtOFcArmRZQbnHeE9g_rYxnddJbgosuv8-c2utiu7Cg",
                              "medium": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_medium_2.png?version=v1&expires=1636910992&signature=zxK7VKGiTvz5Ywrkaydd0v3GcYf58R7A08J4tNfI7-aiNODDcTF3l0MqY13n9Pyc8RXSdD0XVBY-OpbA1VM-Ag",
                              "large": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_large_2.png?version=v1&expires=1636910992&signature=r0OFUhh315ZwN0raMZdIwJd2oCIEYsz0BABaMxIuO1PKTD0ckGWrhcGdzk2dlWQ6vSvp0CUQ5k1RXGqkIIqkDw"
                            }
                          ],
                          "available_quantity": 10000,
                          "pending_quantity": 0,
                          "countries": null,
                          "status": "rendered",
                          "mode": "test",
                          "orientation": "horizontal",
                          "threshold_amount": 0,
                          "date_created": "2021-03-24T22:51:42.838Z",
                          "date_modified": "2021-03-24T22:51:42.838Z",
                          "send_date": "2021-03-24T22:51:42.838Z",
                          "object": "card"
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "examples": {
                  "basic": {
                    "value": {
                      "id": "card_7a6d73c5c8457fc",
                      "account_id": "fa9ea650fc7b31a89f92",
                      "description": "Test card",
                      "url": "https://lob-assets.com/cards/card_c51ae96f5cebf3e.pdf?version=v1&expires=1636910992&signature=mnsDH2DAxdkN9VibdlLMxJC86sME5WYDqkNtmvGwdNsAaUWfbnv0rJhJ1mR8Ol4uxQq61j5wYZ0r3s-lBkQfDA",
                      "size": "2.125x3.375",
                      "auto_reorder": false,
                      "reorder_quantity": null,
                      "raw_url": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_raw.pdf?version=v1&expires=1636910992&signature=-bZo31FMAp2vmNaZKyXn_Qa4APqwtNinw76FrQ7uyQejFZw6VBQQYfoiQ642iXh0H2K5i2aOo8_BAkt3UJdVDw",
                      "front_original_url": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_raw.pdf?version=v1&expires=1636910992&signature=-bZo31FMAp2vmNaZKyXn_Qa4APqwtNinw76FrQ7uyQejFZw6VBQQYfoiQ642iXh0H2K5i2aOo8_BAkt3UJdVDw",
                      "back_original_url": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_raw.pdf?version=v1&expires=1636910992&signature=-bZo31FMAp2vmNaZKyXn_Qa4APqwtNinw76FrQ7uyQejFZw6VBQQYfoiQ642iXh0H2K5i2aOo8_BAkt3UJdVDw",
                      "thumbnails": [
                        {
                          "small": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_small_1.png?version=v1&expires=1636910992&signature=mrv8JDvpZK4I8WUGH0tPdtK-My5oes0Ltj_gL7BDw96SpCTTeZFHkz81SzclyFP9dQRtlsvAsjcuGcTBvCvOCg",
                          "medium": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_medium_1.png?version=v1&expires=1636910992&signature=VgL_2Ckm_kxKiWGgWtdNoy9HHOn8dGYSVOn7UqyCbwdbVlUtx28TRN4Bo8Iru3n0keKp9He0YhKT1ILotznMDA",
                          "large": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_large_1.png?version=v1&expires=1636910992&signature=FKSzymA13j-CQ0uk20cGHZTzT3vimzNBYrgp-xifLFg4mMdo1BZALR5O0aF_jVhsX614hKP35ONdYl47TQxXAw"
                        },
                        {
                          "small": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_small_2.png?version=v1&expires=1636910992&signature=IWsmPa_ULlv2yyqjX564d_YfHHY_M7i9YxDnw-WXDr2jtOFcArmRZQbnHeE9g_rYxnddJbgosuv8-c2utiu7Cg",
                          "medium": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_medium_2.png?version=v1&expires=1636910992&signature=zxK7VKGiTvz5Ywrkaydd0v3GcYf58R7A08J4tNfI7-aiNODDcTF3l0MqY13n9Pyc8RXSdD0XVBY-OpbA1VM-Ag",
                          "large": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_large_2.png?version=v1&expires=1636910992&signature=r0OFUhh315ZwN0raMZdIwJd2oCIEYsz0BABaMxIuO1PKTD0ckGWrhcGdzk2dlWQ6vSvp0CUQ5k1RXGqkIIqkDw"
                        }
                      ],
                      "available_quantity": 10000,
                      "pending_quantity": 0,
                      "countries": null,
                      "status": "rendered",
                      "mode": "test",
                      "orientation": "horizontal",
                      "threshold_amount": 0,
                      "date_created": "2021-03-24T22:51:42.838Z",
                      "date_modified": "2021-03-24T22:51:42.838Z",
                      "send_date": "2021-03-24T22:51:42.838Z",
                      "object": "card"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Cards0Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "not_found",
                            "message": "to address not found",
                            "status_code": 404
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "not_found",
                    "message": "to address not found",
                    "status_code": 404
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Cards"
        ],
        "summary": "card_update",
        "description": "Update the details of an existing card. You need only supply the unique identifier that was returned upon card creation.",
        "operationId": "card_update",
        "parameters": [
          {
            "name": "card_id",
            "in": "path",
            "description": "id of the card",
            "required": true,
            "style": "simple",
            "schema": {
              "pattern": "^card_[a-zA-Z0-9]+$",
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Content-Type"
                },
                {}
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "maxLength": 255,
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Description of the card.",
                    "examples": [
                      "Test card"
                    ]
                  },
                  "auto_reorder": {
                    "type": "boolean",
                    "description": "Allows for auto reordering",
                    "examples": [
                      true
                    ]
                  },
                  "reorder_quantity": {
                    "maximum": 10000000.0,
                    "minimum": 10000.0,
                    "type": "number",
                    "description": "The quantity of items to be reordered (only required when auto_reorder is true).",
                    "contentEncoding": "double"
                  }
                },
                "contentMediaType": "application/x-www-form-urlencoded"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Returns a card object",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/card"
                    },
                    {
                      "examples": [
                        {
                          "id": "card_7a6d73c5c8457fc",
                          "account_id": "fa9ea650fc7b31a89f92",
                          "description": "Test card",
                          "url": "https://lob-assets.com/cards/card_c51ae96f5cebf3e.pdf?version=v1&expires=1636910992&signature=mnsDH2DAxdkN9VibdlLMxJC86sME5WYDqkNtmvGwdNsAaUWfbnv0rJhJ1mR8Ol4uxQq61j5wYZ0r3s-lBkQfDA",
                          "size": "2.125x3.375",
                          "auto_reorder": false,
                          "reorder_quantity": null,
                          "raw_url": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_raw.pdf?version=v1&expires=1636910992&signature=-bZo31FMAp2vmNaZKyXn_Qa4APqwtNinw76FrQ7uyQejFZw6VBQQYfoiQ642iXh0H2K5i2aOo8_BAkt3UJdVDw",
                          "front_original_url": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_raw.pdf?version=v1&expires=1636910992&signature=-bZo31FMAp2vmNaZKyXn_Qa4APqwtNinw76FrQ7uyQejFZw6VBQQYfoiQ642iXh0H2K5i2aOo8_BAkt3UJdVDw",
                          "back_original_url": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_raw.pdf?version=v1&expires=1636910992&signature=-bZo31FMAp2vmNaZKyXn_Qa4APqwtNinw76FrQ7uyQejFZw6VBQQYfoiQ642iXh0H2K5i2aOo8_BAkt3UJdVDw",
                          "thumbnails": [
                            {
                              "small": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_small_1.png?version=v1&expires=1636910992&signature=mrv8JDvpZK4I8WUGH0tPdtK-My5oes0Ltj_gL7BDw96SpCTTeZFHkz81SzclyFP9dQRtlsvAsjcuGcTBvCvOCg",
                              "medium": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_medium_1.png?version=v1&expires=1636910992&signature=VgL_2Ckm_kxKiWGgWtdNoy9HHOn8dGYSVOn7UqyCbwdbVlUtx28TRN4Bo8Iru3n0keKp9He0YhKT1ILotznMDA",
                              "large": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_large_1.png?version=v1&expires=1636910992&signature=FKSzymA13j-CQ0uk20cGHZTzT3vimzNBYrgp-xifLFg4mMdo1BZALR5O0aF_jVhsX614hKP35ONdYl47TQxXAw"
                            },
                            {
                              "small": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_small_2.png?version=v1&expires=1636910992&signature=IWsmPa_ULlv2yyqjX564d_YfHHY_M7i9YxDnw-WXDr2jtOFcArmRZQbnHeE9g_rYxnddJbgosuv8-c2utiu7Cg",
                              "medium": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_medium_2.png?version=v1&expires=1636910992&signature=zxK7VKGiTvz5Ywrkaydd0v3GcYf58R7A08J4tNfI7-aiNODDcTF3l0MqY13n9Pyc8RXSdD0XVBY-OpbA1VM-Ag",
                              "large": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_large_2.png?version=v1&expires=1636910992&signature=r0OFUhh315ZwN0raMZdIwJd2oCIEYsz0BABaMxIuO1PKTD0ckGWrhcGdzk2dlWQ6vSvp0CUQ5k1RXGqkIIqkDw"
                            }
                          ],
                          "available_quantity": 10000,
                          "pending_quantity": 0,
                          "countries": null,
                          "status": "rendered",
                          "mode": "test",
                          "orientation": "horizontal",
                          "threshold_amount": 0,
                          "date_created": "2021-03-24T22:51:42.838Z",
                          "date_modified": "2021-03-24T22:51:42.838Z",
                          "send_date": "2021-03-24T22:51:42.838Z",
                          "object": "card"
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "examples": {
                  "basic": {
                    "value": {
                      "id": "card_7a6d73c5c8457fc",
                      "account_id": "fa9ea650fc7b31a89f92",
                      "description": "Test card",
                      "url": "https://lob-assets.com/cards/card_c51ae96f5cebf3e.pdf?version=v1&expires=1636910992&signature=mnsDH2DAxdkN9VibdlLMxJC86sME5WYDqkNtmvGwdNsAaUWfbnv0rJhJ1mR8Ol4uxQq61j5wYZ0r3s-lBkQfDA",
                      "size": "2.125x3.375",
                      "auto_reorder": false,
                      "reorder_quantity": null,
                      "raw_url": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_raw.pdf?version=v1&expires=1636910992&signature=-bZo31FMAp2vmNaZKyXn_Qa4APqwtNinw76FrQ7uyQejFZw6VBQQYfoiQ642iXh0H2K5i2aOo8_BAkt3UJdVDw",
                      "front_original_url": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_raw.pdf?version=v1&expires=1636910992&signature=-bZo31FMAp2vmNaZKyXn_Qa4APqwtNinw76FrQ7uyQejFZw6VBQQYfoiQ642iXh0H2K5i2aOo8_BAkt3UJdVDw",
                      "back_original_url": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_raw.pdf?version=v1&expires=1636910992&signature=-bZo31FMAp2vmNaZKyXn_Qa4APqwtNinw76FrQ7uyQejFZw6VBQQYfoiQ642iXh0H2K5i2aOo8_BAkt3UJdVDw",
                      "thumbnails": [
                        {
                          "small": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_small_1.png?version=v1&expires=1636910992&signature=mrv8JDvpZK4I8WUGH0tPdtK-My5oes0Ltj_gL7BDw96SpCTTeZFHkz81SzclyFP9dQRtlsvAsjcuGcTBvCvOCg",
                          "medium": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_medium_1.png?version=v1&expires=1636910992&signature=VgL_2Ckm_kxKiWGgWtdNoy9HHOn8dGYSVOn7UqyCbwdbVlUtx28TRN4Bo8Iru3n0keKp9He0YhKT1ILotznMDA",
                          "large": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_large_1.png?version=v1&expires=1636910992&signature=FKSzymA13j-CQ0uk20cGHZTzT3vimzNBYrgp-xifLFg4mMdo1BZALR5O0aF_jVhsX614hKP35ONdYl47TQxXAw"
                        },
                        {
                          "small": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_small_2.png?version=v1&expires=1636910992&signature=IWsmPa_ULlv2yyqjX564d_YfHHY_M7i9YxDnw-WXDr2jtOFcArmRZQbnHeE9g_rYxnddJbgosuv8-c2utiu7Cg",
                          "medium": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_medium_2.png?version=v1&expires=1636910992&signature=zxK7VKGiTvz5Ywrkaydd0v3GcYf58R7A08J4tNfI7-aiNODDcTF3l0MqY13n9Pyc8RXSdD0XVBY-OpbA1VM-Ag",
                          "large": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_large_2.png?version=v1&expires=1636910992&signature=r0OFUhh315ZwN0raMZdIwJd2oCIEYsz0BABaMxIuO1PKTD0ckGWrhcGdzk2dlWQ6vSvp0CUQ5k1RXGqkIIqkDw"
                        }
                      ],
                      "available_quantity": 10000,
                      "pending_quantity": 0,
                      "countries": null,
                      "status": "rendered",
                      "mode": "test",
                      "orientation": "horizontal",
                      "threshold_amount": 0,
                      "date_created": "2021-03-24T22:51:42.838Z",
                      "date_modified": "2021-03-24T22:51:42.838Z",
                      "send_date": "2021-03-24T22:51:42.838Z",
                      "object": "card"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Cards0Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "not_found",
                            "message": "to address not found",
                            "status_code": 404
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "not_found",
                    "message": "to address not found",
                    "status_code": 404
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Cards"
        ],
        "summary": "card_delete",
        "description": "Delete an existing card. You need only supply the unique identifier that was returned upon card creation.",
        "operationId": "card_delete",
        "parameters": [
          {
            "name": "card_id",
            "in": "path",
            "description": "id of the card",
            "required": true,
            "style": "simple",
            "schema": {
              "pattern": "^card_[a-zA-Z0-9]+$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted the card",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CardsResponse5"
                    },
                    {
                      "examples": [
                        {
                          "id": "card_123456789",
                          "deleted": true
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "id": "card_123456789",
                  "deleted": true
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Cards0Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "not_found",
                            "message": "to address not found",
                            "status_code": 404
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "not_found",
                    "message": "to address not found",
                    "status_code": 404
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/checks": {
      "get": {
        "tags": [
          "Checks"
        ],
        "summary": "checks_list",
        "description": "Returns a list of your checks. The checks are returned sorted by creation date, with the most recently created checks appearing first.",
        "operationId": "checks_list",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "How many results to return.",
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 100.0,
              "minimum": 1.0,
              "type": "integer",
              "contentEncoding": "int32",
              "default": 10,
              "examples": [
                10
              ]
            }
          },
          {
            "name": "before/after",
            "in": "query",
            "description": "`before` and `after` are both optional but only one of them can be in the query at a time.",
            "style": "form",
            "explode": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/beforeafter"
                },
                {
                  "description": "`before` and `after` are both optional but only one of them can be in the query at a time."
                }
              ]
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Request that the response include the total count by specifying `include=[\"total_count\"]`.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "date_created",
            "in": "query",
            "description": "Filter by date created. Accepted formats are ISO-8601 date or datetime, e.g. `{ \"gt\": \"2012-01-01\", \"lt\": \"2012-01-31T12:34:56Z\" }` where `gt` is >, `lt` is <, `gte` is ≥, and `lte` is ≤.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          {
            "name": "metadata",
            "in": "query",
            "description": "Filter by metadata key-value pair`.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          {
            "name": "scheduled",
            "in": "query",
            "description": "* `true` - only return orders (past or future) where `send_date` is\ngreater than `date_created`\n* `false` - only return orders where `send_date` is equal to `date_created`",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "send_date",
            "in": "query",
            "description": "Filter by ISO-8601 date or datetime, e.g. `{ \"gt\": \"2012-01-01\", \"lt\": \"2012-01-31T12:34:56Z\" }` where `gt` is >, `lt` is <, `gte` is ≥, and `lte` is ≤.",
            "style": "form",
            "explode": true,
            "schema": {}
          },
          {
            "name": "mail_type",
            "in": "query",
            "description": "A string designating the mail postage type: * `usps_first_class` - (default) * `usps_standard` - a <a href=\"https://lob.com/pricing/print-mail#compare\" target=\"_blank\">cheaper option</a> which is less predictable and takes longer to deliver. `usps_standard` cannot be used with `4x6` postcards or for any postcards sent outside of the United States.",
            "style": "form",
            "explode": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/mail_type"
                },
                {
                  "description": "A string designating the mail postage type: * `usps_first_class` - (default) * `usps_standard` - a <a href=\"https://lob.com/pricing/print-mail#compare\" target=\"_blank\">cheaper option</a> which is less predictable and takes longer to deliver. `usps_standard` cannot be used with `4x6` postcards or for any postcards sent outside of the United States."
                }
              ]
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "Sorts items by ascending or descending dates. Use either `date_created` or `send_date`, not both.",
            "style": "form",
            "explode": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/sort_by1"
                },
                {
                  "description": "Sorts items by ascending or descending dates. Use either `date_created` or `send_date`, not both."
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A dictionary with a data property that contains an array of up to `limit` checks. Each entry in the array is a separate check. The previous and next page of checks can be retrieved by calling the endpoint contained in the `previous_url` and `next_url` fields in the API response respectively.<br>If no more checks are available beyond the current set of returned results, the `next_url` field will be empty.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/all_checks"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Checks0Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "not_found",
                            "message": "to address not found",
                            "status_code": 404
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "not_found",
                    "message": "to address not found",
                    "status_code": 404
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Checks"
        ],
        "summary": "check_create",
        "description": "Creates a new check with the provided properties.",
        "operationId": "check_create",
        "parameters": [
          {
            "name": "Idempotency-Key",
            "in": "header",
            "description": "A string of no longer than 256 characters that uniquely identifies this resource. For more help integrating idempotency keys, refer to our <a href=\"https://help.lob.com/print-and-mail/building-a-mail-strategy/managing-mail-settings#idempotent-requests-12\" target=\"_blank\">implementation guide</a>.",
            "style": "simple",
            "schema": {
              "maxLength": 256,
              "type": "string",
              "examples": [
                "026e7634-24d7-486c-a0bb-4a17fd0eebc5"
              ]
            }
          },
          {
            "name": "idempotency_key2",
            "in": "query",
            "description": "A string of no longer than 256 characters that uniquely identifies this resource. For more help integrating idempotency keys, refer to our <a href=\"https://help.lob.com/print-and-mail/building-a-mail-strategy/managing-mail-settings#idempotent-requests-12\" target=\"_blank\">implementation guide</a>.",
            "style": "form",
            "explode": true,
            "schema": {
              "maxLength": 256,
              "type": "string",
              "examples": [
                "026e7634-24d7-486c-a0bb-4a17fd0eebc5"
              ]
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns a check object",
            "headers": {
              "ratelimit-limit": {
                "description": "The rate limit for a given endpoint.",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "The rate limit for a given endpoint.",
                      "examples": [
                        "150"
                      ],
                      "contentMediaType": "text/plain"
                    },
                    "example": "150"
                  }
                }
              },
              "ratelimit-remaining": {
                "description": "The number of requests remaining in the current window.",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "The number of requests remaining in the current window.",
                      "examples": [
                        "100"
                      ],
                      "contentMediaType": "text/plain"
                    },
                    "example": "100"
                  }
                }
              },
              "ratelimit-reset": {
                "description": "The time at which the rate limit window resets in  <a href=\"https://en.wikipedia.org/wiki/Unix_time\" target=\"_blank\">UTC epoch seconds</a>\n",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "The time at which the rate limit window resets in  <a href=\"https://en.wikipedia.org/wiki/Unix_time\" target=\"_blank\">UTC epoch seconds</a>\n",
                      "examples": [
                        "1528749846"
                      ],
                      "contentMediaType": "text/plain"
                    },
                    "example": "1528749846"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/check"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Checks0Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "not_found",
                            "message": "to address not found",
                            "status_code": 404
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "not_found",
                    "message": "to address not found",
                    "status_code": 404
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/checks/{chk_id}": {
      "get": {
        "tags": [
          "Checks"
        ],
        "summary": "check_retrieve",
        "description": "Retrieves the details of an existing check. You need only supply the unique check identifier that was returned upon check creation.",
        "operationId": "check_retrieve",
        "parameters": [
          {
            "name": "chk_id",
            "in": "path",
            "description": "id of the check",
            "required": true,
            "style": "simple",
            "schema": {
              "pattern": "^chk_[a-zA-Z0-9]+$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a check object",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/check"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Checks0Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "not_found",
                            "message": "to address not found",
                            "status_code": 404
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "not_found",
                    "message": "to address not found",
                    "status_code": 404
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Checks"
        ],
        "summary": "check_cancel",
        "description": "Completely removes a check from production. This can only be done if the check has a `send_date` and the `send_date` has not yet passed. If the check is successfully canceled, you will not be charged for it. Read more on [cancellation windows](#section/Cancellation-Windows) and [scheduling](#section/Scheduled-Mailings). Scheduling and cancellation is a premium feature. Upgrade to the appropriate <a href=\"https://dashboard.lob.com/#/settings/editions\" target=\"_blank\">Print & Mail Edition</a> to gain access.",
        "operationId": "check_cancel",
        "parameters": [
          {
            "name": "chk_id",
            "in": "path",
            "description": "id of the check",
            "required": true,
            "style": "simple",
            "schema": {
              "pattern": "^chk_[a-zA-Z0-9]+$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ChecksResponse"
                    },
                    {
                      "examples": [
                        {
                          "id": "chk_123456789",
                          "deleted": true
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "id": "chk_123456789",
                  "deleted": true
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Checks0Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "not_found",
                            "message": "to address not found",
                            "status_code": 404
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "not_found",
                    "message": "to address not found",
                    "status_code": 404
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/creatives": {
      "post": {
        "tags": [
          "Creatives"
        ],
        "summary": "creative_create",
        "description": "Creates a new creative with the provided properties",
        "operationId": "creative_create",
        "parameters": [
          {
            "name": "x-lang-output",
            "in": "header",
            "description": "* `native` - Translate response to the native language of the country in the request\n* `match` - match the response to the language in the request\n\nDefault response is in English.",
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/x-lang-output1"
                },
                {
                  "description": "* `native` - Translate response to the native language of the country in the request\n* `match` - match the response to the language in the request\n\nDefault response is in English."
                }
              ]
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Creative created successfully",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/creative"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Creatives0Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "not_found",
                            "message": "creative not found",
                            "status_code": 404
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "not_found",
                    "message": "creative not found",
                    "status_code": 404
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/creatives/{crv_id}": {
      "get": {
        "tags": [
          "Creatives"
        ],
        "summary": "creative_retrieve",
        "description": "Retrieves the details of an existing creative. You need only supply the unique creative identifier that was returned upon creative creation.",
        "operationId": "creative_retrieve",
        "parameters": [
          {
            "name": "crv_id",
            "in": "path",
            "description": "id of the creative",
            "required": true,
            "style": "simple",
            "schema": {
              "pattern": "^crv_[a-zA-Z0-9]+$",
              "type": "string",
              "examples": [
                "crv_2a3b096c409b32c"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a creative object",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/creative"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Creatives0Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "not_found",
                            "message": "creative not found",
                            "status_code": 404
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "not_found",
                    "message": "creative not found",
                    "status_code": 404
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "Creatives"
        ],
        "summary": "creative_update",
        "description": "Update the details of an existing creative. You need only supply the unique identifier that was returned upon creative creation.",
        "operationId": "creative_update",
        "parameters": [
          {
            "name": "crv_id",
            "in": "path",
            "description": "id of the creative",
            "required": true,
            "style": "simple",
            "schema": {
              "pattern": "^crv_[a-zA-Z0-9]+$",
              "type": "string",
              "examples": [
                "crv_2a3b096c409b32c"
              ]
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Content-Type"
                },
                {}
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "type": "object",
                "properties": {
                  "from": {},
                  "description": {
                    "maxLength": 255,
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "An internal description that identifies this resource. Must be no longer than 255 characters.",
                    "examples": [
                      "Test creative"
                    ]
                  },
                  "metadata": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Use metadata to store custom information for tagging and labeling back to your internal systems. Must be an object with up to 20 key-value pairs. Keys must be at most 40 characters and values must be at most 500 characters. Neither can contain the characters `\"` and `\\`. i.e. '{\"customer_id\" : \"NEWYORK2015\"}' Nested objects are not supported.  See [Metadata](#section/Metadata) for more information."
                  }
                },
                "contentMediaType": "application/x-www-form-urlencoded"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Returns a creative object",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/creative"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Creatives0Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "not_found",
                            "message": "creative not found",
                            "status_code": 404
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "not_found",
                    "message": "creative not found",
                    "status_code": 404
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/identity_validation": {
      "post": {
        "tags": [
          "Identity Validation"
        ],
        "summary": "identity_validation",
        "description": "Validates whether a given name is associated with an address.",
        "operationId": "identity_validation",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "examples": [
                  {
                    "recipient": "Larry Lobster",
                    "primary_line": "210 King St.",
                    "secondary_line": "",
                    "city": "San Francisco",
                    "state": "CA",
                    "zip_code": "94107"
                  }
                ],
                "contentMediaType": "application/json"
              },
              "example": {
                "recipient": "Larry Lobster",
                "primary_line": "210 King St.",
                "secondary_line": "",
                "city": "San Francisco",
                "state": "CA",
                "zip_code": "94107"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns the likelihood a given name is associated with an address.",
            "headers": {
              "ratelimit-limit": {
                "description": "The rate limit for a given endpoint.",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "The rate limit for a given endpoint.",
                      "examples": [
                        "150"
                      ],
                      "contentMediaType": "text/plain"
                    },
                    "example": "150"
                  }
                }
              },
              "ratelimit-remaining": {
                "description": "The number of requests remaining in the current window.",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "The number of requests remaining in the current window.",
                      "examples": [
                        "100"
                      ],
                      "contentMediaType": "text/plain"
                    },
                    "example": "100"
                  }
                }
              },
              "ratelimit-reset": {
                "description": "The time at which the rate limit window resets in  <a href=\"https://en.wikipedia.org/wiki/Unix_time\" target=\"_blank\">UTC epoch seconds</a>\n",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "The time at which the rate limit window resets in  <a href=\"https://en.wikipedia.org/wiki/Unix_time\" target=\"_blank\">UTC epoch seconds</a>\n",
                      "examples": [
                        "1528749846"
                      ],
                      "contentMediaType": "text/plain"
                    },
                    "example": "1528749846"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/identity_validation"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/IdentityValidation0Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "invalid",
                            "message": "recipient is required",
                            "status_code": 422
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "invalid",
                    "message": "recipient is required",
                    "status_code": 422
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/intl_autocompletions": {
      "post": {
        "tags": [
          "Intl Autocompletions"
        ],
        "summary": "intl_autocompletions",
        "description": "Given an address prefix consisting of a partial primary line and country, as well as optional input of city, state, and zip code, this functionality returns up to 10 full International address suggestions. Not all of them will turn out to be valid addresses; they'll need to be [verified](#operation/intl_verification).",
        "operationId": "intl_autocompletions",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Content-Type"
                },
                {}
              ]
            }
          },
          {
            "name": "x-lang-output",
            "in": "header",
            "description": "* `native` - Translate response to the native language of the country in the request\n* `match` - match the response to the language in the request\n\nDefault response is in English.",
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/x-lang-output1"
                },
                {
                  "description": "* `native` - Translate response to the native language of the country in the request\n* `match` - match the response to the language in the request\n\nDefault response is in English."
                }
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "address_prefix",
                  "country"
                ],
                "type": "object",
                "properties": {
                  "address_prefix": {
                    "type": "string",
                    "description": "Only accepts numbers and street names in an alphanumeric format."
                  },
                  "country": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/country_extended"
                      },
                      {}
                    ]
                  },
                  "city": {
                    "type": "string",
                    "description": "An optional city input used to filter suggestions. Case insensitive and does not match partial abbreviations."
                  },
                  "state": {
                    "type": "string",
                    "description": "An optional state input used to filter suggestions. Case insensitive and does not match partial abbreviations."
                  },
                  "zip_code": {
                    "type": "string",
                    "description": "An optional Zip Code input used to filter suggestions. Matches partial entries."
                  },
                  "geo_ip_sort": {
                    "type": "boolean",
                    "description": "If `true`, sort suggestions by proximity to the IP set in the `X-Forwarded-For` header."
                  }
                },
                "contentMediaType": "application/x-www-form-urlencoded"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Returns an international autocompletions object.",
            "headers": {
              "ratelimit-limit": {
                "description": "The rate limit for a given endpoint.",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "The rate limit for a given endpoint.",
                      "examples": [
                        "150"
                      ],
                      "contentMediaType": "text/plain"
                    },
                    "example": "150"
                  }
                }
              },
              "ratelimit-remaining": {
                "description": "The number of requests remaining in the current window.",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "The number of requests remaining in the current window.",
                      "examples": [
                        "100"
                      ],
                      "contentMediaType": "text/plain"
                    },
                    "example": "100"
                  }
                }
              },
              "ratelimit-reset": {
                "description": "The time at which the rate limit window resets in  <a href=\"https://en.wikipedia.org/wiki/Unix_time\" target=\"_blank\">UTC epoch seconds</a>\n",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "The time at which the rate limit window resets in  <a href=\"https://en.wikipedia.org/wiki/Unix_time\" target=\"_blank\">UTC epoch seconds</a>\n",
                      "examples": [
                        "1528749846"
                      ],
                      "contentMediaType": "text/plain"
                    },
                    "example": "1528749846"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/intl_autocompletions"
                    },
                    {
                      "examples": [
                        "{\"id\":\"intl_auto_a3ac97bcfbb2460ab20c\",\"suggestions\":[{\"primary_number_range\":\"\",\"primary_line\":\"340 WATERSTONE PL SE\",\"city\":\"AIRDRIE\",\"state\":\"AB\",\"country\":\"CA\",\"zip_code\":\"T4B 2G7\"},{\"primary_number_range\":\"\",\"primary_line\":\"340 WATT BLVD SW\",\"city\":\"EDMONTON\",\"state\":\"AB\",\"country\":\"CA\",\"zip_code\":\"T6X 1R7\"},{\"primary_number_range\":\"\",\"primary_line\":\"340 WATROUS ST\",\"city\":\"PRINCE GEORGE\",\"state\":\"BC\",\"country\":\"CA\",\"zip_code\":\"V2M 2B6\"},{\"primary_number_range\":\"\",\"primary_line\":\"340 WATERS RD\",\"city\":\"QUALICUM BEACH\",\"state\":\"BC\",\"country\":\"CA\",\"zip_code\":\"V9K 2B8\"},{\"primary_number_range\":\"\",\"primary_line\":\"SUITE 340, 1510 WATT DR SW\",\"city\":\"EDMONTON\",\"state\":\"AB\",\"country\":\"CA\",\"zip_code\":\"T6X 2E6\"},{\"primary_number_range\":\"\",\"primary_line\":\"WATERFRONT POINTE WEST SUITE 340, 5212 25 AVE NW\",\"city\":\"EDMONTON\",\"state\":\"AB\",\"country\":\"CA\",\"zip_code\":\"T6L 6R7\"},{\"primary_number_range\":\"\",\"primary_line\":\"WATERFRONT POINTE EAST SUITE 340, 2520 52 ST NW\",\"city\":\"EDMONTON\",\"state\":\"AB\",\"country\":\"CA\",\"zip_code\":\"T6L 6S2\"},{\"primary_number_range\":\"\",\"primary_line\":\"WATERSTONE SUITE 340, 6079 MAYNARD WAY NW\",\"city\":\"EDMONTON\",\"state\":\"AB\",\"country\":\"CA\",\"zip_code\":\"T6R 0S4\"},{\"primary_number_range\":\"\",\"primary_line\":\"WATSON APTS. SUITE 340, 5207 39 ST\",\"city\":\"RED DEER\",\"state\":\"AB\",\"country\":\"CA\",\"zip_code\":\"T4N 0Z9\"},{\"primary_number_range\":\"\",\"primary_line\":\"WATERS EDGE SUITE 3400..3409, 2600 FERGUSON RD\",\"city\":\"SAANICHTON\",\"state\":\"BC\",\"country\":\"CA\",\"zip_code\":\"V8M 2C1\"}],\"object\":\"intl_autocompletion\"}",
                        "{\"id\":\"intl_auto_a3ac97bcfbb2460ab20c\",\"suggestions\":[{\"primary_number_range\":\"\",\"primary_line\":\"1 TWIN OAKS CT\",\"city\":\"GREENVILLE\",\"state\":\"SC\",\"country\":\"CA\",\"zip_code\":\"29615\"},{\"primary_number_range\":\"\",\"primary_line\":\"1 TEVA DR\",\"city\":\"STAR CITY\",\"state\":\"CA\",\"country\":\"CA\",\"zip_code\":\"91355\"},{\"primary_number_range\":\"\",\"primary_line\":\"1 TELEGRAM AVE\",\"city\":\"ELMONT\",\"state\":\"NY\",\"country\":\"CA\",\"zip_code\":\"11003\"},{\"primary_number_range\":\"\",\"primary_line\":\"1 TELEGRAM AVE\",\"city\":\"GARDEN CITY\",\"state\":\"KS\",\"country\":\"CA\",\"zip_code\":\"67846\"},{\"primary_number_range\":\"\",\"primary_line\":\"1 TELEGRAPH HILL RD\",\"city\":\"HOLMDEL\",\"state\":\"NJ\",\"country\":\"CA\",\"zip_code\":\"07733\"},{\"primary_number_range\":\"\",\"primary_line\":\"1 TELEGRAPH HILL RD S\",\"city\":\"HOLMDEL\",\"state\":\"NJ\",\"country\":\"CA\",\"zip_code\":\"07733\"},{\"primary_number_range\":\"\",\"primary_line\":\"1 TELEGRAPH HILL BLVD\",\"city\":\"SAN FRANCISCO\",\"state\":\"CA\",\"country\":\"CA\",\"zip_code\":\"94133\"}],\"object\":\"intl_autocompletion\"}"
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "examples": {
                  "basic": {
                    "value": {
                      "id": "intl_auto_a3ac97bcfbb2460ab20c",
                      "suggestions": [
                        {
                          "primary_number_range": "",
                          "primary_line": "340 WATERSTONE PL SE",
                          "city": "AIRDRIE",
                          "state": "AB",
                          "country": "CA",
                          "zip_code": "T4B 2G7"
                        },
                        {
                          "primary_number_range": "",
                          "primary_line": "340 WATT BLVD SW",
                          "city": "EDMONTON",
                          "state": "AB",
                          "country": "CA",
                          "zip_code": "T6X 1R7"
                        },
                        {
                          "primary_number_range": "",
                          "primary_line": "340 WATROUS ST",
                          "city": "PRINCE GEORGE",
                          "state": "BC",
                          "country": "CA",
                          "zip_code": "V2M 2B6"
                        },
                        {
                          "primary_number_range": "",
                          "primary_line": "340 WATERS RD",
                          "city": "QUALICUM BEACH",
                          "state": "BC",
                          "country": "CA",
                          "zip_code": "V9K 2B8"
                        },
                        {
                          "primary_number_range": "",
                          "primary_line": "SUITE 340, 1510 WATT DR SW",
                          "city": "EDMONTON",
                          "state": "AB",
                          "country": "CA",
                          "zip_code": "T6X 2E6"
                        },
                        {
                          "primary_number_range": "",
                          "primary_line": "WATERFRONT POINTE WEST SUITE 340, 5212 25 AVE NW",
                          "city": "EDMONTON",
                          "state": "AB",
                          "country": "CA",
                          "zip_code": "T6L 6R7"
                        },
                        {
                          "primary_number_range": "",
                          "primary_line": "WATERFRONT POINTE EAST SUITE 340, 2520 52 ST NW",
                          "city": "EDMONTON",
                          "state": "AB",
                          "country": "CA",
                          "zip_code": "T6L 6S2"
                        },
                        {
                          "primary_number_range": "",
                          "primary_line": "WATERSTONE SUITE 340, 6079 MAYNARD WAY NW",
                          "city": "EDMONTON",
                          "state": "AB",
                          "country": "CA",
                          "zip_code": "T6R 0S4"
                        },
                        {
                          "primary_number_range": "",
                          "primary_line": "WATSON APTS. SUITE 340, 5207 39 ST",
                          "city": "RED DEER",
                          "state": "AB",
                          "country": "CA",
                          "zip_code": "T4N 0Z9"
                        },
                        {
                          "primary_number_range": "",
                          "primary_line": "WATERS EDGE SUITE 3400..3409, 2600 FERGUSON RD",
                          "city": "SAANICHTON",
                          "state": "BC",
                          "country": "CA",
                          "zip_code": "V8M 2C1"
                        }
                      ],
                      "object": "intl_autocompletion"
                    }
                  },
                  "test": {
                    "value": {
                      "id": "intl_auto_a3ac97bcfbb2460ab20c",
                      "suggestions": [
                        {
                          "primary_number_range": "",
                          "primary_line": "1 TWIN OAKS CT",
                          "city": "GREENVILLE",
                          "state": "SC",
                          "country": "CA",
                          "zip_code": "29615"
                        },
                        {
                          "primary_number_range": "",
                          "primary_line": "1 TEVA DR",
                          "city": "STAR CITY",
                          "state": "CA",
                          "country": "CA",
                          "zip_code": "91355"
                        },
                        {
                          "primary_number_range": "",
                          "primary_line": "1 TELEGRAM AVE",
                          "city": "ELMONT",
                          "state": "NY",
                          "country": "CA",
                          "zip_code": "11003"
                        },
                        {
                          "primary_number_range": "",
                          "primary_line": "1 TELEGRAM AVE",
                          "city": "GARDEN CITY",
                          "state": "KS",
                          "country": "CA",
                          "zip_code": "67846"
                        },
                        {
                          "primary_number_range": "",
                          "primary_line": "1 TELEGRAPH HILL RD",
                          "city": "HOLMDEL",
                          "state": "NJ",
                          "country": "CA",
                          "zip_code": "07733"
                        },
                        {
                          "primary_number_range": "",
                          "primary_line": "1 TELEGRAPH HILL RD S",
                          "city": "HOLMDEL",
                          "state": "NJ",
                          "country": "CA",
                          "zip_code": "07733"
                        },
                        {
                          "primary_number_range": "",
                          "primary_line": "1 TELEGRAPH HILL BLVD",
                          "city": "SAN FRANCISCO",
                          "state": "CA",
                          "country": "CA",
                          "zip_code": "94133"
                        }
                      ],
                      "object": "intl_autocompletion"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/IntlAutocompletions0Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "invalid",
                            "message": "address_prefix is required",
                            "status_code": 422
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "invalid",
                    "message": "address_prefix is required",
                    "status_code": 422
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/bulk/intl_verifications": {
      "post": {
        "tags": [
          "Intl Verifications"
        ],
        "summary": "bulk_intl_verifications",
        "description": "Verify a list of international (except US or US territories) address _with a live API key_. Requests to this endpoint with a test API key will return a dummy response based on the primary line you input.",
        "operationId": "bulk_intl_verifications",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "const": "application/x-www-form-urlencoded",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "addresses"
                ],
                "type": "object",
                "properties": {
                  "addresses": {
                    "maxItems": 20,
                    "minItems": 1,
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/multiple_components_intl"
                    },
                    "description": "",
                    "examples": [
                      [
                        {
                          "recipient": "John Doe",
                          "primary_line": "370 Water St",
                          "secondary_line": "",
                          "city": "Summerside",
                          "state": "Prince Edwards Island",
                          "postal_code": "C1N 1C4",
                          "country": "CA"
                        },
                        {
                          "recipient": "Jane Doe",
                          "primary_line": "UL. DOLSKAYA 1",
                          "secondary_line": "",
                          "city": "MOSCOW",
                          "state": "MOSCOW G",
                          "postal_code": "115569",
                          "country": "RU"
                        }
                      ]
                    ]
                  }
                },
                "contentMediaType": "application/x-www-form-urlencoded"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Returns an array of international verification objects.",
            "headers": {
              "ratelimit-limit": {
                "description": "The rate limit for a given endpoint.",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "The rate limit for a given endpoint.",
                      "examples": [
                        "150"
                      ],
                      "contentMediaType": "text/plain"
                    },
                    "example": "150"
                  }
                }
              },
              "ratelimit-remaining": {
                "description": "The number of requests remaining in the current window.",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "The number of requests remaining in the current window.",
                      "examples": [
                        "100"
                      ],
                      "contentMediaType": "text/plain"
                    },
                    "example": "100"
                  }
                }
              },
              "ratelimit-reset": {
                "description": "The time at which the rate limit window resets in  <a href=\"https://en.wikipedia.org/wiki/Unix_time\" target=\"_blank\">UTC epoch seconds</a>\n",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "The time at which the rate limit window resets in  <a href=\"https://en.wikipedia.org/wiki/Unix_time\" target=\"_blank\">UTC epoch seconds</a>\n",
                      "examples": [
                        "1528749846"
                      ],
                      "contentMediaType": "text/plain"
                    },
                    "example": "1528749846"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/intl_verifications"
                    },
                    {
                      "examples": [
                        {
                          "addresses": [
                            {
                              "id": "intl_ver_c7cb63d68f8d6",
                              "recipient": null,
                              "primary_line": "370 WATER ST",
                              "secondary_line": "",
                              "last_line": "SUMMERSIDE PE C1N 1C4",
                              "country": "CA",
                              "coverage": "SUBBUILDING",
                              "deliverability": "deliverable",
                              "status": "LV4",
                              "components": {
                                "primary_number": "370",
                                "street_name": "WATER ST",
                                "city": "SUMMERSIDE",
                                "state": "PE",
                                "postal_code": "C1N 1C4"
                              },
                              "object": "intl_verification"
                            }
                          ],
                          "errors": false
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "addresses": [
                    {
                      "id": "intl_ver_c7cb63d68f8d6",
                      "recipient": null,
                      "primary_line": "370 WATER ST",
                      "secondary_line": "",
                      "last_line": "SUMMERSIDE PE C1N 1C4",
                      "country": "CA",
                      "coverage": "SUBBUILDING",
                      "deliverability": "deliverable",
                      "status": "LV4",
                      "components": {
                        "primary_number": "370",
                        "street_name": "WATER ST",
                        "city": "SUMMERSIDE",
                        "state": "PE",
                        "postal_code": "C1N 1C4"
                      },
                      "object": "intl_verification"
                    }
                  ],
                  "errors": false
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/BulkIntlVerifications0Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "invalid",
                            "message": "country is required",
                            "status_code": 422
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "invalid",
                    "message": "country is required",
                    "status_code": 422
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/intl_verifications": {
      "post": {
        "tags": [
          "Intl Verifications"
        ],
        "summary": "intl_verification",
        "description": "Verify an international (except US or US territories) address _with a live API key_. Requests to this endpoint with a test API key will return a dummy response based on the primary line you input.",
        "operationId": "intl_verification",
        "parameters": [
          {
            "name": "x-lang-output",
            "in": "header",
            "description": "* `native` - Translate response to the native language of the country in the request\n* `match` - match the response to the language in the request\n\nDefault response is in English.",
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/x-lang-output1"
                },
                {
                  "description": "* `native` - Translate response to the native language of the country in the request\n* `match` - match the response to the language in the request\n\nDefault response is in English."
                }
              ]
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "examples": [
                  "{\"recipient\":\"Harry Zhang\",\"primary_line\":\"370 Water St\",\"secondary_line\":\"\",\"city\":\"Summerside\",\"state\":\"Prince Edward Island\",\"postal code\":\"C1N 1C4\",\"country\":\"CA\"}",
                  "{\"recipient\":\"Harry Zhang\",\"primary_line\":\"370 Water St\",\"secondary_line\":\"\",\"city\":\"Summerside\",\"state\":\"Prince Edward Island\",\"postal code\":\"C1N 1C4\",\"country\":\"CA\"}",
                  "{\"address\":\"370 Water St C1N 1C4\",\"country\":\"CA\"}",
                  "{\"primary_line\":\"deliverable\",\"country\":\"CA\"}"
                ],
                "contentMediaType": "application/json"
              },
              "examples": {
                "basic": {
                  "value": {
                    "recipient": "Harry Zhang",
                    "primary_line": "370 Water St",
                    "secondary_line": "",
                    "city": "Summerside",
                    "state": "Prince Edward Island",
                    "postal code": "C1N 1C4",
                    "country": "CA"
                  }
                },
                "full_payload": {
                  "value": {
                    "recipient": "Harry Zhang",
                    "primary_line": "370 Water St",
                    "secondary_line": "",
                    "city": "Summerside",
                    "state": "Prince Edward Island",
                    "postal code": "C1N 1C4",
                    "country": "CA"
                  }
                },
                "single_line": {
                  "value": {
                    "address": "370 Water St C1N 1C4",
                    "country": "CA"
                  }
                },
                "test": {
                  "value": {
                    "primary_line": "deliverable",
                    "country": "CA"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns an international verification object.",
            "headers": {
              "ratelimit-limit": {
                "description": "The rate limit for a given endpoint.",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "The rate limit for a given endpoint.",
                      "examples": [
                        "150"
                      ],
                      "contentMediaType": "text/plain"
                    },
                    "example": "150"
                  }
                }
              },
              "ratelimit-remaining": {
                "description": "The number of requests remaining in the current window.",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "The number of requests remaining in the current window.",
                      "examples": [
                        "100"
                      ],
                      "contentMediaType": "text/plain"
                    },
                    "example": "100"
                  }
                }
              },
              "ratelimit-reset": {
                "description": "The time at which the rate limit window resets in  <a href=\"https://en.wikipedia.org/wiki/Unix_time\" target=\"_blank\">UTC epoch seconds</a>\n",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "The time at which the rate limit window resets in  <a href=\"https://en.wikipedia.org/wiki/Unix_time\" target=\"_blank\">UTC epoch seconds</a>\n",
                      "examples": [
                        "1528749846"
                      ],
                      "contentMediaType": "text/plain"
                    },
                    "example": "1528749846"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/intl_verification"
                    },
                    {
                      "examples": [
                        "{\"id\":\"intl_ver_c7cb63d68f8d6\",\"recipient\":null,\"primary_line\":\"370 WATER ST\",\"secondary_line\":\"\",\"last_line\":\"SUMMERSIDE PE C1N 1C4\",\"country\":\"CA\",\"coverage\":\"SUBBUILDING\",\"deliverability\":\"deliverable\",\"status\":\"LV4\",\"components\":{\"primary_number\":\"370\",\"street_name\":\"WATER ST\",\"city\":\"SUMMERSIDE\",\"state\":\"PE\",\"postal_code\":\"C1N 1C4\"},\"object\":\"intl_verification\"}",
                        "{\"id\":\"intl_ver_c7cb63d68f8d6\",\"recipient\":\"TEST KEYS DO NOT VERIFY ADDRESSES\",\"primary_line\":\"370 WATER ST\",\"secondary_line\":\"\",\"last_line\":\"SUMMERSIDE PE C1N 1C4\",\"country\":\"CA\",\"coverage\":\"SUBBUILDING\",\"deliverability\":\"deliverable\",\"status\":\"LV4\",\"components\":{\"primary_number\":\"370\",\"street_name\":\"WATER ST\",\"city\":\"SUMMERSIDE\",\"state\":\"PE\",\"postal_code\":\"C1N 1C4\"},\"object\":\"intl_verification\"}"
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "examples": {
                  "full": {
                    "value": {
                      "id": "intl_ver_c7cb63d68f8d6",
                      "recipient": null,
                      "primary_line": "370 WATER ST",
                      "secondary_line": "",
                      "last_line": "SUMMERSIDE PE C1N 1C4",
                      "country": "CA",
                      "coverage": "SUBBUILDING",
                      "deliverability": "deliverable",
                      "status": "LV4",
                      "components": {
                        "primary_number": "370",
                        "street_name": "WATER ST",
                        "city": "SUMMERSIDE",
                        "state": "PE",
                        "postal_code": "C1N 1C4"
                      },
                      "object": "intl_verification"
                    }
                  },
                  "test": {
                    "value": {
                      "id": "intl_ver_c7cb63d68f8d6",
                      "recipient": "TEST KEYS DO NOT VERIFY ADDRESSES",
                      "primary_line": "370 WATER ST",
                      "secondary_line": "",
                      "last_line": "SUMMERSIDE PE C1N 1C4",
                      "country": "CA",
                      "coverage": "SUBBUILDING",
                      "deliverability": "deliverable",
                      "status": "LV4",
                      "components": {
                        "primary_number": "370",
                        "street_name": "WATER ST",
                        "city": "SUMMERSIDE",
                        "state": "PE",
                        "postal_code": "C1N 1C4"
                      },
                      "object": "intl_verification"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/IntlVerifications0Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "invalid",
                            "message": "country is required",
                            "status_code": 422
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "invalid",
                    "message": "country is required",
                    "status_code": 422
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/letters/{ltr_id}": {
      "get": {
        "tags": [
          "Letters"
        ],
        "summary": "letter_retrieve",
        "description": "Retrieves the details of an existing letter. You need only supply the unique letter identifier that was returned upon letter creation.",
        "operationId": "letter_retrieve",
        "parameters": [
          {
            "name": "ltr_id",
            "in": "path",
            "description": "id of the letter",
            "required": true,
            "style": "simple",
            "schema": {
              "pattern": "^ltr_[a-zA-Z0-9]+$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a letter object",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "examples": [
                    {
                      "id": "ltr_4868c3b754655f90",
                      "description": "Demo Letter",
                      "metadata": {},
                      "to": {
                        "id": "adr_d3489cd64c791ab5",
                        "description": null,
                        "name": "HARRY ZHANG",
                        "company": null,
                        "phone": null,
                        "email": null,
                        "address_line1": "210 KING ST STE 6100",
                        "address_line2": null,
                        "address_city": "SAN FRANCISCO",
                        "address_state": "CA",
                        "address_zip": "94107-1741",
                        "address_country": "UNITED STATES",
                        "metadata": {},
                        "date_created": "2017-09-05T15:54:53.264Z",
                        "date_modified": "2017-09-05T15:54:53.264Z",
                        "deleted": true,
                        "object": "address"
                      },
                      "from": {
                        "id": "adr_b8fb5acf3a2b55db",
                        "description": null,
                        "name": "LEORE AVIDAR",
                        "company": null,
                        "phone": null,
                        "email": null,
                        "address_line1": "210 KING ST STE 6100",
                        "address_line2": null,
                        "address_city": "SAN FRANCISCO",
                        "address_state": "CA",
                        "address_zip": "94107-1741",
                        "address_country": "UNITED STATES",
                        "metadata": {},
                        "date_created": "2017-09-05T15:54:53.264Z",
                        "date_modified": "2017-09-05T15:54:53.264Z",
                        "deleted": true,
                        "object": "address"
                      },
                      "color": true,
                      "double_sided": true,
                      "address_placement": "top_first_page",
                      "return_envelope": false,
                      "perforated_page": null,
                      "custom_envelope": null,
                      "extra_service": null,
                      "mail_type": "usps_first_class",
                      "url": "https://lob-assets.com/letters/ltr_4868c3b754655f90.pdf?expires=1540372221&signature=8r94fse8uam7wGWmW5baxXulU88X2CA",
                      "carrier": "USPS",
                      "tracking_number": null,
                      "tracking_events": [],
                      "thumbnails": [
                        {
                          "small": "https://lob-assets.com/letters/ltr_4868c3b754655f90_thumb_small_1.png?expires=1540372221&signature=a5fRBJ22ZA78Vgpg34M9UfmHWTS3eha",
                          "medium": "https://lob-assets.com/letters/ltr_4868c3b754655f90_thumb_medium_1.png?expires=1540372221&signature=bAzL8sv935PY09FWSkpDpWKkyvGSWYF",
                          "large": "https://lob-assets.com/letters/ltr_4868c3b754655f90_thumb_large_1.png?expires=1540372221&signature=gsKvxXgrm4v4iZD3bOibK7jApNkEMdW"
                        }
                      ],
                      "merge_variables": {
                        "name": "Harry"
                      },
                      "expected_delivery_date": "2017-09-12",
                      "date_created": "2017-09-05T15:54:53.346Z",
                      "date_modified": "2017-09-05T15:54:53.346Z",
                      "send_date": "2017-09-05T15:54:53.346Z",
                      "cards": [
                        {
                          "id": "card_c51ae96f5cebf3e",
                          "account_id": "fa9ea650fc7b31a89f92",
                          "description": null,
                          "url": "https://lob-assets.com/cards/card_c51ae96f5cebf3e.pdf?version=v1&expires=1636910992&signature=mnsDH2DAxdkN9VibdlLMxJC86sME5WYDqkNtmvGwdNsAaUWfbnv0rJhJ1mR8Ol4uxQq61j5wYZ0r3s-lBkQfDA",
                          "size": "2.125x3.375",
                          "auto_reorder": false,
                          "reorder_quantity": null,
                          "raw_url": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_raw.pdf?version=v1&expires=1636910992&signature=-bZo31FMAp2vmNaZKyXn_Qa4APqwtNinw76FrQ7uyQejFZw6VBQQYfoiQ642iXh0H2K5i2aOo8_BAkt3UJdVDw",
                          "front_original_url": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_raw.pdf?version=v1&expires=1636910992&signature=-bZo31FMAp2vmNaZKyXn_Qa4APqwtNinw76FrQ7uyQejFZw6VBQQYfoiQ642iXh0H2K5i2aOo8_BAkt3UJdVDw",
                          "back_original_url": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_raw.pdf?version=v1&expires=1636910992&signature=-bZo31FMAp2vmNaZKyXn_Qa4APqwtNinw76FrQ7uyQejFZw6VBQQYfoiQ642iXh0H2K5i2aOo8_BAkt3UJdVDw",
                          "thumbnails": [
                            {
                              "small": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_small_1.png?version=v1&expires=1636910992&signature=mrv8JDvpZK4I8WUGH0tPdtK-My5oes0Ltj_gL7BDw96SpCTTeZFHkz81SzclyFP9dQRtlsvAsjcuGcTBvCvOCg",
                              "medium": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_medium_1.png?version=v1&expires=1636910992&signature=VgL_2Ckm_kxKiWGgWtdNoy9HHOn8dGYSVOn7UqyCbwdbVlUtx28TRN4Bo8Iru3n0keKp9He0YhKT1ILotznMDA",
                              "large": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_large_1.png?version=v1&expires=1636910992&signature=FKSzymA13j-CQ0uk20cGHZTzT3vimzNBYrgp-xifLFg4mMdo1BZALR5O0aF_jVhsX614hKP35ONdYl47TQxXAw"
                            },
                            {
                              "small": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_small_2.png?version=v1&expires=1636910992&signature=IWsmPa_ULlv2yyqjX564d_YfHHY_M7i9YxDnw-WXDr2jtOFcArmRZQbnHeE9g_rYxnddJbgosuv8-c2utiu7Cg",
                              "medium": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_medium_2.png?version=v1&expires=1636910992&signature=zxK7VKGiTvz5Ywrkaydd0v3GcYf58R7A08J4tNfI7-aiNODDcTF3l0MqY13n9Pyc8RXSdD0XVBY-OpbA1VM-Ag",
                              "large": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_large_2.png?version=v1&expires=1636910992&signature=r0OFUhh315ZwN0raMZdIwJd2oCIEYsz0BABaMxIuO1PKTD0ckGWrhcGdzk2dlWQ6vSvp0CUQ5k1RXGqkIIqkDw"
                            }
                          ],
                          "available_quantity": 10000,
                          "pending_quantity": 0,
                          "countries": null,
                          "status": "rendered",
                          "mode": "test",
                          "orientation": "horizontal",
                          "threshold_amount": 0,
                          "date_created": "2017-08-05T15:54:53.346Z",
                          "date_modified": "2017-08-05T15:54:53.346Z",
                          "object": "card"
                        }
                      ],
                      "use_type": "marketing",
                      "fsc": false,
                      "object": "letter"
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "id": "ltr_4868c3b754655f90",
                  "description": "Demo Letter",
                  "metadata": {},
                  "to": {
                    "id": "adr_d3489cd64c791ab5",
                    "description": null,
                    "name": "HARRY ZHANG",
                    "company": null,
                    "phone": null,
                    "email": null,
                    "address_line1": "210 KING ST STE 6100",
                    "address_line2": null,
                    "address_city": "SAN FRANCISCO",
                    "address_state": "CA",
                    "address_zip": "94107-1741",
                    "address_country": "UNITED STATES",
                    "metadata": {},
                    "date_created": "2017-09-05T15:54:53.264Z",
                    "date_modified": "2017-09-05T15:54:53.264Z",
                    "deleted": true,
                    "object": "address"
                  },
                  "from": {
                    "id": "adr_b8fb5acf3a2b55db",
                    "description": null,
                    "name": "LEORE AVIDAR",
                    "company": null,
                    "phone": null,
                    "email": null,
                    "address_line1": "210 KING ST STE 6100",
                    "address_line2": null,
                    "address_city": "SAN FRANCISCO",
                    "address_state": "CA",
                    "address_zip": "94107-1741",
                    "address_country": "UNITED STATES",
                    "metadata": {},
                    "date_created": "2017-09-05T15:54:53.264Z",
                    "date_modified": "2017-09-05T15:54:53.264Z",
                    "deleted": true,
                    "object": "address"
                  },
                  "color": true,
                  "double_sided": true,
                  "address_placement": "top_first_page",
                  "return_envelope": false,
                  "perforated_page": null,
                  "custom_envelope": null,
                  "extra_service": null,
                  "mail_type": "usps_first_class",
                  "url": "https://lob-assets.com/letters/ltr_4868c3b754655f90.pdf?expires=1540372221&signature=8r94fse8uam7wGWmW5baxXulU88X2CA",
                  "carrier": "USPS",
                  "tracking_number": null,
                  "tracking_events": [],
                  "thumbnails": [
                    {
                      "small": "https://lob-assets.com/letters/ltr_4868c3b754655f90_thumb_small_1.png?expires=1540372221&signature=a5fRBJ22ZA78Vgpg34M9UfmHWTS3eha",
                      "medium": "https://lob-assets.com/letters/ltr_4868c3b754655f90_thumb_medium_1.png?expires=1540372221&signature=bAzL8sv935PY09FWSkpDpWKkyvGSWYF",
                      "large": "https://lob-assets.com/letters/ltr_4868c3b754655f90_thumb_large_1.png?expires=1540372221&signature=gsKvxXgrm4v4iZD3bOibK7jApNkEMdW"
                    }
                  ],
                  "merge_variables": {
                    "name": "Harry"
                  },
                  "expected_delivery_date": "2017-09-12",
                  "date_created": "2017-09-05T15:54:53.346Z",
                  "date_modified": "2017-09-05T15:54:53.346Z",
                  "send_date": "2017-09-05T15:54:53.346Z",
                  "cards": [
                    {
                      "id": "card_c51ae96f5cebf3e",
                      "account_id": "fa9ea650fc7b31a89f92",
                      "description": null,
                      "url": "https://lob-assets.com/cards/card_c51ae96f5cebf3e.pdf?version=v1&expires=1636910992&signature=mnsDH2DAxdkN9VibdlLMxJC86sME5WYDqkNtmvGwdNsAaUWfbnv0rJhJ1mR8Ol4uxQq61j5wYZ0r3s-lBkQfDA",
                      "size": "2.125x3.375",
                      "auto_reorder": false,
                      "reorder_quantity": null,
                      "raw_url": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_raw.pdf?version=v1&expires=1636910992&signature=-bZo31FMAp2vmNaZKyXn_Qa4APqwtNinw76FrQ7uyQejFZw6VBQQYfoiQ642iXh0H2K5i2aOo8_BAkt3UJdVDw",
                      "front_original_url": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_raw.pdf?version=v1&expires=1636910992&signature=-bZo31FMAp2vmNaZKyXn_Qa4APqwtNinw76FrQ7uyQejFZw6VBQQYfoiQ642iXh0H2K5i2aOo8_BAkt3UJdVDw",
                      "back_original_url": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_raw.pdf?version=v1&expires=1636910992&signature=-bZo31FMAp2vmNaZKyXn_Qa4APqwtNinw76FrQ7uyQejFZw6VBQQYfoiQ642iXh0H2K5i2aOo8_BAkt3UJdVDw",
                      "thumbnails": [
                        {
                          "small": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_small_1.png?version=v1&expires=1636910992&signature=mrv8JDvpZK4I8WUGH0tPdtK-My5oes0Ltj_gL7BDw96SpCTTeZFHkz81SzclyFP9dQRtlsvAsjcuGcTBvCvOCg",
                          "medium": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_medium_1.png?version=v1&expires=1636910992&signature=VgL_2Ckm_kxKiWGgWtdNoy9HHOn8dGYSVOn7UqyCbwdbVlUtx28TRN4Bo8Iru3n0keKp9He0YhKT1ILotznMDA",
                          "large": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_large_1.png?version=v1&expires=1636910992&signature=FKSzymA13j-CQ0uk20cGHZTzT3vimzNBYrgp-xifLFg4mMdo1BZALR5O0aF_jVhsX614hKP35ONdYl47TQxXAw"
                        },
                        {
                          "small": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_small_2.png?version=v1&expires=1636910992&signature=IWsmPa_ULlv2yyqjX564d_YfHHY_M7i9YxDnw-WXDr2jtOFcArmRZQbnHeE9g_rYxnddJbgosuv8-c2utiu7Cg",
                          "medium": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_medium_2.png?version=v1&expires=1636910992&signature=zxK7VKGiTvz5Ywrkaydd0v3GcYf58R7A08J4tNfI7-aiNODDcTF3l0MqY13n9Pyc8RXSdD0XVBY-OpbA1VM-Ag",
                          "large": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_large_2.png?version=v1&expires=1636910992&signature=r0OFUhh315ZwN0raMZdIwJd2oCIEYsz0BABaMxIuO1PKTD0ckGWrhcGdzk2dlWQ6vSvp0CUQ5k1RXGqkIIqkDw"
                        }
                      ],
                      "available_quantity": 10000,
                      "pending_quantity": 0,
                      "countries": null,
                      "status": "rendered",
                      "mode": "test",
                      "orientation": "horizontal",
                      "threshold_amount": 0,
                      "date_created": "2017-08-05T15:54:53.346Z",
                      "date_modified": "2017-08-05T15:54:53.346Z",
                      "object": "card"
                    }
                  ],
                  "use_type": "marketing",
                  "fsc": false,
                  "object": "letter"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Letters0Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "not_found",
                            "message": "to address not found",
                            "status_code": 404
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "not_found",
                    "message": "to address not found",
                    "status_code": 404
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Letters"
        ],
        "summary": "letter_cancel",
        "description": "Completely removes a letter from production. This can only be done if the letter has a `send_date` and the `send_date` has not yet passed. If the letter is successfully canceled, you will not be charged for it. Read more on [cancellation windows](#section/Cancellation-Windows) and [scheduling](#section/Scheduled-Mailings). Scheduling and cancellation is a premium feature. Upgrade to the appropriate <a href=\"https://dashboard.lob.com/#/settings/editions\" target=\"_blank\">Print & Mail Edition</a> to gain access.",
        "operationId": "letter_cancel",
        "parameters": [
          {
            "name": "ltr_id",
            "in": "path",
            "description": "id of the letter",
            "required": true,
            "style": "simple",
            "schema": {
              "pattern": "^ltr_[a-zA-Z0-9]+$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/LettersResponse"
                    },
                    {
                      "examples": [
                        {
                          "id": "ltr_123456789",
                          "deleted": true
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "id": "ltr_123456789",
                  "deleted": true
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Letters0Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "not_found",
                            "message": "to address not found",
                            "status_code": 404
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "not_found",
                    "message": "to address not found",
                    "status_code": 404
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/letters": {
      "get": {
        "tags": [
          "Letters"
        ],
        "summary": "letters_list",
        "description": "Returns a list of your letters. The letters are returned sorted by creation date, with the most recently created letters appearing first.",
        "operationId": "letters_list",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "How many results to return.",
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 100.0,
              "minimum": 1.0,
              "type": "integer",
              "contentEncoding": "int32",
              "default": 10,
              "examples": [
                10
              ]
            }
          },
          {
            "name": "before/after",
            "in": "query",
            "description": "`before` and `after` are both optional but only one of them can be in the query at a time.",
            "style": "form",
            "explode": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/beforeafter"
                },
                {
                  "description": "`before` and `after` are both optional but only one of them can be in the query at a time."
                }
              ]
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Request that the response include the total count by specifying `include=[\"total_count\"]`.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "date_created",
            "in": "query",
            "description": "Filter by date created. Accepted formats are ISO-8601 date or datetime, e.g. `{ \"gt\": \"2012-01-01\", \"lt\": \"2012-01-31T12:34:56Z\" }` where `gt` is >, `lt` is <, `gte` is ≥, and `lte` is ≤.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          {
            "name": "metadata",
            "in": "query",
            "description": "Filter by metadata key-value pair`.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          {
            "name": "color",
            "in": "query",
            "description": "Set to `true` to return only color letters. Set to `false` to return only black & white letters.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "scheduled",
            "in": "query",
            "description": "* `true` - only return orders (past or future) where `send_date` is\ngreater than `date_created`\n* `false` - only return orders where `send_date` is equal to `date_created`",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "send_date",
            "in": "query",
            "description": "Filter by ISO-8601 date or datetime, e.g. `{ \"gt\": \"2012-01-01\", \"lt\": \"2012-01-31T12:34:56Z\" }` where `gt` is >, `lt` is <, `gte` is ≥, and `lte` is ≤.",
            "style": "form",
            "explode": true,
            "schema": {}
          },
          {
            "name": "mail_type",
            "in": "query",
            "description": "A string designating the mail postage type: * `usps_first_class` - (default) * `usps_standard` - a <a href=\"https://lob.com/pricing/print-mail#compare\" target=\"_blank\">cheaper option</a> which is less predictable and takes longer to deliver. `usps_standard` cannot be used with `4x6` postcards or for any postcards sent outside of the United States.",
            "style": "form",
            "explode": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/mail_type"
                },
                {
                  "description": "A string designating the mail postage type: * `usps_first_class` - (default) * `usps_standard` - a <a href=\"https://lob.com/pricing/print-mail#compare\" target=\"_blank\">cheaper option</a> which is less predictable and takes longer to deliver. `usps_standard` cannot be used with `4x6` postcards or for any postcards sent outside of the United States."
                }
              ]
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "Sorts items by ascending or descending dates. Use either `date_created` or `send_date`, not both.",
            "style": "form",
            "explode": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/sort_by1"
                },
                {
                  "description": "Sorts items by ascending or descending dates. Use either `date_created` or `send_date`, not both."
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A dictionary with a data property that contains an array of up to `limit` letters. Each entry in the array is a separate letter. The previous and next page of letters can be retrieved by calling the endpoint contained in the `previous_url` and `next_url` fields in the API response respectively. If no more letters are available beyond the current set of returned results, the `next_url` field will be empty.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/all_letters"
                    },
                    {
                      "examples": [
                        {
                          "data": [
                            {
                              "id": "ltr_5ba44b462c79f07c",
                              "description": "Demo Letter",
                              "metadata": {},
                              "to": {
                                "id": "adr_asdi2y3riuasasoi",
                                "description": "Harry - Office",
                                "name": "Harry Zhang",
                                "company": "Lob",
                                "phone": "5555555555",
                                "email": "harry@lob.com",
                                "metadata": {},
                                "address_line1": "370 WATER ST",
                                "address_line2": "",
                                "address_city": "SUMMERSIDE",
                                "address_state": "PRINCE EDWARD ISLAND",
                                "address_zip": "C1N 1C4",
                                "address_country": "CANADA",
                                "recipient_moved": false,
                                "date_created": "2019-09-20T00:14:00.361Z",
                                "date_modified": "2019-09-20T00:14:00.361Z",
                                "object": "address"
                              },
                              "from": {
                                "id": "adr_210a8d4b0b76d77b",
                                "description": null,
                                "name": "LEORE AVIDAR",
                                "company": null,
                                "phone": null,
                                "email": null,
                                "address_line1": "210 KING ST STE 6100",
                                "address_line2": null,
                                "address_city": "SAN FRANCISCO",
                                "address_state": "CA",
                                "address_zip": "94107-1741",
                                "address_country": "UNITED STATES",
                                "metadata": {},
                                "date_created": "2018-12-08T03:01:07.651Z",
                                "date_modified": "2018-12-08T03:01:07.651Z",
                                "object": "address"
                              },
                              "color": true,
                              "double_sided": false,
                              "address_placement": "top_first_page",
                              "return_envelope": false,
                              "perforated_page": null,
                              "extra_service": "certified",
                              "custom_envelope": null,
                              "template_id": "tmpl_a",
                              "template_version_id": "vrsn_a",
                              "mail_type": "usps_first_class",
                              "url": "https://lob-assets.com/letters/ltr_5ba44b462c79f07c.pdf?version=v1&expires=1568239830&signature=Ob-DUPLJLM4scWQeCDNadPJ4j33MZw16pykOxwv2us-bA7utTYi6oZ8WrEtBYDBBo09XkapR3gdJf0NEr90xAA",
                              "merge_variables": null,
                              "carrier": "USPS",
                              "tracking_number": "92071902358909000011275538",
                              "tracking_events": [
                                {
                                  "id": "evnt_9e84094c9368cfb",
                                  "type": "certified",
                                  "name": "Delivered",
                                  "details": {
                                    "event": "delivered",
                                    "description": "Package has been delivered.",
                                    "notes": "Delivered, Front Desk/Reception/Mail Room",
                                    "action_required": false
                                  },
                                  "location": "33408",
                                  "time": "2019-10-08T19:41:00Z",
                                  "date_created": "2019-10-08T19:41:00Z",
                                  "date_modified": "2019-10-08T19:41:00Z",
                                  "object": "tracking_event"
                                }
                              ],
                              "thumbnails": [
                                {
                                  "small": "https://lob-assets.com/letters/ltr_5ba44b462c79f07c_thumb_small_1.png?version=v1&expires=1568239830&signature=xZUmE8rq8wSECHPEb9c37cUDZBzGUO3XK5LsIPZhI6dOXgm6zJEn8_7tKuZ3JWBmvNJNXdTl_ufkNu4avjQUDw",
                                  "medium": "https://lob-assets.com/letters/ltr_5ba44b462c79f07c_thumb_medium_1.png?version=v1&expires=1568239830&signature=H7354Qpcm9S4aXbrMsBe6QJ6lSNi9IWPgMJtLWLi4Kyx9tHF8Mp9YEc_IL9x89Jfw4-yRzKDXA410X4W0PssBQ",
                                  "large": "https://lob-assets.com/letters/ltr_5ba44b462c79f07c_thumb_large_1.png?version=v1&expires=1568239830&signature=54LUIDKZyItA9pnC87d1pJVAuw8bhKLCsMpNWkB3LgdVWxPxxb_c1IyIWAbSR-dyOYEOlDBCc40J4Kns-O_mAg"
                                }
                              ],
                              "expected_delivery_date": "2019-08-16",
                              "date_created": "2019-08-08T17:09:14.514Z",
                              "date_modified": "2019-08-08T17:09:16.850Z",
                              "send_date": "2019-08-08",
                              "use_type": "marketing",
                              "fsc": false,
                              "object": "letter"
                            },
                            {
                              "id": "ltr_da8267c6a6545cd6",
                              "description": "Demo Letter",
                              "metadata": {},
                              "to": {
                                "id": "adr_210a8d4b0b76d77b",
                                "description": null,
                                "name": "LEORE AVIDAR",
                                "company": null,
                                "phone": null,
                                "email": null,
                                "address_line1": "210 KING ST STE 6100",
                                "address_line2": null,
                                "address_city": "SAN FRANCISCO",
                                "address_state": "CA",
                                "address_zip": "94107-1741",
                                "address_country": "UNITED STATES",
                                "metadata": {},
                                "date_created": "2018-12-08T03:01:07.651Z",
                                "date_modified": "2018-12-08T03:01:07.651Z",
                                "object": "address"
                              },
                              "from": {
                                "id": "adr_210a8d4b0b76d77b",
                                "description": null,
                                "name": "LEORE AVIDAR",
                                "company": null,
                                "phone": null,
                                "email": null,
                                "address_line1": "210 KING ST STE 6100",
                                "address_line2": null,
                                "address_city": "SAN FRANCISCO",
                                "address_state": "CA",
                                "address_zip": "94107-1741",
                                "address_country": "UNITED STATES",
                                "metadata": {},
                                "date_created": "2018-12-08T03:01:07.651Z",
                                "date_modified": "2018-12-08T03:01:07.651Z",
                                "object": "address"
                              },
                              "color": true,
                              "double_sided": false,
                              "address_placement": "top_first_page",
                              "return_envelope": false,
                              "perforated_page": null,
                              "extra_service": null,
                              "custom_envelope": null,
                              "mail_type": "usps_first_class",
                              "url": "https://lob-assets.com/letters/ltr_da8267c6a6545cd6.pdf?version=v1&expires=1568239830&signature=HH-5RnbD4x0eJcnEC9HhqKSvQGsbkjovzvqSKgBijUHKIXwEKQJ4CbYhKs_U2q2A1k20Xefcaw7bfdPKozuqCQ",
                              "merge_variables": null,
                              "carrier": "USPS",
                              "tracking_number": null,
                              "tracking_events": [],
                              "thumbnails": [
                                {
                                  "small": "https://lob-assets.com/letters/ltr_da8267c6a6545cd6_thumb_small_1.png?version=v1&expires=1568239830&signature=C1Rs83187HpWGhsg_pJIOhDIKlDtC_IgBBxHiocCEzJ8CncJwqrq5yHke-p97Dv7o81G_pfhFmirai589O6DCw",
                                  "medium": "https://lob-assets.com/letters/ltr_da8267c6a6545cd6_thumb_medium_1.png?version=v1&expires=1568239830&signature=gz63l0yi3sK_sXjYfIVdLSvkknJFr_O5TWRulo_iKIgS-PosIl6J0tDR6bx_Tv5Ab_w7DABg3qdKZ846MZ7TCw",
                                  "large": "https://lob-assets.com/letters/ltr_da8267c6a6545cd6_thumb_large_1.png?version=v1&expires=1568239830&signature=4Y1OIymaWkSO3aBIHCeshFAVnF-pDcF2FFqkx_jovaUFuk4FT1SI24L7_POwTRXQHlETMGlzkP_CGgqselRUAA"
                                }
                              ],
                              "expected_delivery_date": "2019-08-16",
                              "date_created": "2019-08-08T17:08:12.224Z",
                              "date_modified": "2019-08-08T17:08:13.990Z",
                              "send_date": "2019-08-08T17:08:12.224Z",
                              "cards": null,
                              "use_type": "marketing",
                              "fsc": true,
                              "object": "letter"
                            }
                          ],
                          "object": "list",
                          "next_url": "https://api.lob.com/v1/letters?limit=2&after=eyJkYXRlT2Zmc2V0IjoiMjAxOS0wOC0wOFQxNzowODoxMi4yMjRaIiwiaWRPZmZzZXQiOiJsdHJfZGE4MjY3YzZhNjU0NWNkNiJ9",
                          "previous_url": null,
                          "count": 2
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "data": [
                    {
                      "id": "ltr_5ba44b462c79f07c",
                      "description": "Demo Letter",
                      "metadata": {},
                      "to": {
                        "id": "adr_asdi2y3riuasasoi",
                        "description": "Harry - Office",
                        "name": "Harry Zhang",
                        "company": "Lob",
                        "phone": "5555555555",
                        "email": "harry@lob.com",
                        "metadata": {},
                        "address_line1": "370 WATER ST",
                        "address_line2": "",
                        "address_city": "SUMMERSIDE",
                        "address_state": "PRINCE EDWARD ISLAND",
                        "address_zip": "C1N 1C4",
                        "address_country": "CANADA",
                        "recipient_moved": false,
                        "date_created": "2019-09-20T00:14:00.361Z",
                        "date_modified": "2019-09-20T00:14:00.361Z",
                        "object": "address"
                      },
                      "from": {
                        "id": "adr_210a8d4b0b76d77b",
                        "description": null,
                        "name": "LEORE AVIDAR",
                        "company": null,
                        "phone": null,
                        "email": null,
                        "address_line1": "210 KING ST STE 6100",
                        "address_line2": null,
                        "address_city": "SAN FRANCISCO",
                        "address_state": "CA",
                        "address_zip": "94107-1741",
                        "address_country": "UNITED STATES",
                        "metadata": {},
                        "date_created": "2018-12-08T03:01:07.651Z",
                        "date_modified": "2018-12-08T03:01:07.651Z",
                        "object": "address"
                      },
                      "color": true,
                      "double_sided": false,
                      "address_placement": "top_first_page",
                      "return_envelope": false,
                      "perforated_page": null,
                      "extra_service": "certified",
                      "custom_envelope": null,
                      "template_id": "tmpl_a",
                      "template_version_id": "vrsn_a",
                      "mail_type": "usps_first_class",
                      "url": "https://lob-assets.com/letters/ltr_5ba44b462c79f07c.pdf?version=v1&expires=1568239830&signature=Ob-DUPLJLM4scWQeCDNadPJ4j33MZw16pykOxwv2us-bA7utTYi6oZ8WrEtBYDBBo09XkapR3gdJf0NEr90xAA",
                      "merge_variables": null,
                      "carrier": "USPS",
                      "tracking_number": "92071902358909000011275538",
                      "tracking_events": [
                        {
                          "id": "evnt_9e84094c9368cfb",
                          "type": "certified",
                          "name": "Delivered",
                          "details": {
                            "event": "delivered",
                            "description": "Package has been delivered.",
                            "notes": "Delivered, Front Desk/Reception/Mail Room",
                            "action_required": false
                          },
                          "location": "33408",
                          "time": "2019-10-08T19:41:00Z",
                          "date_created": "2019-10-08T19:41:00Z",
                          "date_modified": "2019-10-08T19:41:00Z",
                          "object": "tracking_event"
                        }
                      ],
                      "thumbnails": [
                        {
                          "small": "https://lob-assets.com/letters/ltr_5ba44b462c79f07c_thumb_small_1.png?version=v1&expires=1568239830&signature=xZUmE8rq8wSECHPEb9c37cUDZBzGUO3XK5LsIPZhI6dOXgm6zJEn8_7tKuZ3JWBmvNJNXdTl_ufkNu4avjQUDw",
                          "medium": "https://lob-assets.com/letters/ltr_5ba44b462c79f07c_thumb_medium_1.png?version=v1&expires=1568239830&signature=H7354Qpcm9S4aXbrMsBe6QJ6lSNi9IWPgMJtLWLi4Kyx9tHF8Mp9YEc_IL9x89Jfw4-yRzKDXA410X4W0PssBQ",
                          "large": "https://lob-assets.com/letters/ltr_5ba44b462c79f07c_thumb_large_1.png?version=v1&expires=1568239830&signature=54LUIDKZyItA9pnC87d1pJVAuw8bhKLCsMpNWkB3LgdVWxPxxb_c1IyIWAbSR-dyOYEOlDBCc40J4Kns-O_mAg"
                        }
                      ],
                      "expected_delivery_date": "2019-08-16",
                      "date_created": "2019-08-08T17:09:14.514Z",
                      "date_modified": "2019-08-08T17:09:16.850Z",
                      "send_date": "2019-08-08",
                      "use_type": "marketing",
                      "fsc": false,
                      "object": "letter"
                    },
                    {
                      "id": "ltr_da8267c6a6545cd6",
                      "description": "Demo Letter",
                      "metadata": {},
                      "to": {
                        "id": "adr_210a8d4b0b76d77b",
                        "description": null,
                        "name": "LEORE AVIDAR",
                        "company": null,
                        "phone": null,
                        "email": null,
                        "address_line1": "210 KING ST STE 6100",
                        "address_line2": null,
                        "address_city": "SAN FRANCISCO",
                        "address_state": "CA",
                        "address_zip": "94107-1741",
                        "address_country": "UNITED STATES",
                        "metadata": {},
                        "date_created": "2018-12-08T03:01:07.651Z",
                        "date_modified": "2018-12-08T03:01:07.651Z",
                        "object": "address"
                      },
                      "from": {
                        "id": "adr_210a8d4b0b76d77b",
                        "description": null,
                        "name": "LEORE AVIDAR",
                        "company": null,
                        "phone": null,
                        "email": null,
                        "address_line1": "210 KING ST STE 6100",
                        "address_line2": null,
                        "address_city": "SAN FRANCISCO",
                        "address_state": "CA",
                        "address_zip": "94107-1741",
                        "address_country": "UNITED STATES",
                        "metadata": {},
                        "date_created": "2018-12-08T03:01:07.651Z",
                        "date_modified": "2018-12-08T03:01:07.651Z",
                        "object": "address"
                      },
                      "color": true,
                      "double_sided": false,
                      "address_placement": "top_first_page",
                      "return_envelope": false,
                      "perforated_page": null,
                      "extra_service": null,
                      "custom_envelope": null,
                      "mail_type": "usps_first_class",
                      "url": "https://lob-assets.com/letters/ltr_da8267c6a6545cd6.pdf?version=v1&expires=1568239830&signature=HH-5RnbD4x0eJcnEC9HhqKSvQGsbkjovzvqSKgBijUHKIXwEKQJ4CbYhKs_U2q2A1k20Xefcaw7bfdPKozuqCQ",
                      "merge_variables": null,
                      "carrier": "USPS",
                      "tracking_number": null,
                      "tracking_events": [],
                      "thumbnails": [
                        {
                          "small": "https://lob-assets.com/letters/ltr_da8267c6a6545cd6_thumb_small_1.png?version=v1&expires=1568239830&signature=C1Rs83187HpWGhsg_pJIOhDIKlDtC_IgBBxHiocCEzJ8CncJwqrq5yHke-p97Dv7o81G_pfhFmirai589O6DCw",
                          "medium": "https://lob-assets.com/letters/ltr_da8267c6a6545cd6_thumb_medium_1.png?version=v1&expires=1568239830&signature=gz63l0yi3sK_sXjYfIVdLSvkknJFr_O5TWRulo_iKIgS-PosIl6J0tDR6bx_Tv5Ab_w7DABg3qdKZ846MZ7TCw",
                          "large": "https://lob-assets.com/letters/ltr_da8267c6a6545cd6_thumb_large_1.png?version=v1&expires=1568239830&signature=4Y1OIymaWkSO3aBIHCeshFAVnF-pDcF2FFqkx_jovaUFuk4FT1SI24L7_POwTRXQHlETMGlzkP_CGgqselRUAA"
                        }
                      ],
                      "expected_delivery_date": "2019-08-16",
                      "date_created": "2019-08-08T17:08:12.224Z",
                      "date_modified": "2019-08-08T17:08:13.990Z",
                      "send_date": "2019-08-08T17:08:12.224Z",
                      "cards": null,
                      "use_type": "marketing",
                      "fsc": true,
                      "object": "letter"
                    }
                  ],
                  "object": "list",
                  "next_url": "https://api.lob.com/v1/letters?limit=2&after=eyJkYXRlT2Zmc2V0IjoiMjAxOS0wOC0wOFQxNzowODoxMi4yMjRaIiwiaWRPZmZzZXQiOiJsdHJfZGE4MjY3YzZhNjU0NWNkNiJ9",
                  "previous_url": null,
                  "count": 2
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Letters0Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "not_found",
                            "message": "to address not found",
                            "status_code": 404
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "not_found",
                    "message": "to address not found",
                    "status_code": 404
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Letters"
        ],
        "summary": "letter_create",
        "description": "Creates a new letter given information",
        "operationId": "letter_create",
        "parameters": [
          {
            "name": "Idempotency-Key",
            "in": "header",
            "description": "A string of no longer than 256 characters that uniquely identifies this resource. For more help integrating idempotency keys, refer to our <a href=\"https://help.lob.com/print-and-mail/building-a-mail-strategy/managing-mail-settings#idempotent-requests-12\" target=\"_blank\">implementation guide</a>.",
            "style": "simple",
            "schema": {
              "maxLength": 256,
              "type": "string",
              "examples": [
                "026e7634-24d7-486c-a0bb-4a17fd0eebc5"
              ]
            }
          },
          {
            "name": "idempotency_key2",
            "in": "query",
            "description": "A string of no longer than 256 characters that uniquely identifies this resource. For more help integrating idempotency keys, refer to our <a href=\"https://help.lob.com/print-and-mail/building-a-mail-strategy/managing-mail-settings#idempotent-requests-12\" target=\"_blank\">implementation guide</a>.",
            "style": "form",
            "explode": true,
            "schema": {
              "maxLength": 256,
              "type": "string",
              "examples": [
                "026e7634-24d7-486c-a0bb-4a17fd0eebc5"
              ]
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/letter_editable"
                  },
                  {}
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns a letter object",
            "headers": {
              "ratelimit-limit": {
                "description": "The rate limit for a given endpoint.",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "The rate limit for a given endpoint.",
                      "examples": [
                        "150"
                      ],
                      "contentMediaType": "text/plain"
                    },
                    "example": "150"
                  }
                }
              },
              "ratelimit-remaining": {
                "description": "The number of requests remaining in the current window.",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "The number of requests remaining in the current window.",
                      "examples": [
                        "100"
                      ],
                      "contentMediaType": "text/plain"
                    },
                    "example": "100"
                  }
                }
              },
              "ratelimit-reset": {
                "description": "The time at which the rate limit window resets in  <a href=\"https://en.wikipedia.org/wiki/Unix_time\" target=\"_blank\">UTC epoch seconds</a>\n",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "The time at which the rate limit window resets in  <a href=\"https://en.wikipedia.org/wiki/Unix_time\" target=\"_blank\">UTC epoch seconds</a>\n",
                      "examples": [
                        "1528749846"
                      ],
                      "contentMediaType": "text/plain"
                    },
                    "example": "1528749846"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "examples": [
                    {
                      "id": "ltr_4868c3b754655f90",
                      "description": "Demo Letter",
                      "metadata": {},
                      "to": {
                        "id": "adr_d3489cd64c791ab5",
                        "description": null,
                        "name": "HARRY ZHANG",
                        "company": null,
                        "phone": null,
                        "email": null,
                        "address_line1": "210 KING ST STE 6100",
                        "address_line2": null,
                        "address_city": "SAN FRANCISCO",
                        "address_state": "CA",
                        "address_zip": "94107-1741",
                        "address_country": "UNITED STATES",
                        "metadata": {},
                        "date_created": "2017-09-05T15:54:53.264Z",
                        "date_modified": "2017-09-05T15:54:53.264Z",
                        "deleted": true,
                        "object": "address"
                      },
                      "from": {
                        "id": "adr_b8fb5acf3a2b55db",
                        "description": null,
                        "name": "LEORE AVIDAR",
                        "company": null,
                        "phone": null,
                        "email": null,
                        "address_line1": "210 KING ST STE 6100",
                        "address_line2": null,
                        "address_city": "SAN FRANCISCO",
                        "address_state": "CA",
                        "address_zip": "94107-1741",
                        "address_country": "UNITED STATES",
                        "metadata": {},
                        "date_created": "2017-09-05T15:54:53.264Z",
                        "date_modified": "2017-09-05T15:54:53.264Z",
                        "deleted": true,
                        "object": "address"
                      },
                      "color": true,
                      "double_sided": true,
                      "address_placement": "top_first_page",
                      "return_envelope": false,
                      "perforated_page": null,
                      "custom_envelope": null,
                      "extra_service": null,
                      "mail_type": "usps_first_class",
                      "url": "https://lob-assets.com/letters/ltr_4868c3b754655f90.pdf?expires=1540372221&signature=8r94fse8uam7wGWmW5baxXulU88X2CA",
                      "carrier": "USPS",
                      "tracking_number": null,
                      "tracking_events": [],
                      "thumbnails": [
                        {
                          "small": "https://lob-assets.com/letters/ltr_4868c3b754655f90_thumb_small_1.png?expires=1540372221&signature=a5fRBJ22ZA78Vgpg34M9UfmHWTS3eha",
                          "medium": "https://lob-assets.com/letters/ltr_4868c3b754655f90_thumb_medium_1.png?expires=1540372221&signature=bAzL8sv935PY09FWSkpDpWKkyvGSWYF",
                          "large": "https://lob-assets.com/letters/ltr_4868c3b754655f90_thumb_large_1.png?expires=1540372221&signature=gsKvxXgrm4v4iZD3bOibK7jApNkEMdW"
                        }
                      ],
                      "merge_variables": {
                        "name": "Harry"
                      },
                      "expected_delivery_date": "2017-09-12",
                      "date_created": "2017-09-05T15:54:53.346Z",
                      "date_modified": "2017-09-05T15:54:53.346Z",
                      "send_date": "2017-09-05T15:54:53.346Z",
                      "cards": [
                        {
                          "id": "card_c51ae96f5cebf3e",
                          "account_id": "fa9ea650fc7b31a89f92",
                          "description": null,
                          "url": "https://lob-assets.com/cards/card_c51ae96f5cebf3e.pdf?version=v1&expires=1636910992&signature=mnsDH2DAxdkN9VibdlLMxJC86sME5WYDqkNtmvGwdNsAaUWfbnv0rJhJ1mR8Ol4uxQq61j5wYZ0r3s-lBkQfDA",
                          "size": "2.125x3.375",
                          "auto_reorder": false,
                          "reorder_quantity": null,
                          "raw_url": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_raw.pdf?version=v1&expires=1636910992&signature=-bZo31FMAp2vmNaZKyXn_Qa4APqwtNinw76FrQ7uyQejFZw6VBQQYfoiQ642iXh0H2K5i2aOo8_BAkt3UJdVDw",
                          "front_original_url": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_raw.pdf?version=v1&expires=1636910992&signature=-bZo31FMAp2vmNaZKyXn_Qa4APqwtNinw76FrQ7uyQejFZw6VBQQYfoiQ642iXh0H2K5i2aOo8_BAkt3UJdVDw",
                          "back_original_url": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_raw.pdf?version=v1&expires=1636910992&signature=-bZo31FMAp2vmNaZKyXn_Qa4APqwtNinw76FrQ7uyQejFZw6VBQQYfoiQ642iXh0H2K5i2aOo8_BAkt3UJdVDw",
                          "thumbnails": [
                            {
                              "small": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_small_1.png?version=v1&expires=1636910992&signature=mrv8JDvpZK4I8WUGH0tPdtK-My5oes0Ltj_gL7BDw96SpCTTeZFHkz81SzclyFP9dQRtlsvAsjcuGcTBvCvOCg",
                              "medium": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_medium_1.png?version=v1&expires=1636910992&signature=VgL_2Ckm_kxKiWGgWtdNoy9HHOn8dGYSVOn7UqyCbwdbVlUtx28TRN4Bo8Iru3n0keKp9He0YhKT1ILotznMDA",
                              "large": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_large_1.png?version=v1&expires=1636910992&signature=FKSzymA13j-CQ0uk20cGHZTzT3vimzNBYrgp-xifLFg4mMdo1BZALR5O0aF_jVhsX614hKP35ONdYl47TQxXAw"
                            },
                            {
                              "small": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_small_2.png?version=v1&expires=1636910992&signature=IWsmPa_ULlv2yyqjX564d_YfHHY_M7i9YxDnw-WXDr2jtOFcArmRZQbnHeE9g_rYxnddJbgosuv8-c2utiu7Cg",
                              "medium": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_medium_2.png?version=v1&expires=1636910992&signature=zxK7VKGiTvz5Ywrkaydd0v3GcYf58R7A08J4tNfI7-aiNODDcTF3l0MqY13n9Pyc8RXSdD0XVBY-OpbA1VM-Ag",
                              "large": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_large_2.png?version=v1&expires=1636910992&signature=r0OFUhh315ZwN0raMZdIwJd2oCIEYsz0BABaMxIuO1PKTD0ckGWrhcGdzk2dlWQ6vSvp0CUQ5k1RXGqkIIqkDw"
                            }
                          ],
                          "available_quantity": 10000,
                          "pending_quantity": 0,
                          "countries": null,
                          "status": "rendered",
                          "mode": "test",
                          "orientation": "horizontal",
                          "threshold_amount": 0,
                          "date_created": "2017-08-05T15:54:53.346Z",
                          "date_modified": "2017-08-05T15:54:53.346Z",
                          "object": "card"
                        }
                      ],
                      "use_type": "marketing",
                      "fsc": false,
                      "object": "letter"
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "id": "ltr_4868c3b754655f90",
                  "description": "Demo Letter",
                  "metadata": {},
                  "to": {
                    "id": "adr_d3489cd64c791ab5",
                    "description": null,
                    "name": "HARRY ZHANG",
                    "company": null,
                    "phone": null,
                    "email": null,
                    "address_line1": "210 KING ST STE 6100",
                    "address_line2": null,
                    "address_city": "SAN FRANCISCO",
                    "address_state": "CA",
                    "address_zip": "94107-1741",
                    "address_country": "UNITED STATES",
                    "metadata": {},
                    "date_created": "2017-09-05T15:54:53.264Z",
                    "date_modified": "2017-09-05T15:54:53.264Z",
                    "deleted": true,
                    "object": "address"
                  },
                  "from": {
                    "id": "adr_b8fb5acf3a2b55db",
                    "description": null,
                    "name": "LEORE AVIDAR",
                    "company": null,
                    "phone": null,
                    "email": null,
                    "address_line1": "210 KING ST STE 6100",
                    "address_line2": null,
                    "address_city": "SAN FRANCISCO",
                    "address_state": "CA",
                    "address_zip": "94107-1741",
                    "address_country": "UNITED STATES",
                    "metadata": {},
                    "date_created": "2017-09-05T15:54:53.264Z",
                    "date_modified": "2017-09-05T15:54:53.264Z",
                    "deleted": true,
                    "object": "address"
                  },
                  "color": true,
                  "double_sided": true,
                  "address_placement": "top_first_page",
                  "return_envelope": false,
                  "perforated_page": null,
                  "custom_envelope": null,
                  "extra_service": null,
                  "mail_type": "usps_first_class",
                  "url": "https://lob-assets.com/letters/ltr_4868c3b754655f90.pdf?expires=1540372221&signature=8r94fse8uam7wGWmW5baxXulU88X2CA",
                  "carrier": "USPS",
                  "tracking_number": null,
                  "tracking_events": [],
                  "thumbnails": [
                    {
                      "small": "https://lob-assets.com/letters/ltr_4868c3b754655f90_thumb_small_1.png?expires=1540372221&signature=a5fRBJ22ZA78Vgpg34M9UfmHWTS3eha",
                      "medium": "https://lob-assets.com/letters/ltr_4868c3b754655f90_thumb_medium_1.png?expires=1540372221&signature=bAzL8sv935PY09FWSkpDpWKkyvGSWYF",
                      "large": "https://lob-assets.com/letters/ltr_4868c3b754655f90_thumb_large_1.png?expires=1540372221&signature=gsKvxXgrm4v4iZD3bOibK7jApNkEMdW"
                    }
                  ],
                  "merge_variables": {
                    "name": "Harry"
                  },
                  "expected_delivery_date": "2017-09-12",
                  "date_created": "2017-09-05T15:54:53.346Z",
                  "date_modified": "2017-09-05T15:54:53.346Z",
                  "send_date": "2017-09-05T15:54:53.346Z",
                  "cards": [
                    {
                      "id": "card_c51ae96f5cebf3e",
                      "account_id": "fa9ea650fc7b31a89f92",
                      "description": null,
                      "url": "https://lob-assets.com/cards/card_c51ae96f5cebf3e.pdf?version=v1&expires=1636910992&signature=mnsDH2DAxdkN9VibdlLMxJC86sME5WYDqkNtmvGwdNsAaUWfbnv0rJhJ1mR8Ol4uxQq61j5wYZ0r3s-lBkQfDA",
                      "size": "2.125x3.375",
                      "auto_reorder": false,
                      "reorder_quantity": null,
                      "raw_url": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_raw.pdf?version=v1&expires=1636910992&signature=-bZo31FMAp2vmNaZKyXn_Qa4APqwtNinw76FrQ7uyQejFZw6VBQQYfoiQ642iXh0H2K5i2aOo8_BAkt3UJdVDw",
                      "front_original_url": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_raw.pdf?version=v1&expires=1636910992&signature=-bZo31FMAp2vmNaZKyXn_Qa4APqwtNinw76FrQ7uyQejFZw6VBQQYfoiQ642iXh0H2K5i2aOo8_BAkt3UJdVDw",
                      "back_original_url": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_raw.pdf?version=v1&expires=1636910992&signature=-bZo31FMAp2vmNaZKyXn_Qa4APqwtNinw76FrQ7uyQejFZw6VBQQYfoiQ642iXh0H2K5i2aOo8_BAkt3UJdVDw",
                      "thumbnails": [
                        {
                          "small": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_small_1.png?version=v1&expires=1636910992&signature=mrv8JDvpZK4I8WUGH0tPdtK-My5oes0Ltj_gL7BDw96SpCTTeZFHkz81SzclyFP9dQRtlsvAsjcuGcTBvCvOCg",
                          "medium": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_medium_1.png?version=v1&expires=1636910992&signature=VgL_2Ckm_kxKiWGgWtdNoy9HHOn8dGYSVOn7UqyCbwdbVlUtx28TRN4Bo8Iru3n0keKp9He0YhKT1ILotznMDA",
                          "large": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_large_1.png?version=v1&expires=1636910992&signature=FKSzymA13j-CQ0uk20cGHZTzT3vimzNBYrgp-xifLFg4mMdo1BZALR5O0aF_jVhsX614hKP35ONdYl47TQxXAw"
                        },
                        {
                          "small": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_small_2.png?version=v1&expires=1636910992&signature=IWsmPa_ULlv2yyqjX564d_YfHHY_M7i9YxDnw-WXDr2jtOFcArmRZQbnHeE9g_rYxnddJbgosuv8-c2utiu7Cg",
                          "medium": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_medium_2.png?version=v1&expires=1636910992&signature=zxK7VKGiTvz5Ywrkaydd0v3GcYf58R7A08J4tNfI7-aiNODDcTF3l0MqY13n9Pyc8RXSdD0XVBY-OpbA1VM-Ag",
                          "large": "https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_large_2.png?version=v1&expires=1636910992&signature=r0OFUhh315ZwN0raMZdIwJd2oCIEYsz0BABaMxIuO1PKTD0ckGWrhcGdzk2dlWQ6vSvp0CUQ5k1RXGqkIIqkDw"
                        }
                      ],
                      "available_quantity": 10000,
                      "pending_quantity": 0,
                      "countries": null,
                      "status": "rendered",
                      "mode": "test",
                      "orientation": "horizontal",
                      "threshold_amount": 0,
                      "date_created": "2017-08-05T15:54:53.346Z",
                      "date_modified": "2017-08-05T15:54:53.346Z",
                      "object": "card"
                    }
                  ],
                  "use_type": "marketing",
                  "fsc": false,
                  "object": "letter"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Letters0Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "not_found",
                            "message": "to address not found",
                            "status_code": 404
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "not_found",
                    "message": "to address not found",
                    "status_code": 404
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/postcards/{psc_id}": {
      "get": {
        "tags": [
          "Postcards"
        ],
        "summary": "postcard_retrieve",
        "description": "Retrieves the details of an existing postcard. You need only supply the unique customer identifier that was returned upon postcard creation.",
        "operationId": "postcard_retrieve",
        "parameters": [
          {
            "name": "psc_id",
            "in": "path",
            "description": "id of the postcard",
            "required": true,
            "style": "simple",
            "schema": {
              "pattern": "^psc_[a-zA-Z0-9]+$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a postcard object",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/postcard"
                    },
                    {
                      "examples": [
                        "{\"id\":\"psc_208e45e48d271294\",\"description\":null,\"metadata\":{},\"to\":{\"id\":\"adr_210a8d4b0b76d77b\",\"description\":null,\"name\":null,\"company\":\"LOB\",\"phone\":null,\"email\":null,\"address_line1\":\"210 KING ST STE 6100\",\"address_line2\":null,\"address_city\":\"SAN FRANCISCO\",\"address_state\":\"CA\",\"address_zip\":\"94107-1741\",\"address_country\":\"UNITED STATES\",\"metadata\":{},\"date_created\":\"2018-12-08T03:01:07.651Z\",\"date_modified\":\"2018-12-08T03:01:07.651Z\",\"object\":\"address\"},\"url\":\"https://lob-assets.com/postcards/psc_208e45e48d271294.pdf?version=v1&expires=1619218302&signature=NfHHLBSr5tOHA_Z4kij4dKqZG8f3vMDtwvuFVeeF9pV_lylcjLsVVODhNCE5hR6-2slUr6t9WMNsi429Pj7_DA\",\"carrier\":\"USPS\",\"front_template_id\":null,\"back_template_id\":null,\"date_created\":\"2021-03-24T22:51:42.838Z\",\"date_modified\":\"2021-03-24T22:51:42.838Z\",\"send_date\":\"2021-03-24T22:51:42.838Z\",\"use_type\":\"marketing\",\"object\":\"postcard\"}",
                        "{\"id\":\"psc_0e03d1ad7d31f151\",\"description\":null,\"metadata\":{},\"to\":{\"id\":\"adr_c7cb63d68f8d6\",\"description\":null,\"name\":\"JANE DOE\",\"company\":\"LOB\",\"phone\":\"5555555555\",\"email\":\"jane.doe@lob.com\",\"address_line1\":\"370 WATER ST\",\"address_line2\":\"\",\"address_city\":\"SUMMERSIDE\",\"address_state\":\"PE\",\"address_zip\":\"C1N 1C4\",\"address_country\":\"CANADA\",\"metadata\":{},\"date_created\":\"2018-12-08T03:01:07.651Z\",\"date_modified\":\"2018-12-08T03:01:07.651Z\",\"object\":\"address\",\"recipient_moved\":false},\"from\":{\"id\":\"adr_210a8d4b0b76d77b\",\"description\":null,\"name\":\"LEORE AVIDAR\",\"company\":null,\"phone\":null,\"email\":null,\"address_line1\":\"210 KING ST STE 6100\",\"address_line2\":null,\"address_city\":\"SAN FRANCISCO\",\"address_state\":\"CA\",\"address_zip\":\"94107-1741\",\"address_country\":\"UNITED STATES\",\"metadata\":{},\"date_created\":\"2018-12-08T03:01:07.651Z\",\"date_modified\":\"2018-12-08T03:01:07.651Z\",\"object\":\"address\"},\"url\":\"https://lob-assets.com/postcards/psc_208e45e48d271294.pdf?version=v1&expires=1619218302&signature=NfHHLBSr5tOHA_Z4kij4dKqZG8f3vMDtwvuFVeeF9pV_lylcjLsVVODhNCE5hR6-2slUr6t9WMNsi429Pj7_DA\",\"carrier\":\"USPS\",\"front_template_id\":\"tmpl_93c369f06171958\",\"back_template_id\":\"tmpl_93c369f06171958\",\"front_template_version_id\":\"vrsn_a83e044941c393b\",\"back_template_version_id\":\"vrsn_a83e044941c393b\",\"tracking_events\":[],\"size\":\"6x11\",\"mail_type\":\"usps_first_class\",\"merge_variables\":{},\"thumbnails\":[{\"small\":\"https://lob-assets.com/letters/ltr_4868c3b754655f90_thumb_small_1.png?expires=1540372221&signature=a5fRBJ22ZA78Vgpg34M9UfmHWTS3eha\",\"medium\":\"https://lob-assets.com/letters/ltr_4868c3b754655f90_thumb_medium_1.png?expires=1540372221&signature=bAzL8sv935PY09FWSkpDpWKkyvGSWYF\",\"large\":\"https://lob-assets.com/letters/ltr_4868c3b754655f90_thumb_large_1.png?expires=1540372221&signature=gsKvxXgrm4v4iZD3bOibK7jApNkEMdW\"}],\"expected_delivery_date\":\"2021-03-30\",\"date_created\":\"2021-03-24T22:51:42.838Z\",\"date_modified\":\"2021-03-24T22:51:42.838Z\",\"send_date\":\"2021-03-24T22:51:42.838Z\",\"use_type\":\"marketing\",\"object\":\"postcard\"}"
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "examples": {
                  "basic": {
                    "value": {
                      "id": "psc_208e45e48d271294",
                      "description": null,
                      "metadata": {},
                      "to": {
                        "id": "adr_210a8d4b0b76d77b",
                        "description": null,
                        "name": null,
                        "company": "LOB",
                        "phone": null,
                        "email": null,
                        "address_line1": "210 KING ST STE 6100",
                        "address_line2": null,
                        "address_city": "SAN FRANCISCO",
                        "address_state": "CA",
                        "address_zip": "94107-1741",
                        "address_country": "UNITED STATES",
                        "metadata": {},
                        "date_created": "2018-12-08T03:01:07.651Z",
                        "date_modified": "2018-12-08T03:01:07.651Z",
                        "object": "address"
                      },
                      "url": "https://lob-assets.com/postcards/psc_208e45e48d271294.pdf?version=v1&expires=1619218302&signature=NfHHLBSr5tOHA_Z4kij4dKqZG8f3vMDtwvuFVeeF9pV_lylcjLsVVODhNCE5hR6-2slUr6t9WMNsi429Pj7_DA",
                      "carrier": "USPS",
                      "front_template_id": null,
                      "back_template_id": null,
                      "date_created": "2021-03-24T22:51:42.838Z",
                      "date_modified": "2021-03-24T22:51:42.838Z",
                      "send_date": "2021-03-24T22:51:42.838Z",
                      "use_type": "marketing",
                      "object": "postcard"
                    }
                  },
                  "full": {
                    "value": {
                      "id": "psc_0e03d1ad7d31f151",
                      "description": null,
                      "metadata": {},
                      "to": {
                        "id": "adr_c7cb63d68f8d6",
                        "description": null,
                        "name": "JANE DOE",
                        "company": "LOB",
                        "phone": "5555555555",
                        "email": "jane.doe@lob.com",
                        "address_line1": "370 WATER ST",
                        "address_line2": "",
                        "address_city": "SUMMERSIDE",
                        "address_state": "PE",
                        "address_zip": "C1N 1C4",
                        "address_country": "CANADA",
                        "metadata": {},
                        "date_created": "2018-12-08T03:01:07.651Z",
                        "date_modified": "2018-12-08T03:01:07.651Z",
                        "object": "address",
                        "recipient_moved": false
                      },
                      "from": {
                        "id": "adr_210a8d4b0b76d77b",
                        "description": null,
                        "name": "LEORE AVIDAR",
                        "company": null,
                        "phone": null,
                        "email": null,
                        "address_line1": "210 KING ST STE 6100",
                        "address_line2": null,
                        "address_city": "SAN FRANCISCO",
                        "address_state": "CA",
                        "address_zip": "94107-1741",
                        "address_country": "UNITED STATES",
                        "metadata": {},
                        "date_created": "2018-12-08T03:01:07.651Z",
                        "date_modified": "2018-12-08T03:01:07.651Z",
                        "object": "address"
                      },
                      "url": "https://lob-assets.com/postcards/psc_208e45e48d271294.pdf?version=v1&expires=1619218302&signature=NfHHLBSr5tOHA_Z4kij4dKqZG8f3vMDtwvuFVeeF9pV_lylcjLsVVODhNCE5hR6-2slUr6t9WMNsi429Pj7_DA",
                      "carrier": "USPS",
                      "front_template_id": "tmpl_93c369f06171958",
                      "back_template_id": "tmpl_93c369f06171958",
                      "front_template_version_id": "vrsn_a83e044941c393b",
                      "back_template_version_id": "vrsn_a83e044941c393b",
                      "tracking_events": [],
                      "size": "6x11",
                      "mail_type": "usps_first_class",
                      "merge_variables": {},
                      "thumbnails": [
                        {
                          "small": "https://lob-assets.com/letters/ltr_4868c3b754655f90_thumb_small_1.png?expires=1540372221&signature=a5fRBJ22ZA78Vgpg34M9UfmHWTS3eha",
                          "medium": "https://lob-assets.com/letters/ltr_4868c3b754655f90_thumb_medium_1.png?expires=1540372221&signature=bAzL8sv935PY09FWSkpDpWKkyvGSWYF",
                          "large": "https://lob-assets.com/letters/ltr_4868c3b754655f90_thumb_large_1.png?expires=1540372221&signature=gsKvxXgrm4v4iZD3bOibK7jApNkEMdW"
                        }
                      ],
                      "expected_delivery_date": "2021-03-30",
                      "date_created": "2021-03-24T22:51:42.838Z",
                      "date_modified": "2021-03-24T22:51:42.838Z",
                      "send_date": "2021-03-24T22:51:42.838Z",
                      "use_type": "marketing",
                      "object": "postcard"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Postcards0Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "not_found",
                            "message": "to address not found",
                            "status_code": 404
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "not_found",
                    "message": "to address not found",
                    "status_code": 404
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Postcards"
        ],
        "summary": "postcard_delete",
        "description": "Completely removes a postcard from production. This can only be done if the postcard has a `send_date` and the `send_date` has not yet passed. If the postcard is successfully canceled, you will not be charged for it. Read more on [cancellation windows](#section/Cancellation-Windows) and [scheduling](#section/Scheduled-Mailings). Scheduling and cancellation is a premium feature. Upgrade to the appropriate <a href=\"https://dashboard.lob.com/#/settings/editions\" target=\"_blank\">Print & Mail Edition</a> to gain access.",
        "operationId": "postcard_delete",
        "parameters": [
          {
            "name": "psc_id",
            "in": "path",
            "description": "id of the postcard",
            "required": true,
            "style": "simple",
            "schema": {
              "pattern": "^psc_[a-zA-Z0-9]+$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PostcardsResponse1"
                    },
                    {
                      "examples": [
                        {
                          "id": "psc_123456789",
                          "deleted": true
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "id": "psc_123456789",
                  "deleted": true
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Postcards0Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "not_found",
                            "message": "to address not found",
                            "status_code": 404
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "not_found",
                    "message": "to address not found",
                    "status_code": 404
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/postcards": {
      "get": {
        "tags": [
          "Postcards"
        ],
        "summary": "postcards_list",
        "description": "Returns a list of your postcards. The addresses are returned sorted by creation date, with the most recently created addresses appearing first.",
        "operationId": "postcards_list",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "How many results to return.",
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 100.0,
              "minimum": 1.0,
              "type": "integer",
              "contentEncoding": "int32",
              "default": 10,
              "examples": [
                10
              ]
            }
          },
          {
            "name": "before/after",
            "in": "query",
            "description": "`before` and `after` are both optional but only one of them can be in the query at a time.",
            "style": "form",
            "explode": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/beforeafter"
                },
                {
                  "description": "`before` and `after` are both optional but only one of them can be in the query at a time."
                }
              ]
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Request that the response include the total count by specifying `include=[\"total_count\"]`.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "date_created",
            "in": "query",
            "description": "Filter by date created. Accepted formats are ISO-8601 date or datetime, e.g. `{ \"gt\": \"2012-01-01\", \"lt\": \"2012-01-31T12:34:56Z\" }` where `gt` is >, `lt` is <, `gte` is ≥, and `lte` is ≤.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          {
            "name": "metadata",
            "in": "query",
            "description": "Filter by metadata key-value pair`.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Specifies the size of the postcard. Only `4x6` postcards can be sent to international destinations.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/postcard_size"
              }
            }
          },
          {
            "name": "scheduled",
            "in": "query",
            "description": "* `true` - only return orders (past or future) where `send_date` is\ngreater than `date_created`\n* `false` - only return orders where `send_date` is equal to `date_created`",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "send_date",
            "in": "query",
            "description": "Filter by ISO-8601 date or datetime, e.g. `{ \"gt\": \"2012-01-01\", \"lt\": \"2012-01-31T12:34:56Z\" }` where `gt` is >, `lt` is <, `gte` is ≥, and `lte` is ≤.",
            "style": "form",
            "explode": true,
            "schema": {}
          },
          {
            "name": "mail_type",
            "in": "query",
            "description": "A string designating the mail postage type: * `usps_first_class` - (default) * `usps_standard` - a <a href=\"https://lob.com/pricing/print-mail#compare\" target=\"_blank\">cheaper option</a> which is less predictable and takes longer to deliver. `usps_standard` cannot be used with `4x6` postcards or for any postcards sent outside of the United States.",
            "style": "form",
            "explode": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/mail_type"
                },
                {
                  "description": "A string designating the mail postage type: * `usps_first_class` - (default) * `usps_standard` - a <a href=\"https://lob.com/pricing/print-mail#compare\" target=\"_blank\">cheaper option</a> which is less predictable and takes longer to deliver. `usps_standard` cannot be used with `4x6` postcards or for any postcards sent outside of the United States."
                }
              ]
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "Sorts items by ascending or descending dates. Use either `date_created` or `send_date`, not both.",
            "style": "form",
            "explode": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/sort_by1"
                },
                {
                  "description": "Sorts items by ascending or descending dates. Use either `date_created` or `send_date`, not both."
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A dictionary with a data property that contains an array of up to `limit` postcards. Each entry in the array is a separate postcard. The previous and next page of postcards can be retrieved by calling the endpoint contained in the `previous_url` and `next_url` fields in the API response respectively.<br>If no more postcards are available beyond the current set of returned results, the `next_url` field will be empty.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/all_postcards"
                    },
                    {
                      "examples": [
                        {
                          "data": [
                            {
                              "id": "psc_208e45e48d271294",
                              "description": null,
                              "metadata": {},
                              "to": {
                                "id": "adr_210a8d4b0b76d77b",
                                "description": null,
                                "name": "LEORE AVIDAR",
                                "company": null,
                                "phone": null,
                                "email": null,
                                "address_line1": "210 KING ST STE 6100",
                                "address_line2": null,
                                "address_city": "SAN FRANCISCO",
                                "address_state": "CA",
                                "address_zip": "94107-1741",
                                "address_country": "UNITED STATES",
                                "metadata": {},
                                "date_created": "2018-12-08T03:01:07.651Z",
                                "date_modified": "2018-12-08T03:01:07.651Z",
                                "object": "address"
                              },
                              "url": "https://lob-assets.com/postcards/psc_208e45e48d271294.pdf?version=v1&expires=1619218302&signature=NfHHLBSr5tOHA_Z4kij4dKqZG8f3vMDtwvuFVeeF9pV_lylcjLsVVODhNCE5hR6-2slUr6t9WMNsi429Pj7_DA",
                              "carrier": "USPS",
                              "front_template_id": null,
                              "back_template_id": null,
                              "front_template_version_id": null,
                              "back_template_version_id": null,
                              "date_created": "2021-03-24T22:51:42.838Z",
                              "date_modified": "2021-03-24T22:51:42.838Z",
                              "send_date": "2021-03-24T22:51:42.838Z",
                              "use_type": "marketing",
                              "object": "postcard"
                            },
                            {
                              "id": "psc_0e03d1ad7d31f151",
                              "description": null,
                              "metadata": {},
                              "to": {
                                "id": "adr_c7cb63d68f8d6",
                                "description": null,
                                "name": "JANE DOE",
                                "company": "LOB",
                                "phone": "5555555555",
                                "email": "jane.doe@lob.com",
                                "address_line1": "370 WATER ST",
                                "address_line2": "",
                                "address_city": "SUMMERSIDE",
                                "address_state": "PE",
                                "address_zip": "C1N 1C4",
                                "address_country": "CANADA",
                                "metadata": {},
                                "date_created": "2018-12-08T03:01:07.651Z",
                                "date_modified": "2018-12-08T03:01:07.651Z",
                                "object": "address",
                                "recipient_moved": false
                              },
                              "from": {
                                "id": "adr_210a8d4b0b76d77b",
                                "description": null,
                                "name": "LEORE AVIDAR",
                                "company": null,
                                "phone": null,
                                "email": null,
                                "address_line1": "210 KING ST STE 6100",
                                "address_line2": null,
                                "address_city": "SAN FRANCISCO",
                                "address_state": "CA",
                                "address_zip": "94107-1741",
                                "address_country": "UNITED STATES",
                                "metadata": {},
                                "date_created": "2018-12-08T03:01:07.651Z",
                                "date_modified": "2018-12-08T03:01:07.651Z",
                                "object": "address"
                              },
                              "url": "https://lob-assets.com/postcards/psc_208e45e48d271294.pdf?version=v1&expires=1619218302&signature=NfHHLBSr5tOHA_Z4kij4dKqZG8f3vMDtwvuFVeeF9pV_lylcjLsVVODhNCE5hR6-2slUr6t9WMNsi429Pj7_DA",
                              "carrier": "USPS",
                              "front_template_id": null,
                              "back_template_id": null,
                              "front_template_version_id": null,
                              "back_template_version_id": null,
                              "tracking_events": [],
                              "size": "6x11",
                              "mail_type": "usps_first_class",
                              "merge_variables": {},
                              "thumbnails": [
                                {
                                  "small": "https://lob-assets.com/letters/ltr_4868c3b754655f90_thumb_small_1.png?expires=1540372221&signature=a5fRBJ22ZA78Vgpg34M9UfmHWTS3eha",
                                  "medium": "https://lob-assets.com/letters/ltr_4868c3b754655f90_thumb_medium_1.png?expires=1540372221&signature=bAzL8sv935PY09FWSkpDpWKkyvGSWYF",
                                  "large": "https://lob-assets.com/letters/ltr_4868c3b754655f90_thumb_large_1.png?expires=1540372221&signature=gsKvxXgrm4v4iZD3bOibK7jApNkEMdW"
                                }
                              ],
                              "expected_delivery_date": "2021-03-30",
                              "date_created": "2021-03-24T22:51:42.838Z",
                              "date_modified": "2021-03-24T22:51:42.838Z",
                              "send_date": "2021-03-24T22:51:42.838Z",
                              "use_type": "marketing",
                              "object": "postcard"
                            }
                          ],
                          "object": "list",
                          "previous_url": null,
                          "next_url": null,
                          "count": 2
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "data": [
                    {
                      "id": "psc_208e45e48d271294",
                      "description": null,
                      "metadata": {},
                      "to": {
                        "id": "adr_210a8d4b0b76d77b",
                        "description": null,
                        "name": "LEORE AVIDAR",
                        "company": null,
                        "phone": null,
                        "email": null,
                        "address_line1": "210 KING ST STE 6100",
                        "address_line2": null,
                        "address_city": "SAN FRANCISCO",
                        "address_state": "CA",
                        "address_zip": "94107-1741",
                        "address_country": "UNITED STATES",
                        "metadata": {},
                        "date_created": "2018-12-08T03:01:07.651Z",
                        "date_modified": "2018-12-08T03:01:07.651Z",
                        "object": "address"
                      },
                      "url": "https://lob-assets.com/postcards/psc_208e45e48d271294.pdf?version=v1&expires=1619218302&signature=NfHHLBSr5tOHA_Z4kij4dKqZG8f3vMDtwvuFVeeF9pV_lylcjLsVVODhNCE5hR6-2slUr6t9WMNsi429Pj7_DA",
                      "carrier": "USPS",
                      "front_template_id": null,
                      "back_template_id": null,
                      "front_template_version_id": null,
                      "back_template_version_id": null,
                      "date_created": "2021-03-24T22:51:42.838Z",
                      "date_modified": "2021-03-24T22:51:42.838Z",
                      "send_date": "2021-03-24T22:51:42.838Z",
                      "use_type": "marketing",
                      "object": "postcard"
                    },
                    {
                      "id": "psc_0e03d1ad7d31f151",
                      "description": null,
                      "metadata": {},
                      "to": {
                        "id": "adr_c7cb63d68f8d6",
                        "description": null,
                        "name": "JANE DOE",
                        "company": "LOB",
                        "phone": "5555555555",
                        "email": "jane.doe@lob.com",
                        "address_line1": "370 WATER ST",
                        "address_line2": "",
                        "address_city": "SUMMERSIDE",
                        "address_state": "PE",
                        "address_zip": "C1N 1C4",
                        "address_country": "CANADA",
                        "metadata": {},
                        "date_created": "2018-12-08T03:01:07.651Z",
                        "date_modified": "2018-12-08T03:01:07.651Z",
                        "object": "address",
                        "recipient_moved": false
                      },
                      "from": {
                        "id": "adr_210a8d4b0b76d77b",
                        "description": null,
                        "name": "LEORE AVIDAR",
                        "company": null,
                        "phone": null,
                        "email": null,
                        "address_line1": "210 KING ST STE 6100",
                        "address_line2": null,
                        "address_city": "SAN FRANCISCO",
                        "address_state": "CA",
                        "address_zip": "94107-1741",
                        "address_country": "UNITED STATES",
                        "metadata": {},
                        "date_created": "2018-12-08T03:01:07.651Z",
                        "date_modified": "2018-12-08T03:01:07.651Z",
                        "object": "address"
                      },
                      "url": "https://lob-assets.com/postcards/psc_208e45e48d271294.pdf?version=v1&expires=1619218302&signature=NfHHLBSr5tOHA_Z4kij4dKqZG8f3vMDtwvuFVeeF9pV_lylcjLsVVODhNCE5hR6-2slUr6t9WMNsi429Pj7_DA",
                      "carrier": "USPS",
                      "front_template_id": null,
                      "back_template_id": null,
                      "front_template_version_id": null,
                      "back_template_version_id": null,
                      "tracking_events": [],
                      "size": "6x11",
                      "mail_type": "usps_first_class",
                      "merge_variables": {},
                      "thumbnails": [
                        {
                          "small": "https://lob-assets.com/letters/ltr_4868c3b754655f90_thumb_small_1.png?expires=1540372221&signature=a5fRBJ22ZA78Vgpg34M9UfmHWTS3eha",
                          "medium": "https://lob-assets.com/letters/ltr_4868c3b754655f90_thumb_medium_1.png?expires=1540372221&signature=bAzL8sv935PY09FWSkpDpWKkyvGSWYF",
                          "large": "https://lob-assets.com/letters/ltr_4868c3b754655f90_thumb_large_1.png?expires=1540372221&signature=gsKvxXgrm4v4iZD3bOibK7jApNkEMdW"
                        }
                      ],
                      "expected_delivery_date": "2021-03-30",
                      "date_created": "2021-03-24T22:51:42.838Z",
                      "date_modified": "2021-03-24T22:51:42.838Z",
                      "send_date": "2021-03-24T22:51:42.838Z",
                      "use_type": "marketing",
                      "object": "postcard"
                    }
                  ],
                  "object": "list",
                  "previous_url": null,
                  "next_url": null,
                  "count": 2
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Postcards0Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "not_found",
                            "message": "to address not found",
                            "status_code": 404
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "not_found",
                    "message": "to address not found",
                    "status_code": 404
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Postcards"
        ],
        "summary": "postcard_create",
        "description": "Creates a new postcard given information",
        "operationId": "postcard_create",
        "parameters": [
          {
            "name": "Idempotency-Key",
            "in": "header",
            "description": "A string of no longer than 256 characters that uniquely identifies this resource. For more help integrating idempotency keys, refer to our <a href=\"https://help.lob.com/print-and-mail/building-a-mail-strategy/managing-mail-settings#idempotent-requests-12\" target=\"_blank\">implementation guide</a>.",
            "style": "simple",
            "schema": {
              "maxLength": 256,
              "type": "string",
              "examples": [
                "026e7634-24d7-486c-a0bb-4a17fd0eebc5"
              ]
            }
          },
          {
            "name": "idempotency_key2",
            "in": "query",
            "description": "A string of no longer than 256 characters that uniquely identifies this resource. For more help integrating idempotency keys, refer to our <a href=\"https://help.lob.com/print-and-mail/building-a-mail-strategy/managing-mail-settings#idempotent-requests-12\" target=\"_blank\">implementation guide</a>.",
            "style": "form",
            "explode": true,
            "schema": {
              "maxLength": 256,
              "type": "string",
              "examples": [
                "026e7634-24d7-486c-a0bb-4a17fd0eebc5"
              ]
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/postcard_editable"
                  },
                  {
                    "examples": [
                      {
                        "description": "demo",
                        "to": {
                          "description": "Harry - Office",
                          "name": "Harry Zhang",
                          "company": "Lob",
                          "email": "harry@lob.com",
                          "phone": "5555555555",
                          "address_line1": "210 King St",
                          "address_line2": "# 6100",
                          "address_city": "San Francisco",
                          "address_state": "CA",
                          "address_zip": "94107",
                          "address_country": "US"
                        },
                        "from": {
                          "description": "Harry - Office",
                          "name": "Harry Zhang",
                          "company": "Lob",
                          "email": "harry@lob.com",
                          "phone": "5555555555",
                          "address_line1": "210 King St",
                          "address_line2": "# 6100",
                          "address_city": "San Francisco",
                          "address_state": "CA",
                          "address_zip": "94107",
                          "address_country": "US"
                        },
                        "front": "tmpl_a1234dddg",
                        "back": "tmpl_a1234dddg",
                        "size": "6x9",
                        "mail_type": "usps_first_class",
                        "merge_variables": {
                          "name": "Harry"
                        },
                        "metadata": {
                          "spiffy": "true"
                        },
                        "send_date": "2017-11-01T00:00:00.000Z",
                        "use_type": "marketing",
                        "qr_code": {
                          "position": "relative",
                          "redirect_url": "https://www.lob.com",
                          "width": "2.5",
                          "top": "2.5",
                          "right": "2.5",
                          "pages": "front,back"
                        }
                      }
                    ]
                  }
                ],
                "contentMediaType": "application/json"
              },
              "example": {
                "description": "demo",
                "to": {
                  "description": "Harry - Office",
                  "name": "Harry Zhang",
                  "company": "Lob",
                  "email": "harry@lob.com",
                  "phone": "5555555555",
                  "address_line1": "210 King St",
                  "address_line2": "# 6100",
                  "address_city": "San Francisco",
                  "address_state": "CA",
                  "address_zip": "94107",
                  "address_country": "US"
                },
                "from": {
                  "description": "Harry - Office",
                  "name": "Harry Zhang",
                  "company": "Lob",
                  "email": "harry@lob.com",
                  "phone": "5555555555",
                  "address_line1": "210 King St",
                  "address_line2": "# 6100",
                  "address_city": "San Francisco",
                  "address_state": "CA",
                  "address_zip": "94107",
                  "address_country": "US"
                },
                "front": "tmpl_a1234dddg",
                "back": "tmpl_a1234dddg",
                "size": "6x9",
                "mail_type": "usps_first_class",
                "merge_variables": {
                  "name": "Harry"
                },
                "metadata": {
                  "spiffy": "true"
                },
                "send_date": "2017-11-01T00:00:00.000Z",
                "use_type": "marketing",
                "qr_code": {
                  "position": "relative",
                  "redirect_url": "https://www.lob.com",
                  "width": "2.5",
                  "top": "2.5",
                  "right": "2.5",
                  "pages": "front,back"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns a postcard object",
            "headers": {
              "ratelimit-limit": {
                "description": "The rate limit for a given endpoint.",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "The rate limit for a given endpoint.",
                      "examples": [
                        "150"
                      ],
                      "contentMediaType": "text/plain"
                    },
                    "example": "150"
                  }
                }
              },
              "ratelimit-remaining": {
                "description": "The number of requests remaining in the current window.",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "The number of requests remaining in the current window.",
                      "examples": [
                        "100"
                      ],
                      "contentMediaType": "text/plain"
                    },
                    "example": "100"
                  }
                }
              },
              "ratelimit-reset": {
                "description": "The time at which the rate limit window resets in  <a href=\"https://en.wikipedia.org/wiki/Unix_time\" target=\"_blank\">UTC epoch seconds</a>\n",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "The time at which the rate limit window resets in  <a href=\"https://en.wikipedia.org/wiki/Unix_time\" target=\"_blank\">UTC epoch seconds</a>\n",
                      "examples": [
                        "1528749846"
                      ],
                      "contentMediaType": "text/plain"
                    },
                    "example": "1528749846"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/postcard"
                    },
                    {
                      "examples": [
                        "{\"id\":\"psc_208e45e48d271294\",\"description\":null,\"metadata\":{},\"to\":{\"id\":\"adr_210a8d4b0b76d77b\",\"description\":null,\"name\":null,\"company\":\"LOB\",\"phone\":null,\"email\":null,\"address_line1\":\"210 KING ST STE 6100\",\"address_line2\":null,\"address_city\":\"SAN FRANCISCO\",\"address_state\":\"CA\",\"address_zip\":\"94107-1741\",\"address_country\":\"UNITED STATES\",\"metadata\":{},\"date_created\":\"2018-12-08T03:01:07.651Z\",\"date_modified\":\"2018-12-08T03:01:07.651Z\",\"object\":\"address\"},\"url\":\"https://lob-assets.com/postcards/psc_208e45e48d271294.pdf?version=v1&expires=1619218302&signature=NfHHLBSr5tOHA_Z4kij4dKqZG8f3vMDtwvuFVeeF9pV_lylcjLsVVODhNCE5hR6-2slUr6t9WMNsi429Pj7_DA\",\"carrier\":\"USPS\",\"front_template_id\":null,\"back_template_id\":null,\"date_created\":\"2021-03-24T22:51:42.838Z\",\"date_modified\":\"2021-03-24T22:51:42.838Z\",\"send_date\":\"2021-03-24T22:51:42.838Z\",\"use_type\":\"marketing\",\"object\":\"postcard\"}",
                        "{\"id\":\"psc_0e03d1ad7d31f151\",\"description\":null,\"metadata\":{},\"to\":{\"id\":\"adr_c7cb63d68f8d6\",\"description\":null,\"name\":\"JANE DOE\",\"company\":\"LOB\",\"phone\":\"5555555555\",\"email\":\"jane.doe@lob.com\",\"address_line1\":\"370 WATER ST\",\"address_line2\":\"\",\"address_city\":\"SUMMERSIDE\",\"address_state\":\"PE\",\"address_zip\":\"C1N 1C4\",\"address_country\":\"CANADA\",\"metadata\":{},\"date_created\":\"2018-12-08T03:01:07.651Z\",\"date_modified\":\"2018-12-08T03:01:07.651Z\",\"object\":\"address\",\"recipient_moved\":false},\"from\":{\"id\":\"adr_210a8d4b0b76d77b\",\"description\":null,\"name\":\"LEORE AVIDAR\",\"company\":null,\"phone\":null,\"email\":null,\"address_line1\":\"210 KING ST STE 6100\",\"address_line2\":null,\"address_city\":\"SAN FRANCISCO\",\"address_state\":\"CA\",\"address_zip\":\"94107-1741\",\"address_country\":\"UNITED STATES\",\"metadata\":{},\"date_created\":\"2018-12-08T03:01:07.651Z\",\"date_modified\":\"2018-12-08T03:01:07.651Z\",\"object\":\"address\"},\"url\":\"https://lob-assets.com/postcards/psc_208e45e48d271294.pdf?version=v1&expires=1619218302&signature=NfHHLBSr5tOHA_Z4kij4dKqZG8f3vMDtwvuFVeeF9pV_lylcjLsVVODhNCE5hR6-2slUr6t9WMNsi429Pj7_DA\",\"carrier\":\"USPS\",\"front_template_id\":\"tmpl_93c369f06171958\",\"back_template_id\":\"tmpl_93c369f06171958\",\"front_template_version_id\":\"vrsn_a83e044941c393b\",\"back_template_version_id\":\"vrsn_a83e044941c393b\",\"tracking_events\":[],\"size\":\"6x11\",\"mail_type\":\"usps_first_class\",\"merge_variables\":{},\"thumbnails\":[{\"small\":\"https://lob-assets.com/letters/ltr_4868c3b754655f90_thumb_small_1.png?expires=1540372221&signature=a5fRBJ22ZA78Vgpg34M9UfmHWTS3eha\",\"medium\":\"https://lob-assets.com/letters/ltr_4868c3b754655f90_thumb_medium_1.png?expires=1540372221&signature=bAzL8sv935PY09FWSkpDpWKkyvGSWYF\",\"large\":\"https://lob-assets.com/letters/ltr_4868c3b754655f90_thumb_large_1.png?expires=1540372221&signature=gsKvxXgrm4v4iZD3bOibK7jApNkEMdW\"}],\"expected_delivery_date\":\"2021-03-30\",\"date_created\":\"2021-03-24T22:51:42.838Z\",\"date_modified\":\"2021-03-24T22:51:42.838Z\",\"send_date\":\"2021-03-24T22:51:42.838Z\",\"use_type\":\"marketing\",\"object\":\"postcard\"}"
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "examples": {
                  "basic": {
                    "value": {
                      "id": "psc_208e45e48d271294",
                      "description": null,
                      "metadata": {},
                      "to": {
                        "id": "adr_210a8d4b0b76d77b",
                        "description": null,
                        "name": null,
                        "company": "LOB",
                        "phone": null,
                        "email": null,
                        "address_line1": "210 KING ST STE 6100",
                        "address_line2": null,
                        "address_city": "SAN FRANCISCO",
                        "address_state": "CA",
                        "address_zip": "94107-1741",
                        "address_country": "UNITED STATES",
                        "metadata": {},
                        "date_created": "2018-12-08T03:01:07.651Z",
                        "date_modified": "2018-12-08T03:01:07.651Z",
                        "object": "address"
                      },
                      "url": "https://lob-assets.com/postcards/psc_208e45e48d271294.pdf?version=v1&expires=1619218302&signature=NfHHLBSr5tOHA_Z4kij4dKqZG8f3vMDtwvuFVeeF9pV_lylcjLsVVODhNCE5hR6-2slUr6t9WMNsi429Pj7_DA",
                      "carrier": "USPS",
                      "front_template_id": null,
                      "back_template_id": null,
                      "date_created": "2021-03-24T22:51:42.838Z",
                      "date_modified": "2021-03-24T22:51:42.838Z",
                      "send_date": "2021-03-24T22:51:42.838Z",
                      "use_type": "marketing",
                      "object": "postcard"
                    }
                  },
                  "full": {
                    "value": {
                      "id": "psc_0e03d1ad7d31f151",
                      "description": null,
                      "metadata": {},
                      "to": {
                        "id": "adr_c7cb63d68f8d6",
                        "description": null,
                        "name": "JANE DOE",
                        "company": "LOB",
                        "phone": "5555555555",
                        "email": "jane.doe@lob.com",
                        "address_line1": "370 WATER ST",
                        "address_line2": "",
                        "address_city": "SUMMERSIDE",
                        "address_state": "PE",
                        "address_zip": "C1N 1C4",
                        "address_country": "CANADA",
                        "metadata": {},
                        "date_created": "2018-12-08T03:01:07.651Z",
                        "date_modified": "2018-12-08T03:01:07.651Z",
                        "object": "address",
                        "recipient_moved": false
                      },
                      "from": {
                        "id": "adr_210a8d4b0b76d77b",
                        "description": null,
                        "name": "LEORE AVIDAR",
                        "company": null,
                        "phone": null,
                        "email": null,
                        "address_line1": "210 KING ST STE 6100",
                        "address_line2": null,
                        "address_city": "SAN FRANCISCO",
                        "address_state": "CA",
                        "address_zip": "94107-1741",
                        "address_country": "UNITED STATES",
                        "metadata": {},
                        "date_created": "2018-12-08T03:01:07.651Z",
                        "date_modified": "2018-12-08T03:01:07.651Z",
                        "object": "address"
                      },
                      "url": "https://lob-assets.com/postcards/psc_208e45e48d271294.pdf?version=v1&expires=1619218302&signature=NfHHLBSr5tOHA_Z4kij4dKqZG8f3vMDtwvuFVeeF9pV_lylcjLsVVODhNCE5hR6-2slUr6t9WMNsi429Pj7_DA",
                      "carrier": "USPS",
                      "front_template_id": "tmpl_93c369f06171958",
                      "back_template_id": "tmpl_93c369f06171958",
                      "front_template_version_id": "vrsn_a83e044941c393b",
                      "back_template_version_id": "vrsn_a83e044941c393b",
                      "tracking_events": [],
                      "size": "6x11",
                      "mail_type": "usps_first_class",
                      "merge_variables": {},
                      "thumbnails": [
                        {
                          "small": "https://lob-assets.com/letters/ltr_4868c3b754655f90_thumb_small_1.png?expires=1540372221&signature=a5fRBJ22ZA78Vgpg34M9UfmHWTS3eha",
                          "medium": "https://lob-assets.com/letters/ltr_4868c3b754655f90_thumb_medium_1.png?expires=1540372221&signature=bAzL8sv935PY09FWSkpDpWKkyvGSWYF",
                          "large": "https://lob-assets.com/letters/ltr_4868c3b754655f90_thumb_large_1.png?expires=1540372221&signature=gsKvxXgrm4v4iZD3bOibK7jApNkEMdW"
                        }
                      ],
                      "expected_delivery_date": "2021-03-30",
                      "date_created": "2021-03-24T22:51:42.838Z",
                      "date_modified": "2021-03-24T22:51:42.838Z",
                      "send_date": "2021-03-24T22:51:42.838Z",
                      "use_type": "marketing",
                      "object": "postcard"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Postcards0Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "not_found",
                            "message": "to address not found",
                            "status_code": 404
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "not_found",
                    "message": "to address not found",
                    "status_code": 404
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/qr_code_analytics": {
      "get": {
        "tags": [
          "QR Codes"
        ],
        "summary": "qr_codes_list",
        "description": "Returns a list of your QR codes. The QR codes are returned sorted by scan date, with the most recently scanned QR codes appearing first.",
        "operationId": "qr_codes_list",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "How many results to return.",
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 100.0,
              "minimum": 1.0,
              "type": "integer",
              "contentEncoding": "int32",
              "default": 10,
              "examples": [
                10
              ]
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "An integer that designates the offset at which to begin returning results. Defaults to 0.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "contentEncoding": "int32",
              "default": 0
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Request that the response include the total count by specifying `include=[\"total_count\"]`.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "date_created",
            "in": "query",
            "description": "Filter by date created. Accepted formats are ISO-8601 date or datetime, e.g. `{ \"gt\": \"2012-01-01\", \"lt\": \"2012-01-31T12:34:56Z\" }` where `gt` is >, `lt` is <, `gte` is ≥, and `lte` is ≤.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          {
            "name": "scanned",
            "in": "query",
            "description": "Filter list of responses to only include QR codes with at least one scan event.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "resource_ids",
            "in": "query",
            "description": "Filter by the resource ID.",
            "style": "form",
            "explode": true,
            "schema": {
              "maxItems": 100,
              "type": "array",
              "items": {}
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of QR Codes and their analytics.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/QrCodeAnalyticsResponse"
                    },
                    {
                      "examples": [
                        {
                          "data": [
                            {
                              "resource_id": "ltr_d5a5a89da9106f8",
                              "date_created": "2019-07-27T23:49:01.511Z",
                              "number_of_scans": 2,
                              "scans": [
                                {
                                  "ip_location": "127.0.0.1",
                                  "scan_date": "2022-07-27T23:49:01.511Z"
                                },
                                {
                                  "ip_location": "127.0.0.1",
                                  "scan_date": "2022-07-29T23:45:00.436Z"
                                }
                              ]
                            },
                            {
                              "resource_id": "psc_d5a5a89da9106f8",
                              "date_created": "2022-09-27T23:49:01.511Z",
                              "number_of_scans": 1,
                              "scans": [
                                {
                                  "ip_location": "127.0.0.1",
                                  "scan_date": "2022-09-27T23:49:01.511Z"
                                }
                              ]
                            }
                          ],
                          "object": "list",
                          "count": 2,
                          "scanned_count": 2,
                          "total_count": 2
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "data": [
                    {
                      "resource_id": "ltr_d5a5a89da9106f8",
                      "date_created": "2019-07-27T23:49:01.511Z",
                      "number_of_scans": 2,
                      "scans": [
                        {
                          "ip_location": "127.0.0.1",
                          "scan_date": "2022-07-27T23:49:01.511Z"
                        },
                        {
                          "ip_location": "127.0.0.1",
                          "scan_date": "2022-07-29T23:45:00.436Z"
                        }
                      ]
                    },
                    {
                      "resource_id": "psc_d5a5a89da9106f8",
                      "date_created": "2022-09-27T23:49:01.511Z",
                      "number_of_scans": 1,
                      "scans": [
                        {
                          "ip_location": "127.0.0.1",
                          "scan_date": "2022-09-27T23:49:01.511Z"
                        }
                      ]
                    }
                  ],
                  "object": "list",
                  "count": 2,
                  "scanned_count": 2,
                  "total_count": 2
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/us_reverse_geocode_lookups": {
      "post": {
        "tags": [
          "Reverse Geocode Lookups"
        ],
        "summary": "reverse_geocode_lookup",
        "description": "Reverse geocode a valid US location with a live API key.",
        "operationId": "reverse_geocode_lookup",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Content-Type"
                },
                {}
              ]
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Determines the number of locations returned. Possible values are between 1 and 50 and any number higher will be rounded down to 50. Default size is a list of 5 reverse geocoded locations.",
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 50.0,
              "minimum": 1.0,
              "type": "integer",
              "contentEncoding": "int32",
              "default": 5,
              "examples": [
                5
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "latitude",
                  "longitude"
                ],
                "type": "object",
                "properties": {
                  "latitude": {
                    "maximum": 90.0,
                    "minimum": -90.0,
                    "type": [
                      "number",
                      "null"
                    ],
                    "description": "A positive or negative decimal indicating the geographic latitude of the address, specifying the north-to-south position of a location. This should be input with `longitude` to pinpoint locations on a map.",
                    "contentEncoding": "double",
                    "examples": [
                      37.7749
                    ]
                  },
                  "longitude": {
                    "maximum": 180.0,
                    "minimum": -180.0,
                    "type": [
                      "number",
                      "null"
                    ],
                    "description": "A positive or negative decimal indicating the geographic longitude of the address, specifying the north-to-south position of a location. This should be input with `latitude` to pinpoint locations on a map.",
                    "contentEncoding": "double",
                    "examples": [
                      122.4194
                    ]
                  }
                },
                "contentMediaType": "application/x-www-form-urlencoded"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Returns a zip lookup object if a valid zip was provided.",
            "headers": {
              "ratelimit-limit": {
                "description": "The rate limit for a given endpoint.",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "The rate limit for a given endpoint.",
                      "examples": [
                        "150"
                      ],
                      "contentMediaType": "text/plain"
                    },
                    "example": "150"
                  }
                }
              },
              "ratelimit-remaining": {
                "description": "The number of requests remaining in the current window.",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "The number of requests remaining in the current window.",
                      "examples": [
                        "100"
                      ],
                      "contentMediaType": "text/plain"
                    },
                    "example": "100"
                  }
                }
              },
              "ratelimit-reset": {
                "description": "The time at which the rate limit window resets in  <a href=\"https://en.wikipedia.org/wiki/Unix_time\" target=\"_blank\">UTC epoch seconds</a>\n",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "The time at which the rate limit window resets in  <a href=\"https://en.wikipedia.org/wiki/Unix_time\" target=\"_blank\">UTC epoch seconds</a>\n",
                      "examples": [
                        "1528749846"
                      ],
                      "contentMediaType": "text/plain"
                    },
                    "example": "1528749846"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/reverse_geocode"
                    },
                    {
                      "examples": [
                        {
                          "id": "us_reverse_geocode_8a013f3e",
                          "addresses": [
                            {
                              "components": {
                                "zip_code": "94107",
                                "zip_code_plus_4": "1702"
                              },
                              "location_analysis": {
                                "latitude": 37.78271,
                                "longitude": -122.416202,
                                "distance": 1.32
                              }
                            },
                            {
                              "components": {
                                "zip_code": "94107",
                                "zip_code_plus_4": "1702"
                              },
                              "location_analysis": {
                                "latitude": 37.782917,
                                "longitude": -122.416131,
                                "distance": 1.33
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "id": "us_reverse_geocode_8a013f3e",
                  "addresses": [
                    {
                      "components": {
                        "zip_code": "94107",
                        "zip_code_plus_4": "1702"
                      },
                      "location_analysis": {
                        "latitude": 37.78271,
                        "longitude": -122.416202,
                        "distance": 1.32
                      }
                    },
                    {
                      "components": {
                        "zip_code": "94107",
                        "zip_code_plus_4": "1702"
                      },
                      "location_analysis": {
                        "latitude": 37.782917,
                        "longitude": -122.416131,
                        "distance": 1.33
                      }
                    }
                  ]
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/UsReverseGeocodeLookups0Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "invalid",
                            "message": "latitude is required",
                            "status_code": 422
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "invalid",
                    "message": "latitude is required",
                    "status_code": 422
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/self_mailers/{sfm_id}": {
      "get": {
        "tags": [
          "Self Mailers"
        ],
        "summary": "self_mailer_retrieve",
        "description": "Retrieves the details of an existing self_mailer. You need only supply the unique self_mailer identifier that was returned upon self_mailer creation.",
        "operationId": "self_mailer_retrieve",
        "parameters": [
          {
            "name": "sfm_id",
            "in": "path",
            "description": "id of the self_mailer",
            "required": true,
            "style": "simple",
            "schema": {
              "pattern": "^sfm_[a-zA-Z0-9]+$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a self_mailer object",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/self_mailer"
                    },
                    {
                      "examples": [
                        {
                          "id": "sfm_8ffbe811dea49dcf",
                          "description": "April Campaign",
                          "metadata": {},
                          "to": {
                            "id": "adr_bae820679f3f536b",
                            "description": null,
                            "name": "HARRY ZHANG",
                            "company": null,
                            "phone": null,
                            "email": null,
                            "address_line1": "210 KING ST STE 6100",
                            "address_line2": null,
                            "address_city": "SAN FRANCISCO",
                            "address_state": "CA",
                            "address_zip": "94107-1741",
                            "address_country": "UNITED STATES",
                            "metadata": {},
                            "date_created": "2017-09-05T17:47:53.767Z",
                            "date_modified": "2017-09-05T17:47:53.767Z",
                            "deleted": true,
                            "object": "address"
                          },
                          "from": {
                            "id": "adr_210a8d4b0b76d77b",
                            "description": null,
                            "name": "LEORE AVIDAR",
                            "company": null,
                            "phone": null,
                            "email": null,
                            "address_line1": "210 KING ST STE 6100",
                            "address_line2": null,
                            "address_city": "SAN FRANCISCO",
                            "address_state": "CA",
                            "address_zip": "94107-1741",
                            "address_country": "UNITED STATES",
                            "metadata": {},
                            "date_created": "2017-09-05T17:47:53.767Z",
                            "date_modified": "2017-09-05T17:47:53.767Z",
                            "deleted": true,
                            "object": "address"
                          },
                          "url": "https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf.pdf?version=v1&expires=1618512040&signature=qvyCqXI1ndBvc4AjvG8FlirqLXEcfmYo4sDrRtabaXMOsX88to9G3K49uIk_aqevvZXe8HoRYD_nWydbQHqaCA",
                          "outside_template_id": "tmpl_a3cb937f26d7eec",
                          "inside_template_id": "tmpl_a3cb937f26d7eec",
                          "inside_template_version_id": "vrsn_bfdf70893b00a85",
                          "outside_template_version_id": "vrsn_bfdf70893b00a85",
                          "carrier": "USPS",
                          "tracking_events": [],
                          "thumbnails": [
                            {
                              "small": "https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf_thumb_small_1.png?version=v1&expires=1618512040&signature=-bipeUHP-hAMcCBSrWM0ZH1VwRdSPNVGGZN9hAZKr6Lh4ly6uxvratVd5LXJCK_zOEMYk_mTWASt0ge7OY6SDA",
                              "medium": "https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf_thumb_medium_1.png?version=v1&expires=1618512040&signature=ryxN7bsXGtw_GRFSP3Cs3A3IYjxZi3cW9BHDCNgMt6p3nobVmsc_iFHt2e-S7ndAXhhN7nP-MQVov3bt3r37BQ",
                              "large": "https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf_thumb_large_1.png?version=v1&expires=1618512040&signature=kBrm00xkyCkJNJRHxH8HshFaebtOxnzjVWOs1VVmGMuw8H6OBNcMAMxt9s49K0jlpHoh3Nr9uSncEZMQaaNjAg"
                            },
                            {
                              "small": "https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf_thumb_small_2.png?version=v1&expires=1618512040&signature=3gTgU7Fd3KoT_vNlQnTGptRps5ZgnkhSnPrAwk7L98higIzSwfKoLvuu_DIpMM48dHbxckKT9waR8euJ4KSDBQ",
                              "medium": "https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf_thumb_medium_2.png?version=v1&expires=1618512040&signature=Ue1lw5CMj7KRx6cMQL8xPeazaHCdJzWcACd1w3acuYPnWkVIpSt62OIO7hAtpAQK9xm1dhhlFj0rqRZMdRMMBA",
                              "large": "https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf_thumb_large_2.png?version=v1&expires=1618512040&signature=cICc7HEm1xG_eyM4a_wtvPk2FqoLRmtgGa29kJisWnMIYBL0OkyzG4ZCYGMhp-5cZpJlSpXfTgGKh_Qmeo1TDw"
                            }
                          ],
                          "merge_variables": {
                            "name": null
                          },
                          "size": "6x18_bifold",
                          "mail_type": "usps_first_class",
                          "expected_delivery_date": "2021-03-24",
                          "date_created": "2021-03-16T18:40:40.504Z",
                          "date_modified": "2021-03-16T18:40:40.504Z",
                          "send_date": "2021-03-16T18:45:40.493Z",
                          "use_type": "marketing",
                          "fsc": false,
                          "object": "self_mailer"
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "id": "sfm_8ffbe811dea49dcf",
                  "description": "April Campaign",
                  "metadata": {},
                  "to": {
                    "id": "adr_bae820679f3f536b",
                    "description": null,
                    "name": "HARRY ZHANG",
                    "company": null,
                    "phone": null,
                    "email": null,
                    "address_line1": "210 KING ST STE 6100",
                    "address_line2": null,
                    "address_city": "SAN FRANCISCO",
                    "address_state": "CA",
                    "address_zip": "94107-1741",
                    "address_country": "UNITED STATES",
                    "metadata": {},
                    "date_created": "2017-09-05T17:47:53.767Z",
                    "date_modified": "2017-09-05T17:47:53.767Z",
                    "deleted": true,
                    "object": "address"
                  },
                  "from": {
                    "id": "adr_210a8d4b0b76d77b",
                    "description": null,
                    "name": "LEORE AVIDAR",
                    "company": null,
                    "phone": null,
                    "email": null,
                    "address_line1": "210 KING ST STE 6100",
                    "address_line2": null,
                    "address_city": "SAN FRANCISCO",
                    "address_state": "CA",
                    "address_zip": "94107-1741",
                    "address_country": "UNITED STATES",
                    "metadata": {},
                    "date_created": "2017-09-05T17:47:53.767Z",
                    "date_modified": "2017-09-05T17:47:53.767Z",
                    "deleted": true,
                    "object": "address"
                  },
                  "url": "https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf.pdf?version=v1&expires=1618512040&signature=qvyCqXI1ndBvc4AjvG8FlirqLXEcfmYo4sDrRtabaXMOsX88to9G3K49uIk_aqevvZXe8HoRYD_nWydbQHqaCA",
                  "outside_template_id": "tmpl_a3cb937f26d7eec",
                  "inside_template_id": "tmpl_a3cb937f26d7eec",
                  "inside_template_version_id": "vrsn_bfdf70893b00a85",
                  "outside_template_version_id": "vrsn_bfdf70893b00a85",
                  "carrier": "USPS",
                  "tracking_events": [],
                  "thumbnails": [
                    {
                      "small": "https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf_thumb_small_1.png?version=v1&expires=1618512040&signature=-bipeUHP-hAMcCBSrWM0ZH1VwRdSPNVGGZN9hAZKr6Lh4ly6uxvratVd5LXJCK_zOEMYk_mTWASt0ge7OY6SDA",
                      "medium": "https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf_thumb_medium_1.png?version=v1&expires=1618512040&signature=ryxN7bsXGtw_GRFSP3Cs3A3IYjxZi3cW9BHDCNgMt6p3nobVmsc_iFHt2e-S7ndAXhhN7nP-MQVov3bt3r37BQ",
                      "large": "https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf_thumb_large_1.png?version=v1&expires=1618512040&signature=kBrm00xkyCkJNJRHxH8HshFaebtOxnzjVWOs1VVmGMuw8H6OBNcMAMxt9s49K0jlpHoh3Nr9uSncEZMQaaNjAg"
                    },
                    {
                      "small": "https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf_thumb_small_2.png?version=v1&expires=1618512040&signature=3gTgU7Fd3KoT_vNlQnTGptRps5ZgnkhSnPrAwk7L98higIzSwfKoLvuu_DIpMM48dHbxckKT9waR8euJ4KSDBQ",
                      "medium": "https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf_thumb_medium_2.png?version=v1&expires=1618512040&signature=Ue1lw5CMj7KRx6cMQL8xPeazaHCdJzWcACd1w3acuYPnWkVIpSt62OIO7hAtpAQK9xm1dhhlFj0rqRZMdRMMBA",
                      "large": "https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf_thumb_large_2.png?version=v1&expires=1618512040&signature=cICc7HEm1xG_eyM4a_wtvPk2FqoLRmtgGa29kJisWnMIYBL0OkyzG4ZCYGMhp-5cZpJlSpXfTgGKh_Qmeo1TDw"
                    }
                  ],
                  "merge_variables": {
                    "name": null
                  },
                  "size": "6x18_bifold",
                  "mail_type": "usps_first_class",
                  "expected_delivery_date": "2021-03-24",
                  "date_created": "2021-03-16T18:40:40.504Z",
                  "date_modified": "2021-03-16T18:40:40.504Z",
                  "send_date": "2021-03-16T18:45:40.493Z",
                  "use_type": "marketing",
                  "fsc": false,
                  "object": "self_mailer"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SelfMailers0Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "not_found",
                            "message": "to address not found",
                            "status_code": 404
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "not_found",
                    "message": "to address not found",
                    "status_code": 404
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Self Mailers"
        ],
        "summary": "self_mailer_delete",
        "description": "Completely removes a self mailer from production. This can only be done if the self mailer's `send_date` has not yet passed. If the self mailer is successfully canceled, you will not be charged for it. This feature is exclusive to certain customers. Upgrade to the appropriate <a href=\"https://dashboard.lob.com/#/settings/editions\" target=\"_blank\">Print & Mail Edition</a> to gain access.",
        "operationId": "self_mailer_delete",
        "parameters": [
          {
            "name": "sfm_id",
            "in": "path",
            "description": "id of the self_mailer",
            "required": true,
            "style": "simple",
            "schema": {
              "pattern": "^sfm_[a-zA-Z0-9]+$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SelfMailersResponse1"
                    },
                    {
                      "examples": [
                        {
                          "id": "sfm_123456789",
                          "deleted": true
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "id": "sfm_123456789",
                  "deleted": true
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SelfMailers0Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "not_found",
                            "message": "to address not found",
                            "status_code": 404
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "not_found",
                    "message": "to address not found",
                    "status_code": 404
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/self_mailers": {
      "get": {
        "tags": [
          "Self Mailers"
        ],
        "summary": "self_mailers_list",
        "description": "Returns a list of your self_mailers. The self_mailers are returned sorted by creation date, with the most recently created self_mailers appearing first.",
        "operationId": "self_mailers_list",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "How many results to return.",
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 100.0,
              "minimum": 1.0,
              "type": "integer",
              "contentEncoding": "int32",
              "default": 10,
              "examples": [
                10
              ]
            }
          },
          {
            "name": "before/after",
            "in": "query",
            "description": "`before` and `after` are both optional but only one of them can be in the query at a time.",
            "style": "form",
            "explode": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/beforeafter"
                },
                {
                  "description": "`before` and `after` are both optional but only one of them can be in the query at a time."
                }
              ]
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Request that the response include the total count by specifying `include=[\"total_count\"]`.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "date_created",
            "in": "query",
            "description": "Filter by date created. Accepted formats are ISO-8601 date or datetime, e.g. `{ \"gt\": \"2012-01-01\", \"lt\": \"2012-01-31T12:34:56Z\" }` where `gt` is >, `lt` is <, `gte` is ≥, and `lte` is ≤.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          {
            "name": "metadata",
            "in": "query",
            "description": "Filter by metadata key-value pair`.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The self mailer sizes to be returned.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/self_mailer_size"
              }
            }
          },
          {
            "name": "scheduled",
            "in": "query",
            "description": "* `true` - only return orders (past or future) where `send_date` is\ngreater than `date_created`\n* `false` - only return orders where `send_date` is equal to `date_created`",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "send_date",
            "in": "query",
            "description": "Filter by ISO-8601 date or datetime, e.g. `{ \"gt\": \"2012-01-01\", \"lt\": \"2012-01-31T12:34:56Z\" }` where `gt` is >, `lt` is <, `gte` is ≥, and `lte` is ≤.",
            "style": "form",
            "explode": true,
            "schema": {}
          },
          {
            "name": "mail_type",
            "in": "query",
            "description": "A string designating the mail postage type: * `usps_first_class` - (default) * `usps_standard` - a <a href=\"https://lob.com/pricing/print-mail#compare\" target=\"_blank\">cheaper option</a> which is less predictable and takes longer to deliver. `usps_standard` cannot be used with `4x6` postcards or for any postcards sent outside of the United States.",
            "style": "form",
            "explode": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/mail_type"
                },
                {
                  "description": "A string designating the mail postage type: * `usps_first_class` - (default) * `usps_standard` - a <a href=\"https://lob.com/pricing/print-mail#compare\" target=\"_blank\">cheaper option</a> which is less predictable and takes longer to deliver. `usps_standard` cannot be used with `4x6` postcards or for any postcards sent outside of the United States."
                }
              ]
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "Sorts items by ascending or descending dates. Use either `date_created` or `send_date`, not both.",
            "style": "form",
            "explode": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/sort_by1"
                },
                {
                  "description": "Sorts items by ascending or descending dates. Use either `date_created` or `send_date`, not both."
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A dictionary with a data property that contains an array of up to `limit` self_mailers. Each entry in the array is a separate self_mailer. The previous and next page of self_mailers can be retrieved by calling the endpoint contained in the `previous_url` and `next_url` fields in the API response respectively.<br>If no more self_mailers are available beyond the current set of returned results, the `next_url` field will be empty.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/all_self_mailers"
                    },
                    {
                      "examples": [
                        {
                          "data": [
                            {
                              "id": "sfm_7239rhwqkrfaskas",
                              "description": "April Campaign",
                              "metadata": {},
                              "to": {
                                "id": "adr_asdi2y3riuasasoi",
                                "description": "Harry - Office",
                                "name": "Harry Zhang",
                                "company": "Lob",
                                "phone": "5555555555",
                                "email": "harry@lob.com",
                                "metadata": {},
                                "address_line1": "370 WATER ST",
                                "address_line2": "",
                                "address_city": "SUMMERSIDE",
                                "address_state": "PRINCE EDWARD ISLAND",
                                "address_zip": "C1N 1C4",
                                "address_country": "CANADA",
                                "recipient_moved": false,
                                "date_created": "2019-09-20T00:14:00.361Z",
                                "date_modified": "2019-09-20T00:14:00.361Z",
                                "object": "address"
                              },
                              "from": {
                                "id": "adr_210a8d4b0b76d77b",
                                "description": null,
                                "name": null,
                                "company": "LOB",
                                "phone": null,
                                "email": null,
                                "address_line1": "210 KING ST STE 6100",
                                "address_line2": null,
                                "address_city": "SAN FRANCISCO",
                                "address_state": "CA",
                                "address_zip": "94107-1741",
                                "address_country": "UNITED STATES",
                                "metadata": {},
                                "date_created": "2018-12-08T03:01:07.651Z",
                                "date_modified": "2018-12-08T03:01:07.651Z",
                                "object": "address"
                              },
                              "url": "https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf.pdf?version=v1&expires=1618781264&signature=YP_bCwrgVA2lz1Gr1YVCJN1f-WspUGsH0aJp2ihjfLXU7lDUV12_xRv4uPch0mfWeOOxEqpyP8hGpgvjmQKNAw",
                              "outside_template_id": "tmpl_a3cb937f26d7eec",
                              "inside_template_id": "tmpl_a3cb937f26d7eec",
                              "inside_template_version_id": "vrsn_bfdf70893b00a85",
                              "outside_template_version_id": "vrsn_bfdf70893b00a85",
                              "carrier": "USPS",
                              "tracking_events": [],
                              "thumbnails": [
                                {
                                  "small": "https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf_thumb_small_1.png?version=v1&expires=1618781264&signature=A7q5HbRO53sUYYnwGlmP5mTS6ylLE7kS2mYhfcEOdexjyqG7UseK0MD26DppE4Q0aE4u2msDVMxd5ukjMerYCg",
                                  "medium": "https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf_thumb_medium_1.png?version=v1&expires=1618781264&signature=b9pynuawVpU_vrhnT_mTpksdE-FLF_ZjdIBOFR_ltIzEGlx-VKD4VvZrqP98lG2D8V7UKQ7SdRr2nUAk4LxvCg",
                                  "large": "https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf_thumb_large_1.png?version=v1&expires=1618781264&signature=g2jifhCselPqIj8au6lsbJMNFN8ZX3aM6GkLoAXiHBCS8X5mF9nhVbmO0odpnmwNlV1CWIp-MXVsZkC3NmxqBQ"
                                },
                                {
                                  "small": "https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf_thumb_small_2.png?version=v1&expires=1618781264&signature=biJY4-ZbNNRydPYg3cZkq7wxjILbPBK_nIVyoyQsg5X5q4jlsa-2fzeMa48V9jprUetsC6WEuYvasHosRfG_DQ",
                                  "medium": "https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf_thumb_medium_2.png?version=v1&expires=1618781264&signature=xEAX7bURyc8fSphacuo5yb7iVIpT8Xvq05KgMaNQS4r3aCpx0z1p42wbPmW758B5Ae0li1YDYvVyzS7qJIoWAw",
                                  "large": "https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf_thumb_large_2.png?version=v1&expires=1618781264&signature=NieHDnoQ7STZUvofHrFt7S987CzIkUJWpaSgpVQPZw-C3_wwTPsIrvxYdXEuFrr6ciTUcxRBFPlE0lurmMkyCA"
                                }
                              ],
                              "merge_variables": {
                                "name": null
                              },
                              "size": "6x18_bifold",
                              "mail_type": "usps_first_class",
                              "expected_delivery_date": "2021-03-24",
                              "date_created": "2021-03-16T18:40:40.504Z",
                              "date_modified": "2021-03-16T18:41:06.691Z",
                              "send_date": "2021-03-16T18:45:40.493Z",
                              "deleted": true,
                              "use_type": "marketing",
                              "fsc": false,
                              "object": "self_mailer"
                            },
                            {
                              "id": "sfm_8ffbe811dea49dcf",
                              "description": "April Campaign",
                              "metadata": {},
                              "to": {
                                "id": "adr_f9228b743884ff98",
                                "description": null,
                                "name": "AYA",
                                "company": null,
                                "phone": null,
                                "email": null,
                                "address_line1": "2812 PARK RD",
                                "address_line2": null,
                                "address_city": "CHARLOTTE",
                                "address_state": "NC",
                                "address_zip": "28209-1314",
                                "address_country": "UNITED STATES",
                                "metadata": {},
                                "date_created": "2021-03-16T18:40:40.410Z",
                                "date_modified": "2021-03-16T18:40:40.410Z",
                                "deleted": true,
                                "object": "address"
                              },
                              "from": {
                                "id": "adr_210a8d4b0b76d77b",
                                "description": null,
                                "name": null,
                                "company": "LOB",
                                "phone": null,
                                "email": null,
                                "address_line1": "210 KING ST STE 6100",
                                "address_line2": null,
                                "address_city": "SAN FRANCISCO",
                                "address_state": "CA",
                                "address_zip": "94107-1741",
                                "address_country": "UNITED STATES",
                                "metadata": {},
                                "date_created": "2018-12-08T03:01:07.651Z",
                                "date_modified": "2018-12-08T03:01:07.651Z",
                                "object": "address"
                              },
                              "url": "https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf.pdf?version=v1&expires=1618781264&signature=YP_bCwrgVA2lz1Gr1YVCJN1f-WspUGsH0aJp2ihjfLXU7lDUV12_xRv4uPch0mfWeOOxEqpyP8hGpgvjmQKNAw",
                              "outside_template_id": "tmpl_a3cb937f26d7eec",
                              "inside_template_id": "tmpl_a3cb937f26d7eec",
                              "inside_template_version_id": "vrsn_bfdf70893b00a85",
                              "outside_template_version_id": "vrsn_bfdf70893b00a85",
                              "carrier": "USPS",
                              "tracking_events": [],
                              "thumbnails": [
                                {
                                  "small": "https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf_thumb_small_1.png?version=v1&expires=1618781264&signature=A7q5HbRO53sUYYnwGlmP5mTS6ylLE7kS2mYhfcEOdexjyqG7UseK0MD26DppE4Q0aE4u2msDVMxd5ukjMerYCg",
                                  "medium": "https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf_thumb_medium_1.png?version=v1&expires=1618781264&signature=b9pynuawVpU_vrhnT_mTpksdE-FLF_ZjdIBOFR_ltIzEGlx-VKD4VvZrqP98lG2D8V7UKQ7SdRr2nUAk4LxvCg",
                                  "large": "https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf_thumb_large_1.png?version=v1&expires=1618781264&signature=g2jifhCselPqIj8au6lsbJMNFN8ZX3aM6GkLoAXiHBCS8X5mF9nhVbmO0odpnmwNlV1CWIp-MXVsZkC3NmxqBQ"
                                },
                                {
                                  "small": "https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf_thumb_small_2.png?version=v1&expires=1618781264&signature=biJY4-ZbNNRydPYg3cZkq7wxjILbPBK_nIVyoyQsg5X5q4jlsa-2fzeMa48V9jprUetsC6WEuYvasHosRfG_DQ",
                                  "medium": "https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf_thumb_medium_2.png?version=v1&expires=1618781264&signature=xEAX7bURyc8fSphacuo5yb7iVIpT8Xvq05KgMaNQS4r3aCpx0z1p42wbPmW758B5Ae0li1YDYvVyzS7qJIoWAw",
                                  "large": "https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf_thumb_large_2.png?version=v1&expires=1618781264&signature=NieHDnoQ7STZUvofHrFt7S987CzIkUJWpaSgpVQPZw-C3_wwTPsIrvxYdXEuFrr6ciTUcxRBFPlE0lurmMkyCA"
                                }
                              ],
                              "merge_variables": {
                                "name": null
                              },
                              "size": "6x18_bifold",
                              "mail_type": "usps_first_class",
                              "expected_delivery_date": "2021-03-24",
                              "date_created": "2021-03-16T18:40:40.504Z",
                              "date_modified": "2021-03-16T18:41:06.691Z",
                              "send_date": "2021-03-16T18:45:40.493Z",
                              "deleted": true,
                              "use_type": "marketing",
                              "fsc": true,
                              "object": "self_mailer"
                            }
                          ],
                          "object": "list",
                          "next_url": null,
                          "previous_url": null,
                          "count": 2
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "data": [
                    {
                      "id": "sfm_7239rhwqkrfaskas",
                      "description": "April Campaign",
                      "metadata": {},
                      "to": {
                        "id": "adr_asdi2y3riuasasoi",
                        "description": "Harry - Office",
                        "name": "Harry Zhang",
                        "company": "Lob",
                        "phone": "5555555555",
                        "email": "harry@lob.com",
                        "metadata": {},
                        "address_line1": "370 WATER ST",
                        "address_line2": "",
                        "address_city": "SUMMERSIDE",
                        "address_state": "PRINCE EDWARD ISLAND",
                        "address_zip": "C1N 1C4",
                        "address_country": "CANADA",
                        "recipient_moved": false,
                        "date_created": "2019-09-20T00:14:00.361Z",
                        "date_modified": "2019-09-20T00:14:00.361Z",
                        "object": "address"
                      },
                      "from": {
                        "id": "adr_210a8d4b0b76d77b",
                        "description": null,
                        "name": null,
                        "company": "LOB",
                        "phone": null,
                        "email": null,
                        "address_line1": "210 KING ST STE 6100",
                        "address_line2": null,
                        "address_city": "SAN FRANCISCO",
                        "address_state": "CA",
                        "address_zip": "94107-1741",
                        "address_country": "UNITED STATES",
                        "metadata": {},
                        "date_created": "2018-12-08T03:01:07.651Z",
                        "date_modified": "2018-12-08T03:01:07.651Z",
                        "object": "address"
                      },
                      "url": "https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf.pdf?version=v1&expires=1618781264&signature=YP_bCwrgVA2lz1Gr1YVCJN1f-WspUGsH0aJp2ihjfLXU7lDUV12_xRv4uPch0mfWeOOxEqpyP8hGpgvjmQKNAw",
                      "outside_template_id": "tmpl_a3cb937f26d7eec",
                      "inside_template_id": "tmpl_a3cb937f26d7eec",
                      "inside_template_version_id": "vrsn_bfdf70893b00a85",
                      "outside_template_version_id": "vrsn_bfdf70893b00a85",
                      "carrier": "USPS",
                      "tracking_events": [],
                      "thumbnails": [
                        {
                          "small": "https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf_thumb_small_1.png?version=v1&expires=1618781264&signature=A7q5HbRO53sUYYnwGlmP5mTS6ylLE7kS2mYhfcEOdexjyqG7UseK0MD26DppE4Q0aE4u2msDVMxd5ukjMerYCg",
                          "medium": "https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf_thumb_medium_1.png?version=v1&expires=1618781264&signature=b9pynuawVpU_vrhnT_mTpksdE-FLF_ZjdIBOFR_ltIzEGlx-VKD4VvZrqP98lG2D8V7UKQ7SdRr2nUAk4LxvCg",
                          "large": "https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf_thumb_large_1.png?version=v1&expires=1618781264&signature=g2jifhCselPqIj8au6lsbJMNFN8ZX3aM6GkLoAXiHBCS8X5mF9nhVbmO0odpnmwNlV1CWIp-MXVsZkC3NmxqBQ"
                        },
                        {
                          "small": "https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf_thumb_small_2.png?version=v1&expires=1618781264&signature=biJY4-ZbNNRydPYg3cZkq7wxjILbPBK_nIVyoyQsg5X5q4jlsa-2fzeMa48V9jprUetsC6WEuYvasHosRfG_DQ",
                          "medium": "https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf_thumb_medium_2.png?version=v1&expires=1618781264&signature=xEAX7bURyc8fSphacuo5yb7iVIpT8Xvq05KgMaNQS4r3aCpx0z1p42wbPmW758B5Ae0li1YDYvVyzS7qJIoWAw",
                          "large": "https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf_thumb_large_2.png?version=v1&expires=1618781264&signature=NieHDnoQ7STZUvofHrFt7S987CzIkUJWpaSgpVQPZw-C3_wwTPsIrvxYdXEuFrr6ciTUcxRBFPlE0lurmMkyCA"
                        }
                      ],
                      "merge_variables": {
                        "name": null
                      },
                      "size": "6x18_bifold",
                      "mail_type": "usps_first_class",
                      "expected_delivery_date": "2021-03-24",
                      "date_created": "2021-03-16T18:40:40.504Z",
                      "date_modified": "2021-03-16T18:41:06.691Z",
                      "send_date": "2021-03-16T18:45:40.493Z",
                      "deleted": true,
                      "use_type": "marketing",
                      "fsc": false,
                      "object": "self_mailer"
                    },
                    {
                      "id": "sfm_8ffbe811dea49dcf",
                      "description": "April Campaign",
                      "metadata": {},
                      "to": {
                        "id": "adr_f9228b743884ff98",
                        "description": null,
                        "name": "AYA",
                        "company": null,
                        "phone": null,
                        "email": null,
                        "address_line1": "2812 PARK RD",
                        "address_line2": null,
                        "address_city": "CHARLOTTE",
                        "address_state": "NC",
                        "address_zip": "28209-1314",
                        "address_country": "UNITED STATES",
                        "metadata": {},
                        "date_created": "2021-03-16T18:40:40.410Z",
                        "date_modified": "2021-03-16T18:40:40.410Z",
                        "deleted": true,
                        "object": "address"
                      },
                      "from": {
                        "id": "adr_210a8d4b0b76d77b",
                        "description": null,
                        "name": null,
                        "company": "LOB",
                        "phone": null,
                        "email": null,
                        "address_line1": "210 KING ST STE 6100",
                        "address_line2": null,
                        "address_city": "SAN FRANCISCO",
                        "address_state": "CA",
                        "address_zip": "94107-1741",
                        "address_country": "UNITED STATES",
                        "metadata": {},
                        "date_created": "2018-12-08T03:01:07.651Z",
                        "date_modified": "2018-12-08T03:01:07.651Z",
                        "object": "address"
                      },
                      "url": "https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf.pdf?version=v1&expires=1618781264&signature=YP_bCwrgVA2lz1Gr1YVCJN1f-WspUGsH0aJp2ihjfLXU7lDUV12_xRv4uPch0mfWeOOxEqpyP8hGpgvjmQKNAw",
                      "outside_template_id": "tmpl_a3cb937f26d7eec",
                      "inside_template_id": "tmpl_a3cb937f26d7eec",
                      "inside_template_version_id": "vrsn_bfdf70893b00a85",
                      "outside_template_version_id": "vrsn_bfdf70893b00a85",
                      "carrier": "USPS",
                      "tracking_events": [],
                      "thumbnails": [
                        {
                          "small": "https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf_thumb_small_1.png?version=v1&expires=1618781264&signature=A7q5HbRO53sUYYnwGlmP5mTS6ylLE7kS2mYhfcEOdexjyqG7UseK0MD26DppE4Q0aE4u2msDVMxd5ukjMerYCg",
                          "medium": "https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf_thumb_medium_1.png?version=v1&expires=1618781264&signature=b9pynuawVpU_vrhnT_mTpksdE-FLF_ZjdIBOFR_ltIzEGlx-VKD4VvZrqP98lG2D8V7UKQ7SdRr2nUAk4LxvCg",
                          "large": "https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf_thumb_large_1.png?version=v1&expires=1618781264&signature=g2jifhCselPqIj8au6lsbJMNFN8ZX3aM6GkLoAXiHBCS8X5mF9nhVbmO0odpnmwNlV1CWIp-MXVsZkC3NmxqBQ"
                        },
                        {
                          "small": "https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf_thumb_small_2.png?version=v1&expires=1618781264&signature=biJY4-ZbNNRydPYg3cZkq7wxjILbPBK_nIVyoyQsg5X5q4jlsa-2fzeMa48V9jprUetsC6WEuYvasHosRfG_DQ",
                          "medium": "https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf_thumb_medium_2.png?version=v1&expires=1618781264&signature=xEAX7bURyc8fSphacuo5yb7iVIpT8Xvq05KgMaNQS4r3aCpx0z1p42wbPmW758B5Ae0li1YDYvVyzS7qJIoWAw",
                          "large": "https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf_thumb_large_2.png?version=v1&expires=1618781264&signature=NieHDnoQ7STZUvofHrFt7S987CzIkUJWpaSgpVQPZw-C3_wwTPsIrvxYdXEuFrr6ciTUcxRBFPlE0lurmMkyCA"
                        }
                      ],
                      "merge_variables": {
                        "name": null
                      },
                      "size": "6x18_bifold",
                      "mail_type": "usps_first_class",
                      "expected_delivery_date": "2021-03-24",
                      "date_created": "2021-03-16T18:40:40.504Z",
                      "date_modified": "2021-03-16T18:41:06.691Z",
                      "send_date": "2021-03-16T18:45:40.493Z",
                      "deleted": true,
                      "use_type": "marketing",
                      "fsc": true,
                      "object": "self_mailer"
                    }
                  ],
                  "object": "list",
                  "next_url": null,
                  "previous_url": null,
                  "count": 2
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SelfMailers0Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "not_found",
                            "message": "to address not found",
                            "status_code": 404
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "not_found",
                    "message": "to address not found",
                    "status_code": 404
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Self Mailers"
        ],
        "summary": "self_mailer_create",
        "description": "Creates a new self_mailer given information",
        "operationId": "self_mailer_create",
        "parameters": [
          {
            "name": "Idempotency-Key",
            "in": "header",
            "description": "A string of no longer than 256 characters that uniquely identifies this resource. For more help integrating idempotency keys, refer to our <a href=\"https://help.lob.com/print-and-mail/building-a-mail-strategy/managing-mail-settings#idempotent-requests-12\" target=\"_blank\">implementation guide</a>.",
            "style": "simple",
            "schema": {
              "maxLength": 256,
              "type": "string",
              "examples": [
                "026e7634-24d7-486c-a0bb-4a17fd0eebc5"
              ]
            }
          },
          {
            "name": "idempotency_key2",
            "in": "query",
            "description": "A string of no longer than 256 characters that uniquely identifies this resource. For more help integrating idempotency keys, refer to our <a href=\"https://help.lob.com/print-and-mail/building-a-mail-strategy/managing-mail-settings#idempotent-requests-12\" target=\"_blank\">implementation guide</a>.",
            "style": "form",
            "explode": true,
            "schema": {
              "maxLength": 256,
              "type": "string",
              "examples": [
                "026e7634-24d7-486c-a0bb-4a17fd0eebc5"
              ]
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/self_mailer_editable"
                  },
                  {
                    "examples": [
                      {
                        "description": "Demo Self Mailer job",
                        "to": "adr_bae820679f3f536b",
                        "from": "adr_210a8d4b0b76d77b",
                        "inside": "https://lob.com/selfmailerinside.pdf",
                        "outside": "https://lob.com/selfmaileroutside.pdf",
                        "size": "12x9_bifold",
                        "metadata": {
                          "spiffy": "true"
                        },
                        "mail_type": "usps_standard",
                        "merge_variables": {
                          "name": "Harry"
                        },
                        "send_date": "2017-11-01T00:00:00.000Z",
                        "use_type": "marketing",
                        "qr_code": {
                          "position": "relative",
                          "redirect_url": "https://www.lob.com",
                          "width": "2.5",
                          "top": "2.5",
                          "right": "2.5",
                          "pages": "inside,outside"
                        },
                        "fsc": true
                      }
                    ]
                  }
                ],
                "contentMediaType": "application/json"
              },
              "example": {
                "description": "Demo Self Mailer job",
                "to": "adr_bae820679f3f536b",
                "from": "adr_210a8d4b0b76d77b",
                "inside": "https://lob.com/selfmailerinside.pdf",
                "outside": "https://lob.com/selfmaileroutside.pdf",
                "size": "12x9_bifold",
                "metadata": {
                  "spiffy": "true"
                },
                "mail_type": "usps_standard",
                "merge_variables": {
                  "name": "Harry"
                },
                "send_date": "2017-11-01T00:00:00.000Z",
                "use_type": "marketing",
                "qr_code": {
                  "position": "relative",
                  "redirect_url": "https://www.lob.com",
                  "width": "2.5",
                  "top": "2.5",
                  "right": "2.5",
                  "pages": "inside,outside"
                },
                "fsc": true
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns a self_mailer object",
            "headers": {
              "ratelimit-limit": {
                "description": "The rate limit for a given endpoint.",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "The rate limit for a given endpoint.",
                      "examples": [
                        "150"
                      ],
                      "contentMediaType": "text/plain"
                    },
                    "example": "150"
                  }
                }
              },
              "ratelimit-remaining": {
                "description": "The number of requests remaining in the current window.",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "The number of requests remaining in the current window.",
                      "examples": [
                        "100"
                      ],
                      "contentMediaType": "text/plain"
                    },
                    "example": "100"
                  }
                }
              },
              "ratelimit-reset": {
                "description": "The time at which the rate limit window resets in  <a href=\"https://en.wikipedia.org/wiki/Unix_time\" target=\"_blank\">UTC epoch seconds</a>\n",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "The time at which the rate limit window resets in  <a href=\"https://en.wikipedia.org/wiki/Unix_time\" target=\"_blank\">UTC epoch seconds</a>\n",
                      "examples": [
                        "1528749846"
                      ],
                      "contentMediaType": "text/plain"
                    },
                    "example": "1528749846"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/self_mailer"
                    },
                    {
                      "examples": [
                        {
                          "id": "sfm_8ffbe811dea49dcf",
                          "description": "April Campaign",
                          "metadata": {},
                          "to": {
                            "id": "adr_bae820679f3f536b",
                            "description": null,
                            "name": "HARRY ZHANG",
                            "company": null,
                            "phone": null,
                            "email": null,
                            "address_line1": "210 KING ST STE 6100",
                            "address_line2": null,
                            "address_city": "SAN FRANCISCO",
                            "address_state": "CA",
                            "address_zip": "94107-1741",
                            "address_country": "UNITED STATES",
                            "metadata": {},
                            "date_created": "2017-09-05T17:47:53.767Z",
                            "date_modified": "2017-09-05T17:47:53.767Z",
                            "deleted": true,
                            "object": "address"
                          },
                          "from": {
                            "id": "adr_210a8d4b0b76d77b",
                            "description": null,
                            "name": "LEORE AVIDAR",
                            "company": null,
                            "phone": null,
                            "email": null,
                            "address_line1": "210 KING ST STE 6100",
                            "address_line2": null,
                            "address_city": "SAN FRANCISCO",
                            "address_state": "CA",
                            "address_zip": "94107-1741",
                            "address_country": "UNITED STATES",
                            "metadata": {},
                            "date_created": "2017-09-05T17:47:53.767Z",
                            "date_modified": "2017-09-05T17:47:53.767Z",
                            "deleted": true,
                            "object": "address"
                          },
                          "url": "https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf.pdf?version=v1&expires=1618512040&signature=qvyCqXI1ndBvc4AjvG8FlirqLXEcfmYo4sDrRtabaXMOsX88to9G3K49uIk_aqevvZXe8HoRYD_nWydbQHqaCA",
                          "outside_template_id": "tmpl_a3cb937f26d7eec",
                          "inside_template_id": "tmpl_a3cb937f26d7eec",
                          "inside_template_version_id": "vrsn_bfdf70893b00a85",
                          "outside_template_version_id": "vrsn_bfdf70893b00a85",
                          "carrier": "USPS",
                          "tracking_events": [],
                          "thumbnails": [
                            {
                              "small": "https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf_thumb_small_1.png?version=v1&expires=1618512040&signature=-bipeUHP-hAMcCBSrWM0ZH1VwRdSPNVGGZN9hAZKr6Lh4ly6uxvratVd5LXJCK_zOEMYk_mTWASt0ge7OY6SDA",
                              "medium": "https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf_thumb_medium_1.png?version=v1&expires=1618512040&signature=ryxN7bsXGtw_GRFSP3Cs3A3IYjxZi3cW9BHDCNgMt6p3nobVmsc_iFHt2e-S7ndAXhhN7nP-MQVov3bt3r37BQ",
                              "large": "https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf_thumb_large_1.png?version=v1&expires=1618512040&signature=kBrm00xkyCkJNJRHxH8HshFaebtOxnzjVWOs1VVmGMuw8H6OBNcMAMxt9s49K0jlpHoh3Nr9uSncEZMQaaNjAg"
                            },
                            {
                              "small": "https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf_thumb_small_2.png?version=v1&expires=1618512040&signature=3gTgU7Fd3KoT_vNlQnTGptRps5ZgnkhSnPrAwk7L98higIzSwfKoLvuu_DIpMM48dHbxckKT9waR8euJ4KSDBQ",
                              "medium": "https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf_thumb_medium_2.png?version=v1&expires=1618512040&signature=Ue1lw5CMj7KRx6cMQL8xPeazaHCdJzWcACd1w3acuYPnWkVIpSt62OIO7hAtpAQK9xm1dhhlFj0rqRZMdRMMBA",
                              "large": "https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf_thumb_large_2.png?version=v1&expires=1618512040&signature=cICc7HEm1xG_eyM4a_wtvPk2FqoLRmtgGa29kJisWnMIYBL0OkyzG4ZCYGMhp-5cZpJlSpXfTgGKh_Qmeo1TDw"
                            }
                          ],
                          "merge_variables": {
                            "name": null
                          },
                          "size": "6x18_bifold",
                          "mail_type": "usps_first_class",
                          "expected_delivery_date": "2021-03-24",
                          "date_created": "2021-03-16T18:40:40.504Z",
                          "date_modified": "2021-03-16T18:40:40.504Z",
                          "send_date": "2021-03-16T18:45:40.493Z",
                          "use_type": "marketing",
                          "fsc": false,
                          "object": "self_mailer"
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "id": "sfm_8ffbe811dea49dcf",
                  "description": "April Campaign",
                  "metadata": {},
                  "to": {
                    "id": "adr_bae820679f3f536b",
                    "description": null,
                    "name": "HARRY ZHANG",
                    "company": null,
                    "phone": null,
                    "email": null,
                    "address_line1": "210 KING ST STE 6100",
                    "address_line2": null,
                    "address_city": "SAN FRANCISCO",
                    "address_state": "CA",
                    "address_zip": "94107-1741",
                    "address_country": "UNITED STATES",
                    "metadata": {},
                    "date_created": "2017-09-05T17:47:53.767Z",
                    "date_modified": "2017-09-05T17:47:53.767Z",
                    "deleted": true,
                    "object": "address"
                  },
                  "from": {
                    "id": "adr_210a8d4b0b76d77b",
                    "description": null,
                    "name": "LEORE AVIDAR",
                    "company": null,
                    "phone": null,
                    "email": null,
                    "address_line1": "210 KING ST STE 6100",
                    "address_line2": null,
                    "address_city": "SAN FRANCISCO",
                    "address_state": "CA",
                    "address_zip": "94107-1741",
                    "address_country": "UNITED STATES",
                    "metadata": {},
                    "date_created": "2017-09-05T17:47:53.767Z",
                    "date_modified": "2017-09-05T17:47:53.767Z",
                    "deleted": true,
                    "object": "address"
                  },
                  "url": "https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf.pdf?version=v1&expires=1618512040&signature=qvyCqXI1ndBvc4AjvG8FlirqLXEcfmYo4sDrRtabaXMOsX88to9G3K49uIk_aqevvZXe8HoRYD_nWydbQHqaCA",
                  "outside_template_id": "tmpl_a3cb937f26d7eec",
                  "inside_template_id": "tmpl_a3cb937f26d7eec",
                  "inside_template_version_id": "vrsn_bfdf70893b00a85",
                  "outside_template_version_id": "vrsn_bfdf70893b00a85",
                  "carrier": "USPS",
                  "tracking_events": [],
                  "thumbnails": [
                    {
                      "small": "https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf_thumb_small_1.png?version=v1&expires=1618512040&signature=-bipeUHP-hAMcCBSrWM0ZH1VwRdSPNVGGZN9hAZKr6Lh4ly6uxvratVd5LXJCK_zOEMYk_mTWASt0ge7OY6SDA",
                      "medium": "https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf_thumb_medium_1.png?version=v1&expires=1618512040&signature=ryxN7bsXGtw_GRFSP3Cs3A3IYjxZi3cW9BHDCNgMt6p3nobVmsc_iFHt2e-S7ndAXhhN7nP-MQVov3bt3r37BQ",
                      "large": "https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf_thumb_large_1.png?version=v1&expires=1618512040&signature=kBrm00xkyCkJNJRHxH8HshFaebtOxnzjVWOs1VVmGMuw8H6OBNcMAMxt9s49K0jlpHoh3Nr9uSncEZMQaaNjAg"
                    },
                    {
                      "small": "https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf_thumb_small_2.png?version=v1&expires=1618512040&signature=3gTgU7Fd3KoT_vNlQnTGptRps5ZgnkhSnPrAwk7L98higIzSwfKoLvuu_DIpMM48dHbxckKT9waR8euJ4KSDBQ",
                      "medium": "https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf_thumb_medium_2.png?version=v1&expires=1618512040&signature=Ue1lw5CMj7KRx6cMQL8xPeazaHCdJzWcACd1w3acuYPnWkVIpSt62OIO7hAtpAQK9xm1dhhlFj0rqRZMdRMMBA",
                      "large": "https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf_thumb_large_2.png?version=v1&expires=1618512040&signature=cICc7HEm1xG_eyM4a_wtvPk2FqoLRmtgGa29kJisWnMIYBL0OkyzG4ZCYGMhp-5cZpJlSpXfTgGKh_Qmeo1TDw"
                    }
                  ],
                  "merge_variables": {
                    "name": null
                  },
                  "size": "6x18_bifold",
                  "mail_type": "usps_first_class",
                  "expected_delivery_date": "2021-03-24",
                  "date_created": "2021-03-16T18:40:40.504Z",
                  "date_modified": "2021-03-16T18:40:40.504Z",
                  "send_date": "2021-03-16T18:45:40.493Z",
                  "use_type": "marketing",
                  "fsc": false,
                  "object": "self_mailer"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SelfMailers0Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "not_found",
                            "message": "to address not found",
                            "status_code": 404
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "not_found",
                    "message": "to address not found",
                    "status_code": 404
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/templates/{tmpl_id}/versions/{vrsn_id}": {
      "get": {
        "tags": [
          "Template Versions"
        ],
        "summary": "template_version_retrieve",
        "description": "Retrieves the template version with the given template and version ids.",
        "operationId": "template_version_retrieve",
        "parameters": [
          {
            "name": "tmpl_id",
            "in": "path",
            "description": "The ID of the template to which the version belongs.",
            "required": true,
            "style": "simple",
            "schema": {
              "pattern": "^tmpl_[a-zA-Z0-9]+$",
              "type": "string"
            }
          },
          {
            "name": "vrsn_id",
            "in": "path",
            "description": "id of the template_version",
            "required": true,
            "style": "simple",
            "schema": {
              "pattern": "^vrsn_[a-zA-Z0-9]+$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the template version with the given template and version ids.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/template_version"
                    },
                    {
                      "examples": [
                        {
                          "id": "vrsn_534e339882d2282",
                          "description": "Second Version",
                          "html": "<html>Second HTML for {{name}}</html>",
                          "date_created": "2017-11-09T04:49:38.016Z",
                          "date_modified": "2017-11-09T04:49:38.016Z",
                          "object": "version"
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "id": "vrsn_534e339882d2282",
                  "description": "Second Version",
                  "html": "<html>Second HTML for {{name}}</html>",
                  "date_created": "2017-11-09T04:49:38.016Z",
                  "date_modified": "2017-11-09T04:49:38.016Z",
                  "object": "version"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/TemplatesVersions0Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "invalid",
                            "message": "html is required",
                            "status_code": 422
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "invalid",
                    "message": "html is required",
                    "status_code": 422
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Template Versions"
        ],
        "summary": "template_version_update",
        "description": "Updates the template version with the given template and version ids.",
        "operationId": "template_version_update",
        "parameters": [
          {
            "name": "tmpl_id",
            "in": "path",
            "description": "The ID of the template to which the version belongs.",
            "required": true,
            "style": "simple",
            "schema": {
              "pattern": "^tmpl_[a-zA-Z0-9]+$",
              "type": "string"
            }
          },
          {
            "name": "vrsn_id",
            "in": "path",
            "description": "id of the template_version",
            "required": true,
            "style": "simple",
            "schema": {
              "pattern": "^vrsn_[a-zA-Z0-9]+$",
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Content-Type"
                },
                {}
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "maxLength": 255,
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "An internal description that identifies this resource. Must be no longer than 255 characters.",
                    "examples": [
                      "Some description"
                    ]
                  },
                  "engine": {},
                  "required_vars": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "An array of required variables to be used in a template. Only available for `handlebars` templates."
                  }
                },
                "contentMediaType": "application/x-www-form-urlencoded"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Returns the template version with the given template and version ids.",
            "headers": {
              "ratelimit-limit": {
                "description": "The rate limit for a given endpoint.",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "The rate limit for a given endpoint.",
                      "examples": [
                        "150"
                      ],
                      "contentMediaType": "text/plain"
                    },
                    "example": "150"
                  }
                }
              },
              "ratelimit-remaining": {
                "description": "The number of requests remaining in the current window.",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "The number of requests remaining in the current window.",
                      "examples": [
                        "100"
                      ],
                      "contentMediaType": "text/plain"
                    },
                    "example": "100"
                  }
                }
              },
              "ratelimit-reset": {
                "description": "The time at which the rate limit window resets in  <a href=\"https://en.wikipedia.org/wiki/Unix_time\" target=\"_blank\">UTC epoch seconds</a>\n",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "The time at which the rate limit window resets in  <a href=\"https://en.wikipedia.org/wiki/Unix_time\" target=\"_blank\">UTC epoch seconds</a>\n",
                      "examples": [
                        "1528749846"
                      ],
                      "contentMediaType": "text/plain"
                    },
                    "example": "1528749846"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/template_version"
                    },
                    {
                      "examples": [
                        {
                          "id": "vrsn_534e339882d2282",
                          "description": "Second Version",
                          "html": "<html>Second HTML for {{name}}</html>",
                          "date_created": "2017-11-09T04:49:38.016Z",
                          "date_modified": "2017-11-09T04:49:38.016Z",
                          "object": "version"
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "id": "vrsn_534e339882d2282",
                  "description": "Second Version",
                  "html": "<html>Second HTML for {{name}}</html>",
                  "date_created": "2017-11-09T04:49:38.016Z",
                  "date_modified": "2017-11-09T04:49:38.016Z",
                  "object": "version"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/TemplatesVersions0Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "invalid",
                            "message": "html is required",
                            "status_code": 422
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "invalid",
                    "message": "html is required",
                    "status_code": 422
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Template Versions"
        ],
        "summary": "template_version_delete",
        "description": "Permanently deletes a template version. A template's `published_version` can not be deleted.",
        "operationId": "template_version_delete",
        "parameters": [
          {
            "name": "tmpl_id",
            "in": "path",
            "description": "The ID of the template to which the version belongs.",
            "required": true,
            "style": "simple",
            "schema": {
              "pattern": "^tmpl_[a-zA-Z0-9]+$",
              "type": "string"
            }
          },
          {
            "name": "vrsn_id",
            "in": "path",
            "description": "id of the template_version",
            "required": true,
            "style": "simple",
            "schema": {
              "pattern": "^vrsn_[a-zA-Z0-9]+$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/TemplatesVersionsResponse2"
                    },
                    {
                      "examples": [
                        {
                          "value": {
                            "id": "vrsn_123456789",
                            "deleted": true
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "value": {
                    "id": "vrsn_123456789",
                    "deleted": true
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/TemplatesVersions0Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "invalid",
                            "message": "html is required",
                            "status_code": 422
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "invalid",
                    "message": "html is required",
                    "status_code": 422
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/templates/{tmpl_id}/versions": {
      "get": {
        "tags": [
          "Template Versions"
        ],
        "summary": "template_versions_list",
        "description": "Returns a list of template versions for the given template ID. The template versions are sorted by creation date, with the most recently created appearing first.\n",
        "operationId": "template_versions_list",
        "parameters": [
          {
            "name": "tmpl_id",
            "in": "path",
            "description": "The ID of the template associated with the retrieved versions",
            "required": true,
            "style": "simple",
            "schema": {
              "pattern": "^tmpl_[a-zA-Z0-9]+$",
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "How many results to return.",
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 100.0,
              "minimum": 1.0,
              "type": "integer",
              "contentEncoding": "int32",
              "default": 10,
              "examples": [
                10
              ]
            }
          },
          {
            "name": "before/after",
            "in": "query",
            "description": "`before` and `after` are both optional but only one of them can be in the query at a time.",
            "style": "form",
            "explode": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/beforeafter"
                },
                {
                  "description": "`before` and `after` are both optional but only one of them can be in the query at a time."
                }
              ]
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Request that the response include the total count by specifying `include=[\"total_count\"]`.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "date_created",
            "in": "query",
            "description": "Filter by date created. Accepted formats are ISO-8601 date or datetime, e.g. `{ \"gt\": \"2012-01-01\", \"lt\": \"2012-01-31T12:34:56Z\" }` where `gt` is >, `lt` is <, `gte` is ≥, and `lte` is ≤.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A dictionary with a data property that contains an array of up to `limit` template versions. Each entry in the array is a separate template version object. The previous and next page of template versions can be retrieved by calling the endpoint contained in the `previous_url` and `next_url` fields in the API response respectively.<br>If no more template versions are available beyond the current set of returned results, the `next_url` field will be empty.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/all_template_versions"
                    },
                    {
                      "examples": [
                        {
                          "data": [
                            {
                              "id": "vrsn_4d6ff5d868bf630",
                              "description": "Second Version",
                              "html": "Second HTML for ",
                              "date_created": "2017-11-09T05:09:03.665Z",
                              "date_modified": "2018-05-22T22:01:10.479Z",
                              "object": "version"
                            },
                            {
                              "id": "vrsn_2a17159c1911919",
                              "description": "Test Template",
                              "html": "HTML for ",
                              "date_created": "2017-11-09T05:08:40.004Z",
                              "date_modified": "2018-05-22T22:01:11.309Z",
                              "object": "version"
                            }
                          ],
                          "object": "list",
                          "count": 2
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "data": [
                    {
                      "id": "vrsn_4d6ff5d868bf630",
                      "description": "Second Version",
                      "html": "Second HTML for ",
                      "date_created": "2017-11-09T05:09:03.665Z",
                      "date_modified": "2018-05-22T22:01:10.479Z",
                      "object": "version"
                    },
                    {
                      "id": "vrsn_2a17159c1911919",
                      "description": "Test Template",
                      "html": "HTML for ",
                      "date_created": "2017-11-09T05:08:40.004Z",
                      "date_modified": "2018-05-22T22:01:11.309Z",
                      "object": "version"
                    }
                  ],
                  "object": "list",
                  "count": 2
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/TemplatesVersions0Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "invalid",
                            "message": "html is required",
                            "status_code": 422
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "invalid",
                    "message": "html is required",
                    "status_code": 422
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Template Versions"
        ],
        "summary": "create_template_version",
        "description": "Creates a new template version attached to the specified template.",
        "operationId": "create_template_version",
        "parameters": [
          {
            "name": "tmpl_id",
            "in": "path",
            "description": "The ID of the template the new version will be attached to",
            "required": true,
            "style": "simple",
            "schema": {
              "pattern": "^tmpl_[a-zA-Z0-9]+$",
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Content-Type"
                },
                {}
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "html"
                ],
                "type": "object",
                "properties": {
                  "html": {
                    "maxLength": 100000,
                    "type": "string",
                    "description": "An HTML string of less than 100,000 characters to be used as the `published_version` of this template. See [here](#section/HTML-Examples) for guidance on designing HTML templates. Please see endpoint specific documentation for any other product-specific HTML details:\n- [Postcards](#operation/postcard_create) - `front` and `back`\n- [Self Mailers](#operation/self_mailer_create) - `inside` and `outside`\n- [Letters](#operation/letter_create) - `file`\n- [Checks](#operation/check_create) - `check_bottom` and `attachment`\n- [Cards](#operation/card_create) - `front` and `back`\n\nIf there is a syntax error with your variable names within your HTML, then an error will be thrown, e.g. using a `{{#users}}` opening tag without the corresponding closing tag `{{/users}}`.",
                    "examples": [
                      "<html>HTML for {{name}}</html>"
                    ]
                  },
                  "description": {
                    "maxLength": 255,
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "An internal description that identifies this resource. Must be no longer than 255 characters.",
                    "examples": [
                      "Some Description"
                    ]
                  },
                  "engine": {},
                  "required_vars": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "An array of required variables to be used in a template. Only available for `handlebars` templates."
                  }
                },
                "contentMediaType": "application/x-www-form-urlencoded"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Returns the template version with the given template and version ids.",
            "headers": {
              "ratelimit-limit": {
                "description": "The rate limit for a given endpoint.",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "The rate limit for a given endpoint.",
                      "examples": [
                        "150"
                      ],
                      "contentMediaType": "text/plain"
                    },
                    "example": "150"
                  }
                }
              },
              "ratelimit-remaining": {
                "description": "The number of requests remaining in the current window.",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "The number of requests remaining in the current window.",
                      "examples": [
                        "100"
                      ],
                      "contentMediaType": "text/plain"
                    },
                    "example": "100"
                  }
                }
              },
              "ratelimit-reset": {
                "description": "The time at which the rate limit window resets in  <a href=\"https://en.wikipedia.org/wiki/Unix_time\" target=\"_blank\">UTC epoch seconds</a>\n",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "The time at which the rate limit window resets in  <a href=\"https://en.wikipedia.org/wiki/Unix_time\" target=\"_blank\">UTC epoch seconds</a>\n",
                      "examples": [
                        "1528749846"
                      ],
                      "contentMediaType": "text/plain"
                    },
                    "example": "1528749846"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/template_version"
                    },
                    {
                      "examples": [
                        {
                          "id": "vrsn_534e339882d2282",
                          "description": "Second Version",
                          "html": "<html>Second HTML for {{name}}</html>",
                          "date_created": "2017-11-09T04:49:38.016Z",
                          "date_modified": "2017-11-09T04:49:38.016Z",
                          "object": "version"
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "id": "vrsn_534e339882d2282",
                  "description": "Second Version",
                  "html": "<html>Second HTML for {{name}}</html>",
                  "date_created": "2017-11-09T04:49:38.016Z",
                  "date_modified": "2017-11-09T04:49:38.016Z",
                  "object": "version"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/TemplatesVersions0Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "invalid",
                            "message": "html is required",
                            "status_code": 422
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "invalid",
                    "message": "html is required",
                    "status_code": 422
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/templates/{tmpl_id}": {
      "get": {
        "tags": [
          "Templates"
        ],
        "summary": "template_retrieve",
        "description": "Retrieves the details of an existing template. You need only supply the unique template identifier that was returned upon template creation.",
        "operationId": "template_retrieve",
        "parameters": [
          {
            "name": "tmpl_id",
            "in": "path",
            "description": "id of the template",
            "required": true,
            "style": "simple",
            "schema": {
              "pattern": "^tmpl_[a-zA-Z0-9]+$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a template object",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/template"
                    },
                    {
                      "examples": [
                        {
                          "id": "tmpl_c94e83ca2cd5121",
                          "description": "Test Template",
                          "versions": [
                            {
                              "id": "vrsn_362184d96d9b0c9",
                              "suggest_json_editor": true,
                              "description": "Test Template",
                              "engine": "legacy",
                              "html": "<html>HTML for {{name}}</html>",
                              "date_created": "2017-11-07T22:56:10.962Z",
                              "date_modified": "2017-11-07T22:56:10.962Z",
                              "object": "version"
                            }
                          ],
                          "published_version": {
                            "id": "vrsn_362184d96d9b0c9",
                            "suggest_json_editor": false,
                            "description": "Test Template",
                            "engine": "handlebars",
                            "html": "<html>HTML for {{name}}</html>",
                            "date_created": "2017-11-07T22:56:10.962Z",
                            "date_modified": "2017-11-07T22:56:10.962Z",
                            "object": "version"
                          },
                          "metadata": {},
                          "date_created": "2017-11-07T22:56:10.962Z",
                          "date_modified": "2017-11-07T22:56:10.962Z",
                          "object": "template"
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "id": "tmpl_c94e83ca2cd5121",
                  "description": "Test Template",
                  "versions": [
                    {
                      "id": "vrsn_362184d96d9b0c9",
                      "suggest_json_editor": true,
                      "description": "Test Template",
                      "engine": "legacy",
                      "html": "<html>HTML for {{name}}</html>",
                      "date_created": "2017-11-07T22:56:10.962Z",
                      "date_modified": "2017-11-07T22:56:10.962Z",
                      "object": "version"
                    }
                  ],
                  "published_version": {
                    "id": "vrsn_362184d96d9b0c9",
                    "suggest_json_editor": false,
                    "description": "Test Template",
                    "engine": "handlebars",
                    "html": "<html>HTML for {{name}}</html>",
                    "date_created": "2017-11-07T22:56:10.962Z",
                    "date_modified": "2017-11-07T22:56:10.962Z",
                    "object": "version"
                  },
                  "metadata": {},
                  "date_created": "2017-11-07T22:56:10.962Z",
                  "date_modified": "2017-11-07T22:56:10.962Z",
                  "object": "template"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Templates0Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "invalid",
                            "message": "html is required",
                            "status_code": 422
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "invalid",
                    "message": "html is required",
                    "status_code": 422
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Templates"
        ],
        "summary": "template_update",
        "description": "Updates the description and/or published version of the template with the given id. To update the template's html, create a new version of the template.",
        "operationId": "template_update",
        "parameters": [
          {
            "name": "tmpl_id",
            "in": "path",
            "description": "id of the template",
            "required": true,
            "style": "simple",
            "schema": {
              "pattern": "^tmpl_[a-zA-Z0-9]+$",
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Content-Type"
                },
                {}
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "maxLength": 255,
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "An internal description that identifies this resource. Must be no longer than 255 characters.",
                    "examples": [
                      "Updated Example"
                    ]
                  },
                  "published_version": {
                    "pattern": "^vrsn_[a-zA-Z0-9]+$",
                    "type": "string",
                    "examples": [
                      "vrsn_a"
                    ]
                  }
                },
                "contentMediaType": "application/x-www-form-urlencoded"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Returns the updated template object",
            "headers": {
              "ratelimit-limit": {
                "description": "The rate limit for a given endpoint.",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "The rate limit for a given endpoint.",
                      "examples": [
                        "150"
                      ],
                      "contentMediaType": "text/plain"
                    },
                    "example": "150"
                  }
                }
              },
              "ratelimit-remaining": {
                "description": "The number of requests remaining in the current window.",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "The number of requests remaining in the current window.",
                      "examples": [
                        "100"
                      ],
                      "contentMediaType": "text/plain"
                    },
                    "example": "100"
                  }
                }
              },
              "ratelimit-reset": {
                "description": "The time at which the rate limit window resets in  <a href=\"https://en.wikipedia.org/wiki/Unix_time\" target=\"_blank\">UTC epoch seconds</a>\n",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "The time at which the rate limit window resets in  <a href=\"https://en.wikipedia.org/wiki/Unix_time\" target=\"_blank\">UTC epoch seconds</a>\n",
                      "examples": [
                        "1528749846"
                      ],
                      "contentMediaType": "text/plain"
                    },
                    "example": "1528749846"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/template"
                    },
                    {
                      "examples": [
                        {
                          "id": "tmpl_c94e83ca2cd5121",
                          "description": "Test Template",
                          "versions": [
                            {
                              "id": "vrsn_362184d96d9b0c9",
                              "suggest_json_editor": true,
                              "description": "Test Template",
                              "engine": "legacy",
                              "html": "<html>HTML for {{name}}</html>",
                              "date_created": "2017-11-07T22:56:10.962Z",
                              "date_modified": "2017-11-07T22:56:10.962Z",
                              "object": "version"
                            }
                          ],
                          "published_version": {
                            "id": "vrsn_362184d96d9b0c9",
                            "suggest_json_editor": false,
                            "description": "Test Template",
                            "engine": "handlebars",
                            "html": "<html>HTML for {{name}}</html>",
                            "date_created": "2017-11-07T22:56:10.962Z",
                            "date_modified": "2017-11-07T22:56:10.962Z",
                            "object": "version"
                          },
                          "metadata": {},
                          "date_created": "2017-11-07T22:56:10.962Z",
                          "date_modified": "2017-11-07T22:56:10.962Z",
                          "object": "template"
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "id": "tmpl_c94e83ca2cd5121",
                  "description": "Test Template",
                  "versions": [
                    {
                      "id": "vrsn_362184d96d9b0c9",
                      "suggest_json_editor": true,
                      "description": "Test Template",
                      "engine": "legacy",
                      "html": "<html>HTML for {{name}}</html>",
                      "date_created": "2017-11-07T22:56:10.962Z",
                      "date_modified": "2017-11-07T22:56:10.962Z",
                      "object": "version"
                    }
                  ],
                  "published_version": {
                    "id": "vrsn_362184d96d9b0c9",
                    "suggest_json_editor": false,
                    "description": "Test Template",
                    "engine": "handlebars",
                    "html": "<html>HTML for {{name}}</html>",
                    "date_created": "2017-11-07T22:56:10.962Z",
                    "date_modified": "2017-11-07T22:56:10.962Z",
                    "object": "version"
                  },
                  "metadata": {},
                  "date_created": "2017-11-07T22:56:10.962Z",
                  "date_modified": "2017-11-07T22:56:10.962Z",
                  "object": "template"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Templates0Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "invalid",
                            "message": "html is required",
                            "status_code": 422
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "invalid",
                    "message": "html is required",
                    "status_code": 422
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Templates"
        ],
        "summary": "template_delete",
        "description": "Permanently deletes a template. Deleting a template also deletes its associated versions. Deleted templates can not be used to create postcard, letter, or check resources.",
        "operationId": "template_delete",
        "parameters": [
          {
            "name": "tmpl_id",
            "in": "path",
            "description": "id of the template",
            "required": true,
            "style": "simple",
            "schema": {
              "pattern": "^tmpl_[a-zA-Z0-9]+$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/TemplatesResponse2"
                    },
                    {
                      "examples": [
                        {
                          "value": {
                            "id": "tmpl_123456789",
                            "deleted": true
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "value": {
                    "id": "tmpl_123456789",
                    "deleted": true
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Templates0Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "invalid",
                            "message": "html is required",
                            "status_code": 422
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "invalid",
                    "message": "html is required",
                    "status_code": 422
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/templates": {
      "get": {
        "tags": [
          "Templates"
        ],
        "summary": "templates_list",
        "description": "Returns a list of your templates. The templates are returned sorted by creation date, with the most recently created templates appearing first.",
        "operationId": "templates_list",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "How many results to return.",
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 100.0,
              "minimum": 1.0,
              "type": "integer",
              "contentEncoding": "int32",
              "default": 10,
              "examples": [
                10
              ]
            }
          },
          {
            "name": "before/after",
            "in": "query",
            "description": "`before` and `after` are both optional but only one of them can be in the query at a time.",
            "style": "form",
            "explode": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/beforeafter"
                },
                {
                  "description": "`before` and `after` are both optional but only one of them can be in the query at a time."
                }
              ]
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Request that the response include the total count by specifying `include=[\"total_count\"]`.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "date_created",
            "in": "query",
            "description": "Filter by date created. Accepted formats are ISO-8601 date or datetime, e.g. `{ \"gt\": \"2012-01-01\", \"lt\": \"2012-01-31T12:34:56Z\" }` where `gt` is >, `lt` is <, `gte` is ≥, and `lte` is ≤.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          {
            "name": "metadata",
            "in": "query",
            "description": "Filter by metadata key-value pair`.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A dictionary with a data property that contains an array of up to `limit` templates. Each entry in the array is a separate template. The previous and next page of templates can be retrieved by calling the endpoint contained in the `previous_url` and `next_url` fields in the API response respectively.<br>If no more templates are available beyond the current set of returned results, the `next_url` field will be empty.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/all_templates"
                    },
                    {
                      "examples": [
                        {
                          "data": [
                            {
                              "id": "tmpl_d5a5a89da9106f8",
                              "description": "Test Template",
                              "versions": [
                                {
                                  "id": "vrsn_232a02fb8224791",
                                  "suggest_json_editor": true,
                                  "description": "Test Template",
                                  "engine": "legacy",
                                  "html": "HTML for ",
                                  "date_created": "2019-07-27T23:49:01.512Z",
                                  "date_modified": "2019-07-27T23:49:01.512Z",
                                  "object": "version"
                                }
                              ],
                              "published_version": {
                                "id": "vrsn_232a02fb8224791",
                                "suggest_json_editor": false,
                                "description": "Test Template",
                                "engine": "handlebars",
                                "html": "HTML for ",
                                "date_created": "2019-07-27T23:49:01.512Z",
                                "date_modified": "2019-07-27T23:49:01.512Z",
                                "object": "version"
                              },
                              "metadata": {},
                              "date_created": "2019-07-27T23:49:01.511Z",
                              "date_modified": "2019-07-27T23:49:01.511Z",
                              "object": "template"
                            },
                            {
                              "id": "tmpl_59b2150ae120887",
                              "description": "Test Template",
                              "versions": [
                                {
                                  "id": "vrsn_2a7eb63ccb795b9",
                                  "description": "Test Template",
                                  "html": "HTML for ",
                                  "date_created": "2019-03-29T10:22:34.643Z",
                                  "date_modified": "2019-03-29T10:22:34.643Z",
                                  "object": "version"
                                }
                              ],
                              "published_version": {
                                "id": "vrsn_2a7eb63ccb795b9",
                                "description": "Test Template",
                                "html": "HTML for ",
                                "date_created": "2019-03-29T10:22:34.643Z",
                                "date_modified": "2019-03-29T10:22:34.643Z",
                                "object": "version"
                              },
                              "metadata": {},
                              "date_created": "2019-03-29T10:22:34.642Z",
                              "date_modified": "2019-03-29T10:22:34.642Z",
                              "object": "template"
                            }
                          ],
                          "object": "list",
                          "previous_url": null,
                          "next_url": "https://api.lob.com/v1/templates?limit=2&after=eyJkYXRlT2Zmc2V0IjoiMjAxOS0wMy0yOVQxMDoyMjozNC42NDJaIiwiaWRPZmZzZXQiOiJ0bXBsXzU5YjIxNTBhZTEyMDg4NyJ9",
                          "count": 2
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "data": [
                    {
                      "id": "tmpl_d5a5a89da9106f8",
                      "description": "Test Template",
                      "versions": [
                        {
                          "id": "vrsn_232a02fb8224791",
                          "suggest_json_editor": true,
                          "description": "Test Template",
                          "engine": "legacy",
                          "html": "HTML for ",
                          "date_created": "2019-07-27T23:49:01.512Z",
                          "date_modified": "2019-07-27T23:49:01.512Z",
                          "object": "version"
                        }
                      ],
                      "published_version": {
                        "id": "vrsn_232a02fb8224791",
                        "suggest_json_editor": false,
                        "description": "Test Template",
                        "engine": "handlebars",
                        "html": "HTML for ",
                        "date_created": "2019-07-27T23:49:01.512Z",
                        "date_modified": "2019-07-27T23:49:01.512Z",
                        "object": "version"
                      },
                      "metadata": {},
                      "date_created": "2019-07-27T23:49:01.511Z",
                      "date_modified": "2019-07-27T23:49:01.511Z",
                      "object": "template"
                    },
                    {
                      "id": "tmpl_59b2150ae120887",
                      "description": "Test Template",
                      "versions": [
                        {
                          "id": "vrsn_2a7eb63ccb795b9",
                          "description": "Test Template",
                          "html": "HTML for ",
                          "date_created": "2019-03-29T10:22:34.643Z",
                          "date_modified": "2019-03-29T10:22:34.643Z",
                          "object": "version"
                        }
                      ],
                      "published_version": {
                        "id": "vrsn_2a7eb63ccb795b9",
                        "description": "Test Template",
                        "html": "HTML for ",
                        "date_created": "2019-03-29T10:22:34.643Z",
                        "date_modified": "2019-03-29T10:22:34.643Z",
                        "object": "version"
                      },
                      "metadata": {},
                      "date_created": "2019-03-29T10:22:34.642Z",
                      "date_modified": "2019-03-29T10:22:34.642Z",
                      "object": "template"
                    }
                  ],
                  "object": "list",
                  "previous_url": null,
                  "next_url": "https://api.lob.com/v1/templates?limit=2&after=eyJkYXRlT2Zmc2V0IjoiMjAxOS0wMy0yOVQxMDoyMjozNC42NDJaIiwiaWRPZmZzZXQiOiJ0bXBsXzU5YjIxNTBhZTEyMDg4NyJ9",
                  "count": 2
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Templates0Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "invalid",
                            "message": "html is required",
                            "status_code": 422
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "invalid",
                    "message": "html is required",
                    "status_code": 422
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Templates"
        ],
        "summary": "create_template",
        "description": "Creates a new template for use with the Print & Mail API. In Live mode, you can only have as many non-deleted templates as allotted in your current <a href=\"https://dashboard.lob.com/#/settings/editions\" target=\"_blank\">Print & Mail Edition</a>. If you attempt to create a template past your limit, you will receive a `403` error. There is no limit in Test mode.",
        "operationId": "create_template",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Content-Type"
                },
                {}
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "html"
                ],
                "type": "object",
                "properties": {
                  "html": {
                    "maxLength": 100000,
                    "type": "string",
                    "description": "An HTML string of less than 100,000 characters to be used as the `published_version` of this template. See [here](#section/HTML-Examples) for guidance on designing HTML templates. Please see endpoint specific documentation for any other product-specific HTML details:\n- [Postcards](#operation/postcard_create) - `front` and `back`\n- [Self Mailers](#operation/self_mailer_create) - `inside` and `outside`\n- [Letters](#operation/letter_create) - `file`\n- [Checks](#operation/check_create) - `check_bottom` and `attachment`\n- [Cards](#operation/card_create) - `front` and `back`\n\nIf there is a syntax error with your variable names within your HTML, then an error will be thrown, e.g. using a `{{#users}}` opening tag without the corresponding closing tag `{{/users}}`.",
                    "examples": [
                      "<html>HTML for {{name}}</html>"
                    ]
                  },
                  "description": {
                    "maxLength": 255,
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "An internal description that identifies this resource. Must be no longer than 255 characters.",
                    "examples": [
                      "demo"
                    ]
                  },
                  "metadata": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Use metadata to store custom information for tagging and labeling back to your internal systems. Must be an object with up to 20 key-value pairs. Keys must be at most 40 characters and values must be at most 500 characters. Neither can contain the characters `\"` and `\\`. i.e. '{\"customer_id\" : \"NEWYORK2015\"}' Nested objects are not supported.  See [Metadata](#section/Metadata) for more information."
                  },
                  "engine": {},
                  "required_vars": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "An array of required variables to be used in a template. Only available for `handlebars` templates."
                  }
                },
                "contentMediaType": "application/x-www-form-urlencoded"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Returns a template object",
            "headers": {
              "ratelimit-limit": {
                "description": "The rate limit for a given endpoint.",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "The rate limit for a given endpoint.",
                      "examples": [
                        "150"
                      ],
                      "contentMediaType": "text/plain"
                    },
                    "example": "150"
                  }
                }
              },
              "ratelimit-remaining": {
                "description": "The number of requests remaining in the current window.",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "The number of requests remaining in the current window.",
                      "examples": [
                        "100"
                      ],
                      "contentMediaType": "text/plain"
                    },
                    "example": "100"
                  }
                }
              },
              "ratelimit-reset": {
                "description": "The time at which the rate limit window resets in  <a href=\"https://en.wikipedia.org/wiki/Unix_time\" target=\"_blank\">UTC epoch seconds</a>\n",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "The time at which the rate limit window resets in  <a href=\"https://en.wikipedia.org/wiki/Unix_time\" target=\"_blank\">UTC epoch seconds</a>\n",
                      "examples": [
                        "1528749846"
                      ],
                      "contentMediaType": "text/plain"
                    },
                    "example": "1528749846"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/template"
                    },
                    {
                      "examples": [
                        {
                          "id": "tmpl_c94e83ca2cd5121",
                          "description": "Test Template",
                          "versions": [
                            {
                              "id": "vrsn_362184d96d9b0c9",
                              "suggest_json_editor": true,
                              "description": "Test Template",
                              "engine": "legacy",
                              "html": "<html>HTML for {{name}}</html>",
                              "date_created": "2017-11-07T22:56:10.962Z",
                              "date_modified": "2017-11-07T22:56:10.962Z",
                              "object": "version"
                            }
                          ],
                          "published_version": {
                            "id": "vrsn_362184d96d9b0c9",
                            "suggest_json_editor": false,
                            "description": "Test Template",
                            "engine": "handlebars",
                            "html": "<html>HTML for {{name}}</html>",
                            "date_created": "2017-11-07T22:56:10.962Z",
                            "date_modified": "2017-11-07T22:56:10.962Z",
                            "object": "version"
                          },
                          "metadata": {},
                          "date_created": "2017-11-07T22:56:10.962Z",
                          "date_modified": "2017-11-07T22:56:10.962Z",
                          "object": "template"
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "id": "tmpl_c94e83ca2cd5121",
                  "description": "Test Template",
                  "versions": [
                    {
                      "id": "vrsn_362184d96d9b0c9",
                      "suggest_json_editor": true,
                      "description": "Test Template",
                      "engine": "legacy",
                      "html": "<html>HTML for {{name}}</html>",
                      "date_created": "2017-11-07T22:56:10.962Z",
                      "date_modified": "2017-11-07T22:56:10.962Z",
                      "object": "version"
                    }
                  ],
                  "published_version": {
                    "id": "vrsn_362184d96d9b0c9",
                    "suggest_json_editor": false,
                    "description": "Test Template",
                    "engine": "handlebars",
                    "html": "<html>HTML for {{name}}</html>",
                    "date_created": "2017-11-07T22:56:10.962Z",
                    "date_modified": "2017-11-07T22:56:10.962Z",
                    "object": "version"
                  },
                  "metadata": {},
                  "date_created": "2017-11-07T22:56:10.962Z",
                  "date_modified": "2017-11-07T22:56:10.962Z",
                  "object": "template"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Templates0Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "invalid",
                            "message": "html is required",
                            "status_code": 422
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "invalid",
                    "message": "html is required",
                    "status_code": 422
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/uploads": {
      "get": {
        "tags": [
          "Uploads"
        ],
        "summary": "uploads_list",
        "description": "Returns a list of your uploads. Optionally, filter uploads by campaign.",
        "operationId": "uploads_list",
        "parameters": [
          {
            "name": "campaignId",
            "in": "query",
            "description": "id of the campaign",
            "style": "form",
            "explode": true,
            "schema": {
              "pattern": "^cmp_[a-zA-Z0-9]+$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An array of matching uploads. Each entry in the array is a separate upload.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/upload"
                  },
                  "description": "",
                  "examples": [
                    [
                      {
                        "id": "upl_71be866e430b11e9",
                        "accountId": "fa9ea650fc7b31a89f92",
                        "campaignId": "cmp_1933ad629bae1408",
                        "mode": "test",
                        "failuresUrl": "https://www.example.com",
                        "originalFilename": "my_audience.csv",
                        "state": "Draft",
                        "totalMailpieces": 100,
                        "failedMailpieces": 5,
                        "validatedMailpieces": 95,
                        "bytesProcessed": 17268,
                        "dateCreated": "2017-09-05T17:47:53.767Z",
                        "dateModified": "2017-09-05T17:47:53.767Z",
                        "requiredAddressColumnMapping": {
                          "name": "recipient_name",
                          "address_line1": "primary_line",
                          "address_city": "city",
                          "address_state": "state",
                          "address_zip": "zip_code"
                        },
                        "optionalAddressColumnMapping": {
                          "address_line2": "secondary_line",
                          "company": "company",
                          "address_country": "country"
                        },
                        "mergeVariableColumnMapping": {
                          "gift_code": "code"
                        },
                        "metadata": {
                          "columns": [
                            "recipient_name",
                            "zip_code"
                          ]
                        }
                      }
                    ]
                  ],
                  "contentMediaType": "application/json"
                },
                "example": [
                  {
                    "id": "upl_71be866e430b11e9",
                    "accountId": "fa9ea650fc7b31a89f92",
                    "campaignId": "cmp_1933ad629bae1408",
                    "mode": "test",
                    "failuresUrl": "https://www.example.com",
                    "originalFilename": "my_audience.csv",
                    "state": "Draft",
                    "totalMailpieces": 100,
                    "failedMailpieces": 5,
                    "validatedMailpieces": 95,
                    "bytesProcessed": 17268,
                    "dateCreated": "2017-09-05T17:47:53.767Z",
                    "dateModified": "2017-09-05T17:47:53.767Z",
                    "requiredAddressColumnMapping": {
                      "name": "recipient_name",
                      "address_line1": "primary_line",
                      "address_city": "city",
                      "address_state": "state",
                      "address_zip": "zip_code"
                    },
                    "optionalAddressColumnMapping": {
                      "address_line2": "secondary_line",
                      "company": "company",
                      "address_country": "country"
                    },
                    "mergeVariableColumnMapping": {
                      "gift_code": "code"
                    },
                    "metadata": {
                      "columns": [
                        "recipient_name",
                        "zip_code"
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Uploads"
        ],
        "summary": "upload_create",
        "description": "Creates a new upload with the provided properties.",
        "operationId": "upload_create",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/upload_writable"
                  },
                  {}
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Upload created successfully",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/upload"
                    },
                    {
                      "examples": [
                        {
                          "id": "upl_71be866e430b11e9",
                          "accountId": "fa9ea650fc7b31a89f92",
                          "campaignId": "cmp_1933ad629bae1408",
                          "mode": "live",
                          "failuresUrl": "http://www.example.com",
                          "originalFilename": "my_audience.csv",
                          "state": "Draft",
                          "totalMailpieces": 100,
                          "failedMailpieces": 5,
                          "validatedMailpieces": 95,
                          "bytesProcessed": 17628,
                          "dateCreated": "2017-09-05T17:47:53.767Z",
                          "dateModified": "2017-09-05T17:47:53.767Z",
                          "requiredAddressColumnMapping": {
                            "name": null,
                            "address_line1": null,
                            "address_city": null,
                            "address_state": null,
                            "address_zip": null
                          },
                          "optionalAddressColumnMapping": {
                            "address_line2": null,
                            "company": null,
                            "address_country": null
                          },
                          "mergeVariableColumnMapping": null,
                          "metadata": {
                            "columns": []
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "id": "upl_71be866e430b11e9",
                  "accountId": "fa9ea650fc7b31a89f92",
                  "campaignId": "cmp_1933ad629bae1408",
                  "mode": "live",
                  "failuresUrl": "http://www.example.com",
                  "originalFilename": "my_audience.csv",
                  "state": "Draft",
                  "totalMailpieces": 100,
                  "failedMailpieces": 5,
                  "validatedMailpieces": 95,
                  "bytesProcessed": 17628,
                  "dateCreated": "2017-09-05T17:47:53.767Z",
                  "dateModified": "2017-09-05T17:47:53.767Z",
                  "requiredAddressColumnMapping": {
                    "name": null,
                    "address_line1": null,
                    "address_city": null,
                    "address_state": null,
                    "address_zip": null
                  },
                  "optionalAddressColumnMapping": {
                    "address_line2": null,
                    "company": null,
                    "address_country": null
                  },
                  "mergeVariableColumnMapping": null,
                  "metadata": {
                    "columns": []
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError1"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/uploads/{upl_id}": {
      "get": {
        "tags": [
          "Uploads"
        ],
        "summary": "upload_retrieve",
        "description": "Retrieves the details of an existing upload. You need only supply the unique upload identifier that was returned upon upload creation.",
        "operationId": "upload_retrieve",
        "parameters": [
          {
            "name": "upl_id",
            "in": "path",
            "description": "id of the upload",
            "required": true,
            "style": "simple",
            "schema": {
              "pattern": "^upl_[a-zA-Z0-9]+$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an upload object",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/upload"
                    },
                    {
                      "examples": [
                        {
                          "id": "upl_71be866e430b11e9",
                          "accountId": "fa9ea650fc7b31a89f92",
                          "campaignId": "cmp_1933ad629bae1408",
                          "mode": "live",
                          "failuresUrl": "http://www.example.com",
                          "originalFilename": "my_audience.csv",
                          "state": "Draft",
                          "totalMailpieces": 100,
                          "failedMailpieces": 5,
                          "validatedMailpieces": 95,
                          "bytesProcessed": 17628,
                          "dateCreated": "2017-09-05T17:47:53.767Z",
                          "dateModified": "2017-09-05T17:47:53.767Z",
                          "requiredAddressColumnMapping": {
                            "name": null,
                            "address_line1": null,
                            "address_city": null,
                            "address_state": null,
                            "address_zip": null
                          },
                          "optionalAddressColumnMapping": {
                            "address_line2": null,
                            "company": null,
                            "address_country": null
                          },
                          "mergeVariableColumnMapping": null,
                          "metadata": {
                            "columns": []
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "id": "upl_71be866e430b11e9",
                  "accountId": "fa9ea650fc7b31a89f92",
                  "campaignId": "cmp_1933ad629bae1408",
                  "mode": "live",
                  "failuresUrl": "http://www.example.com",
                  "originalFilename": "my_audience.csv",
                  "state": "Draft",
                  "totalMailpieces": 100,
                  "failedMailpieces": 5,
                  "validatedMailpieces": 95,
                  "bytesProcessed": 17628,
                  "dateCreated": "2017-09-05T17:47:53.767Z",
                  "dateModified": "2017-09-05T17:47:53.767Z",
                  "requiredAddressColumnMapping": {
                    "name": null,
                    "address_line1": null,
                    "address_city": null,
                    "address_state": null,
                    "address_zip": null
                  },
                  "optionalAddressColumnMapping": {
                    "address_line2": null,
                    "company": null,
                    "address_country": null
                  },
                  "mergeVariableColumnMapping": null,
                  "metadata": {
                    "columns": []
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Uploads404Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "not_found",
                            "message": "upload not found",
                            "status_code": 404
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "not_found",
                    "message": "upload not found",
                    "status_code": 404
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError1"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "Uploads"
        ],
        "summary": "upload_update",
        "description": "Update the details of an existing upload. You need only supply the unique identifier that was returned upon upload creation.",
        "operationId": "upload_update",
        "parameters": [
          {
            "name": "upl_id",
            "in": "path",
            "description": "id of the upload",
            "required": true,
            "style": "simple",
            "schema": {
              "pattern": "^upl_[a-zA-Z0-9]+$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/upload_updatable"
                  },
                  {}
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns an upload object",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/upload"
                    },
                    {
                      "examples": [
                        {
                          "id": "upl_71be866e430b11e9",
                          "accountId": "fa9ea650fc7b31a89f92",
                          "campaignId": "cmp_1933ad629bae1408",
                          "mode": "live",
                          "failuresUrl": "http://www.example.com",
                          "originalFilename": "my_audience.csv",
                          "state": "Draft",
                          "totalMailpieces": 100,
                          "failedMailpieces": 5,
                          "validatedMailpieces": 95,
                          "bytesProcessed": 17628,
                          "dateCreated": "2017-09-05T17:47:53.767Z",
                          "dateModified": "2017-09-05T17:47:53.767Z",
                          "requiredAddressColumnMapping": {
                            "name": null,
                            "address_line1": null,
                            "address_city": null,
                            "address_state": null,
                            "address_zip": null
                          },
                          "optionalAddressColumnMapping": {
                            "address_line2": null,
                            "company": null,
                            "address_country": null
                          },
                          "mergeVariableColumnMapping": null,
                          "metadata": {
                            "columns": []
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "id": "upl_71be866e430b11e9",
                  "accountId": "fa9ea650fc7b31a89f92",
                  "campaignId": "cmp_1933ad629bae1408",
                  "mode": "live",
                  "failuresUrl": "http://www.example.com",
                  "originalFilename": "my_audience.csv",
                  "state": "Draft",
                  "totalMailpieces": 100,
                  "failedMailpieces": 5,
                  "validatedMailpieces": 95,
                  "bytesProcessed": 17628,
                  "dateCreated": "2017-09-05T17:47:53.767Z",
                  "dateModified": "2017-09-05T17:47:53.767Z",
                  "requiredAddressColumnMapping": {
                    "name": null,
                    "address_line1": null,
                    "address_city": null,
                    "address_state": null,
                    "address_zip": null
                  },
                  "optionalAddressColumnMapping": {
                    "address_line2": null,
                    "company": null,
                    "address_country": null
                  },
                  "mergeVariableColumnMapping": null,
                  "metadata": {
                    "columns": []
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Uploads404Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "not_found",
                            "message": "upload not found",
                            "status_code": 404
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "not_found",
                    "message": "upload not found",
                    "status_code": 404
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError1"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Uploads"
        ],
        "summary": "upload_delete",
        "description": "Delete an existing upload. You need only supply the unique identifier that was returned upon upload creation.",
        "operationId": "upload_delete",
        "parameters": [
          {
            "name": "upl_id",
            "in": "path",
            "description": "id of the upload",
            "required": true,
            "style": "simple",
            "schema": {
              "pattern": "^upl_[a-zA-Z0-9]+$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/uploads/{upl_id}/file": {
      "post": {
        "tags": [
          "Uploads"
        ],
        "summary": "upload_file",
        "description": "Upload an [audience file](https://help.lob.com/print-and-mail/building-a-mail-strategy/campaign-or-triggered-sends/campaign-audience-guide) and associate it with an upload.",
        "operationId": "upload_file",
        "parameters": [
          {
            "name": "upl_id",
            "in": "path",
            "description": "ID of the upload",
            "required": true,
            "style": "simple",
            "schema": {
              "pattern": "^upl_[a-zA-Z0-9]+$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "encoding": {},
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "contentEncoding": "base64"
                  }
                },
                "contentMediaType": "multipart/form-data"
              }
            }
          },
          "required": false
        },
        "responses": {
          "202": {
            "description": "Successful Response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/upload_file"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError1"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/uploads/{upl_id}/exports": {
      "post": {
        "tags": [
          "Uploads"
        ],
        "summary": "upload_export_create",
        "description": "Campaign Exports can help you understand exactly which records in a campaign could not be created. By initiating and retrieving an export, you will get row-by-row errors for your campaign. For a step-by-step walkthrough of creating a campaign and exporting failures, see our [Campaigns Guide](https://help.lob.com/print-and-mail/building-a-mail-strategy/campaign-or-triggered-sends/launch-your-first-campaign).\n\nCreate an export file associated with an upload.",
        "operationId": "upload_export_create",
        "parameters": [
          {
            "name": "upl_id",
            "in": "path",
            "description": "ID of the upload",
            "required": true,
            "style": "simple",
            "schema": {
              "pattern": "^upl_[a-zA-Z0-9]+$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UploadsExportsRequest"
                  },
                  {}
                ],
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/upload_create_export"
                }
              }
            }
          },
          "4XX": {
            "description": "Create Export Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/upload_export_error1"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/uploads/{upl_id}/report": {
      "get": {
        "tags": [
          "Uploads"
        ],
        "summary": "report_retrieve",
        "description": "Retrieves the line item data for each row from the csv file associated with the upload id record. NOTE: This endpoint is currently feature flagged. Please reach out to Lob's support team if you  would like access to this API endpoint.",
        "operationId": "report_retrieve",
        "parameters": [
          {
            "name": "upl_id",
            "in": "path",
            "description": "ID of the upload",
            "required": true,
            "style": "simple",
            "schema": {
              "pattern": "^upl_[a-zA-Z0-9]+$",
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "The status of line items to filter and retrieve. By default all line items are returned.",
            "style": "form",
            "explode": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/status31"
                },
                {
                  "description": "The status of line items to filter and retrieve. By default all line items are returned."
                }
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "How many results to return.",
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 100.0,
              "minimum": 1.0,
              "type": "integer",
              "contentEncoding": "int32",
              "default": 100,
              "examples": [
                10
              ]
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "An integer that designates the offset at which to begin returning results. Defaults to 0.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "contentEncoding": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an report object",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadsReportResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/feature_flag_disabled1"
                    },
                    {
                      "examples": [
                        {
                          "message": "This feature is not enabled for this account: access_upload_report",
                          "code": 403
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "message": "This feature is not enabled for this account: access_upload_report",
                  "code": 403
                }
              }
            }
          },
          "404": {
            "description": "Not Found Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/UploadsReport404Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "not_found",
                            "message": "upload not found",
                            "status_code": 404
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "not_found",
                    "message": "upload not found",
                    "status_code": 404
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/uploads/{upl_id}/exports/{ex_id}": {
      "get": {
        "tags": [
          "Uploads"
        ],
        "summary": "export_retrieve",
        "description": "Retrieves the details of an existing export. You need only supply the unique export identifier that was returned upon export creation. If you try retrieving an export immediately after creating one (i.e., before we're done processing the export), you will get back an export object with `state = in_progress`.",
        "operationId": "export_retrieve",
        "parameters": [
          {
            "name": "upl_id",
            "in": "path",
            "description": "ID of the upload",
            "required": true,
            "style": "simple",
            "schema": {
              "pattern": "^upl_[a-zA-Z0-9]+$",
              "type": "string"
            }
          },
          {
            "name": "ex_id",
            "in": "path",
            "description": "ID of the export",
            "required": true,
            "style": "simple",
            "schema": {
              "pattern": "^ex_[a-zA-Z0-9]+$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an export object",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadsExportsResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/domains/{domain_id}": {
      "get": {
        "tags": [
          "URL Shortener"
        ],
        "summary": "domain_get",
        "description": "Retrieve details for a single domain.",
        "operationId": "domain_get",
        "parameters": [
          {
            "name": "domain_id",
            "in": "path",
            "description": "Unique identifier for a domain.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns domain related details.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/domain_response"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domains0Error1"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "URL Shortener"
        ],
        "summary": "domain_delete",
        "description": "Delete a registered domain. This operation can only be performed if all associated links with the domain are deleted.",
        "operationId": "domain_delete",
        "parameters": [
          {
            "name": "domain_id",
            "in": "path",
            "description": "Unique identifier for a domain.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the deleted link object.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/domain_response"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domains0Error1"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/domains": {
      "post": {
        "tags": [
          "URL Shortener"
        ],
        "summary": "domain_create",
        "description": "Add a new custom domain that can be used to create custom links.",
        "operationId": "domain_create",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Content-Type"
                },
                {}
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "domain"
                ],
                "type": "object",
                "properties": {
                  "domain": {
                    "type": "string",
                    "description": "The registered domain/hostname."
                  }
                },
                "contentMediaType": "application/x-www-form-urlencoded"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Returns a domain object with details.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/domain_response"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Domains0Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "invalid",
                            "message": "domain is required",
                            "status_code": 422
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "invalid",
                    "message": "domain is required",
                    "status_code": 422
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "get": {
        "tags": [
          "URL Shortener"
        ],
        "summary": "domain_list",
        "description": "Retrieve a list of all created domains.",
        "operationId": "domain_list",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returns a list of all domains.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/domains_response"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domains0Error1"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/domains/{domain_id}/links": {
      "delete": {
        "tags": [
          "URL Shortener"
        ],
        "summary": "domain_delete_links",
        "description": "Delete all associated links for a domain",
        "operationId": "domain_delete_links",
        "parameters": [
          {
            "name": "domain_id",
            "in": "path",
            "description": "Unique identifier for a domain.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the deleted objects.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/domains_response"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainsLinks0Error1"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/links": {
      "get": {
        "tags": [
          "URL Shortener"
        ],
        "summary": "links_list",
        "description": "Retrieves a list of shortened links. The list is sorted by  creation date, with the most recently created appearing first.",
        "operationId": "links_list",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "How many results to return.",
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 100.0,
              "minimum": 1.0,
              "type": "integer",
              "contentEncoding": "int32",
              "default": 10,
              "examples": [
                10
              ]
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "An integer that designates the offset at which to begin returning results. Defaults to 0.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "contentEncoding": "int32",
              "default": 0
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Request that the response include the total count by specifying `include=[\"total_count\"]`.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "date_created",
            "in": "query",
            "description": "Filter by date created. Accepted formats are ISO-8601 date or datetime, e.g. `{ \"gt\": \"2012-01-01\", \"lt\": \"2012-01-31T12:34:56Z\" }` where `gt` is >, `lt` is <, `gte` is ≥, and `lte` is ≤.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          {
            "name": "metadata",
            "in": "query",
            "description": "Filter by metadata key-value pair`.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          {
            "name": "campaign_id",
            "in": "query",
            "description": "Filter the links generated for a particular campaign using its campaign id.",
            "style": "form",
            "explode": true,
            "schema": {
              "pattern": "^cmp_[a-zA-Z0-9]+$",
              "type": "string"
            }
          },
          {
            "name": "clicked",
            "in": "query",
            "description": "Retrieve the list of links that have been opened.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "billing_group_id",
            "in": "query",
            "description": "Filter the links generated for a particular billing group id.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the deleted link object.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/links_response"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Links0Error1"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/links/{link_id}": {
      "get": {
        "tags": [
          "URL Shortener"
        ],
        "summary": "links_get",
        "description": "Retrievs a single shortened link.",
        "operationId": "links_get",
        "parameters": [
          {
            "name": "link_id",
            "in": "path",
            "description": "Unique identifier for a link.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a single link.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/link_response"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Links0Error1"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "URL Shortener"
        ],
        "summary": "link_update",
        "description": "Update any of the properties of a shortened link.",
        "operationId": "link_update",
        "parameters": [
          {
            "name": "link_id",
            "in": "path",
            "description": "Unique identifier for a link.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Content-Type"
                },
                {}
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "redirect_link"
                ],
                "type": "object",
                "properties": {
                  "redirect_link": {
                    "type": "string",
                    "description": "The original target URL."
                  },
                  "domain": {
                    "type": "string",
                    "description": "The registered domain to be used for the short URL."
                  },
                  "slug": {
                    "type": "string",
                    "description": "The unique path for the shortened URL, if empty a unique path will be used."
                  },
                  "metadata_tag": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Use metadata to store custom information for tagging and labeling back to your internal systems. Must be an object with up to 20 key-value pairs. Keys must be at most 40 characters and values must be at most 500 characters. Neither can contain the characters `\"` and `\\`. i.e. '{\"customer_id\" : \"NEWYORK2015\"}' Nested objects are not supported.  See [Metadata](#section/Metadata) for more information."
                  },
                  "billing_group_id": {
                    "type": "string",
                    "description": "An optional string with the billing group ID to tag your usage with. Is used for billing purposes. Requires special activation to use. See <a href=\"#tag/Billing-Groups\">Billing Group API</a> for more information."
                  }
                },
                "contentMediaType": "application/x-www-form-urlencoded"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Returns the updated link.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/link_response"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Links0Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "invalid",
                            "message": "redirect_link is required",
                            "status_code": 422
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "invalid",
                    "message": "redirect_link is required",
                    "status_code": 422
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "URL Shortener"
        ],
        "summary": "links_delete",
        "description": "Delete the shortened link.",
        "operationId": "links_delete",
        "parameters": [
          {
            "name": "link_id",
            "in": "path",
            "description": "Unique identifier for a link.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the deleted short link object",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/link_response"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Links0Error1"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/links/shorten": {
      "post": {
        "tags": [
          "URL Shortener"
        ],
        "summary": "link_create",
        "description": "Given a long URL, shorten your URL either by using a custom domain or Lob's own short domain.",
        "operationId": "link_create",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Content-Type"
                },
                {}
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "redirect_link"
                ],
                "type": "object",
                "properties": {
                  "redirect_link": {
                    "type": "string",
                    "description": "The original target URL."
                  },
                  "domain": {
                    "type": "string",
                    "description": "The registered domain to be used for the short URL."
                  },
                  "slug": {
                    "type": "string",
                    "description": "The unique path for the shortened URL, if empty a unique path will be used."
                  },
                  "metadata_tag": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Use metadata to store custom information for tagging and labeling back to your internal systems. Must be an object with up to 20 key-value pairs. Keys must be at most 40 characters and values must be at most 500 characters. Neither can contain the characters `\"` and `\\`. i.e. '{\"customer_id\" : \"NEWYORK2015\"}' Nested objects are not supported.  See [Metadata](#section/Metadata) for more information."
                  },
                  "billing_group_id": {
                    "type": "string",
                    "description": "An optional string with the billing group ID to tag your usage with. Is used for billing purposes. Requires special activation to use. See <a href=\"#tag/Billing-Groups\">Billing Group API</a> for more information."
                  }
                },
                "contentMediaType": "application/x-www-form-urlencoded"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Returns a successfully created link.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/link_response"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/LinksShorten0Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "invalid",
                            "message": "redirect_link is required",
                            "status_code": 422
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "invalid",
                    "message": "redirect_link is required",
                    "status_code": 422
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/links/shorten/bulk": {
      "post": {
        "tags": [
          "URL Shortener"
        ],
        "summary": "link_bulk_create",
        "description": "Shortens a list of links in a single request.",
        "operationId": "link_bulk_create",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "maxItems": 1000,
                "minItems": 1,
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/link_single"
                },
                "description": "",
                "contentMediaType": "application/json"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns all successfully created links",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/links_response"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/LinksShortenBulk0Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "invalid",
                            "message": "redirect_link is required",
                            "status_code": 422
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "invalid",
                    "message": "redirect_link is required",
                    "status_code": 422
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/us_autocompletions": {
      "post": {
        "tags": [
          "US Autocompletions"
        ],
        "summary": "autocompletion",
        "description": "Given an address prefix consisting of a partial primary line, as well as optional input of city, state, and zip code, this functionality returns up to 10 full US address suggestions. Not all of them will turn out to be valid addresses; they'll need to be [verified](#operation/verification_us).",
        "operationId": "autocompletion",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Content-Type"
                },
                {}
              ]
            }
          },
          {
            "name": "case",
            "in": "query",
            "description": "Casing of the verified address. Possible values are `upper` and `proper` for uppercased (e.g. \"PO BOX\") and proper-cased (e.g. \"PO Box\"), respectively. Only affects `primary_line`, `city`, and `state`. Default casing is `upper`.",
            "style": "form",
            "explode": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/case1"
                },
                {
                  "description": "Casing of the verified address. Possible values are `upper` and `proper` for uppercased (e.g. \"PO BOX\") and proper-cased (e.g. \"PO Box\"), respectively. Only affects `primary_line`, `city`, and `state`. Default casing is `upper`."
                }
              ]
            }
          },
          {
            "name": "valid_addresses",
            "in": "query",
            "description": "Possible values are `true` and `false`. If false, not all of the suggestions in the response will be valid addresses; they'll need to be verified in order to determine the deliverability. The valid_addresses flag will greatly reduce the number of keystrokes needed before reaching an intended address.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "address_prefix"
                ],
                "type": "object",
                "properties": {
                  "address_prefix": {
                    "type": "string",
                    "description": "Only accepts numbers and street names in an alphanumeric format."
                  },
                  "city": {
                    "type": "string",
                    "description": "An optional city input used to filter suggestions. Case insensitive and does not match partial abbreviations."
                  },
                  "state": {
                    "type": "string",
                    "description": "An optional state input used to filter suggestions. Case insensitive and does not match partial abbreviations."
                  },
                  "zip_code": {
                    "type": "string",
                    "description": "An optional ZIP Code input used to filter suggestions. Matches partial entries."
                  },
                  "geo_ip_sort": {
                    "type": "boolean",
                    "description": "If `true`, sort suggestions by proximity to the IP set in the `X-Forwarded-For` header."
                  }
                },
                "contentMediaType": "application/x-www-form-urlencoded"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Returns a US autocompletion object.",
            "headers": {
              "ratelimit-limit": {
                "description": "The rate limit for a given endpoint.",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "The rate limit for a given endpoint.",
                      "examples": [
                        "150"
                      ],
                      "contentMediaType": "text/plain"
                    },
                    "example": "150"
                  }
                }
              },
              "ratelimit-remaining": {
                "description": "The number of requests remaining in the current window.",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "The number of requests remaining in the current window.",
                      "examples": [
                        "100"
                      ],
                      "contentMediaType": "text/plain"
                    },
                    "example": "100"
                  }
                }
              },
              "ratelimit-reset": {
                "description": "The time at which the rate limit window resets in  <a href=\"https://en.wikipedia.org/wiki/Unix_time\" target=\"_blank\">UTC epoch seconds</a>\n",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "The time at which the rate limit window resets in  <a href=\"https://en.wikipedia.org/wiki/Unix_time\" target=\"_blank\">UTC epoch seconds</a>\n",
                      "examples": [
                        "1528749846"
                      ],
                      "contentMediaType": "text/plain"
                    },
                    "example": "1528749846"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/us_autocompletions"
                    },
                    {
                      "examples": [
                        "{\"id\":\"us_auto_a3ac97bcfbb2460ab20c\",\"suggestions\":[{\"primary_line\":\"185 BAYSIDE VILLAGE PL\",\"city\":\"SAN FRANCISCO\",\"state\":\"CA\",\"zip_code\":\"94107\"},{\"primary_line\":\"185 BRANNAN ST\",\"city\":\"SAN FRANCISCO\",\"state\":\"CA\",\"zip_code\":\"94107\"},{\"primary_line\":\"185 BONIFACIO ST\",\"city\":\"SAN FRANCISCO\",\"state\":\"CA\",\"zip_code\":\"94107\"},{\"primary_line\":\"185 BLAIR TER\",\"city\":\"SAN FRANCISCO\",\"state\":\"CA\",\"zip_code\":\"94107\"},{\"primary_line\":\"185 BLUXOME ST\",\"city\":\"SAN FRANCISCO\",\"state\":\"CA\",\"zip_code\":\"94107\"},{\"primary_line\":\"210 KING ST\",\"city\":\"SAN FRANCISCO\",\"state\":\"CA\",\"zip_code\":\"94107\"},{\"primary_line\":\"185 BRYANT ST\",\"city\":\"SAN FRANCISCO\",\"state\":\"CA\",\"zip_code\":\"94107\"}],\"object\":\"us_autocompletion\"}",
                        "{\"id\":\"us_auto_a3ac97bcfbb2460ab20c\",\"suggestions\":[{\"primary_line\":\"1 TELEPHONE RD\",\"city\":\"OXFORD\",\"state\":\"AR\",\"zip_code\":\"72565\"},{\"primary_line\":\"1 TELEGA PL\",\"city\":\"PALMDALE\",\"state\":\"CA\",\"zip_code\":\"93550\"},{\"primary_line\":\"1 TELEGRAM AVE\",\"city\":\"ELMONT\",\"state\":\"NY\",\"zip_code\":\"11003\"},{\"primary_line\":\"1 TELEGRAM AVE\",\"city\":\"GARDEN CITY\",\"state\":\"KS\",\"zip_code\":\"67846\"},{\"primary_line\":\"1 TELEGRAPH HILL RD\",\"city\":\"HOLMDEL\",\"state\":\"NJ\",\"zip_code\":\"07733\"},{\"primary_line\":\"1 TELEGRAPH HILL RD S\",\"city\":\"HOLMDEL\",\"state\":\"NJ\",\"zip_code\":\"07733\"},{\"primary_line\":\"1 TELEGRAPH HILL BLVD\",\"city\":\"SAN FRANCISCO\",\"state\":\"CA\",\"zip_code\":\"94133\"}],\"object\":\"us_autocompletion\"}"
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "examples": {
                  "basic": {
                    "value": {
                      "id": "us_auto_a3ac97bcfbb2460ab20c",
                      "suggestions": [
                        {
                          "primary_line": "185 BAYSIDE VILLAGE PL",
                          "city": "SAN FRANCISCO",
                          "state": "CA",
                          "zip_code": "94107"
                        },
                        {
                          "primary_line": "185 BRANNAN ST",
                          "city": "SAN FRANCISCO",
                          "state": "CA",
                          "zip_code": "94107"
                        },
                        {
                          "primary_line": "185 BONIFACIO ST",
                          "city": "SAN FRANCISCO",
                          "state": "CA",
                          "zip_code": "94107"
                        },
                        {
                          "primary_line": "185 BLAIR TER",
                          "city": "SAN FRANCISCO",
                          "state": "CA",
                          "zip_code": "94107"
                        },
                        {
                          "primary_line": "185 BLUXOME ST",
                          "city": "SAN FRANCISCO",
                          "state": "CA",
                          "zip_code": "94107"
                        },
                        {
                          "primary_line": "210 KING ST",
                          "city": "SAN FRANCISCO",
                          "state": "CA",
                          "zip_code": "94107"
                        },
                        {
                          "primary_line": "185 BRYANT ST",
                          "city": "SAN FRANCISCO",
                          "state": "CA",
                          "zip_code": "94107"
                        }
                      ],
                      "object": "us_autocompletion"
                    }
                  },
                  "test": {
                    "value": {
                      "id": "us_auto_a3ac97bcfbb2460ab20c",
                      "suggestions": [
                        {
                          "primary_line": "1 TELEPHONE RD",
                          "city": "OXFORD",
                          "state": "AR",
                          "zip_code": "72565"
                        },
                        {
                          "primary_line": "1 TELEGA PL",
                          "city": "PALMDALE",
                          "state": "CA",
                          "zip_code": "93550"
                        },
                        {
                          "primary_line": "1 TELEGRAM AVE",
                          "city": "ELMONT",
                          "state": "NY",
                          "zip_code": "11003"
                        },
                        {
                          "primary_line": "1 TELEGRAM AVE",
                          "city": "GARDEN CITY",
                          "state": "KS",
                          "zip_code": "67846"
                        },
                        {
                          "primary_line": "1 TELEGRAPH HILL RD",
                          "city": "HOLMDEL",
                          "state": "NJ",
                          "zip_code": "07733"
                        },
                        {
                          "primary_line": "1 TELEGRAPH HILL RD S",
                          "city": "HOLMDEL",
                          "state": "NJ",
                          "zip_code": "07733"
                        },
                        {
                          "primary_line": "1 TELEGRAPH HILL BLVD",
                          "city": "SAN FRANCISCO",
                          "state": "CA",
                          "zip_code": "94133"
                        }
                      ],
                      "object": "us_autocompletion"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/UsAutocompletions0Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "invalid",
                            "message": "address_prefix is required",
                            "status_code": 422
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "invalid",
                    "message": "address_prefix is required",
                    "status_code": 422
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/bulk/us_verifications": {
      "post": {
        "tags": [
          "US Verifications"
        ],
        "summary": "bulk_us_verifications",
        "description": "Verify a list of US or US territory addresses _with a live API key_. Requests to this endpoint with a test API key will return a dummy response based on the primary line you input.",
        "operationId": "bulk_us_verifications",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Content-Type"
                },
                {}
              ]
            }
          },
          {
            "name": "case",
            "in": "query",
            "description": "Casing of the verified address. Possible values are `upper` and `proper` for uppercased (e.g. \"PO BOX\") and proper-cased (e.g. \"PO Box\"), respectively. Only affects `recipient`, `primary_line`, `secondary_line`, `urbanization`, and `last_line`. Default casing is `upper`.",
            "style": "form",
            "explode": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/case2"
                },
                {
                  "description": "Casing of the verified address. Possible values are `upper` and `proper` for uppercased (e.g. \"PO BOX\") and proper-cased (e.g. \"PO Box\"), respectively. Only affects `recipient`, `primary_line`, `secondary_line`, `urbanization`, and `last_line`. Default casing is `upper`."
                }
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "addresses"
                ],
                "type": "object",
                "properties": {
                  "addresses": {
                    "maxItems": 20,
                    "minItems": 1,
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/multiple_components"
                    },
                    "description": "",
                    "examples": [
                      [
                        {
                          "primary_line": "210 King Street",
                          "city": "San Francisco",
                          "state": "CA",
                          "zip_code": "94107"
                        },
                        {
                          "recipient": "Walgreens",
                          "primary_line": "Ave Wilson Churchill 123",
                          "secondary_line": "",
                          "urbanization": "URB FAIR OAKS",
                          "city": "RIO PIEDRAS",
                          "state": "PR",
                          "zip_code": "00926"
                        }
                      ]
                    ]
                  }
                },
                "contentMediaType": "application/x-www-form-urlencoded"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Returns a list of US verification objects.",
            "headers": {
              "ratelimit-limit": {
                "description": "The rate limit for a given endpoint.",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "The rate limit for a given endpoint.",
                      "examples": [
                        "150"
                      ],
                      "contentMediaType": "text/plain"
                    },
                    "example": "150"
                  }
                }
              },
              "ratelimit-remaining": {
                "description": "The number of requests remaining in the current window.",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "The number of requests remaining in the current window.",
                      "examples": [
                        "100"
                      ],
                      "contentMediaType": "text/plain"
                    },
                    "example": "100"
                  }
                }
              },
              "ratelimit-reset": {
                "description": "The time at which the rate limit window resets in  <a href=\"https://en.wikipedia.org/wiki/Unix_time\" target=\"_blank\">UTC epoch seconds</a>\n",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "The time at which the rate limit window resets in  <a href=\"https://en.wikipedia.org/wiki/Unix_time\" target=\"_blank\">UTC epoch seconds</a>\n",
                      "examples": [
                        "1528749846"
                      ],
                      "contentMediaType": "text/plain"
                    },
                    "example": "1528749846"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/us_verifications"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/BulkUsVerifications0Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "invalid",
                            "message": "primary_line is required or address is required",
                            "status_code": 422
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "invalid",
                    "message": "primary_line is required or address is required",
                    "status_code": 422
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/us_verifications": {
      "post": {
        "tags": [
          "US Verifications"
        ],
        "summary": "us_verification",
        "description": "Verify a US or US territory address _with a live API key_. The address can be in components (e.g. `primary_line` is \"210 King Street\", `zip_code` is \"94107\") or as a single string (e.g. \"210 King Street 94107\"), but not as both. Requests using a test API key validate required fields but return empty values unless specific `primary_line` values are provided. See the [US Verifications Test Environment](#section/US-Verifications-Test-Env) for details.",
        "operationId": "us_verification",
        "parameters": [
          {
            "name": "case",
            "in": "query",
            "description": "Casing of the verified address. Possible values are `upper` and `proper` for uppercased (e.g. \"PO BOX\") and proper-cased (e.g. \"PO Box\"), respectively. Only affects `recipient`, `primary_line`, `secondary_line`, `urbanization`, and `last_line`. Default casing is `upper`.",
            "style": "form",
            "explode": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/case2"
                },
                {
                  "description": "Casing of the verified address. Possible values are `upper` and `proper` for uppercased (e.g. \"PO BOX\") and proper-cased (e.g. \"PO Box\"), respectively. Only affects `recipient`, `primary_line`, `secondary_line`, `urbanization`, and `last_line`. Default casing is `upper`."
                }
              ]
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "examples": [
                  "{\"primary_line\":\"210 King Street\",\"city\":\"San Francisco\",\"state\":\"CA\",\"zip_code\":\"94107\"}",
                  "{\"recipient\":\"Walgreens\",\"primary_line\":\"Ave Wilson Churchill 123\",\"secondary_line\":\"\",\"urbanization\":\"URB FAIR OAKS\",\"city\":\"RIO PIEDRAS\",\"state\":\"PR\",\"zip_code\":\"00926\"}",
                  "{\"address\":\"210 King Street 94107\"}"
                ],
                "contentMediaType": "application/json"
              },
              "examples": {
                "basic": {
                  "value": {
                    "primary_line": "210 King Street",
                    "city": "San Francisco",
                    "state": "CA",
                    "zip_code": "94107"
                  }
                },
                "full_payload": {
                  "value": {
                    "recipient": "Walgreens",
                    "primary_line": "Ave Wilson Churchill 123",
                    "secondary_line": "",
                    "urbanization": "URB FAIR OAKS",
                    "city": "RIO PIEDRAS",
                    "state": "PR",
                    "zip_code": "00926"
                  }
                },
                "single_line": {
                  "value": {
                    "address": "210 King Street 94107"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns a US verification object.",
            "headers": {
              "ratelimit-limit": {
                "description": "The rate limit for a given endpoint.",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "The rate limit for a given endpoint.",
                      "examples": [
                        "150"
                      ],
                      "contentMediaType": "text/plain"
                    },
                    "example": "150"
                  }
                }
              },
              "ratelimit-remaining": {
                "description": "The number of requests remaining in the current window.",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "The number of requests remaining in the current window.",
                      "examples": [
                        "100"
                      ],
                      "contentMediaType": "text/plain"
                    },
                    "example": "100"
                  }
                }
              },
              "ratelimit-reset": {
                "description": "The time at which the rate limit window resets in  <a href=\"https://en.wikipedia.org/wiki/Unix_time\" target=\"_blank\">UTC epoch seconds</a>\n",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "The time at which the rate limit window resets in  <a href=\"https://en.wikipedia.org/wiki/Unix_time\" target=\"_blank\">UTC epoch seconds</a>\n",
                      "examples": [
                        "1528749846"
                      ],
                      "contentMediaType": "text/plain"
                    },
                    "example": "1528749846"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/us_verification"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/UsVerifications0Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "invalid",
                            "message": "primary_line is required or address is required",
                            "status_code": 422
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "invalid",
                    "message": "primary_line is required or address is required",
                    "status_code": 422
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/us_zip_lookups": {
      "post": {
        "tags": [
          "Zip Lookups"
        ],
        "summary": "zip_lookup",
        "description": "Returns information about a ZIP code",
        "operationId": "zip_lookup",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Content-Type"
                },
                {}
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "zip_code"
                ],
                "type": "object",
                "properties": {
                  "zip_code": {
                    "pattern": "^\\d{5}$",
                    "type": "string",
                    "description": "A 5-digit ZIP code.",
                    "examples": [
                      "94107"
                    ]
                  }
                },
                "contentMediaType": "application/x-www-form-urlencoded"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Returns a zip lookup object if a valid zip was provided.",
            "headers": {
              "ratelimit-limit": {
                "description": "The rate limit for a given endpoint.",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "The rate limit for a given endpoint.",
                      "examples": [
                        "150"
                      ],
                      "contentMediaType": "text/plain"
                    },
                    "example": "150"
                  }
                }
              },
              "ratelimit-remaining": {
                "description": "The number of requests remaining in the current window.",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "The number of requests remaining in the current window.",
                      "examples": [
                        "100"
                      ],
                      "contentMediaType": "text/plain"
                    },
                    "example": "100"
                  }
                }
              },
              "ratelimit-reset": {
                "description": "The time at which the rate limit window resets in  <a href=\"https://en.wikipedia.org/wiki/Unix_time\" target=\"_blank\">UTC epoch seconds</a>\n",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "The time at which the rate limit window resets in  <a href=\"https://en.wikipedia.org/wiki/Unix_time\" target=\"_blank\">UTC epoch seconds</a>\n",
                      "examples": [
                        "1528749846"
                      ],
                      "contentMediaType": "text/plain"
                    },
                    "example": "1528749846"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/zip"
                    },
                    {
                      "examples": [
                        {
                          "id": "us_zip_c7cb63d68f8d6",
                          "cities": [
                            {
                              "city": "SAN FRANCISCO",
                              "state": "CA",
                              "county": "SAN FRANCISCO",
                              "county_fips": "06075",
                              "preferred": true
                            }
                          ],
                          "zip_code_type": "standard",
                          "object": "us_zip_lookup",
                          "zip_code": "94107"
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "id": "us_zip_c7cb63d68f8d6",
                  "cities": [
                    {
                      "city": "SAN FRANCISCO",
                      "state": "CA",
                      "county": "SAN FRANCISCO",
                      "county_fips": "06075",
                      "preferred": true
                    }
                  ],
                  "zip_code_type": "standard",
                  "object": "us_zip_lookup",
                  "zip_code": "94107"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/UsZipLookups0Error1"
                    },
                    {
                      "examples": [
                        {
                          "error": {
                            "code": "invalid",
                            "message": "zip_code is required",
                            "status_code": 422
                          }
                        }
                      ]
                    }
                  ],
                  "contentMediaType": "application/json"
                },
                "example": {
                  "error": {
                    "code": "invalid",
                    "message": "zip_code is required",
                    "status_code": 422
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    }
  },
  "components": {
    "schemas": {
      "failure_status_code": {
        "title": "failure_status_code",
        "enum": [
          401,
          403,
          404,
          413,
          422,
          429,
          500
        ],
        "type": "integer",
        "description": "A conventional HTTP status code:\n  * `401` - Authorization error with your API key or account\n  * `403` - Forbidden error with your API key or account\n  * `404` - The requested item does not exist\n  * `413` - Payload too large\n  * `422` - The query or body parameters did not pass validation\n  * `429` - Too many requests have been sent with an API key in a given amount of time\n  * `500` - An internal server error occurred, please contact support@lob.com"
      },
      "error": {
        "title": "error",
        "required": [
          "error"
        ],
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {}
            ]
          }
        },
        "description": "Lob uses RESTful HTTP response codes to indicate success or failure of an API request. In general, 2xx indicates success, 4xx indicate an input error, and 5xx indicates an error on Lob's end."
      },
      "list": {
        "title": "list",
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "description": "Value is resource type."
          },
          "next_url": {
            "type": [
              "string",
              "null"
            ],
            "description": "Url of next page of items in list."
          },
          "previous_url": {
            "type": [
              "string",
              "null"
            ],
            "description": "Url of previous page of items in list."
          },
          "count": {
            "type": "integer",
            "description": "number of resources in a set",
            "contentEncoding": "int32"
          },
          "total_count": {
            "type": "integer",
            "description": "Indicates the total number of records. Provided when the request specifies an \"include\" query parameter",
            "contentEncoding": "int32"
          }
        },
        "description": "Multiple items returned in order"
      },
      "lob_base": {
        "title": "lob_base",
        "required": [
          "date_created",
          "date_modified",
          "object"
        ],
        "type": "object",
        "properties": {
          "date_created": {
            "type": "string",
            "description": "A timestamp in ISO 8601 format of the date the resource was created.",
            "contentEncoding": "date-time"
          },
          "date_modified": {
            "type": "string",
            "description": "A timestamp in ISO 8601 format of the date the resource was last modified.",
            "contentEncoding": "date-time"
          },
          "deleted": {
            "type": "boolean",
            "description": "Only returned if the resource has been successfully deleted."
          },
          "object": {
            "type": "string",
            "description": "Value is resource type."
          }
        }
      },
      "address_us": {
        "title": "address_us",
        "required": [
          "date_created",
          "date_modified",
          "object",
          "id",
          "name",
          "company",
          "address_line1",
          "address_city",
          "address_state",
          "address_zip"
        ],
        "type": "object",
        "properties": {
          "date_created": {
            "type": "string",
            "description": "A timestamp in ISO 8601 format of the date the resource was created.",
            "contentEncoding": "date-time"
          },
          "date_modified": {
            "type": "string",
            "description": "A timestamp in ISO 8601 format of the date the resource was last modified.",
            "contentEncoding": "date-time"
          },
          "deleted": {
            "type": "boolean",
            "description": "Only returned if the resource has been successfully deleted."
          },
          "object": {
            "const": "address",
            "type": "string",
            "description": "Value is resource type."
          },
          "id": {
            "pattern": "^adr_[a-zA-Z0-9]+$",
            "type": "string",
            "description": "Unique identifier prefixed with `adr_`."
          },
          "description": {
            "maxLength": 255,
            "type": [
              "string",
              "null"
            ],
            "description": "An internal description that identifies this resource. Must be no longer than 255 characters."
          },
          "name": {
            "maxLength": 40,
            "type": [
              "string",
              "null"
            ],
            "description": "Either `name` or `company` is required, you may also add both. Must be no longer than 40 characters. If both `name` and `company` are provided, they will be printed on two separate lines above the rest of the address."
          },
          "company": {
            "maxLength": 40,
            "type": [
              "string",
              "null"
            ],
            "description": "Either `name` or `company` is required, you may also add both. Must be no longer than 40 characters. If both `name` and `company` are provided, they will be printed on two separate lines above the rest of the address. This field can be used for any secondary recipient information which is not part of the actual mailing address (Company Name, Department, Attention Line, etc)."
          },
          "phone": {
            "maxLength": 40,
            "type": [
              "string",
              "null"
            ],
            "description": "Must be no longer than 40 characters."
          },
          "email": {
            "maxLength": 100,
            "type": [
              "string",
              "null"
            ],
            "description": "Must be no longer than 100 characters."
          },
          "address_line1": {
            "maxLength": 64,
            "type": "string",
            "description": "The primary number, street name, and directional information."
          },
          "address_line2": {
            "maxLength": 64,
            "type": [
              "string",
              "null"
            ],
            "description": "An optional field containing any information which can't fit into line 1."
          },
          "address_city": {
            "maxLength": 200,
            "type": "string"
          },
          "address_state": {
            "pattern": "^[a-zA-Z]{2}$",
            "type": "string",
            "description": "2 letter state short-name code"
          },
          "address_zip": {
            "pattern": "^\\d{5}(-\\d{4})?$",
            "type": "string",
            "description": "Must follow the ZIP format of `12345` or ZIP+4 format of `12345-1234`."
          },
          "address_country": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AddressCountry"
              },
              {
                "maxLength": 13,
                "minLength": 13
              }
            ]
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Use metadata to store custom information for tagging and labeling back to your internal systems. Must be an object with up to 20 key-value pairs. Keys must be at most 40 characters and values must be at most 500 characters. Neither can contain the characters `\"` and `\\`. i.e. '{\"customer_id\" : \"NEWYORK2015\"}' Nested objects are not supported.  See [Metadata](#section/Metadata) for more information."
          },
          "recipient_moved": {
            "type": [
              "boolean",
              "null"
            ],
            "description": "Only returned for accounts on certain <a href=\"https://dashboard.lob.com/#/settings/editions\" target=\"_blank\">Print &amp; Mail Editions</a>. Value is `true` if the address was altered because the recipient filed for a <a href=\"#tag/National-Change-of-Address\">National Change of Address Linkage (NCOALink)</a>, `false` if the NCOALink check was run but no altered address was found, and `null` if the NCOALink check was not run. The NCOALink check does not happen for non-US addresses, for non-deliverable US addresses, or for addresses created before the NCOALink feature was added to your account."
          }
        }
      },
      "address_intl": {
        "title": "address_intl",
        "required": [
          "date_created",
          "date_modified",
          "object",
          "id",
          "name",
          "company",
          "address_line1",
          "address_country"
        ],
        "type": "object",
        "properties": {
          "date_created": {
            "type": "string",
            "description": "A timestamp in ISO 8601 format of the date the resource was created.",
            "contentEncoding": "date-time"
          },
          "date_modified": {
            "type": "string",
            "description": "A timestamp in ISO 8601 format of the date the resource was last modified.",
            "contentEncoding": "date-time"
          },
          "deleted": {
            "type": "boolean",
            "description": "Only returned if the resource has been successfully deleted."
          },
          "object": {
            "const": "address",
            "type": "string",
            "description": "Value is resource type."
          },
          "id": {
            "pattern": "^adr_[a-zA-Z0-9]+$",
            "type": "string",
            "description": "Unique identifier prefixed with `adr_`."
          },
          "description": {
            "maxLength": 255,
            "type": [
              "string",
              "null"
            ],
            "description": "An internal description that identifies this resource. Must be no longer than 255 characters."
          },
          "name": {
            "maxLength": 40,
            "type": [
              "string",
              "null"
            ],
            "description": "Either `name` or `company` is required, you may also add both. Must be no longer than 40 characters. If both `name` and `company` are provided, they will be printed on two separate lines above the rest of the address."
          },
          "company": {
            "maxLength": 40,
            "type": [
              "string",
              "null"
            ],
            "description": "Either `name` or `company` is required, you may also add both. Must be no longer than 40 characters. If both `name` and `company` are provided, they will be printed on two separate lines above the rest of the address. This field can be used for any secondary recipient information which is not part of the actual mailing address (Company Name, Department, Attention Line, etc)."
          },
          "phone": {
            "maxLength": 40,
            "type": [
              "string",
              "null"
            ],
            "description": "Must be no longer than 40 characters."
          },
          "email": {
            "maxLength": 100,
            "type": [
              "string",
              "null"
            ],
            "description": "Must be no longer than 100 characters."
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Use metadata to store custom information for tagging and labeling back to your internal systems. Must be an object with up to 20 key-value pairs. Keys must be at most 40 characters and values must be at most 500 characters. Neither can contain the characters `\"` and `\\`. i.e. '{\"customer_id\" : \"NEWYORK2015\"}' Nested objects are not supported.  See [Metadata](#section/Metadata) for more information."
          },
          "address_line1": {
            "maxLength": 200,
            "type": "string"
          },
          "address_line2": {
            "maxLength": 200,
            "type": [
              "string",
              "null"
            ]
          },
          "address_city": {
            "maxLength": 200,
            "type": [
              "string",
              "null"
            ]
          },
          "address_state": {
            "maxLength": 200,
            "type": [
              "string",
              "null"
            ],
            "description": "Will be returned as a full string"
          },
          "address_zip": {
            "maxLength": 40,
            "type": [
              "string",
              "null"
            ],
            "description": "Optional postal code."
          },
          "address_country": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AddressCountry1"
              },
              {
                "maxLength": 200
              }
            ]
          }
        }
      },
      "address_fields_us": {
        "title": "address_fields_us",
        "required": [
          "address_line1",
          "address_city",
          "address_state",
          "address_zip"
        ],
        "type": "object",
        "properties": {
          "address_line1": {
            "maxLength": 64,
            "type": "string",
            "description": "The primary number, street name, and directional information."
          },
          "address_line2": {
            "maxLength": 64,
            "type": [
              "string",
              "null"
            ],
            "description": "An optional field containing any information which can't fit into line 1."
          },
          "address_city": {
            "maxLength": 200,
            "type": "string"
          },
          "address_state": {
            "pattern": "^[a-zA-Z]{2}$",
            "type": "string",
            "description": "2 letter state short-name code"
          },
          "address_zip": {
            "pattern": "^\\d{5}(-\\d{4})?$",
            "type": "string",
            "description": "Must follow the ZIP format of `12345` or ZIP+4 format of `12345-1234`."
          }
        }
      },
      "address_editable_us": {
        "title": "address_editable_us",
        "required": [
          "address_line1",
          "address_city",
          "address_state",
          "address_zip",
          "name",
          "company"
        ],
        "type": "object",
        "properties": {
          "address_line1": {
            "maxLength": 64,
            "type": "string",
            "description": "The primary number, street name, and directional information."
          },
          "address_line2": {
            "maxLength": 64,
            "type": [
              "string",
              "null"
            ],
            "description": "An optional field containing any information which can't fit into line 1."
          },
          "address_city": {
            "maxLength": 200,
            "type": "string"
          },
          "address_state": {
            "pattern": "^[a-zA-Z]{2}$",
            "type": "string",
            "description": "2 letter state short-name code"
          },
          "address_zip": {
            "pattern": "^\\d{5}(-\\d{4})?$",
            "type": "string",
            "description": "Must follow the ZIP format of `12345` or ZIP+4 format of `12345-1234`."
          },
          "description": {
            "maxLength": 255,
            "type": [
              "string",
              "null"
            ],
            "description": "An internal description that identifies this resource. Must be no longer than 255 characters."
          },
          "name": {
            "maxLength": 40,
            "type": [
              "string",
              "null"
            ],
            "description": "Either `name` or `company` is required, you may also add both. Must be no longer than 40 characters. If both `name` and `company` are provided, they will be printed on two separate lines above the rest of the address."
          },
          "company": {
            "maxLength": 40,
            "type": [
              "string",
              "null"
            ],
            "description": "Either `name` or `company` is required, you may also add both. Must be no longer than 40 characters. If both `name` and `company` are provided, they will be printed on two separate lines above the rest of the address. This field can be used for any secondary recipient information which is not part of the actual mailing address (Company Name, Department, Attention Line, etc)."
          },
          "phone": {
            "maxLength": 40,
            "type": [
              "string",
              "null"
            ],
            "description": "Must be no longer than 40 characters."
          },
          "email": {
            "maxLength": 100,
            "type": [
              "string",
              "null"
            ],
            "description": "Must be no longer than 100 characters."
          },
          "address_country": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AddressCountry2"
              },
              {}
            ]
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Use metadata to store custom information for tagging and labeling back to your internal systems. Must be an object with up to 20 key-value pairs. Keys must be at most 40 characters and values must be at most 500 characters. Neither can contain the characters `\"` and `\\`. i.e. '{\"customer_id\" : \"NEWYORK2015\"}' Nested objects are not supported.  See [Metadata](#section/Metadata) for more information."
          }
        }
      },
      "address_fields_intl": {
        "title": "address_fields_intl",
        "required": [
          "address_line1"
        ],
        "type": "object",
        "properties": {
          "address_line1": {
            "maxLength": 200,
            "type": "string",
            "description": "The primary number, street name, and directional information."
          },
          "address_line2": {
            "maxLength": 200,
            "type": [
              "string",
              "null"
            ],
            "description": "An optional field containing any information which can't fit into line 1."
          },
          "address_city": {
            "maxLength": 200,
            "type": [
              "string",
              "null"
            ]
          },
          "address_state": {
            "maxLength": 200,
            "type": [
              "string",
              "null"
            ]
          },
          "address_zip": {
            "maxLength": 40,
            "type": [
              "string",
              "null"
            ],
            "description": "Optional postal code."
          }
        }
      },
      "country_extended": {
        "title": "country_extended",
        "enum": [
          "AD",
          "AE",
          "AF",
          "AG",
          "AI",
          "AL",
          "AN",
          "AO",
          "AQ",
          "AR",
          "AT",
          "AU",
          "AW",
          "AZ",
          "BA",
          "BB",
          "BD",
          "BE",
          "BF",
          "BG",
          "BH",
          "BI",
          "BJ",
          "BM",
          "BN",
          "BO",
          "BQ",
          "BR",
          "BS",
          "BT",
          "BW",
          "BY",
          "BZ",
          "CA",
          "CD",
          "CG",
          "CH",
          "CI",
          "CK",
          "CL",
          "CM",
          "CN",
          "CO",
          "CR",
          "CS",
          "CU",
          "CV",
          "CW",
          "CY",
          "CZ",
          "DE",
          "DJ",
          "DK",
          "DM",
          "DO",
          "DZ",
          "EC",
          "EE",
          "EG",
          "EH",
          "ER",
          "ES",
          "ET",
          "FI",
          "FJ",
          "FK",
          "FO",
          "FR",
          "GA",
          "GB",
          "GD",
          "GE",
          "GH",
          "GI",
          "GL",
          "GM",
          "GN",
          "GQ",
          "GR",
          "GS",
          "GT",
          "GW",
          "GY",
          "HK",
          "HN",
          "HR",
          "HT",
          "HU",
          "ID",
          "IE",
          "IL",
          "IN",
          "IO",
          "IQ",
          "IR",
          "IS",
          "IT",
          "JM",
          "JO",
          "JP",
          "KE",
          "KG",
          "KH",
          "KI",
          "KM",
          "KN",
          "KP",
          "KR",
          "KW",
          "KY",
          "KZ",
          "LA",
          "LB",
          "LC",
          "LI",
          "LK",
          "LR",
          "LS",
          "LT",
          "LU",
          "LV",
          "LY",
          "MA",
          "MC",
          "MD",
          "ME",
          "MG",
          "MK",
          "ML",
          "MM",
          "MN",
          "MO",
          "MR",
          "MS",
          "MT",
          "MU",
          "MV",
          "MW",
          "MX",
          "MY",
          "MZ",
          "NA",
          "NE",
          "NF",
          "NG",
          "NI",
          "NL",
          "NO",
          "NP",
          "NR",
          "NU",
          "NZ",
          "OM",
          "PA",
          "PE",
          "PG",
          "PH",
          "PK",
          "PL",
          "PN",
          "PT",
          "PY",
          "QA",
          "RO",
          "RS",
          "RU",
          "RW",
          "SA",
          "SB",
          "SC",
          "SD",
          "SE",
          "SG",
          "SH",
          "SI",
          "SK",
          "SL",
          "SM",
          "SN",
          "SO",
          "SR",
          "SS",
          "ST",
          "SV",
          "SX",
          "SY",
          "SZ",
          "TC",
          "TD",
          "TG",
          "TH",
          "TJ",
          "TK",
          "TL",
          "TM",
          "TN",
          "TO",
          "TR",
          "TT",
          "TV",
          "TW",
          "TZ",
          "UA",
          "UG",
          "UY",
          "UZ",
          "VA",
          "VC",
          "VE",
          "VG",
          "VN",
          "VU",
          "WS",
          "YE",
          "ZA",
          "ZM",
          "ZW"
        ],
        "type": "string",
        "description": "Must be a 2 letter country short-name code (ISO 3166). Does not accept `US`, `AS`, `PR`, `FM`, `GU`, `MH`, `MP`, `PW`, or `VI`. For these addresses, please use the US verification API. Also does not accept `PS`, which is not currently supported."
      },
      "address_editable_intl": {
        "title": "address_editable_intl",
        "required": [
          "address_line1",
          "name",
          "company",
          "address_country"
        ],
        "type": "object",
        "properties": {
          "address_line1": {
            "maxLength": 200,
            "type": "string",
            "description": "The primary number, street name, and directional information."
          },
          "address_line2": {
            "maxLength": 200,
            "type": [
              "string",
              "null"
            ],
            "description": "An optional field containing any information which can't fit into line 1."
          },
          "address_city": {
            "maxLength": 200,
            "type": [
              "string",
              "null"
            ]
          },
          "address_state": {
            "maxLength": 200,
            "type": [
              "string",
              "null"
            ]
          },
          "address_zip": {
            "maxLength": 40,
            "type": [
              "string",
              "null"
            ],
            "description": "Optional postal code."
          },
          "description": {
            "maxLength": 255,
            "type": [
              "string",
              "null"
            ],
            "description": "An internal description that identifies this resource. Must be no longer than 255 characters."
          },
          "name": {
            "maxLength": 40,
            "type": [
              "string",
              "null"
            ],
            "description": "Either `name` or `company` is required, you may also add both. Must be no longer than 40 characters. If both `name` and `company` are provided, they will be printed on two separate lines above the rest of the address."
          },
          "company": {
            "maxLength": 40,
            "type": [
              "string",
              "null"
            ],
            "description": "Either `name` or `company` is required, you may also add both. Must be no longer than 40 characters. If both `name` and `company` are provided, they will be printed on two separate lines above the rest of the address. This field can be used for any secondary recipient information which is not part of the actual mailing address (Company Name, Department, Attention Line, etc)."
          },
          "phone": {
            "maxLength": 40,
            "type": [
              "string",
              "null"
            ],
            "description": "Must be no longer than 40 characters."
          },
          "email": {
            "maxLength": 100,
            "type": [
              "string",
              "null"
            ],
            "description": "Must be no longer than 100 characters."
          },
          "address_country": {
            "allOf": [
              {
                "$ref": "#/components/schemas/country_extended"
              },
              {}
            ]
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Use metadata to store custom information for tagging and labeling back to your internal systems. Must be an object with up to 20 key-value pairs. Keys must be at most 40 characters and values must be at most 500 characters. Neither can contain the characters `\"` and `\\`. i.e. '{\"customer_id\" : \"NEWYORK2015\"}' Nested objects are not supported.  See [Metadata](#section/Metadata) for more information."
          }
        }
      },
      "address_deletion": {
        "title": "address_deletion",
        "type": "object",
        "properties": {
          "id": {
            "pattern": "^adr_[a-zA-Z0-9]+$",
            "type": "string",
            "description": "Unique identifier prefixed with `adr_`."
          },
          "deleted": {
            "type": "boolean",
            "description": "Only returned if the resource has been successfully deleted."
          }
        },
        "description": "Lob uses RESTful HTTP response codes to indicate success or failure of an API request. In general, 2xx indicates success, 4xx indicate an input error, and 5xx indicates an error on Lob's end."
      },
      "bank_account_verify": {
        "title": "bank_account_verify",
        "required": [
          "amounts"
        ],
        "type": "object",
        "properties": {
          "amounts": {
            "maxItems": 2,
            "minItems": 2,
            "type": "array",
            "items": {
              "maximum": 100.0,
              "minimum": 1.0,
              "type": "integer",
              "contentEncoding": "int32"
            },
            "description": "In live mode, an array containing the two micro deposits (in cents) placed in the bank account. In test mode, no micro deposits will be placed, so any two integers between `1` and `100` will work."
          }
        }
      },
      "bank_account_base": {
        "title": "bank_account_base",
        "required": [
          "routing_number",
          "account_number",
          "account_type",
          "signatory"
        ],
        "type": "object",
        "properties": {
          "description": {
            "maxLength": 255,
            "type": [
              "string",
              "null"
            ],
            "description": "An internal description that identifies this resource. Must be no longer than 255 characters."
          },
          "routing_number": {
            "maxLength": 9,
            "minLength": 9,
            "type": "string",
            "description": "Must be a <a href=\"https://www.frbservices.org/index.html\" target=\"_blank\">valid US routing number</a>."
          },
          "account_number": {
            "maxLength": 17,
            "type": "string"
          },
          "account_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AccountType"
              },
              {}
            ]
          },
          "signatory": {
            "maxLength": 30,
            "type": "string",
            "description": "The signatory associated with your account. This name will be printed on checks created with this bank account. If you prefer to use a custom signature image on your checks instead, please create your bank account from the <a href=\"https://dashboard.lob.com/#/login\" target=\"_blank\">Dashboard</a>."
          },
          "check_template": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CheckTemplate"
              },
              {}
            ]
          },
          "fractional_routing_number": {
            "type": "string",
            "description": "The fractional routing number for your home bank account. Required for the `jpm` check template only. Please contact a bank representative if you do not know the fractional routing number associated with your home bank institution."
          },
          "city": {
            "type": "string",
            "description": "The city associated with your home bank account. Required for the `jpm` check template only. Please contact a bank representative if you do not know the city associated with your home bank institution."
          },
          "state": {
            "type": "string",
            "description": "The state associated with your home bank account. Required for the `jpm` check template only. Please contact a bank representative if you do not know the state associated with your home bank institution."
          },
          "zipcode": {
            "type": "string",
            "description": "The zipcode associated with your home bank account. Required for the `jpm` check template only. Please contact a bank representative if you do not know the zipcode associated with your home bank institution."
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Use metadata to store custom information for tagging and labeling back to your internal systems. Must be an object with up to 20 key-value pairs. Keys must be at most 40 characters and values must be at most 500 characters. Neither can contain the characters `\"` and `\\`. i.e. '{\"customer_id\" : \"NEWYORK2015\"}' Nested objects are not supported.  See [Metadata](#section/Metadata) for more information."
          }
        }
      },
      "bank_account": {
        "title": "bank_account",
        "required": [
          "routing_number",
          "account_number",
          "account_type",
          "signatory",
          "date_created",
          "date_modified",
          "object",
          "id"
        ],
        "type": "object",
        "properties": {
          "description": {
            "maxLength": 255,
            "type": [
              "string",
              "null"
            ],
            "description": "An internal description that identifies this resource. Must be no longer than 255 characters."
          },
          "routing_number": {
            "maxLength": 9,
            "minLength": 9,
            "type": "string",
            "description": "Must be a <a href=\"https://www.frbservices.org/index.html\" target=\"_blank\">valid US routing number</a>."
          },
          "account_number": {
            "maxLength": 17,
            "type": "string"
          },
          "account_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AccountType"
              },
              {}
            ]
          },
          "signatory": {
            "maxLength": 30,
            "type": "string",
            "description": "The signatory associated with your account. This name will be printed on checks created with this bank account. If you prefer to use a custom signature image on your checks instead, please create your bank account from the <a href=\"https://dashboard.lob.com/#/login\" target=\"_blank\">Dashboard</a>."
          },
          "check_template": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CheckTemplate"
              },
              {}
            ]
          },
          "fractional_routing_number": {
            "type": "string",
            "description": "The fractional routing number for your home bank account. Required for the `jpm` check template only. Please contact a bank representative if you do not know the fractional routing number associated with your home bank institution."
          },
          "city": {
            "type": "string",
            "description": "The city associated with your home bank account. Required for the `jpm` check template only. Please contact a bank representative if you do not know the city associated with your home bank institution."
          },
          "state": {
            "type": "string",
            "description": "The state associated with your home bank account. Required for the `jpm` check template only. Please contact a bank representative if you do not know the state associated with your home bank institution."
          },
          "zipcode": {
            "type": "string",
            "description": "The zipcode associated with your home bank account. Required for the `jpm` check template only. Please contact a bank representative if you do not know the zipcode associated with your home bank institution."
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Use metadata to store custom information for tagging and labeling back to your internal systems. Must be an object with up to 20 key-value pairs. Keys must be at most 40 characters and values must be at most 500 characters. Neither can contain the characters `\"` and `\\`. i.e. '{\"customer_id\" : \"NEWYORK2015\"}' Nested objects are not supported.  See [Metadata](#section/Metadata) for more information."
          },
          "date_created": {
            "type": "string",
            "description": "A timestamp in ISO 8601 format of the date the resource was created.",
            "contentEncoding": "date-time"
          },
          "date_modified": {
            "type": "string",
            "description": "A timestamp in ISO 8601 format of the date the resource was last modified.",
            "contentEncoding": "date-time"
          },
          "deleted": {
            "type": "boolean",
            "description": "Only returned if the resource has been successfully deleted."
          },
          "object": {
            "const": "bank_account",
            "type": "string",
            "description": "Value is resource type."
          },
          "id": {
            "pattern": "^bank_[a-zA-Z0-9]+$",
            "type": "string"
          },
          "signature_url": {
            "pattern": "^https://lob-assets\\.com/(letters|postcards|bank-accounts|checks|self-mailers|cards)/[a-z]{3,4}_[a-z0-9]{15,16}(\\.pdf|_thumb_[a-z]+_[0-9]+\\.png)\\?(version=[a-z0-9-]*&)?expires=[0-9]{10}&signature=[a-zA-Z0-9-_]+$",
            "type": [
              "string",
              "null"
            ]
          },
          "bank_name": {
            "type": "string",
            "description": "The name of the bank based on the provided routing number, e.g. `JPMORGAN CHASE BANK`."
          },
          "verified": {
            "type": "boolean",
            "description": "A bank account must be verified before a check can be created. More info [here](#operation/bank_account_verify).",
            "default": false
          }
        },
        "examples": [
          {
            "id": "bank_a",
            "signature_url": "https://lob-assets.com/bank-accounts/asd_asdfghjkqwertyui.pdf?expires=1234567890&signature=aksdf",
            "bank_name": "JPMORGAN CHASE BANK",
            "verified": true,
            "object": "bank_account",
            "description": "Test Bank Account",
            "routing_number": "322271627",
            "account_number": "123456789",
            "signatory": "Jane Doe",
            "account_type": "individual",
            "metadat": {
              "spiffy": "true"
            },
            "date_created": "2019-08-08T19:34:47.571Z",
            "date_modified": "2019-08-08T19:34:47.571Z"
          }
        ]
      },
      "bank_deletion": {
        "title": "bank_deletion",
        "type": "object",
        "properties": {
          "id": {
            "pattern": "^bank_[a-zA-Z0-9]+$",
            "type": "string"
          },
          "deleted": {
            "type": "boolean",
            "description": "Only returned if the resource has been successfully deleted."
          }
        },
        "description": "Lob uses RESTful HTTP response codes to indicate success or failure of an API request. In general, 2xx indicates success, 4xx indicate an input error, and 5xx indicates an error on Lob's end."
      },
      "billing_group_base": {
        "title": "billing_group_base",
        "type": "object",
        "properties": {
          "description": {
            "maxLength": 255,
            "type": "string",
            "description": "Description of the billing group."
          },
          "name": {
            "maxLength": 255,
            "type": "string",
            "description": "Name of the billing group."
          }
        }
      },
      "billing_group": {
        "title": "billing_group",
        "type": "object",
        "properties": {
          "description": {
            "maxLength": 255,
            "type": "string",
            "description": "Description of the billing group."
          },
          "name": {
            "maxLength": 255,
            "type": "string",
            "description": "Name of the billing group."
          },
          "id": {
            "pattern": "^bg_[a-zA-Z0-9]+$",
            "type": "string",
            "description": "Unique identifier prefixed with `bg_`."
          },
          "date_created": {
            "type": "string",
            "description": "A timestamp in ISO 8601 format of the date the resource was created.",
            "contentEncoding": "date-time"
          },
          "date_modified": {
            "type": "string",
            "description": "A timestamp in ISO 8601 format of the date the resource was last modified.",
            "contentEncoding": "date-time"
          },
          "object": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Object"
              },
              {}
            ]
          }
        }
      },
      "billing_group_editable": {
        "title": "billing_group_editable",
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "description": {
            "maxLength": 255,
            "type": "string",
            "description": "Description of the billing group."
          },
          "name": {
            "maxLength": 255,
            "type": "string",
            "description": "Name of the billing group."
          }
        }
      },
      "buckslip_base": {
        "title": "buckslip_base",
        "type": "object",
        "properties": {
          "description": {
            "maxLength": 255,
            "type": [
              "string",
              "null"
            ],
            "description": "Description of the buckslip."
          },
          "size": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Size"
              },
              {}
            ]
          }
        }
      },
      "thumbnail": {
        "title": "thumbnail",
        "type": "object",
        "properties": {
          "small": {
            "pattern": "^https://lob-assets\\.com/(letters|postcards|bank-accounts|checks|self-mailers|cards)/[a-z]{3,4}_[a-z0-9]{15,16}(\\.pdf|_thumb_[a-z]+_[0-9]+\\.png)\\?(version=[a-z0-9-]*&)?expires=[0-9]{10}&signature=[a-zA-Z0-9-_]+$",
            "type": "string",
            "description": "A [signed link](#section/Asset-URLs) served over HTTPS. The link returned will expire in 30 days to prevent mis-sharing. Each time a GET request is initiated, a new signed URL will be generated."
          },
          "medium": {
            "pattern": "^https://lob-assets\\.com/(letters|postcards|bank-accounts|checks|self-mailers|cards)/[a-z]{3,4}_[a-z0-9]{15,16}(\\.pdf|_thumb_[a-z]+_[0-9]+\\.png)\\?(version=[a-z0-9-]*&)?expires=[0-9]{10}&signature=[a-zA-Z0-9-_]+$",
            "type": "string",
            "description": "A [signed link](#section/Asset-URLs) served over HTTPS. The link returned will expire in 30 days to prevent mis-sharing. Each time a GET request is initiated, a new signed URL will be generated."
          },
          "large": {
            "pattern": "^https://lob-assets\\.com/(letters|postcards|bank-accounts|checks|self-mailers|cards)/[a-z]{3,4}_[a-z0-9]{15,16}(\\.pdf|_thumb_[a-z]+_[0-9]+\\.png)\\?(version=[a-z0-9-]*&)?expires=[0-9]{10}&signature=[a-zA-Z0-9-_]+$",
            "type": "string",
            "description": "A [signed link](#section/Asset-URLs) served over HTTPS. The link returned will expire in 30 days to prevent mis-sharing. Each time a GET request is initiated, a new signed URL will be generated."
          }
        }
      },
      "buckslip_order": {
        "title": "buckslip_order",
        "required": [
          "date_created",
          "date_modified",
          "object"
        ],
        "type": "object",
        "properties": {
          "date_created": {
            "type": "string",
            "description": "A timestamp in ISO 8601 format of the date the resource was created.",
            "contentEncoding": "date-time"
          },
          "date_modified": {
            "type": "string",
            "description": "A timestamp in ISO 8601 format of the date the resource was last modified.",
            "contentEncoding": "date-time"
          },
          "deleted": {
            "type": "boolean",
            "description": "Only returned if the resource has been successfully deleted."
          },
          "object": {
            "type": "string",
            "description": "Value is resource type."
          },
          "id": {
            "pattern": "^bo_[a-zA-Z0-9]+$",
            "type": "string",
            "description": "Unique identifier prefixed with `bo_`."
          },
          "buckslip_id": {
            "pattern": "^bck_[a-zA-Z0-9]+$",
            "type": "string",
            "description": "Unique identifier prefixed with `bck_`."
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Status"
              },
              {}
            ]
          },
          "quantity_ordered": {
            "type": "number",
            "description": "The quantity of buckslips ordered.",
            "default": 0
          },
          "unit_price": {
            "type": "number",
            "description": "The unit price for the buckslip order.",
            "default": 0
          },
          "inventory": {
            "type": "number",
            "description": "The inventory of the buckslip order.",
            "default": 0
          },
          "cancelled_reason": {
            "type": "string",
            "description": "The reason for cancellation."
          },
          "availability_date": {
            "type": "string",
            "description": "A timestamp in ISO 8601 format of the date the resource was created.",
            "contentEncoding": "date-time"
          },
          "expected_availability_date": {
            "type": "string",
            "description": "The fixed deadline for the buckslips to be printed.",
            "contentEncoding": "date-time"
          }
        }
      },
      "buckslip": {
        "title": "buckslip",
        "required": [
          "date_created",
          "date_modified",
          "object",
          "description",
          "id",
          "auto_reorder",
          "reorder_quantity",
          "threshold_amount",
          "url",
          "raw_url",
          "front_original_url",
          "back_original_url",
          "thumbnails",
          "available_quantity",
          "allocated_quantity",
          "onhand_quantity",
          "pending_quantity",
          "projected_quantity",
          "buckslip_orders",
          "stock",
          "weight",
          "finish",
          "status"
        ],
        "type": "object",
        "properties": {
          "date_created": {
            "type": "string",
            "description": "A timestamp in ISO 8601 format of the date the resource was created.",
            "contentEncoding": "date-time"
          },
          "date_modified": {
            "type": "string",
            "description": "A timestamp in ISO 8601 format of the date the resource was last modified.",
            "contentEncoding": "date-time"
          },
          "deleted": {
            "type": "boolean",
            "description": "Only returned if the resource has been successfully deleted."
          },
          "object": {
            "const": "buckslip",
            "type": "string",
            "description": "Value is resource type."
          },
          "description": {
            "maxLength": 255,
            "type": [
              "string",
              "null"
            ],
            "description": "Description of the buckslip."
          },
          "size": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Size"
              },
              {}
            ]
          },
          "id": {
            "pattern": "^bck_[a-zA-Z0-9]+$",
            "type": "string",
            "description": "Unique identifier prefixed with `bck_`."
          },
          "auto_reorder": {
            "type": "boolean",
            "description": "True if the buckslips should be auto-reordered."
          },
          "reorder_quantity": {
            "type": [
              "integer",
              "null"
            ],
            "description": "The number of buckslips to be reordered.",
            "contentEncoding": "int32"
          },
          "threshold_amount": {
            "type": "integer",
            "description": "The threshold amount of the buckslip",
            "contentEncoding": "int32"
          },
          "url": {
            "maxLength": 2083,
            "minLength": 1,
            "type": "string",
            "description": "The signed link for the buckslip."
          },
          "raw_url": {
            "maxLength": 2083,
            "minLength": 1,
            "type": "string",
            "description": "The raw URL of the buckslip."
          },
          "front_original_url": {
            "maxLength": 2083,
            "minLength": 1,
            "type": "string",
            "description": "The original URL of the front template."
          },
          "back_original_url": {
            "maxLength": 2083,
            "minLength": 1,
            "type": "string",
            "description": "The original URL of the back template."
          },
          "thumbnails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/thumbnail"
            },
            "description": ""
          },
          "available_quantity": {
            "type": "number",
            "description": "The available quantity of buckslips."
          },
          "allocated_quantity": {
            "type": "number",
            "description": "The allocated quantity of buckslips."
          },
          "onhand_quantity": {
            "type": "number",
            "description": "The onhand quantity of buckslips."
          },
          "pending_quantity": {
            "type": "number",
            "description": "The pending quantity of buckslips."
          },
          "projected_quantity": {
            "type": "number",
            "description": "The sum of pending and onhand quantities of buckslips."
          },
          "buckslip_orders": {
            "minItems": 0,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/buckslip_order"
            },
            "description": "An array of buckslip orders that are associated with the buckslip."
          },
          "stock": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Thestockofthebuckslip."
              },
              {}
            ]
          },
          "weight": {
            "const": "80#",
            "type": "string"
          },
          "finish": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Thefinishofthebuckslip."
              },
              {}
            ]
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Thestatusofthebuckslip."
              },
              {}
            ]
          }
        }
      },
      "buckslip_editable": {
        "title": "buckslip_editable",
        "required": [
          "front"
        ],
        "type": "object",
        "properties": {
          "description": {
            "maxLength": 255,
            "type": [
              "string",
              "null"
            ],
            "description": "Description of the buckslip."
          },
          "size": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Size"
              },
              {}
            ]
          },
          "front": {
            "oneOf": [
              {
                "pattern": "^https://[-a-zA-Z0-9@:%._+~#=/]{1,256}.(html?|pdf|png|jpg)$",
                "type": "string"
              },
              {
                "pattern": "^(?!https://)[a-zA-Z0-9@:%._+~#=/]{1,256}.(html?|pdf|png|jpg)$",
                "type": "string"
              }
            ],
            "description": "A PDF template for the front of the buckslip"
          },
          "back": {
            "oneOf": [
              {
                "pattern": "^https://[-a-zA-Z0-9@:%._+~#=/]{1,256}.(html?|pdf|png|jpg)$",
                "type": "string"
              },
              {
                "pattern": "^(?!https://)[a-zA-Z0-9@:%._+~#=/]{1,256}.(html?|pdf|png|jpg)$",
                "type": "string"
              }
            ],
            "description": "A PDF template for the back of the buckslip"
          }
        }
      },
      "buckslip_deletion": {
        "title": "buckslip_deletion",
        "type": "object",
        "properties": {
          "id": {
            "pattern": "^bck_[a-zA-Z0-9]+$",
            "type": "string",
            "description": "Unique identifier prefixed with `bck_`."
          },
          "deleted": {
            "type": "boolean",
            "description": "Only returned if the resource has been successfully deleted."
          }
        },
        "description": "Lob uses RESTful HTTP response codes to indicate success or failure of an API request. In general, 2xx indicates success, 4xx indicate an input error, and 5xx indicates an error on Lob's end."
      },
      "buckslip_updatable": {
        "title": "buckslip_updatable",
        "type": "object",
        "properties": {
          "description": {
            "maxLength": 255,
            "type": [
              "string",
              "null"
            ],
            "description": "Description of the buckslip."
          },
          "auto_reorder": {
            "type": "boolean",
            "description": "Allows for auto reordering"
          },
          "reorder_quantity": {
            "maximum": 10000000.0,
            "minimum": 5000.0,
            "type": "number",
            "description": "The quantity of items to be reordered (only required when auto_reorder is true)."
          }
        }
      },
      "buckslip_order_editable": {
        "title": "buckslip_order_editable",
        "required": [
          "quantity"
        ],
        "type": "object",
        "properties": {
          "quantity": {
            "maximum": 10000000.0,
            "minimum": 5000.0,
            "type": "integer",
            "description": "The quantity of buckslips in the order (minimum 5,000).",
            "contentEncoding": "int32"
          }
        }
      },
      "multiple_components": {
        "title": "multiple_components",
        "required": [
          "primary_line",
          "city",
          "state",
          "zip_code"
        ],
        "type": "object",
        "properties": {
          "recipient": {
            "maxLength": 500,
            "type": [
              "string",
              "null"
            ],
            "description": "The intended recipient, typically a person's or firm's name."
          },
          "primary_line": {
            "maxLength": 500,
            "type": "string",
            "description": "The primary delivery line (usually the street address) of the address.\nCombination of the following applicable `components`:\n* `primary_number`\n* `street_predirection`\n* `street_name`\n* `street_suffix`\n* `street_postdirection`\n* `secondary_designator`\n* `secondary_number`\n* `pmb_designator`\n* `pmb_number`"
          },
          "secondary_line": {
            "maxLength": 500,
            "type": "string",
            "description": "The secondary delivery line of the address. This field is typically empty but may contain information if `primary_line` is too long."
          },
          "urbanization": {
            "maxLength": 500,
            "type": "string",
            "description": "Only present for addresses in Puerto Rico. An urbanization refers to an area, sector, or development within a city. See <a href=\"https://pe.usps.com/text/pub28/28api_008.htm#:~:text=I51.,-4%20Urbanizations&text=In%20Puerto%20Rico%2C%20identical%20street,placed%20before%20the%20urbanization%20name.\" target=\"_blank\">USPS documentation</a> for clarification."
          },
          "city": {
            "maxLength": 200,
            "type": "string"
          },
          "state": {
            "maxLength": 50,
            "type": "string",
            "description": "The <a href=\"https://en.wikipedia.org/wiki/ISO_3166-2:US\" target=\"_blank\">ISO 3166-2</a> two letter code or subdivision name for the state. `city` and `state` are required if no `zip_code` is passed."
          },
          "zip_code": {
            "pattern": "^\\d{5}((-)?\\d{4})?$",
            "type": "string"
          }
        }
      },
      "multiple_components_list": {
        "title": "multiple_components_list",
        "required": [
          "addresses"
        ],
        "type": "object",
        "properties": {
          "addresses": {
            "maxItems": 20,
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/multiple_components"
            },
            "description": ""
          }
        }
      },
      "zip_code_type": {
        "title": "zip_code_type",
        "enum": [
          "standard",
          "po_box",
          "unique",
          "military"
        ],
        "type": "string",
        "description": "A description of the ZIP code type. For more detailed information about\neach ZIP code type, see [US Verification Details](#tag/US-Verification-Types)."
      },
      "us_components": {
        "title": "us_components",
        "required": [
          "primary_number",
          "street_predirection",
          "street_name",
          "street_suffix",
          "street_postdirection",
          "secondary_designator",
          "secondary_number",
          "pmb_designator",
          "pmb_number",
          "extra_secondary_designator",
          "extra_secondary_number",
          "city",
          "state",
          "zip_code",
          "zip_code_plus_4",
          "zip_code_type",
          "delivery_point_barcode",
          "address_type",
          "record_type",
          "default_building_address",
          "county",
          "county_fips",
          "carrier_route",
          "carrier_route_type"
        ],
        "type": "object",
        "properties": {
          "primary_number": {
            "type": "string",
            "description": "The numeric or alphanumeric part of an address preceding the street name. Often the house, building, or PO Box number."
          },
          "street_predirection": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StreetPredirection"
              },
              {}
            ]
          },
          "street_name": {
            "type": "string",
            "description": "The name of the street."
          },
          "street_suffix": {
            "type": "string",
            "description": "The standard USPS abbreviation for the street suffix (`ST`, `AVE`, `BLVD`, etc)."
          },
          "street_postdirection": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StreetPostdirection"
              },
              {}
            ]
          },
          "secondary_designator": {
            "type": "string",
            "description": "The standard USPS abbreviation describing the `components[secondary_number]` (`STE`, `APT`, `BLDG`, etc)."
          },
          "secondary_number": {
            "type": "string",
            "description": "Number of the apartment/unit/etc."
          },
          "pmb_designator": {
            "type": "string",
            "description": "Designator of a <a href=\"https://en.wikipedia.org/wiki/Commercial_mail_receiving_agency\" target=\"_blank\">CMRA-authorized</a> private mailbox."
          },
          "pmb_number": {
            "type": "string",
            "description": "Number of a <a href=\"https://en.wikipedia.org/wiki/Commercial_mail_receiving_agency\" target=\"_blank\">CMRA-authorized</a> private mailbox."
          },
          "extra_secondary_designator": {
            "type": "string",
            "description": "An extra (often unnecessary) secondary designator provided with the input address."
          },
          "extra_secondary_number": {
            "type": "string",
            "description": "An extra (often unnecessary) secondary number provided with the input address."
          },
          "city": {
            "maxLength": 200,
            "type": "string"
          },
          "state": {
            "maxLength": 2,
            "type": "string",
            "description": "The <a href=\"https://en.wikipedia.org/wiki/ISO_3166-2\" target=\"_blank\">ISO 3166-2</a> two letter code for the state."
          },
          "zip_code": {
            "pattern": "^\\d{5}$",
            "type": "string",
            "description": "The 5-digit ZIP code"
          },
          "zip_code_plus_4": {
            "pattern": "^\\d{4}$",
            "type": "string"
          },
          "zip_code_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/zip_code_type"
              },
              {}
            ]
          },
          "delivery_point_barcode": {
            "type": "string",
            "description": "A 12-digit identifier that uniquely identifies a delivery point (location where mail can be sent and received). It consists of the 5-digit ZIP code (`zip_code`), 4-digit ZIP+4 add-on (`zip_code_plus_4`), 2-digit delivery point, and 1-digit delivery point check digit."
          },
          "address_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AddressType"
              },
              {}
            ]
          },
          "record_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RecordType"
              },
              {}
            ]
          },
          "default_building_address": {
            "type": "boolean",
            "description": "Designates whether or not the address is the default address for a building containing multiple delivery points."
          },
          "county": {
            "type": "string",
            "description": "County name of the address city."
          },
          "county_fips": {
            "pattern": "\\d{5}",
            "type": "string",
            "description": "A 5-digit <a href=\"https://en.wikipedia.org/wiki/FIPS_county_code\" target=\"_blank\">FIPS county code</a> which uniquely identifies `components[county]`. It consists of a 2-digit state code and a 3-digit county code."
          },
          "carrier_route": {
            "type": "string",
            "description": "A 4-character code assigned to a mail delivery route within a ZIP code."
          },
          "carrier_route_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CarrierRouteType"
              },
              {}
            ]
          },
          "latitude": {
            "type": [
              "number",
              "null"
            ],
            "description": "A positive or negative decimal indicating the geographic latitude of the address, specifying the north-to-south position of a location. This should be used with `longitude` to pinpoint locations on a map. Will not be returned for undeliverable addresses or military addresses (state is `AA`, `AE`, or `AP`)."
          },
          "longitude": {
            "type": [
              "number",
              "null"
            ],
            "description": "A positive or negative decimal indicating the geographic longitude of the address, specifying the north-to-south position of a location. This should be used with `latitude` to pinpoint locations on a map. Will not be returned for undeliverable addresses or military addresses (state is `AA`, `AE`, or `AP`)."
          }
        },
        "description": "A nested object containing a breakdown of each component of an address."
      },
      "dpv_footnote": {
        "title": "dpv_footnote",
        "enum": [
          "AA",
          "A1",
          "BB",
          "CC",
          "N1",
          "F1",
          "G1",
          "U1",
          "M1",
          "M3",
          "P1",
          "P3",
          "R1",
          "R7",
          "RR"
        ],
        "type": "string",
        "examples": [
          "AA"
        ]
      },
      "deliverability_analysis": {
        "title": "deliverability_analysis",
        "required": [
          "dpv_confirmation",
          "dpv_cmra",
          "dpv_vacant",
          "dpv_active",
          "dpv_footnotes",
          "ews_match",
          "lacs_indicator",
          "lacs_return_code",
          "suite_return_code"
        ],
        "type": "object",
        "properties": {
          "dpv_confirmation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DpvConfirmation"
              },
              {}
            ]
          },
          "dpv_cmra": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DpvCmra"
              },
              {}
            ]
          },
          "dpv_vacant": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DpvVacant"
              },
              {}
            ]
          },
          "dpv_active": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DpvActive"
              },
              {}
            ]
          },
          "dpv_footnotes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/dpv_footnote"
            },
            "description": "An array of 2-character strings that gives more insight into how `deliverability_analysis[dpv_confirmation]` was determined. Will always include at least 1 string, and can include up to 3. For details, see [US Verification Details](#tag/US-Verification-Types).",
            "examples": [
              [
                "AA",
                "BB"
              ]
            ]
          },
          "ews_match": {
            "type": "boolean",
            "description": "Indicates whether or not an address has been flagged in the <a href=\"https://docs.informatica.com/data-engineering/data-engineering-quality/10-4-0/address-validator-port-reference/postal-carrier-certification-data-ports/early-warning-system-return-code.html\" target=\"_blank\">Early Warning System</a>, meaning the address is under development and not yet ready to receive mail. However, it should become available in a few months.",
            "examples": [
              false
            ]
          },
          "lacs_indicator": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LacsIndicator"
              },
              {}
            ]
          },
          "lacs_return_code": {
            "type": "string",
            "description": "A code indicating how `deliverability_analysis[lacs_indicator]` was determined.\nPossible values are:\n* `A` — A new address was produced because a match was found in LACS<sup>Link</sup>.\n* `92` — A LACS<sup>Link</sup> record was matched after dropping secondary information.\n* `14` — A match was found in LACS<sup>Link</sup>, but could not be converted to a deliverable address.\n* `00` — A match was not found in LACS<sup>Link</sup>, and no new address was produced.\n* `''` — LACS<sup>Link</sup> was not attempted."
          },
          "suite_return_code": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SuiteReturnCode"
              },
              {}
            ]
          }
        },
        "description": "A nested object containing a breakdown of the deliverability of an address."
      },
      "lob_confidence_score": {
        "title": "lob_confidence_score",
        "required": [
          "score",
          "level"
        ],
        "type": "object",
        "properties": {
          "score": {
            "maximum": 100.0,
            "minimum": 0.0,
            "type": [
              "number",
              "null"
            ],
            "description": "A numerical score between 0 and 100 that represents the percentage of mailpieces Lob has sent to this addresses that have been delivered successfully over the past 2 years. Will be `null` if no tracking data exists for this address."
          },
          "level": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Level"
              },
              {}
            ]
          }
        },
        "description": "Lob Confidence Score is a nested object that provides a numerical value between 0-100 of the likelihood that an address is deliverable based on Lob’s mail delivery data to over half of US households."
      },
      "us_verification": {
        "title": "us_verification",
        "type": "object",
        "properties": {
          "id": {
            "pattern": "^us_ver_[a-zA-Z0-9_]+$",
            "type": "string",
            "description": "Unique identifier prefixed with `us_ver_`."
          },
          "recipient": {
            "maxLength": 500,
            "type": [
              "string",
              "null"
            ],
            "description": "The intended recipient, typically a person's or firm's name."
          },
          "primary_line": {
            "maxLength": 500,
            "type": "string",
            "description": "The primary delivery line (usually the street address) of the address.\nCombination of the following applicable `components`:\n* `primary_number`\n* `street_predirection`\n* `street_name`\n* `street_suffix`\n* `street_postdirection`\n* `secondary_designator`\n* `secondary_number`\n* `pmb_designator`\n* `pmb_number`"
          },
          "secondary_line": {
            "maxLength": 500,
            "type": "string",
            "description": "The secondary delivery line of the address. This field is typically empty but may contain information if `primary_line` is too long."
          },
          "urbanization": {
            "maxLength": 500,
            "type": "string",
            "description": "Only present for addresses in Puerto Rico. An urbanization refers to an area, sector, or development within a city. See <a href=\"https://pe.usps.com/text/pub28/28api_008.htm#:~:text=I51.,-4%20Urbanizations&text=In%20Puerto%20Rico%2C%20identical%20street,placed%20before%20the%20urbanization%20name.\" target=\"_blank\">USPS documentation</a> for clarification."
          },
          "last_line": {
            "type": "string",
            "description": "Combination of the following applicable `components`:\n* City (`city`)\n* State (`state`)\n* ZIP code (`zip_code`)\n* ZIP+4 (`zip_code_plus_4`)"
          },
          "deliverability": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Deliverability"
              },
              {}
            ]
          },
          "valid_address": {
            "type": "boolean",
            "description": "This field indicates whether an address was found in a more comprehensive address dataset that includes sources from the USPS, open source mapping data, and our proprietary mail delivery data.\nThis field can be interpreted as a representation of whether an address is a real location or not. Additionally a valid address may contradict the deliverability field since an address can be a real valid location but the USPS may not deliver to that address."
          },
          "components": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Components4"
              },
              {}
            ]
          },
          "deliverability_analysis": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DeliverabilityAnalysis1"
              },
              {}
            ]
          },
          "lob_confidence_score": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LobConfidenceScore1"
              },
              {}
            ]
          },
          "object": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Object1"
              },
              {}
            ]
          }
        }
      },
      "us_verifications": {
        "title": "us_verifications",
        "required": [
          "addresses",
          "errors"
        ],
        "type": "object",
        "properties": {
          "addresses": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/us_verification"
                },
                {
                  "$ref": "#/components/schemas/error"
                }
              ]
            },
            "description": ""
          },
          "errors": {
            "type": "boolean",
            "description": "Indicates whether any errors occurred during the verification process."
          }
        }
      },
      "intl_verification_base": {
        "title": "intl_verification_base",
        "type": "object",
        "properties": {
          "recipient": {
            "maxLength": 500,
            "type": [
              "string",
              "null"
            ],
            "description": "The intended recipient, typically a person's or firm's name."
          },
          "primary_line": {
            "maxLength": 200,
            "type": "string",
            "description": "The primary delivery line (usually the street address) of the address."
          },
          "secondary_line": {
            "maxLength": 500,
            "type": "string",
            "description": "The secondary delivery line of the address. This field is typically empty but may contain information if `primary_line` is too long."
          }
        }
      },
      "multiple_components_intl": {
        "title": "multiple_components_intl",
        "required": [
          "primary_line",
          "country"
        ],
        "type": "object",
        "properties": {
          "recipient": {
            "maxLength": 500,
            "type": [
              "string",
              "null"
            ],
            "description": "The intended recipient, typically a person's or firm's name."
          },
          "primary_line": {
            "maxLength": 200,
            "type": "string",
            "description": "The primary delivery line (usually the street address) of the address."
          },
          "secondary_line": {
            "maxLength": 500,
            "type": "string",
            "description": "The secondary delivery line of the address. This field is typically empty but may contain information if `primary_line` is too long."
          },
          "city": {
            "maxLength": 200,
            "type": "string"
          },
          "state": {
            "type": "string",
            "description": "The name of the state."
          },
          "postal_code": {
            "maxLength": 12,
            "type": "string",
            "description": "The postal code."
          },
          "country": {
            "allOf": [
              {
                "$ref": "#/components/schemas/country_extended"
              },
              {}
            ]
          }
        }
      },
      "intl_verifications_payload": {
        "title": "intl_verifications_payload",
        "required": [
          "addresses"
        ],
        "type": "object",
        "properties": {
          "addresses": {
            "maxItems": 20,
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/multiple_components_intl"
            },
            "description": ""
          }
        }
      },
      "intl_components": {
        "title": "intl_components",
        "type": "object",
        "properties": {
          "primary_number": {
            "type": "string",
            "description": "The numeric or alphanumeric part of an address preceding the street name. Often the house, building, or PO Box number."
          },
          "street_name": {
            "type": "string",
            "description": "The name of the street."
          },
          "city": {
            "maxLength": 200,
            "type": "string"
          },
          "state": {
            "maxLength": 2,
            "type": "string",
            "description": "The <a href=\"https://en.wikipedia.org/wiki/ISO_3166-2\" target=\"_blank\">ISO 3166-2</a> two letter code for the state."
          },
          "postal_code": {
            "maxLength": 12,
            "type": "string",
            "description": "The postal code."
          }
        },
        "description": "A nested object containing a breakdown of each component of an address."
      },
      "intl_verification": {
        "title": "intl_verification",
        "type": "object",
        "properties": {
          "recipient": {
            "maxLength": 500,
            "type": [
              "string",
              "null"
            ],
            "description": "The intended recipient, typically a person's or firm's name."
          },
          "primary_line": {
            "maxLength": 200,
            "type": "string",
            "description": "The primary delivery line (usually the street address) of the address."
          },
          "secondary_line": {
            "maxLength": 500,
            "type": "string",
            "description": "The secondary delivery line of the address. This field is typically empty but may contain information if `primary_line` is too long."
          },
          "id": {
            "pattern": "^intl_ver_[a-zA-Z0-9]+$",
            "type": "string",
            "description": "Unique identifier prefixed with `intl_ver_`."
          },
          "last_line": {
            "type": "string",
            "description": "Combination of the following applicable `components`:\n* `city`\n* `state`\n* `zip_code`\n* `zip_code_plus_4`"
          },
          "country": {
            "type": "string",
            "description": "The country of the address. Will be returned as a 2 letter country short-name code (ISO 3166).",
            "examples": [
              "CA"
            ]
          },
          "coverage": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Coverage"
              },
              {}
            ]
          },
          "deliverability": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Deliverability1"
              },
              {}
            ]
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Status1"
              },
              {}
            ]
          },
          "components": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Components1"
              },
              {}
            ]
          },
          "object": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Object2"
              },
              {}
            ]
          }
        }
      },
      "intl_verifications": {
        "title": "intl_verifications",
        "required": [
          "addresses",
          "errors"
        ],
        "type": "object",
        "properties": {
          "addresses": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/intl_verification"
                },
                {
                  "$ref": "#/components/schemas/error"
                }
              ]
            },
            "description": ""
          },
          "errors": {
            "type": "boolean",
            "description": "Indicates whether any errors occurred during the verification process."
          }
        }
      },
      "cmp_schedule_type": {
        "title": "cmp_schedule_type",
        "const": "immediate",
        "type": "string",
        "description": "How the campaign should be scheduled. Only value available today is `immediate`."
      },
      "cmp_use_type": {
        "title": "cmp_use_type",
        "enum": [
          "marketing",
          "operational"
        ],
        "type": "string",
        "description": "The use type for each mailpiece. Can be one of marketing, operational, or null. Null use_type is only allowed if an account default use_type is selected in Account Settings. For more information on use_type, see our  [Help Center article](https://help.lob.com/print-and-mail/building-a-mail-strategy/managing-mail-settings/declaring-mail-use-type)."
      },
      "campaign_writable": {
        "title": "campaign_writable",
        "required": [
          "name",
          "schedule_type",
          "use_type"
        ],
        "type": "object",
        "properties": {
          "billing_group_id": {
            "pattern": "^bg_[a-zA-Z0-9]+$",
            "type": [
              "string",
              "null"
            ],
            "description": "Unique identifier prefixed with `bg_`."
          },
          "name": {
            "type": "string",
            "description": "Name of the campaign."
          },
          "description": {
            "maxLength": 255,
            "type": [
              "string",
              "null"
            ],
            "description": "An internal description that identifies this resource. Must be no longer than 255 characters."
          },
          "schedule_type": {
            "const": "immediate",
            "type": "string",
            "description": "How the campaign should be scheduled. Only value available today is `immediate`."
          },
          "target_delivery_date": {
            "type": [
              "string",
              "null"
            ],
            "description": "If `schedule_type` is `target_delivery_date`, provide a targeted delivery date for mail pieces in this campaign.",
            "contentEncoding": "date-time"
          },
          "send_date": {
            "type": [
              "string",
              "null"
            ],
            "description": "If `schedule_type` is `scheduled_send_date`, provide a date to send this campaign.",
            "contentEncoding": "date-time"
          },
          "cancel_window_campaign_minutes": {
            "type": [
              "integer",
              "null"
            ],
            "description": "A window, in minutes, within which the campaign can be canceled.",
            "contentEncoding": "int32"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Use metadata to store custom information for tagging and labeling back to your internal systems. Must be an object with up to 20 key-value pairs. Keys must be at most 40 characters and values must be at most 500 characters. Neither can contain the characters `\"` and `\\`. i.e. '{\"customer_id\" : \"NEWYORK2015\"}' Nested objects are not supported.  See [Metadata](#section/Metadata) for more information."
          },
          "use_type": {},
          "auto_cancel_if_ncoa": {
            "type": "boolean",
            "description": "Whether or not a mail piece should be automatically canceled and not sent if the address is updated via NCOA."
          }
        }
      },
      "mail_type": {
        "title": "mail_type",
        "enum": [
          "usps_first_class",
          "usps_standard"
        ],
        "type": "string",
        "description": "A string designating the mail postage type:\n* `usps_first_class` - (default)\n* `usps_standard` - a <a href=\"https://lob.com/pricing/print-mail#compare\" target=\"_blank\">cheaper option</a> which is\nless predictable and takes longer to deliver. `usps_standard` cannot be used with `4x6`\npostcards or for any postcards sent outside of the United States."
      },
      "postcard_size": {
        "title": "postcard_size",
        "enum": [
          "4x6",
          "6x9",
          "6x11"
        ],
        "type": "string",
        "description": "Specifies the size of the postcard. Only `4x6` postcards can be sent to international destinations."
      },
      "returned": {
        "title": "returned",
        "type": "object",
        "properties": {
          "mail_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/mail_type"
              },
              {}
            ]
          },
          "size": {
            "allOf": [
              {
                "$ref": "#/components/schemas/postcard_size"
              },
              {}
            ]
          },
          "front_original_url": {
            "maxLength": 2083,
            "minLength": 1,
            "type": "string",
            "description": "The original URL of the `front` template."
          },
          "back_original_url": {
            "maxLength": 2083,
            "minLength": 1,
            "type": "string",
            "description": "The original URL of the `back` template."
          }
        },
        "description": "Properties that the postcards in your Creative should have. Check within in order to add a QR code to your creative."
      },
      "inline_address_us": {
        "title": "inline_address_us",
        "required": [
          "address_line1",
          "address_city",
          "address_state",
          "address_zip",
          "name",
          "company"
        ],
        "type": "object",
        "properties": {
          "address_line1": {
            "maxLength": 64,
            "type": "string",
            "description": "The primary number, street name, and directional information."
          },
          "address_line2": {
            "maxLength": 64,
            "type": [
              "string",
              "null"
            ],
            "description": "An optional field containing any information which can't fit into line 1."
          },
          "address_city": {
            "maxLength": 200,
            "type": "string"
          },
          "address_state": {
            "pattern": "^[a-zA-Z]{2}$",
            "type": "string",
            "description": "2 letter state short-name code"
          },
          "address_zip": {
            "pattern": "^\\d{5}(-\\d{4})?$",
            "type": "string",
            "description": "Must follow the ZIP format of `12345` or ZIP+4 format of `12345-1234`."
          },
          "description": {
            "maxLength": 255,
            "type": [
              "string",
              "null"
            ],
            "description": "An internal description that identifies this resource. Must be no longer than 255 characters."
          },
          "name": {
            "maxLength": 40,
            "type": [
              "string",
              "null"
            ],
            "description": "Either `name` or `company` is required, you may also add both. Must be no longer than 40 characters. If both `name` and `company` are provided, they will be printed on two separate lines above the rest of the address."
          },
          "company": {
            "maxLength": 40,
            "type": [
              "string",
              "null"
            ],
            "description": "Either `name` or `company` is required, you may also add both. Must be no longer than 40 characters. If both `name` and `company` are provided, they will be printed on two separate lines above the rest of the address. This field can be used for any secondary recipient information which is not part of the actual mailing address (Company Name, Department, Attention Line, etc)."
          },
          "phone": {
            "maxLength": 40,
            "type": [
              "string",
              "null"
            ],
            "description": "Must be no longer than 40 characters."
          },
          "email": {
            "maxLength": 100,
            "type": [
              "string",
              "null"
            ],
            "description": "Must be no longer than 100 characters."
          },
          "address_country": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AddressCountry2"
              },
              {}
            ]
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Use metadata to store custom information for tagging and labeling back to your internal systems. Must be an object with up to 20 key-value pairs. Keys must be at most 40 characters and values must be at most 500 characters. Neither can contain the characters `\"` and `\\`. i.e. '{\"customer_id\" : \"NEWYORK2015\"}' Nested objects are not supported.  See [Metadata](#section/Metadata) for more information."
          }
        }
      },
      "creative_base": {
        "title": "creative_base",
        "type": "object",
        "properties": {
          "from": {},
          "description": {
            "maxLength": 255,
            "type": [
              "string",
              "null"
            ],
            "description": "An internal description that identifies this resource. Must be no longer than 255 characters."
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Use metadata to store custom information for tagging and labeling back to your internal systems. Must be an object with up to 20 key-value pairs. Keys must be at most 40 characters and values must be at most 500 characters. Neither can contain the characters `\"` and `\\`. i.e. '{\"customer_id\" : \"NEWYORK2015\"}' Nested objects are not supported.  See [Metadata](#section/Metadata) for more information."
          }
        }
      },
      "address_placement": {
        "title": "address_placement",
        "enum": [
          "top_first_page",
          "insert_blank_page",
          "bottom_first_page_center",
          "bottom_first_page"
        ],
        "type": "string",
        "description": "Specifies the location of the address information that will show through the double-window envelope. To see how this will impact your letter design, view our letter template.\nSome values are exclusive to certain customers. Upgrade to the appropriate <a href=\"https://dashboard.lob.com/#/settings/editions\" target=\"_blank\">Print & Mail Edition</a> to gain access.\n  * `top_first_page` - (default) print address information at the top of your provided first page\n  * `insert_blank_page` - insert a blank address page at the beginning of your file (you will be charged for the extra page)\n  * `bottom_first_page_center` - **(exclusive, deprecation planned within a few months)** print address information at the bottom center of your provided first page\n  * `bottom_first_page` - **(exclusive)** print address information at the bottom of your provided first page"
      },
      "custom_envelope_returned": {
        "title": "custom_envelope_returned",
        "required": [
          "id",
          "url",
          "object"
        ],
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 40,
            "type": "string",
            "description": "The unique identifier of the custom envelope used."
          },
          "url": {
            "type": "string",
            "description": "The url of the envelope asset used."
          },
          "object": {
            "const": "envelope",
            "type": "string"
          }
        },
        "description": "A nested custom envelope object containing more information about the custom envelope used or `null` if a custom envelope was not used."
      },
      "extra_service": {
        "title": "extra_service",
        "enum": [
          "certified",
          "certified_return_receipt",
          "registered"
        ],
        "type": "string",
        "description": "Add an extra service to your letter. Can only be non-`null` if `mail_type` isn't `usps_standard`. See <a href=\"https://www.lob.com/pricing/print-mail#compare\" target=\"_blank\">pricing</a> for extra costs incurred.\n  * `certified` - track and confirm delivery for domestic destinations. An extra sheet (1 PDF page single-sided or 2 PDF pages double-sided) is added to the beginning of your letter for address and barcode information. See here for templates: <a href=\"https://s3-us-west-2.amazonaws.com/public.lob.com/assets/templates/letter_certified_template.pdf\" target=\"_blank\">#10 envelope</a> and <a href=\"https://s3-us-west-2.amazonaws.com/public.lob.com/assets/templates/letter_certified_flat_template.pdf\" target=\"_blank\">flat envelope</a> (used for letters over 6 pages single-sided or 12 pages double-sided). You will not be charged for this extra sheet.\n  * `certified_return_receipt` - request an electronic copy of the recipient's signature to prove delivery of your certified letter\n  * `registered` - provides tracking and confirmation for international addresses"
      },
      "letter_details_returned": {
        "title": "letter_details_returned",
        "type": "object",
        "properties": {
          "address_placement": {
            "allOf": [
              {
                "$ref": "#/components/schemas/address_placement"
              },
              {}
            ]
          },
          "buckslips": {
            "maxItems": 1,
            "minItems": 0,
            "type": [
              "array",
              "null"
            ],
            "items": {
              "pattern": "^bck_[a-zA-Z0-9]+$",
              "type": "string"
            },
            "description": "A single-element array containing an existing buckslip id in a string format. See [buckslips](#tag/Buckslips) for more information."
          },
          "cards": {
            "maxItems": 1,
            "minItems": 0,
            "type": [
              "array",
              "null"
            ],
            "items": {
              "pattern": "^card_[a-zA-Z0-9]+$",
              "type": "string"
            },
            "description": "A single-element array containing an existing card id in a string format. See [cards](#tag/Cards) for more information."
          },
          "custom_envelope": {},
          "color": {
            "type": "boolean",
            "description": "Set this key to `true` if you would like to print in color. Set to `false` if you would like to print in black and white."
          },
          "double_sided": {
            "type": "boolean",
            "description": "Set this attribute to `true` for double sided printing, or `false` for for single sided printing. Defaults to `true`.",
            "default": true
          },
          "extra_service": {},
          "file_original_url": {
            "type": "string",
            "description": "The original URL of the `file` template."
          },
          "mail_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/mail_type"
              },
              {}
            ]
          }
        },
        "description": "Properties that the letters in your Creative should have. Check within in order to add a QR code to your creative."
      },
      "self_mailer_size": {
        "title": "self_mailer_size",
        "enum": [
          "6x18_bifold",
          "11x9_bifold",
          "12x9_bifold",
          "17.75x9_trifold"
        ],
        "type": "string",
        "description": "Specifies the size of the self mailer. The `17.75x9_trifold` size is in beta. Contact support@lob.com or your account contact to learn more."
      },
      "self_mailer_details_returned": {
        "title": "self_mailer_details_returned",
        "type": "object",
        "properties": {
          "mail_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/mail_type"
              },
              {}
            ]
          },
          "size": {
            "allOf": [
              {
                "$ref": "#/components/schemas/self_mailer_size"
              },
              {}
            ]
          },
          "inside_original_url": {
            "maxLength": 2083,
            "minLength": 1,
            "type": "string",
            "description": "The original URL of the `inside` template."
          },
          "outside_original_url": {
            "maxLength": 2083,
            "minLength": 1,
            "type": "string",
            "description": "The original URL of the `outside` template."
          }
        },
        "description": "Properties that the self mailers in your Creative should have. Check within in order to add a QR code to your creative."
      },
      "campaign_item": {
        "title": "campaign_item",
        "required": [
          "name",
          "description",
          "schedule_type",
          "use_type",
          "auto_cancel_if_ncoa",
          "id",
          "is_draft",
          "creatives",
          "uploads",
          "object",
          "date_created",
          "date_modified"
        ],
        "type": "object",
        "properties": {
          "billing_group_id": {
            "pattern": "^bg_[a-zA-Z0-9]+$",
            "type": [
              "string",
              "null"
            ],
            "description": "Unique identifier prefixed with `bg_`."
          },
          "name": {
            "type": "string",
            "description": "Name of the campaign."
          },
          "description": {
            "maxLength": 255,
            "type": [
              "string",
              "null"
            ],
            "description": "An internal description that identifies this resource. Must be no longer than 255 characters."
          },
          "schedule_type": {
            "const": "immediate",
            "type": "string",
            "description": "How the campaign should be scheduled. Only value available today is `immediate`."
          },
          "target_delivery_date": {
            "type": [
              "string",
              "null"
            ],
            "description": "If `schedule_type` is `target_delivery_date`, provide a targeted delivery date for mail pieces in this campaign.",
            "contentEncoding": "date-time"
          },
          "send_date": {
            "type": [
              "string",
              "null"
            ],
            "description": "If `schedule_type` is `scheduled_send_date`, provide a date to send this campaign.",
            "contentEncoding": "date-time"
          },
          "cancel_window_campaign_minutes": {
            "type": [
              "integer",
              "null"
            ],
            "description": "A window, in minutes, within which the campaign can be canceled.",
            "contentEncoding": "int32"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Use metadata to store custom information for tagging and labeling back to your internal systems. Must be an object with up to 20 key-value pairs. Keys must be at most 40 characters and values must be at most 500 characters. Neither can contain the characters `\"` and `\\`. i.e. '{\"customer_id\" : \"NEWYORK2015\"}' Nested objects are not supported.  See [Metadata](#section/Metadata) for more information."
          },
          "use_type": {},
          "auto_cancel_if_ncoa": {
            "type": "boolean",
            "description": "Whether or not a mail piece should be automatically canceled and not sent if the address is updated via NCOA."
          },
          "id": {
            "pattern": "^cmp_[a-zA-Z0-9]+$",
            "type": "string",
            "description": "Unique identifier prefixed with `cmp_`."
          },
          "is_draft": {
            "type": "boolean",
            "description": "Whether or not the campaign is still a draft."
          },
          "creatives": {
            "type": "array",
            "items": {},
            "description": "An array of creatives that have been associated with this campaign."
          },
          "uploads": {
            "maxItems": 1,
            "minItems": 0,
            "type": "array",
            "items": {},
            "description": "A single-element array containing the upload object that is assocated with this campaign."
          },
          "object": {
            "const": "campaign",
            "type": "string",
            "description": "Value is resource type."
          },
          "date_created": {
            "type": "string",
            "description": "A timestamp in ISO 8601 format of the date the resource was created.",
            "contentEncoding": "date-time"
          },
          "date_modified": {
            "type": "string",
            "description": "A timestamp in ISO 8601 format of the date the resource was last modified.",
            "contentEncoding": "date-time"
          },
          "deleted": {
            "type": "boolean",
            "description": "Only returned if the resource has been successfully deleted."
          }
        }
      },
      "creative": {
        "title": "creative",
        "required": [
          "date_created",
          "date_modified",
          "deleted",
          "object",
          "resource_type",
          "details",
          "from",
          "description",
          "metadata",
          "id",
          "template_preview_urls",
          "template_previews",
          "campaigns"
        ],
        "type": "object",
        "properties": {
          "date_created": {
            "type": "string",
            "description": "A timestamp in ISO 8601 format of the date the resource was created.",
            "contentEncoding": "date-time"
          },
          "date_modified": {
            "type": "string",
            "description": "A timestamp in ISO 8601 format of the date the resource was last modified.",
            "contentEncoding": "date-time"
          },
          "deleted": {
            "type": "boolean",
            "description": "Only returned if the resource has been successfully deleted."
          },
          "object": {
            "const": "creative",
            "type": "string",
            "description": "Value is resource type."
          },
          "resource_type": {
            "const": "postcard",
            "type": "string",
            "description": "Mailpiece type for the creative"
          },
          "details": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Details"
              },
              {}
            ]
          },
          "from": {
            "oneOf": [
              {
                "pattern": "^adr_[a-zA-Z0-9]+$",
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/inline_address_us"
              }
            ],
            "description": "Must either be an address ID or an inline object with correct address parameters. All addresses will be standardized into uppercase without being modified by verification."
          },
          "description": {
            "maxLength": 255,
            "type": [
              "string",
              "null"
            ],
            "description": "An internal description that identifies this resource. Must be no longer than 255 characters."
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Use metadata to store custom information for tagging and labeling back to your internal systems. Must be an object with up to 20 key-value pairs. Keys must be at most 40 characters and values must be at most 500 characters. Neither can contain the characters `\"` and `\\`. i.e. '{\"customer_id\" : \"NEWYORK2015\"}' Nested objects are not supported.  See [Metadata](#section/Metadata) for more information."
          },
          "id": {
            "pattern": "^crv_[a-zA-Z0-9]+$",
            "type": "string",
            "description": "Unique identifier prefixed with `crv_`.",
            "examples": [
              "crv_2a3b096c409b32c"
            ]
          },
          "template_preview_urls": {
            "type": "object",
            "description": "Preview URLs associated with a creative's artwork asset(s) if the creative uses HTML templates as assets. An empty object will be returned if no `template_preview`s have been generated."
          },
          "template_previews": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "A list of template preview objects if the creative uses HTML template(s) as artwork asset(s). An empty array will be returned if no `template_preview`s have been generated for the creative."
          },
          "campaigns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/campaign_item"
            },
            "description": "Array of campaigns associated with the creative ID",
            "examples": [
              [
                {
                  "id": "cmp_ed76e33e7ac4d0bd",
                  "name": "My postman Campaign 2",
                  "description": "Created via postman again",
                  "schedule_type": "immediate",
                  "send_date": null,
                  "target_delivery_date": null,
                  "cancel_window_campaign_minutes": null,
                  "metadata": {},
                  "use_type": null,
                  "is_draft": true,
                  "deleted": false,
                  "creatives": [],
                  "uploads": [],
                  "auto_cancel_if_ncoa": false,
                  "date_created": "2022-07-26T20:20:25.016Z",
                  "date_modified": "2022-07-26T20:20:25.016Z",
                  "object": "campaign"
                }
              ]
            ]
          }
        }
      },
      "RequiredAddressColumns": {
        "title": "RequiredAddressColumns",
        "required": [
          "name",
          "address_line1",
          "address_city",
          "address_state",
          "address_zip"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": [
              "string",
              "null"
            ],
            "description": "The column header from the csv file that should be mapped to the required field `name`"
          },
          "address_line1": {
            "type": [
              "string",
              "null"
            ],
            "description": "The column header from the csv file that should be mapped to the required field `address_line1`"
          },
          "address_city": {
            "type": [
              "string",
              "null"
            ],
            "description": "The column header from the csv file that should be mapped to the required field `address_city`"
          },
          "address_state": {
            "type": [
              "string",
              "null"
            ],
            "description": "The column header from the csv file that should be mapped to the required field `address_state`"
          },
          "address_zip": {
            "type": [
              "string",
              "null"
            ],
            "description": "The column header from the csv file that should be mapped to the required field `address_zip`"
          }
        },
        "description": "The mapping of column headers in your file to Lob-required fields for the resource created. See our <a href=\"https://help.lob.com/print-and-mail/building-a-mail-strategy/campaign-or-triggered-sends/campaign-audience-guide#required-columns-2\" target=\"_blank\">Campaign Audience Guide</a> for additional details.",
        "examples": [
          {
            "name": "recipient_name",
            "address_line1": "primary_line",
            "address_city": "city",
            "address_state": "state",
            "address_zip": "zip_code"
          }
        ]
      },
      "OptionalAddressColumns": {
        "title": "OptionalAddressColumns",
        "required": [
          "address_line2",
          "company",
          "address_country"
        ],
        "type": "object",
        "properties": {
          "address_line2": {
            "type": [
              "string",
              "null"
            ],
            "description": "The column header from the csv file that should be mapped to the optional field \"address_line2\""
          },
          "company": {
            "type": [
              "string",
              "null"
            ],
            "description": "The column header from the csv file that should be mapped to the optional field \"company\""
          },
          "address_country": {
            "type": [
              "string",
              "null"
            ],
            "description": "The column header from the csv file that should be mapped to the optional field \"address_country\""
          }
        },
        "description": "The mapping of column headers in your file to Lob-optional fields for the resource created. See our <a href=\"https://help.lob.com/print-and-mail/building-a-mail-strategy/campaign-or-triggered-sends/campaign-audience-guide#optional-columns-3\" target=\"_blank\">Campaign Audience Guide</a> for additional details.",
        "examples": [
          {
            "address_line2": "secondary_line",
            "company": "company",
            "address_country": "country,"
          }
        ]
      },
      "Metadata": {
        "title": "Metadata",
        "required": [
          "columns"
        ],
        "type": "object",
        "properties": {
          "columns": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of column names from the csv file which you want associated with each of your mailpieces"
          }
        },
        "description": "The list of column headers in your file as an array that you want as metadata associated with each mailpiece. See our <a href=\"https://help.lob.com/print-and-mail/building-a-mail-strategy/campaign-or-triggered-sends/campaign-audience-guide#required-columns-2\" target=\"_blank\">Campaign Audience Guide</a> for additional details.",
        "examples": [
          {
            "columns": [
              "recipient_name"
            ]
          }
        ]
      },
      "upload_writable": {
        "title": "upload_writable",
        "required": [
          "campaignId"
        ],
        "type": "object",
        "properties": {
          "campaignId": {
            "pattern": "^cmp_[a-zA-Z0-9]+$",
            "type": "string"
          },
          "requiredAddressColumnMapping": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RequiredAddressColumnMapping"
              },
              {}
            ]
          },
          "optionalAddressColumnMapping": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OptionalAddressColumnMapping"
              },
              {}
            ]
          },
          "metadata": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Metadata1"
              },
              {}
            ]
          },
          "mergeVariableColumnMapping": {
            "type": [
              "object",
              "null"
            ],
            "description": "The mapping of column headers in your file to the merge variables present in your creative. See our <a href=\"https://help.lob.com/print-and-mail/building-a-mail-strategy/campaign-or-triggered-sends/campaign-audience-guide#step-3-map-merge-variable-data-if-applicable-7\" target=\"_blank\">Campaign Audience Guide</a> for additional details. <br />If a merge variable has the same \"name\" as a \"key\" in the `requiredAddressColumnMapping` or `optionalAddressColumnMapping` objects, then they **CANNOT** have a different value in this object. If a different value is provided, then when the campaign is processing it will get overwritten with the mapped value present in the `requiredAddressColumnMapping` or `optionalAddressColumnMapping` objects. If using customized QR code redirect from the Audience file, then a `qr_code_redirect_url` must be mapped to the column header as used in the CSV.",
            "examples": [
              {
                "name": "recipient_name",
                "gift_code": "code"
              }
            ]
          }
        }
      },
      "UploadState": {
        "title": "UploadState",
        "enum": [
          "Preprocessing",
          "Draft",
          "Ready for Validation",
          "Validating",
          "Scheduled",
          "Cancelled",
          "Errored"
        ],
        "type": "string",
        "description": "The `state` property on the `upload` object. As the file is processed, the `state` will change from `Ready for Validation` to `Validating` and then will be either `Scheduled` (successfully processed) or `Errored` (Unsuccessfully processed)."
      },
      "upload": {
        "title": "upload",
        "required": [
          "campaignId",
          "requiredAddressColumnMapping",
          "optionalAddressColumnMapping",
          "metadata",
          "mergeVariableColumnMapping",
          "id",
          "accountId",
          "mode",
          "state",
          "totalMailpieces",
          "failedMailpieces",
          "validatedMailpieces",
          "bytesProcessed",
          "dateCreated",
          "dateModified"
        ],
        "type": "object",
        "properties": {
          "campaignId": {
            "pattern": "^cmp_[a-zA-Z0-9]+$",
            "type": "string"
          },
          "requiredAddressColumnMapping": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RequiredAddressColumnMapping"
              },
              {}
            ]
          },
          "optionalAddressColumnMapping": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OptionalAddressColumnMapping"
              },
              {}
            ]
          },
          "metadata": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Metadata1"
              },
              {}
            ]
          },
          "mergeVariableColumnMapping": {
            "type": [
              "object",
              "null"
            ],
            "description": "The mapping of column headers in your file to the merge variables present in your creative. See our <a href=\"https://help.lob.com/print-and-mail/building-a-mail-strategy/campaign-or-triggered-sends/campaign-audience-guide#step-3-map-merge-variable-data-if-applicable-7\" target=\"_blank\">Campaign Audience Guide</a> for additional details. <br />If a merge variable has the same \"name\" as a \"key\" in the `requiredAddressColumnMapping` or `optionalAddressColumnMapping` objects, then they **CANNOT** have a different value in this object. If a different value is provided, then when the campaign is processing it will get overwritten with the mapped value present in the `requiredAddressColumnMapping` or `optionalAddressColumnMapping` objects. If using customized QR code redirect from the Audience file, then a `qr_code_redirect_url` must be mapped to the column header as used in the CSV.",
            "examples": [
              {
                "name": "recipient_name",
                "gift_code": "code"
              }
            ]
          },
          "id": {
            "pattern": "^upl_[a-zA-Z0-9]+$",
            "type": "string",
            "description": "Unique identifier prefixed with `upl_`."
          },
          "accountId": {
            "type": "string",
            "description": "Account ID that made the request",
            "examples": [
              "fa9ea650fc7b31a89f92"
            ]
          },
          "mode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Mode"
              },
              {}
            ]
          },
          "failuresUrl": {
            "type": "string",
            "description": "Url where your campaign mailpiece failures can be retrieved",
            "examples": [
              "https://www.example.com"
            ]
          },
          "originalFilename": {
            "type": "string",
            "description": "Filename of the upload",
            "examples": [
              "my_audience.csv"
            ]
          },
          "state": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UploadState"
              },
              {}
            ]
          },
          "totalMailpieces": {
            "type": "integer",
            "description": "Total number of recipients for the campaign",
            "contentEncoding": "int32",
            "examples": [
              100
            ]
          },
          "failedMailpieces": {
            "type": "integer",
            "description": "Number of mailpieces that failed to create",
            "contentEncoding": "int32",
            "examples": [
              5
            ]
          },
          "validatedMailpieces": {
            "type": "integer",
            "description": "Number of mailpieces that were successfully created",
            "contentEncoding": "int32",
            "examples": [
              95
            ]
          },
          "bytesProcessed": {
            "type": "integer",
            "description": "Number of bytes processed in your CSV",
            "contentEncoding": "int32",
            "examples": [
              17268
            ]
          },
          "dateCreated": {
            "type": "string",
            "description": "A timestamp in ISO 8601 format of the date the upload was created",
            "contentEncoding": "date-time"
          },
          "dateModified": {
            "type": "string",
            "description": "A timestamp in ISO 8601 format of the date the upload was last modified",
            "contentEncoding": "date-time"
          }
        }
      },
      "campaign": {
        "title": "campaign",
        "required": [
          "date_created",
          "date_modified",
          "object",
          "name",
          "description",
          "schedule_type",
          "use_type",
          "auto_cancel_if_ncoa",
          "id",
          "is_draft",
          "creatives",
          "uploads"
        ],
        "type": "object",
        "properties": {
          "date_created": {
            "type": "string",
            "description": "A timestamp in ISO 8601 format of the date the resource was created.",
            "contentEncoding": "date-time"
          },
          "date_modified": {
            "type": "string",
            "description": "A timestamp in ISO 8601 format of the date the resource was last modified.",
            "contentEncoding": "date-time"
          },
          "deleted": {
            "type": "boolean",
            "description": "Only returned if the resource has been successfully deleted."
          },
          "object": {
            "const": "campaign",
            "type": "string",
            "description": "Value is resource type."
          },
          "billing_group_id": {
            "pattern": "^bg_[a-zA-Z0-9]+$",
            "type": [
              "string",
              "null"
            ],
            "description": "Unique identifier prefixed with `bg_`."
          },
          "name": {
            "type": "string",
            "description": "Name of the campaign."
          },
          "description": {
            "maxLength": 255,
            "type": [
              "string",
              "null"
            ],
            "description": "An internal description that identifies this resource. Must be no longer than 255 characters."
          },
          "schedule_type": {
            "const": "immediate",
            "type": "string",
            "description": "How the campaign should be scheduled. Only value available today is `immediate`."
          },
          "target_delivery_date": {
            "type": [
              "string",
              "null"
            ],
            "description": "If `schedule_type` is `target_delivery_date`, provide a targeted delivery date for mail pieces in this campaign.",
            "contentEncoding": "date-time"
          },
          "send_date": {
            "type": [
              "string",
              "null"
            ],
            "description": "If `schedule_type` is `scheduled_send_date`, provide a date to send this campaign.",
            "contentEncoding": "date-time"
          },
          "cancel_window_campaign_minutes": {
            "type": [
              "integer",
              "null"
            ],
            "description": "A window, in minutes, within which the campaign can be canceled.",
            "contentEncoding": "int32"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Use metadata to store custom information for tagging and labeling back to your internal systems. Must be an object with up to 20 key-value pairs. Keys must be at most 40 characters and values must be at most 500 characters. Neither can contain the characters `\"` and `\\`. i.e. '{\"customer_id\" : \"NEWYORK2015\"}' Nested objects are not supported.  See [Metadata](#section/Metadata) for more information."
          },
          "use_type": {},
          "auto_cancel_if_ncoa": {
            "type": "boolean",
            "description": "Whether or not a mail piece should be automatically canceled and not sent if the address is updated via NCOA."
          },
          "id": {
            "pattern": "^cmp_[a-zA-Z0-9]+$",
            "type": "string",
            "description": "Unique identifier prefixed with `cmp_`."
          },
          "is_draft": {
            "type": "boolean",
            "description": "Whether or not the campaign is still a draft."
          },
          "creatives": {
            "minItems": 0,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/creative"
            },
            "description": "An array of creatives that have been associated with this campaign."
          },
          "uploads": {
            "maxItems": 1,
            "minItems": 0,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/upload"
            },
            "description": "A single-element array containing the upload object that is assocated with this campaign."
          }
        }
      },
      "campaign_updatable": {
        "title": "campaign_updatable",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "maxLength": 255,
            "type": [
              "string",
              "null"
            ],
            "description": "An internal description that identifies this resource. Must be no longer than 255 characters."
          },
          "schedule_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/cmp_schedule_type"
              },
              {}
            ]
          },
          "target_delivery_date": {
            "type": "string",
            "description": "If `schedule_type` is `target_delivery_date`, provide a targeted delivery date for mail pieces in this campaign.",
            "contentEncoding": "date-time"
          },
          "send_date": {
            "type": "string",
            "description": "If `schedule_type` is `scheduled_send_date`, provide a date to send this campaign.",
            "contentEncoding": "date-time"
          },
          "cancel_window_campaign_minutes": {
            "type": "integer",
            "description": "A window, in minutes, within which the campaign can be canceled.",
            "contentEncoding": "int32"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Use metadata to store custom information for tagging and labeling back to your internal systems. Must be an object with up to 20 key-value pairs. Keys must be at most 40 characters and values must be at most 500 characters. Neither can contain the characters `\"` and `\\`. i.e. '{\"customer_id\" : \"NEWYORK2015\"}' Nested objects are not supported.  See [Metadata](#section/Metadata) for more information."
          },
          "is_draft": {
            "type": "boolean",
            "description": "Whether or not the campaign is still a draft. Can either be excluded or `false`."
          },
          "use_type": {},
          "auto_cancel_if_ncoa": {
            "type": "boolean",
            "description": "Whether or not a mail piece should be automatically canceled and not sent if the address is updated via NCOA."
          }
        }
      },
      "card_base": {
        "title": "card_base",
        "type": "object",
        "properties": {
          "description": {
            "maxLength": 255,
            "type": [
              "string",
              "null"
            ],
            "description": "Description of the card."
          },
          "size": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Size1"
              },
              {}
            ]
          }
        }
      },
      "card": {
        "title": "card",
        "required": [
          "date_created",
          "date_modified",
          "object",
          "description",
          "id",
          "url",
          "auto_reorder",
          "reorder_quantity",
          "raw_url",
          "front_original_url",
          "back_original_url",
          "thumbnails",
          "available_quantity",
          "pending_quantity",
          "status",
          "orientation",
          "threshold_amount"
        ],
        "type": "object",
        "properties": {
          "date_created": {
            "type": "string",
            "description": "A timestamp in ISO 8601 format of the date the resource was created.",
            "contentEncoding": "date-time"
          },
          "date_modified": {
            "type": "string",
            "description": "A timestamp in ISO 8601 format of the date the resource was last modified.",
            "contentEncoding": "date-time"
          },
          "deleted": {
            "type": "boolean",
            "description": "Only returned if the resource has been successfully deleted."
          },
          "object": {
            "const": "card",
            "type": "string",
            "description": "Value is resource type."
          },
          "description": {
            "maxLength": 255,
            "type": [
              "string",
              "null"
            ],
            "description": "Description of the card."
          },
          "size": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Size1"
              },
              {}
            ]
          },
          "id": {
            "pattern": "^card_[a-zA-Z0-9]+$",
            "type": "string",
            "description": "Unique identifier prefixed with `card_`."
          },
          "url": {
            "maxLength": 2083,
            "minLength": 1,
            "type": "string",
            "description": "The signed link for the card."
          },
          "auto_reorder": {
            "type": "boolean",
            "description": "True if the cards should be auto-reordered."
          },
          "reorder_quantity": {
            "type": [
              "integer",
              "null"
            ],
            "description": "The number of cards to be reordered.",
            "contentEncoding": "int32"
          },
          "raw_url": {
            "maxLength": 2083,
            "minLength": 1,
            "type": "string",
            "description": "The raw URL of the card."
          },
          "front_original_url": {
            "maxLength": 2083,
            "minLength": 1,
            "type": "string",
            "description": "The original URL of the front template."
          },
          "back_original_url": {
            "maxLength": 2083,
            "minLength": 1,
            "type": "string",
            "description": "The original URL of the back template."
          },
          "thumbnails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/thumbnail"
            },
            "description": ""
          },
          "available_quantity": {
            "type": "integer",
            "description": "The available quantity of cards.",
            "contentEncoding": "int32"
          },
          "pending_quantity": {
            "type": "integer",
            "description": "The pending quantity of cards.",
            "contentEncoding": "int32"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Thestatusofthecard."
              },
              {}
            ]
          },
          "orientation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Orientation"
              },
              {}
            ]
          },
          "threshold_amount": {
            "type": "integer",
            "description": "The threshold amount of the card",
            "contentEncoding": "int32"
          }
        }
      },
      "card_editable": {
        "title": "card_editable",
        "required": [
          "front"
        ],
        "type": "object",
        "properties": {
          "description": {
            "maxLength": 255,
            "type": [
              "string",
              "null"
            ],
            "description": "Description of the card."
          },
          "size": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Size1"
              },
              {}
            ]
          },
          "front": {
            "oneOf": [
              {
                "pattern": "^https://[-a-zA-Z0-9@:%._+~#=/]{1,256}.(html?|pdf|png|jpg)$",
                "type": "string"
              },
              {
                "pattern": "^(?!https://)[a-zA-Z0-9@:%._+~#=/]{1,256}.(html?|pdf|png|jpg)$",
                "type": "string"
              }
            ],
            "description": "A PDF template for the front of the card"
          },
          "back": {
            "oneOf": [
              {
                "pattern": "^https://[-a-zA-Z0-9@:%._+~#=/]{1,256}.(html?|pdf|png|jpg)$",
                "type": "string"
              },
              {
                "pattern": "^(?!https://)[a-zA-Z0-9@:%._+~#=/]{1,256}.(html?|pdf|png|jpg)$",
                "type": "string"
              }
            ],
            "description": "A PDF template for the back of the card"
          }
        }
      },
      "card_updatable": {
        "title": "card_updatable",
        "type": "object",
        "properties": {
          "description": {
            "maxLength": 255,
            "type": [
              "string",
              "null"
            ],
            "description": "Description of the card."
          },
          "auto_reorder": {
            "type": "boolean",
            "description": "Allows for auto reordering"
          },
          "reorder_quantity": {
            "maximum": 10000000.0,
            "minimum": 10000.0,
            "type": "number",
            "description": "The quantity of items to be reordered (only required when auto_reorder is true)."
          }
        }
      },
      "card_deletion": {
        "title": "card_deletion",
        "type": "object",
        "properties": {
          "id": {
            "pattern": "^card_[a-zA-Z0-9]+$",
            "type": "string",
            "description": "Unique identifier prefixed with `card_`."
          },
          "deleted": {
            "type": "boolean",
            "description": "Only returned if the resource has been successfully deleted."
          }
        },
        "description": "Lob uses RESTful HTTP response codes to indicate success or failure of an API request. In general, 2xx indicates success, 4xx indicate an input error, and 5xx indicates an error on Lob's end."
      },
      "card_order": {
        "title": "card_order",
        "required": [
          "date_created",
          "date_modified",
          "object"
        ],
        "type": "object",
        "properties": {
          "date_created": {
            "type": "string",
            "description": "A timestamp in ISO 8601 format of the date the resource was created.",
            "contentEncoding": "date-time"
          },
          "date_modified": {
            "type": "string",
            "description": "A timestamp in ISO 8601 format of the date the resource was last modified.",
            "contentEncoding": "date-time"
          },
          "deleted": {
            "type": "boolean",
            "description": "Only returned if the resource has been successfully deleted."
          },
          "object": {
            "type": "string",
            "description": "Value is resource type."
          },
          "id": {
            "pattern": "^co_[a-zA-Z0-9]+$",
            "type": "string",
            "description": "Unique identifier prefixed with `co_`."
          },
          "card_id": {
            "pattern": "^card_[a-zA-Z0-9]+$",
            "type": "string",
            "description": "Unique identifier prefixed with `card_`."
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Status2"
              },
              {}
            ]
          },
          "inventory": {
            "type": "number",
            "description": "The inventory of the card order.",
            "default": 0
          },
          "quantity_ordered": {
            "type": "number",
            "description": "The quantity of cards ordered",
            "default": 0
          },
          "unit_price": {
            "type": "number",
            "description": "The unit price for the card order.",
            "default": 0
          },
          "cancelled_reason": {
            "type": "string",
            "description": "The reason for cancellation."
          },
          "availability_date": {
            "type": "string",
            "description": "A timestamp in ISO 8601 format of the date the resource was created.",
            "contentEncoding": "date-time"
          },
          "expected_availability_date": {
            "type": "string",
            "description": "The fixed deadline for the cards to be printed.",
            "contentEncoding": "date-time"
          }
        }
      },
      "card_order_editable": {
        "title": "card_order_editable",
        "required": [
          "quantity"
        ],
        "type": "object",
        "properties": {
          "quantity": {
            "maximum": 10000000.0,
            "minimum": 10000.0,
            "type": "integer",
            "description": "The quantity of cards in the order (minimum 10,000).",
            "contentEncoding": "int32"
          }
        }
      },
      "editable_no_mailtype": {
        "title": "editable_no_mailtype",
        "type": "object",
        "properties": {
          "description": {
            "maxLength": 255,
            "type": [
              "string",
              "null"
            ],
            "description": "An internal description that identifies this resource. Must be no longer than 255 characters."
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Use metadata to store custom information for tagging and labeling back to your internal systems. Must be an object with up to 20 key-value pairs. Keys must be at most 40 characters and values must be at most 500 characters. Neither can contain the characters `\"` and `\\`. i.e. '{\"customer_id\" : \"NEWYORK2015\"}' Nested objects are not supported.  See [Metadata](#section/Metadata) for more information."
          },
          "merge_variables": {
            "type": [
              "object",
              "null"
            ],
            "description": "You can input a merge variable payload object to your template to render dynamic content. For example, if you have a template like: `{{variable_name}}`, pass in `{\"variable_name\": \"Harry\"}` to render `Harry`. `merge_variables` must be an object. Any type of value is accepted as long as the object is valid JSON; you can use `strings`, `numbers`, `booleans`, `arrays`, `objects`, or `null`. The max length of the object is 25,000 characters. If you call `JSON.stringify` on your object, it can be no longer than 25,000 characters. Your variable names cannot contain any whitespace or any of the following special characters: `!`, `\"`, `#`, `%`, `&`, `'`, `(`, `)`, `*`, `+`, `,`, `/`, `;`, `<`, `=`, `>`, `@`, `[`, `\\`, `]`, `^`, `` ` ``, `{`, `|`, `}`, `~`. More instructions can be found in <a href=\"https://help.lob.com/print-and-mail/designing-mail-creatives/dynamic-personalization#using-html-and-merge-variables-10\" target=\"_blank\">our guide to using html and merge variables</a>. Depending on your <a href=\"https://dashboard.lob.com/#/settings/account\" target=\"_blank\">Merge Variable strictness</a> setting, if you define variables in your HTML but do not pass them here, you will either receive an error or the variable will render as an empty string."
          },
          "send_date": {}
        }
      },
      "chk_use_type": {
        "title": "chk_use_type",
        "enum": [
          "marketing",
          "operational"
        ],
        "type": "string",
        "description": "TThe use type for each mailpiece. Can be one of marketing, operational, or null. Null use_type is only allowed if an account default use_type is selected in Account Settings. For more information on use_type, see our  [Help Center article](https://help.lob.com/print-and-mail/building-a-mail-strategy/managing-mail-settings/declaring-mail-use-type)."
      },
      "check_base": {
        "title": "check_base",
        "type": "object",
        "properties": {
          "description": {
            "maxLength": 255,
            "type": [
              "string",
              "null"
            ],
            "description": "An internal description that identifies this resource. Must be no longer than 255 characters."
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Use metadata to store custom information for tagging and labeling back to your internal systems. Must be an object with up to 20 key-value pairs. Keys must be at most 40 characters and values must be at most 500 characters. Neither can contain the characters `\"` and `\\`. i.e. '{\"customer_id\" : \"NEWYORK2015\"}' Nested objects are not supported.  See [Metadata](#section/Metadata) for more information."
          },
          "merge_variables": {
            "type": [
              "object",
              "null"
            ],
            "description": "You can input a merge variable payload object to your template to render dynamic content. For example, if you have a template like: `{{variable_name}}`, pass in `{\"variable_name\": \"Harry\"}` to render `Harry`. `merge_variables` must be an object. Any type of value is accepted as long as the object is valid JSON; you can use `strings`, `numbers`, `booleans`, `arrays`, `objects`, or `null`. The max length of the object is 25,000 characters. If you call `JSON.stringify` on your object, it can be no longer than 25,000 characters. Your variable names cannot contain any whitespace or any of the following special characters: `!`, `\"`, `#`, `%`, `&`, `'`, `(`, `)`, `*`, `+`, `,`, `/`, `;`, `<`, `=`, `>`, `@`, `[`, `\\`, `]`, `^`, `` ` ``, `{`, `|`, `}`, `~`. More instructions can be found in <a href=\"https://help.lob.com/print-and-mail/designing-mail-creatives/dynamic-personalization#using-html-and-merge-variables-10\" target=\"_blank\">our guide to using html and merge variables</a>. Depending on your <a href=\"https://dashboard.lob.com/#/settings/account\" target=\"_blank\">Merge Variable strictness</a> setting, if you define variables in your HTML but do not pass them here, you will either receive an error or the variable will render as an empty string."
          },
          "send_date": {},
          "mail_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MailType2"
              },
              {}
            ]
          },
          "memo": {
            "maxLength": 40,
            "type": [
              "string",
              "null"
            ],
            "description": "Text to include on the memo line of the check."
          },
          "check_number": {
            "maximum": 500000000.0,
            "minimum": 1.0,
            "type": "integer",
            "description": "An integer that designates the check number.\nIf `check_number` is not provided, checks created from a new `bank_account` will start at `10000` and increment with each check created with the `bank_account`.\nA provided `check_number` overrides the defaults. Subsequent checks created with the same `bank_account` will increment from the provided check number.",
            "contentEncoding": "int32"
          },
          "message": {
            "maxLength": 400,
            "type": "string",
            "description": "Max of 400 characters to be included at the bottom of the check page."
          },
          "use_type": {}
        }
      },
      "from_us": {
        "title": "from_us",
        "type": "object",
        "properties": {
          "from": {
            "allOf": [
              {
                "$ref": "#/components/schemas/address_us"
              },
              {}
            ]
          }
        }
      },
      "to_address_us_chk": {
        "title": "to_address_us_chk",
        "required": [
          "date_created",
          "date_modified",
          "object",
          "id",
          "name",
          "company",
          "address_line1",
          "address_city",
          "address_state",
          "address_zip"
        ],
        "type": "object",
        "properties": {
          "date_created": {
            "type": "string",
            "description": "A timestamp in ISO 8601 format of the date the resource was created.",
            "contentEncoding": "date-time"
          },
          "date_modified": {
            "type": "string",
            "description": "A timestamp in ISO 8601 format of the date the resource was last modified.",
            "contentEncoding": "date-time"
          },
          "deleted": {
            "type": "boolean",
            "description": "Only returned if the resource has been successfully deleted."
          },
          "object": {
            "const": "address",
            "type": "string",
            "description": "Value is resource type."
          },
          "id": {
            "pattern": "^adr_[a-zA-Z0-9]+$",
            "type": "string",
            "description": "Unique identifier prefixed with `adr_`."
          },
          "description": {
            "maxLength": 255,
            "type": [
              "string",
              "null"
            ],
            "description": "An internal description that identifies this resource. Must be no longer than 255 characters."
          },
          "name": {
            "maxLength": 40,
            "type": [
              "string",
              "null"
            ],
            "description": "Either `name` or `company` is required, you may also add both. Must be no longer than 40 characters. If both `name` and `company` are provided, they will be printed on two separate lines above the rest of the address."
          },
          "company": {
            "maxLength": 40,
            "type": [
              "string",
              "null"
            ],
            "description": "Either `name` or `company` is required, you may also add both. Must be no longer than 40 characters. If both `name` and `company` are provided, they will be printed on two separate lines above the rest of the address. This field can be used for any secondary recipient information which is not part of the actual mailing address (Company Name, Department, Attention Line, etc)."
          },
          "phone": {
            "maxLength": 40,
            "type": [
              "string",
              "null"
            ],
            "description": "Must be no longer than 40 characters."
          },
          "email": {
            "maxLength": 100,
            "type": [
              "string",
              "null"
            ],
            "description": "Must be no longer than 100 characters."
          },
          "address_line1": {
            "maxLength": 50,
            "type": "string",
            "description": "The primary number, street name, and directional information."
          },
          "address_line2": {
            "maxLength": 50,
            "type": [
              "string",
              "null"
            ],
            "description": "An optional field containing any information which can't fit into line 1."
          },
          "address_city": {
            "maxLength": 200,
            "type": "string"
          },
          "address_state": {
            "pattern": "^[a-zA-Z]{2}$",
            "type": "string",
            "description": "2 letter state short-name code"
          },
          "address_zip": {
            "pattern": "^\\d{5}(-\\d{4})?$",
            "type": "string",
            "description": "Must follow the ZIP format of `12345` or ZIP+4 format of `12345-1234`."
          },
          "address_country": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AddressCountry"
              },
              {
                "maxLength": 13,
                "minLength": 13
              }
            ]
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Use metadata to store custom information for tagging and labeling back to your internal systems. Must be an object with up to 20 key-value pairs. Keys must be at most 40 characters and values must be at most 500 characters. Neither can contain the characters `\"` and `\\`. i.e. '{\"customer_id\" : \"NEWYORK2015\"}' Nested objects are not supported.  See [Metadata](#section/Metadata) for more information."
          },
          "recipient_moved": {
            "type": [
              "boolean",
              "null"
            ],
            "description": "Only returned for accounts on certain <a href=\"https://dashboard.lob.com/#/settings/editions\" target=\"_blank\">Print &amp; Mail Editions</a>. Value is `true` if the address was altered because the recipient filed for a <a href=\"#tag/National-Change-of-Address\">National Change of Address Linkage (NCOALink)</a>, `false` if the NCOALink check was run but no altered address was found, and `null` if the NCOALink check was not run. The NCOALink check does not happen for non-US addresses, for non-deliverable US addresses, or for addresses created before the NCOALink feature was added to your account."
          }
        }
      },
      "tracking_event_base": {
        "title": "tracking_event_base",
        "required": [
          "id",
          "date_created",
          "date_modified",
          "object"
        ],
        "type": "object",
        "properties": {
          "id": {
            "pattern": "^evnt_[a-zA-Z0-9]+$",
            "type": "string",
            "description": "Unique identifier prefixed with `evnt_`."
          },
          "time": {
            "type": "string",
            "description": "A timestamp in ISO 8601 format of the date USPS registered the event.",
            "contentEncoding": "date-time"
          },
          "date_created": {
            "type": "string",
            "description": "A timestamp in ISO 8601 format of the date the resource was created.",
            "contentEncoding": "date-time"
          },
          "date_modified": {
            "type": "string",
            "description": "A timestamp in ISO 8601 format of the date the resource was last modified.",
            "contentEncoding": "date-time"
          },
          "object": {
            "allOf": [
              {
                "$ref": "#/components/schemas/object3"
              },
              {}
            ]
          }
        },
        "description": "As mail pieces travel through the mail stream, USPS scans their unique barcodes, and Lob processes these mail scans to generate tracking events."
      },
      "tracking_event_normal": {
        "title": "tracking_event_normal",
        "required": [
          "id",
          "date_created",
          "date_modified",
          "object",
          "type",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "pattern": "^evnt_[a-zA-Z0-9]+$",
            "type": "string",
            "description": "Unique identifier prefixed with `evnt_`."
          },
          "time": {
            "type": "string",
            "description": "A timestamp in ISO 8601 format of the date USPS registered the event.",
            "contentEncoding": "date-time"
          },
          "date_created": {
            "type": "string",
            "description": "A timestamp in ISO 8601 format of the date the resource was created.",
            "contentEncoding": "date-time"
          },
          "date_modified": {
            "type": "string",
            "description": "A timestamp in ISO 8601 format of the date the resource was last modified.",
            "contentEncoding": "date-time"
          },
          "object": {
            "allOf": [
              {
                "$ref": "#/components/schemas/object3"
              },
              {}
            ]
          },
          "type": {
            "const": "normal",
            "type": "string",
            "description": "non-Certified postcards, self mailers, letters, and checks"
          },
          "name": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Name"
              },
              {}
            ]
          },
          "details": {
            "type": [
              "object",
              "null"
            ],
            "description": "Will be `null` for `type=normal` events"
          },
          "location": {
            "type": [
              "string",
              "null"
            ],
            "description": "The zip code in which the scan event occurred. Null for `Mailed` events."
          }
        }
      },
      "check": {
        "title": "check",
        "required": [
          "use_type",
          "id",
          "amount",
          "bank_account",
          "url",
          "to",
          "carrier",
          "date_created",
          "date_modified"
        ],
        "type": "object",
        "properties": {
          "description": {
            "maxLength": 255,
            "type": [
              "string",
              "null"
            ],
            "description": "An internal description that identifies this resource. Must be no longer than 255 characters."
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Use metadata to store custom information for tagging and labeling back to your internal systems. Must be an object with up to 20 key-value pairs. Keys must be at most 40 characters and values must be at most 500 characters. Neither can contain the characters `\"` and `\\`. i.e. '{\"customer_id\" : \"NEWYORK2015\"}' Nested objects are not supported.  See [Metadata](#section/Metadata) for more information."
          },
          "merge_variables": {
            "type": [
              "object",
              "null"
            ],
            "description": "You can input a merge variable payload object to your template to render dynamic content. For example, if you have a template like: `{{variable_name}}`, pass in `{\"variable_name\": \"Harry\"}` to render `Harry`. `merge_variables` must be an object. Any type of value is accepted as long as the object is valid JSON; you can use `strings`, `numbers`, `booleans`, `arrays`, `objects`, or `null`. The max length of the object is 25,000 characters. If you call `JSON.stringify` on your object, it can be no longer than 25,000 characters. Your variable names cannot contain any whitespace or any of the following special characters: `!`, `\"`, `#`, `%`, `&`, `'`, `(`, `)`, `*`, `+`, `,`, `/`, `;`, `<`, `=`, `>`, `@`, `[`, `\\`, `]`, `^`, `` ` ``, `{`, `|`, `}`, `~`. More instructions can be found in <a href=\"https://help.lob.com/print-and-mail/designing-mail-creatives/dynamic-personalization#using-html-and-merge-variables-10\" target=\"_blank\">our guide to using html and merge variables</a>. Depending on your <a href=\"https://dashboard.lob.com/#/settings/account\" target=\"_blank\">Merge Variable strictness</a> setting, if you define variables in your HTML but do not pass them here, you will either receive an error or the variable will render as an empty string."
          },
          "send_date": {},
          "mail_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MailType2"
              },
              {}
            ]
          },
          "memo": {
            "maxLength": 40,
            "type": [
              "string",
              "null"
            ],
            "description": "Text to include on the memo line of the check."
          },
          "check_number": {
            "maximum": 500000000.0,
            "minimum": 1.0,
            "type": "integer",
            "description": "An integer that designates the check number.\nIf `check_number` is not provided, checks created from a new `bank_account` will start at `10000` and increment with each check created with the `bank_account`.\nA provided `check_number` overrides the defaults. Subsequent checks created with the same `bank_account` will increment from the provided check number.",
            "contentEncoding": "int32"
          },
          "message": {
            "maxLength": 400,
            "type": "string",
            "description": "Max of 400 characters to be included at the bottom of the check page."
          },
          "use_type": {},
          "from": {
            "allOf": [
              {
                "$ref": "#/components/schemas/address_us"
              },
              {}
            ]
          },
          "id": {
            "pattern": "^chk_[a-zA-Z0-9]+$",
            "type": "string",
            "description": "Unique identifier prefixed with `chk_`."
          },
          "amount": {
            "multipleOf": 0.01,
            "maximum": 999999.99,
            "type": "number",
            "description": "The payment amount to be sent in US dollars."
          },
          "bank_account": {
            "allOf": [
              {
                "$ref": "#/components/schemas/bank_account"
              },
              {}
            ]
          },
          "check_bottom_template_id": {
            "pattern": "^tmpl_[a-zA-Z0-9]+$",
            "type": "string"
          },
          "attachment_template_id": {
            "pattern": "^tmpl_[a-zA-Z0-9]+$",
            "type": "string"
          },
          "check_bottom_template_version_id": {
            "pattern": "^vrsn_[a-zA-Z0-9]+$",
            "type": "string"
          },
          "attachment_template_version_id": {
            "pattern": "^vrsn_[a-zA-Z0-9]+$",
            "type": "string"
          },
          "url": {
            "pattern": "^https://lob-assets\\.com/(letters|postcards|bank-accounts|checks|self-mailers|cards)/[a-z]{3,4}_[a-z0-9]{15,16}(\\.pdf|_thumb_[a-z]+_[0-9]+\\.png)\\?(version=[a-z0-9-]*&)?expires=[0-9]{10}&signature=[a-zA-Z0-9-_]+$",
            "type": "string",
            "description": "A [signed link](#section/Asset-URLs) served over HTTPS. The link returned will expire in 30 days to prevent mis-sharing. Each time a GET request is initiated, a new signed URL will be generated."
          },
          "to": {
            "allOf": [
              {
                "$ref": "#/components/schemas/to_address_us_chk"
              },
              {}
            ]
          },
          "carrier": {
            "const": "USPS",
            "type": "string"
          },
          "thumbnails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/thumbnail"
            },
            "description": ""
          },
          "expected_delivery_date": {
            "type": "string",
            "description": "A date in YYYY-MM-DD format of the mailpiece's expected delivery date based on its `send_date`.",
            "contentEncoding": "date"
          },
          "tracking_events": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/tracking_event_normal"
            },
            "description": "An array of tracking_event objects ordered by ascending `time`. Will not be populated for checks created in test mode."
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Thestatusofthebuckslip."
              },
              {}
            ]
          },
          "failure_reason": {
            "type": [
              "string",
              "null"
            ],
            "description": "A string describing the reason for failure if the check failed to render."
          },
          "object": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Object5"
              },
              {}
            ]
          },
          "date_created": {
            "type": "string",
            "description": "A timestamp in ISO 8601 format of the date the resource was created.",
            "contentEncoding": "date-time"
          },
          "date_modified": {
            "type": "string",
            "description": "A timestamp in ISO 8601 format of the date the resource was last modified.",
            "contentEncoding": "date-time"
          },
          "deleted": {
            "type": "boolean",
            "description": "Only returned if the resource has been successfully deleted."
          }
        }
      },
      "check_input_to": {
        "title": "check_input_to",
        "type": "object",
        "properties": {
          "to": {
            "oneOf": [
              {
                "pattern": "^adr_[a-zA-Z0-9]+$",
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/inline_address_us_chk11"
              }
            ],
            "description": "Must either be an address ID or an inline object with correct address parameters. Checks cannot be sent internationally (`address_country` must be `US`). The total string of the sum of `address_line1` and `address_line2` must be no longer than 50 characters combined. If an object is used, an address will be created, corrected, and standardized for free whenever possible using our US Address Verification engine, and returned back with an ID. Depending on your <a href=\"https://dashboard.lob.com/#/settings/editions\" target=\"_blank\">Print & Mail Edition</a>, addresses may also be run through [National Change of Address (NCOALink)](#tag/National-Change-of-Address). If an address used does not meet your account’s <a href=\"https://dashboard.lob.com/#/settings/account\" target=\"_blank\">US Mail Strictness Setting</a>, the request will fail. <a href=\"https://help.lob.com/print-and-mail/all-about-addresses\" target=\"_blank\">More about verification of mailing addresses</a>"
          }
        }
      },
      "check_editable_props": {
        "title": "check_editable_props",
        "required": [
          "use_type",
          "to",
          "from",
          "bank_account",
          "amount"
        ],
        "type": "object",
        "properties": {
          "description": {
            "maxLength": 255,
            "type": [
              "string",
              "null"
            ],
            "description": "An internal description that identifies this resource. Must be no longer than 255 characters."
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Use metadata to store custom information for tagging and labeling back to your internal systems. Must be an object with up to 20 key-value pairs. Keys must be at most 40 characters and values must be at most 500 characters. Neither can contain the characters `\"` and `\\`. i.e. '{\"customer_id\" : \"NEWYORK2015\"}' Nested objects are not supported.  See [Metadata](#section/Metadata) for more information."
          },
          "merge_variables": {
            "type": [
              "object",
              "null"
            ],
            "description": "You can input a merge variable payload object to your template to render dynamic content. For example, if you have a template like: `{{variable_name}}`, pass in `{\"variable_name\": \"Harry\"}` to render `Harry`. `merge_variables` must be an object. Any type of value is accepted as long as the object is valid JSON; you can use `strings`, `numbers`, `booleans`, `arrays`, `objects`, or `null`. The max length of the object is 25,000 characters. If you call `JSON.stringify` on your object, it can be no longer than 25,000 characters. Your variable names cannot contain any whitespace or any of the following special characters: `!`, `\"`, `#`, `%`, `&`, `'`, `(`, `)`, `*`, `+`, `,`, `/`, `;`, `<`, `=`, `>`, `@`, `[`, `\\`, `]`, `^`, `` ` ``, `{`, `|`, `}`, `~`. More instructions can be found in <a href=\"https://help.lob.com/print-and-mail/designing-mail-creatives/dynamic-personalization#using-html-and-merge-variables-10\" target=\"_blank\">our guide to using html and merge variables</a>. Depending on your <a href=\"https://dashboard.lob.com/#/settings/account\" target=\"_blank\">Merge Variable strictness</a> setting, if you define variables in your HTML but do not pass them here, you will either receive an error or the variable will render as an empty string."
          },
          "send_date": {},
          "mail_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MailType2"
              },
              {}
            ]
          },
          "memo": {
            "maxLength": 40,
            "type": [
              "string",
              "null"
            ],
            "description": "Text to include on the memo line of the check."
          },
          "check_number": {
            "maximum": 500000000.0,
            "minimum": 1.0,
            "type": "integer",
            "description": "An integer that designates the check number.\nIf `check_number` is not provided, checks created from a new `bank_account` will start at `10000` and increment with each check created with the `bank_account`.\nA provided `check_number` overrides the defaults. Subsequent checks created with the same `bank_account` will increment from the provided check number.",
            "contentEncoding": "int32"
          },
          "message": {
            "maxLength": 400,
            "type": "string",
            "description": "Max of 400 characters to be included at the bottom of the check page."
          },
          "use_type": {},
          "to": {
            "oneOf": [
              {
                "pattern": "^adr_[a-zA-Z0-9]+$",
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/inline_address_us_chk11"
              }
            ],
            "description": "Must either be an address ID or an inline object with correct address parameters. Checks cannot be sent internationally (`address_country` must be `US`). The total string of the sum of `address_line1` and `address_line2` must be no longer than 50 characters combined. If an object is used, an address will be created, corrected, and standardized for free whenever possible using our US Address Verification engine, and returned back with an ID. Depending on your <a href=\"https://dashboard.lob.com/#/settings/editions\" target=\"_blank\">Print & Mail Edition</a>, addresses may also be run through [National Change of Address (NCOALink)](#tag/National-Change-of-Address). If an address used does not meet your account’s <a href=\"https://dashboard.lob.com/#/settings/account\" target=\"_blank\">US Mail Strictness Setting</a>, the request will fail. <a href=\"https://help.lob.com/print-and-mail/all-about-addresses\" target=\"_blank\">More about verification of mailing addresses</a>"
          },
          "from": {
            "oneOf": [
              {
                "pattern": "^adr_[a-zA-Z0-9]+$",
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/inline_address_us"
              }
            ],
            "description": "Must either be an address ID or an inline object with correct address parameters. Must either be an address ID or an inline object with correct address parameters. All addresses will be standardized into uppercase without being modified by verification."
          },
          "bank_account": {
            "pattern": "^bank_[a-zA-Z0-9]+$",
            "type": "string"
          },
          "amount": {
            "maximum": 999999.99,
            "type": "number",
            "description": "The payment amount to be sent in US dollars. Amounts will be rounded to two decimal places."
          },
          "logo": {
            "oneOf": [
              {
                "pattern": "^https://[-a-zA-Z0-9@:%._+~#=/]{1,256}.(png|jpg)$",
                "type": "string"
              },
              {
                "pattern": "^(?!https://)[a-zA-Z0-9@:%._+~#=/]{1,256}.(png|jpg)$",
                "type": "string"
              }
            ],
            "description": "Accepts a remote URL or local file upload to an image to print (in grayscale) in the upper-left corner of your check. Image requirements:\n\n  * RGB or CMYK\n\n  * square\n\n  * minimum size: 100px x 100px\n\n  * transparent backgrond\n\n  * `png` or `jpg`"
          },
          "check_bottom": {},
          "attachment": {
            "oneOf": [
              {
                "maxLength": 10000,
                "pattern": "<",
                "type": "string"
              },
              {
                "pattern": "^tmpl_[a-zA-Z0-9]+$",
                "type": "string"
              },
              {
                "pattern": "^https://[-a-zA-Z0-9@:%._+~#=/]{1,256}.(html?|pdf|png|jpg)$",
                "type": "string"
              },
              {
                "pattern": "^(?!https://)[a-zA-Z0-9@:%._+~#=/]{1,256}.(html?|pdf|png|jpg)$",
                "type": "string"
              }
            ],
            "description": "A document to include with the check.\n\nNotes:\n- HTML merge variables should not include delimiting whitespace.\n- All pages of PDF, PNG, and JPGs must be sized at 8.5\"x11\" at 300 DPI, while supplied HTML will be rendered and trimmed to as many 8.5\"x11\" pages as necessary.\n- If a PDF is provided, it must be 6 pages or fewer.\n- The attachment will be printed double-sided in black & white and will be included in the envelope after the check page.\n- Please follow these <a href=\"https://s3-us-west-2.amazonaws.com/public.lob.com/assets/templates/check_attachment_template.pdf\" target=\"_blank\">design guidelines</a>.\n\nSee <a href=\"https://lob.com/pricing/print-mail#compare\" target=\"_blank\">pricing</a> for extra costs incurred. Need more help? Consult our [HTML examples](#section/HTML-Examples)."
          },
          "billing_group_id": {
            "type": "string",
            "description": "An optional string with the billing group ID to tag your usage with. Is used for billing purposes. Requires special activation to use. See <a href=\"#tag/Billing-Groups\">Billing Group API</a> for more information."
          }
        }
      },
      "check_deletion": {
        "title": "check_deletion",
        "type": "object",
        "properties": {
          "id": {
            "pattern": "^chk_[a-zA-Z0-9]+$",
            "type": "string",
            "description": "Unique identifier prefixed with `chk_`."
          },
          "deleted": {
            "type": "boolean",
            "description": "Only returned if the resource has been successfully deleted."
          }
        },
        "description": "Lob uses RESTful HTTP response codes to indicate success or failure of an API request. In general, 2xx indicates success, 4xx indicate an input error, and 5xx indicates an error on Lob's end."
      },
      "qr_code_campaigns": {
        "title": "qr_code_campaigns",
        "required": [
          "position",
          "width"
        ],
        "type": "object",
        "properties": {
          "position": {
            "const": "relative",
            "type": "string",
            "description": "Sets how a QR code is being positioned in the document. Together with this, you should provide one of 'top' or 'bottom', and one of 'left' or 'right'."
          },
          "top": {
            "type": "string",
            "description": "Vertical distance (in inches) to place QR code from the top. Only allowed if \"bottom\" isn't provided."
          },
          "right": {
            "type": "string",
            "description": "Horizonal distance (in inches) to place QR code from the right. Only allowed if \"left\" isn't provided."
          },
          "left": {
            "type": "string",
            "description": "Horizonal distance (in inches) to place QR code from the left. Only allowed if \"right\" isn't provided."
          },
          "bottom": {
            "type": "string",
            "description": "Vertical distance (in inches) to place QR code from the bottom. Only allowed if \"top\" isn't provided."
          },
          "redirect_url": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "description": "Redirect all mail recipients to either a single URL or a custom personalized URL for each recipient.  To redirect to a single URL for the whole campaign, add a `redirect_url` in the request body along with the url as string. To redirect to a custom URL for each recipient, do not provide any value for `redirect_url`. Instead, create an extra column in the [audience file](https://help.lob.com/print-and-mail/building-a-mail-strategy/campaign-or-triggered-sends/campaign-audience-guide) with a unique link against each address row and while creating an upload, map `qr_code_redirect_url` to this column. If the QR code section is used but a redirection url is not provided or mapped while creating an upload, then there might be failures in creating individual mail pieces."
          },
          "width": {
            "type": "string",
            "description": "The size (in inches) of the QR code with a minimum of 1 inch. All QR codes are generated as a square."
          },
          "pages": {
            "type": "string",
            "description": "Specify the pages where the QR code should be stamped in a comma separated format. Your QR code can be printed in the same position on multiple pages. For postcards, the values should either be \"front\", \"back\" (for either front or back) or \"front,back\" (for the QR code to be printed on both sides). For self-mailers, the values should either be \"inside\", \"outside\" (for either inside or outside) or \"inside,outside\" (for the QR code to be printed on both sides). For letters, the values can be specific page numbers (\"1\", \"3\"), page number ranges such as \"1-3\", or a comma separated combination of both (\"1,3,5-7\")."
          }
        },
        "description": "Customize and place a QR code on all the postcards, letters or self mailers in a campaign. Redirect URLs can either be unique for each recipient, or a single link can be used for the whole campaign. See `redirect_url` attribute below for more details."
      },
      "writable": {
        "title": "writable",
        "type": "object",
        "properties": {
          "mail_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/mail_type"
              },
              {}
            ]
          },
          "size": {
            "allOf": [
              {
                "$ref": "#/components/schemas/postcard_size"
              },
              {}
            ]
          },
          "qr_code": {
            "allOf": [
              {
                "$ref": "#/components/schemas/QrCode1"
              },
              {}
            ]
          }
        },
        "description": "Properties that the postcards in your Creative should have. Check within in order to add a QR code to your creative."
      },
      "letter_add_on_types": {
        "title": "letter_add_on_types",
        "enum": [
          "buckslips",
          "cards",
          "custom_envelope"
        ],
        "type": "string"
      },
      "letter_details_writable": {
        "title": "letter_details_writable",
        "required": [
          "color"
        ],
        "type": "object",
        "properties": {
          "address_placement": {
            "allOf": [
              {
                "$ref": "#/components/schemas/address_placement"
              },
              {}
            ]
          },
          "add_on_types": {
            "maxItems": 3,
            "minItems": 0,
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/letter_add_on_types"
            },
            "description": "An array containing the types of add-ons for the Letter Creative."
          },
          "buckslips": {
            "maxItems": 1,
            "minItems": 0,
            "type": [
              "array",
              "null"
            ],
            "items": {
              "pattern": "^bck_[a-zA-Z0-9]+$",
              "type": "string"
            },
            "description": "A single-element array containing an existing buckslip id in a string format. See [buckslips](#tag/Buckslips) for more information. Note that buckslip letter campaigns require a minimum send quantity of 5,000 letters per campaign."
          },
          "cards": {
            "maxItems": 1,
            "minItems": 0,
            "type": [
              "array",
              "null"
            ],
            "items": {
              "pattern": "^card_[a-zA-Z0-9]+$",
              "type": "string"
            },
            "description": "A single-element array containing an existing card id in a string format. See [cards](#tag/Cards) for more information."
          },
          "color": {
            "type": "boolean",
            "description": "Set this key to `true` if you would like to print in color. Set to `false` if you would like to print in black and white."
          },
          "custom_envelope": {
            "pattern": "^env_[a-zA-Z0-9]+$",
            "type": [
              "string",
              "null"
            ],
            "description": "Accepts an envelope ID for any customized envelope with available inventory. If no inventory is available for the specified ID, the letter will not be sent, and an error will be returned. If the letter has more than 6 sheets, it will be sent in a blank flat envelope. Custom envelopes may be created and ordered from the dashboard. This feature is exclusive to certain customers. Upgrade to the appropriate <a href=\"https://dashboard.lob.com/#/settings/editions\" target=\"_blank\">Print & Mail Edition</a> to gain access."
          },
          "double_sided": {
            "type": "boolean",
            "description": "Set this attribute to `true` for double sided printing, or `false` for for single sided printing. Defaults to `true`.",
            "default": true
          },
          "extra_service": {},
          "mail_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/mail_type"
              },
              {}
            ]
          },
          "qr_code": {
            "allOf": [
              {
                "$ref": "#/components/schemas/QrCode1"
              },
              {}
            ]
          }
        },
        "description": "Properties that the letters in your Creative should have. Check within in order to add a QR code to your creative."
      },
      "self_mailer_details_writable": {
        "title": "self_mailer_details_writable",
        "type": "object",
        "properties": {
          "mail_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/mail_type"
              },
              {}
            ]
          },
          "size": {
            "allOf": [
              {
                "$ref": "#/components/schemas/self_mailer_size"
              },
              {}
            ]
          },
          "qr_code": {
            "allOf": [
              {
                "$ref": "#/components/schemas/QrCode1"
              },
              {}
            ]
          }
        },
        "description": "Properties that the self mailers in your Creative should have. Check within in order to add a QR code to your creative."
      },
      "recipient_input": {
        "title": "recipient_input",
        "required": [
          "recipient",
          "primary_line",
          "city",
          "state",
          "zip_code"
        ],
        "type": "object",
        "properties": {
          "recipient": {
            "maxLength": 500,
            "type": [
              "string",
              "null"
            ],
            "description": "The intended recipient, typically a person's or firm's name."
          },
          "primary_line": {
            "maxLength": 500,
            "type": "string",
            "description": "The primary delivery line (usually the street address) of the address.\nCombination of the following applicable `components`:\n* `primary_number`\n* `street_predirection`\n* `street_name`\n* `street_suffix`\n* `street_postdirection`\n* `secondary_designator`\n* `secondary_number`\n* `pmb_designator`\n* `pmb_number`"
          },
          "secondary_line": {
            "maxLength": 500,
            "type": "string",
            "description": "The secondary delivery line of the address. This field is typically empty but may contain information if `primary_line` is too long."
          },
          "urbanization": {
            "maxLength": 500,
            "type": "string",
            "description": "Only present for addresses in Puerto Rico. An urbanization refers to an area, sector, or development within a city. See <a href=\"https://pe.usps.com/text/pub28/28api_008.htm#:~:text=I51.,-4%20Urbanizations&text=In%20Puerto%20Rico%2C%20identical%20street,placed%20before%20the%20urbanization%20name.\" target=\"_blank\">USPS documentation</a> for clarification."
          },
          "city": {
            "maxLength": 200,
            "type": "string"
          },
          "state": {
            "maxLength": 50,
            "type": "string",
            "description": "The <a href=\"https://en.wikipedia.org/wiki/ISO_3166-2:US\" target=\"_blank\">ISO 3166-2</a> two letter code or subdivision name for the state. `city` and `state` are required if no `zip_code` is passed."
          },
          "zip_code": {
            "pattern": "^\\d{5}((-)?\\d{4})?$",
            "type": "string"
          }
        }
      },
      "company_input": {
        "title": "company_input",
        "required": [
          "company",
          "primary_line",
          "city",
          "state",
          "zip_code"
        ],
        "type": "object",
        "properties": {
          "company": {
            "maxLength": 500,
            "type": [
              "string",
              "null"
            ],
            "description": "The name of the company or firm."
          },
          "primary_line": {
            "maxLength": 500,
            "type": "string",
            "description": "The primary delivery line (usually the street address) of the address.\nCombination of the following applicable `components`:\n* `primary_number`\n* `street_predirection`\n* `street_name`\n* `street_suffix`\n* `street_postdirection`\n* `secondary_designator`\n* `secondary_number`\n* `pmb_designator`\n* `pmb_number`"
          },
          "secondary_line": {
            "maxLength": 500,
            "type": "string",
            "description": "The secondary delivery line of the address. This field is typically empty but may contain information if `primary_line` is too long."
          },
          "urbanization": {
            "maxLength": 500,
            "type": "string",
            "description": "Only present for addresses in Puerto Rico. An urbanization refers to an area, sector, or development within a city. See <a href=\"https://pe.usps.com/text/pub28/28api_008.htm#:~:text=I51.,-4%20Urbanizations&text=In%20Puerto%20Rico%2C%20identical%20street,placed%20before%20the%20urbanization%20name.\" target=\"_blank\">USPS documentation</a> for clarification."
          },
          "city": {
            "maxLength": 200,
            "type": "string"
          },
          "state": {
            "maxLength": 50,
            "type": "string",
            "description": "The <a href=\"https://en.wikipedia.org/wiki/ISO_3166-2:US\" target=\"_blank\">ISO 3166-2</a> two letter code or subdivision name for the state. `city` and `state` are required if no `zip_code` is passed."
          },
          "zip_code": {
            "pattern": "^\\d{5}((-)?\\d{4})?$",
            "type": "string"
          }
        }
      },
      "recipient_validation": {
        "title": "recipient_validation",
        "type": "object",
        "properties": {
          "id": {
            "pattern": "^id_validation_[a-zA-Z0-9_]+$",
            "type": "string",
            "description": "Unique identifier prefixed with `id_validation_`."
          },
          "recipient": {
            "maxLength": 500,
            "type": [
              "string",
              "null"
            ],
            "description": "The name of the person whose identity is being validated."
          },
          "primary_line": {
            "maxLength": 500,
            "type": "string",
            "description": "The primary delivery line (usually the street address) of the address.\nCombination of the following applicable `components`:\n* `primary_number`\n* `street_predirection`\n* `street_name`\n* `street_suffix`\n* `street_postdirection`\n* `secondary_designator`\n* `secondary_number`\n* `pmb_designator`\n* `pmb_number`"
          },
          "secondary_line": {
            "maxLength": 500,
            "type": "string",
            "description": "The secondary delivery line of the address. This field is typically empty but may contain information if `primary_line` is too long."
          },
          "urbanization": {
            "maxLength": 500,
            "type": "string",
            "description": "Only present for addresses in Puerto Rico. An urbanization refers to an area, sector, or development within a city. See <a href=\"https://pe.usps.com/text/pub28/28api_008.htm#:~:text=I51.,-4%20Urbanizations&text=In%20Puerto%20Rico%2C%20identical%20street,placed%20before%20the%20urbanization%20name.\" target=\"_blank\">USPS documentation</a> for clarification."
          },
          "last_line": {
            "type": "string",
            "description": "Combination of the following applicable `components`:\n* City (`city`)\n* State (`state`)\n* ZIP code (`zip_code`)\n* ZIP+4 (`zip_code_plus_4`)"
          },
          "score": {
            "maximum": 100.0,
            "minimum": 0.0,
            "type": [
              "number",
              "null"
            ],
            "description": "A numerical score between 0 and 100 that represents the likelihood the provided name is associated with a physical address."
          },
          "confidence": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Confidence"
              },
              {}
            ]
          },
          "object": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Object6"
              },
              {}
            ]
          }
        }
      },
      "company_validation": {
        "title": "company_validation",
        "type": "object",
        "properties": {
          "id": {
            "pattern": "^id_validation_[a-zA-Z0-9_]+$",
            "type": "string",
            "description": "Unique identifier prefixed with `id_validation_`."
          },
          "company": {
            "maxLength": 500,
            "type": [
              "string",
              "null"
            ],
            "description": "The name of the company or firm."
          },
          "primary_line": {
            "maxLength": 500,
            "type": "string",
            "description": "The primary delivery line (usually the street address) of the address.\nCombination of the following applicable `components`:\n* `primary_number`\n* `street_predirection`\n* `street_name`\n* `street_suffix`\n* `street_postdirection`\n* `secondary_designator`\n* `secondary_number`\n* `pmb_designator`\n* `pmb_number`"
          },
          "secondary_line": {
            "maxLength": 500,
            "type": "string",
            "description": "The secondary delivery line of the address. This field is typically empty but may contain information if `primary_line` is too long."
          },
          "urbanization": {
            "maxLength": 500,
            "type": "string",
            "description": "Only present for addresses in Puerto Rico. An urbanization refers to an area, sector, or development within a city. See <a href=\"https://pe.usps.com/text/pub28/28api_008.htm#:~:text=I51.,-4%20Urbanizations&text=In%20Puerto%20Rico%2C%20identical%20street,placed%20before%20the%20urbanization%20name.\" target=\"_blank\">USPS documentation</a> for clarification."
          },
          "last_line": {
            "type": "string",
            "description": "Combination of the following applicable `components`:\n* City (`city`)\n* State (`state`)\n* ZIP code (`zip_code`)\n* ZIP+4 (`zip_code_plus_4`)"
          },
          "score": {
            "maximum": 100.0,
            "minimum": 0.0,
            "type": [
              "number",
              "null"
            ],
            "description": "A numerical score between 0 and 100 that represents the likelihood the provided name is associated with a physical address."
          },
          "confidence": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Confidence"
              },
              {}
            ]
          },
          "object": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Object6"
              },
              {}
            ]
          }
        }
      },
      "intl_autocompletions_writable": {
        "title": "intl_autocompletions_writable",
        "required": [
          "address_prefix",
          "country"
        ],
        "type": "object",
        "properties": {
          "address_prefix": {
            "type": "string",
            "description": "Only accepts numbers and street names in an alphanumeric format."
          },
          "city": {
            "type": "string",
            "description": "An optional city input used to filter suggestions. Case insensitive and does not match partial abbreviations."
          },
          "state": {
            "type": "string",
            "description": "An optional state input used to filter suggestions. Case insensitive and does not match partial abbreviations."
          },
          "zip_code": {
            "type": "string",
            "description": "An optional Zip Code input used to filter suggestions. Matches partial entries."
          },
          "country": {
            "allOf": [
              {
                "$ref": "#/components/schemas/country_extended"
              },
              {}
            ]
          },
          "geo_ip_sort": {
            "type": "boolean",
            "description": "If `true`, sort suggestions by proximity to the IP set in the `X-Forwarded-For` header."
          }
        }
      },
      "intl_suggestions": {
        "title": "intl_suggestions",
        "required": [
          "primary_number_range",
          "primary_line",
          "city",
          "country",
          "state",
          "zip_code"
        ],
        "type": "object",
        "properties": {
          "primary_number_range": {
            "type": "string",
            "description": "The primary number range of the address that identifies a building at street level."
          },
          "primary_line": {
            "type": "string",
            "description": "The primary delivery line (usually the street address) of the address.\nCombination of the following applicable `components` (primary number &\nsecondary information may be missing or inaccurate):\n* `primary_number`\n* `street_predirection`\n* `street_name`\n* `street_suffix`\n* `street_postdirection`\n* `secondary_designator`\n* `secondary_number`\n* `pmb_designator`\n* `pmb_number`"
          },
          "city": {
            "maxLength": 200,
            "type": "string"
          },
          "country": {
            "allOf": [
              {
                "$ref": "#/components/schemas/country_extended"
              },
              {}
            ]
          },
          "state": {
            "maxLength": 2,
            "type": "string",
            "description": "The <a href=\"https://en.wikipedia.org/wiki/ISO_3166-2\" target=\"_blank\">ISO 3166-2</a> two letter code for the state."
          },
          "zip_code": {
            "maxLength": 12,
            "type": "string",
            "description": "The postal code."
          }
        }
      },
      "intl_autocompletions": {
        "title": "intl_autocompletions",
        "type": "object",
        "properties": {
          "id": {
            "pattern": "^intl_auto_[a-zA-Z0-9]+$",
            "type": "string",
            "description": "Unique identifier prefixed with `intl_auto_`."
          },
          "suggestions": {
            "maxItems": 10,
            "minItems": 0,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/intl_suggestions"
            },
            "description": "An array of objects representing suggested addresses."
          }
        }
      },
      "single_line_address_intl": {
        "title": "single_line_address_intl",
        "required": [
          "address",
          "country"
        ],
        "type": "object",
        "properties": {
          "address": {
            "maxLength": 500,
            "type": "string",
            "description": "The entire address in one string (e.g., \"370 Water St C1N 1C4\")."
          },
          "country": {
            "allOf": [
              {
                "$ref": "#/components/schemas/country_extended"
              },
              {}
            ]
          }
        }
      },
      "inline_address_intl": {
        "title": "inline_address_intl",
        "required": [
          "address_line1",
          "address_city",
          "address_state",
          "address_zip",
          "name",
          "company",
          "address_country"
        ],
        "type": "object",
        "properties": {
          "address_line1": {
            "maxLength": 200,
            "type": "string",
            "description": "The primary number, street name, and directional information."
          },
          "address_line2": {
            "maxLength": 200,
            "type": [
              "string",
              "null"
            ],
            "description": "An optional field containing any information which can't fit into line 1."
          },
          "address_city": {
            "maxLength": 200,
            "type": [
              "string",
              "null"
            ]
          },
          "address_state": {
            "maxLength": 200,
            "type": [
              "string",
              "null"
            ]
          },
          "address_zip": {
            "maxLength": 40,
            "type": [
              "string",
              "null"
            ],
            "description": "Optional postal code."
          },
          "description": {
            "maxLength": 255,
            "type": [
              "string",
              "null"
            ],
            "description": "An internal description that identifies this resource. Must be no longer than 255 characters."
          },
          "name": {
            "maxLength": 40,
            "type": [
              "string",
              "null"
            ],
            "description": "Either `name` or `company` is required, you may also add both. Must be no longer than 40 characters. If both `name` and `company` are provided, they will be printed on two separate lines above the rest of the address."
          },
          "company": {
            "maxLength": 40,
            "type": [
              "string",
              "null"
            ],
            "description": "Either `name` or `company` is required, you may also add both. Must be no longer than 40 characters. If both `name` and `company` are provided, they will be printed on two separate lines above the rest of the address. This field can be used for any secondary recipient information which is not part of the actual mailing address (Company Name, Department, Attention Line, etc)."
          },
          "phone": {
            "maxLength": 40,
            "type": [
              "string",
              "null"
            ],
            "description": "Must be no longer than 40 characters."
          },
          "email": {
            "maxLength": 100,
            "type": [
              "string",
              "null"
            ],
            "description": "Must be no longer than 100 characters."
          },
          "address_country": {
            "allOf": [
              {
                "$ref": "#/components/schemas/country_extended"
              },
              {}
            ]
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Use metadata to store custom information for tagging and labeling back to your internal systems. Must be an object with up to 20 key-value pairs. Keys must be at most 40 characters and values must be at most 500 characters. Neither can contain the characters `\"` and `\\`. i.e. '{\"customer_id\" : \"NEWYORK2015\"}' Nested objects are not supported.  See [Metadata](#section/Metadata) for more information."
          }
        }
      },
      "return_envelope_returned": {
        "title": "return_envelope_returned",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique ID of the Return Envelope."
          },
          "alias": {
            "type": "string",
            "description": "A quick reference name for the Return Envelope."
          },
          "url": {
            "type": "string",
            "description": "The url of the return envelope."
          },
          "object": {
            "type": "string",
            "description": "Value is resource type."
          }
        }
      },
      "generated": {
        "title": "generated",
        "required": [
          "to",
          "carrier"
        ],
        "type": "object",
        "properties": {
          "to": {},
          "carrier": {
            "const": "USPS",
            "type": "string"
          },
          "thumbnails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/thumbnail"
            },
            "description": ""
          },
          "expected_delivery_date": {
            "type": "string",
            "description": "A date in YYYY-MM-DD format of the mailpiece's expected delivery date based on its `send_date`.",
            "contentEncoding": "date"
          },
          "date_created": {
            "type": "string",
            "description": "A timestamp in ISO 8601 format of the date the resource was created.",
            "contentEncoding": "date-time"
          },
          "date_modified": {
            "type": "string",
            "description": "A timestamp in ISO 8601 format of the date the resource was last modified.",
            "contentEncoding": "date-time"
          },
          "deleted": {
            "type": "boolean",
            "description": "Only returned if the resource has been successfully deleted."
          }
        }
      },
      "from": {
        "title": "from",
        "type": "object",
        "properties": {
          "from": {}
        }
      },
      "ltr_use_type": {
        "title": "ltr_use_type",
        "enum": [
          "marketing",
          "operational"
        ],
        "type": "string",
        "description": "The use type for each mailpiece. Can be one of marketing, operational, or null. Null use_type is only allowed if an account default use_type is selected in Account Settings. For more information on use_type, see our  [Help Center article](https://help.lob.com/print-and-mail/building-a-mail-strategy/managing-mail-settings/declaring-mail-use-type)."
      },
      "letter_generated_base": {
        "title": "letter_generated_base",
        "required": [
          "to",
          "carrier",
          "from",
          "id",
          "use_type"
        ],
        "type": "object",
        "properties": {
          "to": {},
          "carrier": {
            "const": "USPS",
            "type": "string"
          },
          "thumbnails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/thumbnail"
            },
            "description": ""
          },
          "expected_delivery_date": {
            "type": "string",
            "description": "A date in YYYY-MM-DD format of the mailpiece's expected delivery date based on its `send_date`.",
            "contentEncoding": "date"
          },
          "date_created": {
            "type": "string",
            "description": "A timestamp in ISO 8601 format of the date the resource was created.",
            "contentEncoding": "date-time"
          },
          "date_modified": {
            "type": "string",
            "description": "A timestamp in ISO 8601 format of the date the resource was last modified.",
            "contentEncoding": "date-time"
          },
          "deleted": {
            "type": "boolean",
            "description": "Only returned if the resource has been successfully deleted."
          },
          "from": {},
          "url": {
            "pattern": "^https://lob-assets\\.com/(letters|postcards|bank-accounts|checks|self-mailers|cards)/[a-z]{3,4}_[a-z0-9]{15,16}(\\.pdf|_thumb_[a-z]+_[0-9]+\\.png)\\?(version=[a-z0-9-]*&)?expires=[0-9]{10}&signature=[a-zA-Z0-9-_]+$",
            "type": "string",
            "description": "A [signed link](#section/Asset-URLs) served over HTTPS. The link returned will expire in 30 days to prevent mis-sharing. Each time a GET request is initiated, a new signed URL will be generated."
          },
          "id": {
            "pattern": "^ltr_[a-zA-Z0-9]+$",
            "type": "string",
            "description": "Unique identifier prefixed with `ltr_`."
          },
          "template_id": {
            "pattern": "^tmpl_[a-zA-Z0-9]+$",
            "type": "string"
          },
          "template_version_id": {
            "pattern": "^vrsn_[a-zA-Z0-9]+$",
            "type": "string"
          },
          "campaign_id": {
            "type": [
              "string",
              "null"
            ],
            "description": "The unique ID of the associated campaign if the resource was generated from a campaign."
          },
          "use_type": {},
          "fsc": {
            "type": "boolean",
            "description": "This is in beta. Contact support@lob.com or your account contact to learn more. Not available for `A4` letter size.",
            "default": false
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Thestatusofthebuckslip."
              },
              {}
            ]
          },
          "failure_reason": {
            "type": [
              "string",
              "null"
            ],
            "description": "A string describing the reason for failure if the letter failed to render."
          },
          "object": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Object8"
              },
              {}
            ]
          }
        }
      },
      "no_extra_service": {
        "title": "no_extra_service",
        "required": [
          "color",
          "to",
          "carrier",
          "from",
          "id",
          "use_type"
        ],
        "type": "object",
        "properties": {
          "tracking_events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tracking_event_normal"
            },
            "description": "An array of tracking events ordered by ascending `time`."
          },
          "cards": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/card"
            },
            "description": "An array of cards associated with a specific letter"
          },
          "buckslips": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/buckslip"
            },
            "description": "An array of buckslip(s) associated with a specific letter"
          },
          "return_address": {},
          "description": {
            "maxLength": 255,
            "type": [
              "string",
              "null"
            ],
            "description": "An internal description that identifies this resource. Must be no longer than 255 characters."
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Use metadata to store custom information for tagging and labeling back to your internal systems. Must be an object with up to 20 key-value pairs. Keys must be at most 40 characters and values must be at most 500 characters. Neither can contain the characters `\"` and `\\`. i.e. '{\"customer_id\" : \"NEWYORK2015\"}' Nested objects are not supported.  See [Metadata](#section/Metadata) for more information."
          },
          "merge_variables": {
            "type": [
              "object",
              "null"
            ],
            "description": "You can input a merge variable payload object to your template to render dynamic content. For example, if you have a template like: `{{variable_name}}`, pass in `{\"variable_name\": \"Harry\"}` to render `Harry`. `merge_variables` must be an object. Any type of value is accepted as long as the object is valid JSON; you can use `strings`, `numbers`, `booleans`, `arrays`, `objects`, or `null`. The max length of the object is 25,000 characters. If you call `JSON.stringify` on your object, it can be no longer than 25,000 characters. Your variable names cannot contain any whitespace or any of the following special characters: `!`, `\"`, `#`, `%`, `&`, `'`, `(`, `)`, `*`, `+`, `,`, `/`, `;`, `<`, `=`, `>`, `@`, `[`, `\\`, `]`, `^`, `` ` ``, `{`, `|`, `}`, `~`. More instructions can be found in <a href=\"https://help.lob.com/print-and-mail/designing-mail-creatives/dynamic-personalization#using-html-and-merge-variables-10\" target=\"_blank\">our guide to using html and merge variables</a>. Depending on your <a href=\"https://dashboard.lob.com/#/settings/account\" target=\"_blank\">Merge Variable strictness</a> setting, if you define variables in your HTML but do not pass them here, you will either receive an error or the variable will render as an empty string."
          },
          "send_date": {},
          "mail_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/mail_type"
              },
              {}
            ]
          },
          "color": {
            "type": "boolean",
            "description": "Set this key to `true` if you would like to print in color. Set to `false` if you would like to print in black and white."
          },
          "double_sided": {
            "type": "boolean",
            "description": "Set this attribute to `true` for double sided printing, or `false` for for single sided printing. Defaults to `true`.",
            "default": true
          },
          "address_placement": {
            "allOf": [
              {
                "$ref": "#/components/schemas/address_placement"
              },
              {}
            ]
          },
          "return_envelope": {},
          "perforated_page": {
            "type": [
              "integer",
              "null"
            ],
            "description": "Required if `return_envelope` is `true`. The number of the page that should be perforated for use with the return envelope. Must be greater than or equal to `1`. The blank page added by `address_placement=insert_blank_page` will be ignored when considering the perforated page number. To see how perforation will impact your letter design, view our <a href=\"https://s3-us-west-2.amazonaws.com/public.lob.com/assets/templates/letter_perf_template.pdf\" target=\"_blank\">perforation guide</a>.",
            "contentEncoding": "int32"
          },
          "custom_envelope": {},
          "to": {},
          "carrier": {
            "const": "USPS",
            "type": "string"
          },
          "thumbnails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/thumbnail"
            },
            "description": ""
          },
          "expected_delivery_date": {
            "type": "string",
            "description": "A date in YYYY-MM-DD format of the mailpiece's expected delivery date based on its `send_date`.",
            "contentEncoding": "date"
          },
          "date_created": {
            "type": "string",
            "description": "A timestamp in ISO 8601 format of the date the resource was created.",
            "contentEncoding": "date-time"
          },
          "date_modified": {
            "type": "string",
            "description": "A timestamp in ISO 8601 format of the date the resource was last modified.",
            "contentEncoding": "date-time"
          },
          "deleted": {
            "type": "boolean",
            "description": "Only returned if the resource has been successfully deleted."
          },
          "from": {},
          "url": {
            "pattern": "^https://lob-assets\\.com/(letters|postcards|bank-accounts|checks|self-mailers|cards)/[a-z]{3,4}_[a-z0-9]{15,16}(\\.pdf|_thumb_[a-z]+_[0-9]+\\.png)\\?(version=[a-z0-9-]*&)?expires=[0-9]{10}&signature=[a-zA-Z0-9-_]+$",
            "type": "string",
            "description": "A [signed link](#section/Asset-URLs) served over HTTPS. The link returned will expire in 30 days to prevent mis-sharing. Each time a GET request is initiated, a new signed URL will be generated."
          },
          "id": {
            "pattern": "^ltr_[a-zA-Z0-9]+$",
            "type": "string",
            "description": "Unique identifier prefixed with `ltr_`."
          },
          "template_id": {
            "pattern": "^tmpl_[a-zA-Z0-9]+$",
            "type": "string"
          },
          "template_version_id": {
            "pattern": "^vrsn_[a-zA-Z0-9]+$",
            "type": "string"
          },
          "campaign_id": {
            "type": [
              "string",
              "null"
            ],
            "description": "The unique ID of the associated campaign if the resource was generated from a campaign."
          },
          "use_type": {},
          "fsc": {
            "type": "boolean",
            "description": "This is in beta. Contact support@lob.com or your account contact to learn more. Not available for `A4` letter size.",
            "default": false
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Thestatusofthebuckslip."
              },
              {}
            ]
          },
          "failure_reason": {
            "type": [
              "string",
              "null"
            ],
            "description": "A string describing the reason for failure if the letter failed to render."
          },
          "object": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Object8"
              },
              {}
            ]
          }
        }
      },
      "registered": {
        "title": "registered",
        "required": [
          "extra_service",
          "color",
          "to",
          "carrier",
          "from",
          "id",
          "use_type"
        ],
        "type": "object",
        "properties": {
          "extra_service": {
            "const": "registered",
            "type": "string",
            "description": "Add an extra service to your letter. See <a href=\"https://www.lob.com/pricing/print-mail#compare\" target=\"_blank\">pricing</a> for extra costs incurred.\n  * registered - provides tracking and confirmation for international addresses"
          },
          "tracking_number": {
            "type": [
              "string",
              "null"
            ],
            "description": "The tracking number will appear here when it becomes available.\nDummy tracking numbers are not created in test mode."
          },
          "tracking_events": {
            "maxItems": 0,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tracking_event_normal"
            },
            "description": "Tracking events are not populated for registered letters."
          },
          "return_address": {},
          "description": {
            "maxLength": 255,
            "type": [
              "string",
              "null"
            ],
            "description": "An internal description that identifies this resource. Must be no longer than 255 characters."
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Use metadata to store custom information for tagging and labeling back to your internal systems. Must be an object with up to 20 key-value pairs. Keys must be at most 40 characters and values must be at most 500 characters. Neither can contain the characters `\"` and `\\`. i.e. '{\"customer_id\" : \"NEWYORK2015\"}' Nested objects are not supported.  See [Metadata](#section/Metadata) for more information."
          },
          "merge_variables": {
            "type": [
              "object",
              "null"
            ],
            "description": "You can input a merge variable payload object to your template to render dynamic content. For example, if you have a template like: `{{variable_name}}`, pass in `{\"variable_name\": \"Harry\"}` to render `Harry`. `merge_variables` must be an object. Any type of value is accepted as long as the object is valid JSON; you can use `strings`, `numbers`, `booleans`, `arrays`, `objects`, or `null`. The max length of the object is 25,000 characters. If you call `JSON.stringify` on your object, it can be no longer than 25,000 characters. Your variable names cannot contain any whitespace or any of the following special characters: `!`, `\"`, `#`, `%`, `&`, `'`, `(`, `)`, `*`, `+`, `,`, `/`, `;`, `<`, `=`, `>`, `@`, `[`, `\\`, `]`, `^`, `` ` ``, `{`, `|`, `}`, `~`. More instructions can be found in <a href=\"https://help.lob.com/print-and-mail/designing-mail-creatives/dynamic-personalization#using-html-and-merge-variables-10\" target=\"_blank\">our guide to using html and merge variables</a>. Depending on your <a href=\"https://dashboard.lob.com/#/settings/account\" target=\"_blank\">Merge Variable strictness</a> setting, if you define variables in your HTML but do not pass them here, you will either receive an error or the variable will render as an empty string."
          },
          "send_date": {},
          "mail_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/mail_type"
              },
              {}
            ]
          },
          "color": {
            "type": "boolean",
            "description": "Set this key to `true` if you would like to print in color. Set to `false` if you would like to print in black and white."
          },
          "double_sided": {
            "type": "boolean",
            "description": "Set this attribute to `true` for double sided printing, or `false` for for single sided printing. Defaults to `true`.",
            "default": true
          },
          "address_placement": {
            "allOf": [
              {
                "$ref": "#/components/schemas/address_placement"
              },
              {}
            ]
          },
          "return_envelope": {},
          "perforated_page": {
            "type": [
              "integer",
              "null"
            ],
            "description": "Required if `return_envelope` is `true`. The number of the page that should be perforated for use with the return envelope. Must be greater than or equal to `1`. The blank page added by `address_placement=insert_blank_page` will be ignored when considering the perforated page number. To see how perforation will impact your letter design, view our <a href=\"https://s3-us-west-2.amazonaws.com/public.lob.com/assets/templates/letter_perf_template.pdf\" target=\"_blank\">perforation guide</a>.",
            "contentEncoding": "int32"
          },
          "custom_envelope": {},
          "to": {},
          "carrier": {
            "const": "USPS",
            "type": "string"
          },
          "thumbnails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/thumbnail"
            },
            "description": ""
          },
          "expected_delivery_date": {
            "type": "string",
            "description": "A date in YYYY-MM-DD format of the mailpiece's expected delivery date based on its `send_date`.",
            "contentEncoding": "date"
          },
          "date_created": {
            "type": "string",
            "description": "A timestamp in ISO 8601 format of the date the resource was created.",
            "contentEncoding": "date-time"
          },
          "date_modified": {
            "type": "string",
            "description": "A timestamp in ISO 8601 format of the date the resource was last modified.",
            "contentEncoding": "date-time"
          },
          "deleted": {
            "type": "boolean",
            "description": "Only returned if the resource has been successfully deleted."
          },
          "from": {},
          "url": {
            "pattern": "^https://lob-assets\\.com/(letters|postcards|bank-accounts|checks|self-mailers|cards)/[a-z]{3,4}_[a-z0-9]{15,16}(\\.pdf|_thumb_[a-z]+_[0-9]+\\.png)\\?(version=[a-z0-9-]*&)?expires=[0-9]{10}&signature=[a-zA-Z0-9-_]+$",
            "type": "string",
            "description": "A [signed link](#section/Asset-URLs) served over HTTPS. The link returned will expire in 30 days to prevent mis-sharing. Each time a GET request is initiated, a new signed URL will be generated."
          },
          "id": {
            "pattern": "^ltr_[a-zA-Z0-9]+$",
            "type": "string",
            "description": "Unique identifier prefixed with `ltr_`."
          },
          "template_id": {
            "pattern": "^tmpl_[a-zA-Z0-9]+$",
            "type": "string"
          },
          "template_version_id": {
            "pattern": "^vrsn_[a-zA-Z0-9]+$",
            "type": "string"
          },
          "campaign_id": {
            "type": [
              "string",
              "null"
            ],
            "description": "The unique ID of the associated campaign if the resource was generated from a campaign."
          },
          "use_type": {},
          "fsc": {
            "type": "boolean",
            "description": "This is in beta. Contact support@lob.com or your account contact to learn more. Not available for `A4` letter size.",
            "default": false
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Thestatusofthebuckslip."
              },
              {}
            ]
          },
          "failure_reason": {
            "type": [
              "string",
              "null"
            ],
            "description": "A string describing the reason for failure if the letter failed to render."
          },
          "object": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Object8"
              },
              {}
            ]
          }
        }
      },
      "tracking_event_details": {
        "title": "tracking_event_details",
        "required": [
          "event",
          "description",
          "action_required"
        ],
        "type": "object",
        "properties": {
          "event": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Event"
              },
              {}
            ]
          },
          "description": {
            "type": "string",
            "description": "The description as listed in the description for event."
          },
          "notes": {
            "type": "string",
            "description": "Event-specific notes from USPS about the tracking event."
          },
          "action_required": {
            "type": "boolean",
            "description": "`true` if action is required by the end recipient, `false` otherwise."
          }
        }
      },
      "tracking_event_certified": {
        "title": "tracking_event_certified",
        "required": [
          "id",
          "date_created",
          "date_modified",
          "object",
          "type",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "pattern": "^evnt_[a-zA-Z0-9]+$",
            "type": "string",
            "description": "Unique identifier prefixed with `evnt_`."
          },
          "time": {
            "type": "string",
            "description": "A timestamp in ISO 8601 format of the date USPS registered the event.",
            "contentEncoding": "date-time"
          },
          "date_created": {
            "type": "string",
            "description": "A timestamp in ISO 8601 format of the date the resource was created.",
            "contentEncoding": "date-time"
          },
          "date_modified": {
            "type": "string",
            "description": "A timestamp in ISO 8601 format of the date the resource was last modified.",
            "contentEncoding": "date-time"
          },
          "object": {
            "allOf": [
              {
                "$ref": "#/components/schemas/object3"
              },
              {}
            ]
          },
          "type": {
            "const": "certified",
            "type": "string",
            "description": "a Certified letter tracking event"
          },
          "name": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Name1"
              },
              {}
            ]
          },
          "details": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tracking_event_details"
              },
              {}
            ]
          },
          "location": {
            "type": [
              "string",
              "null"
            ],
            "description": "The zip code in which the event occurred if it exists, otherwise will be the name of a Regional Distribution Center if it exists, otherwise will be null."
          }
        }
      },
      "certified": {
        "title": "certified",
        "required": [
          "extra_service",
          "tracking_events",
          "color",
          "to",
          "carrier",
          "from",
          "id",
          "use_type"
        ],
        "type": "object",
        "properties": {
          "extra_service": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ExtraService1"
              },
              {}
            ]
          },
          "tracking_number": {
            "type": [
              "string",
              "null"
            ],
            "description": "The tracking number will be here immediately upon creation.\nDummy tracking numbers are created in test mode."
          },
          "tracking_events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tracking_event_certified"
            },
            "description": "An array of certified tracking events ordered by ascending `time`. Not populated in test mode."
          },
          "return_address": {},
          "description": {
            "maxLength": 255,
            "type": [
              "string",
              "null"
            ],
            "description": "An internal description that identifies this resource. Must be no longer than 255 characters."
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Use metadata to store custom information for tagging and labeling back to your internal systems. Must be an object with up to 20 key-value pairs. Keys must be at most 40 characters and values must be at most 500 characters. Neither can contain the characters `\"` and `\\`. i.e. '{\"customer_id\" : \"NEWYORK2015\"}' Nested objects are not supported.  See [Metadata](#section/Metadata) for more information."
          },
          "merge_variables": {
            "type": [
              "object",
              "null"
            ],
            "description": "You can input a merge variable payload object to your template to render dynamic content. For example, if you have a template like: `{{variable_name}}`, pass in `{\"variable_name\": \"Harry\"}` to render `Harry`. `merge_variables` must be an object. Any type of value is accepted as long as the object is valid JSON; you can use `strings`, `numbers`, `booleans`, `arrays`, `objects`, or `null`. The max length of the object is 25,000 characters. If you call `JSON.stringify` on your object, it can be no longer than 25,000 characters. Your variable names cannot contain any whitespace or any of the following special characters: `!`, `\"`, `#`, `%`, `&`, `'`, `(`, `)`, `*`, `+`, `,`, `/`, `;`, `<`, `=`, `>`, `@`, `[`, `\\`, `]`, `^`, `` ` ``, `{`, `|`, `}`, `~`. More instructions can be found in <a href=\"https://help.lob.com/print-and-mail/designing-mail-creatives/dynamic-personalization#using-html-and-merge-variables-10\" target=\"_blank\">our guide to using html and merge variables</a>. Depending on your <a href=\"https://dashboard.lob.com/#/settings/account\" target=\"_blank\">Merge Variable strictness</a> setting, if you define variables in your HTML but do not pass them here, you will either receive an error or the variable will render as an empty string."
          },
          "send_date": {},
          "mail_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/mail_type"
              },
              {}
            ]
          },
          "color": {
            "type": "boolean",
            "description": "Set this key to `true` if you would like to print in color. Set to `false` if you would like to print in black and white."
          },
          "double_sided": {
            "type": "boolean",
            "description": "Set this attribute to `true` for double sided printing, or `false` for for single sided printing. Defaults to `true`.",
            "default": true
          },
          "address_placement": {
            "allOf": [
              {
                "$ref": "#/components/schemas/address_placement"
              },
              {}
            ]
          },
          "return_envelope": {},
          "perforated_page": {
            "type": [
              "integer",
              "null"
            ],
            "description": "Required if `return_envelope` is `true`. The number of the page that should be perforated for use with the return envelope. Must be greater than or equal to `1`. The blank page added by `address_placement=insert_blank_page` will be ignored when considering the perforated page number. To see how perforation will impact your letter design, view our <a href=\"https://s3-us-west-2.amazonaws.com/public.lob.com/assets/templates/letter_perf_template.pdf\" target=\"_blank\">perforation guide</a>.",
            "contentEncoding": "int32"
          },
          "custom_envelope": {},
          "to": {},
          "carrier": {
            "const": "USPS",
            "type": "string"
          },
          "thumbnails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/thumbnail"
            },
            "description": ""
          },
          "expected_delivery_date": {
            "type": "string",
            "description": "A date in YYYY-MM-DD format of the mailpiece's expected delivery date based on its `send_date`.",
            "contentEncoding": "date"
          },
          "date_created": {
            "type": "string",
            "description": "A timestamp in ISO 8601 format of the date the resource was created.",
            "contentEncoding": "date-time"
          },
          "date_modified": {
            "type": "string",
            "description": "A timestamp in ISO 8601 format of the date the resource was last modified.",
            "contentEncoding": "date-time"
          },
          "deleted": {
            "type": "boolean",
            "description": "Only returned if the resource has been successfully deleted."
          },
          "from": {},
          "url": {
            "pattern": "^https://lob-assets\\.com/(letters|postcards|bank-accounts|checks|self-mailers|cards)/[a-z]{3,4}_[a-z0-9]{15,16}(\\.pdf|_thumb_[a-z]+_[0-9]+\\.png)\\?(version=[a-z0-9-]*&)?expires=[0-9]{10}&signature=[a-zA-Z0-9-_]+$",
            "type": "string",
            "description": "A [signed link](#section/Asset-URLs) served over HTTPS. The link returned will expire in 30 days to prevent mis-sharing. Each time a GET request is initiated, a new signed URL will be generated."
          },
          "id": {
            "pattern": "^ltr_[a-zA-Z0-9]+$",
            "type": "string",
            "description": "Unique identifier prefixed with `ltr_`."
          },
          "template_id": {
            "pattern": "^tmpl_[a-zA-Z0-9]+$",
            "type": "string"
          },
          "template_version_id": {
            "pattern": "^vrsn_[a-zA-Z0-9]+$",
            "type": "string"
          },
          "campaign_id": {
            "type": [
              "string",
              "null"
            ],
            "description": "The unique ID of the associated campaign if the resource was generated from a campaign."
          },
          "use_type": {},
          "fsc": {
            "type": "boolean",
            "description": "This is in beta. Contact support@lob.com or your account contact to learn more. Not available for `A4` letter size.",
            "default": false
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Thestatusofthebuckslip."
              },
              {}
            ]
          },
          "failure_reason": {
            "type": [
              "string",
              "null"
            ],
            "description": "A string describing the reason for failure if the letter failed to render."
          },
          "object": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Object8"
              },
              {}
            ]
          }
        }
      },
      "letter_deletion": {
        "title": "letter_deletion",
        "type": "object",
        "properties": {
          "id": {
            "pattern": "^ltr_[a-zA-Z0-9]+$",
            "type": "string",
            "description": "Unique identifier prefixed with `ltr_`."
          },
          "deleted": {
            "type": "boolean",
            "description": "Only returned if the resource has been successfully deleted."
          }
        },
        "description": "Lob uses RESTful HTTP response codes to indicate success or failure of an API request. In general, 2xx indicates success, 4xx indicate an input error, and 5xx indicates an error on Lob's end."
      },
      "input_to": {
        "title": "input_to",
        "type": "object",
        "properties": {
          "to": {
            "oneOf": [
              {
                "pattern": "^adr_[a-zA-Z0-9]+$",
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/inline_address"
              }
            ],
            "description": "Must either be an address ID or an inline object with correct address parameters. If an object is used, an address will be created, corrected, and standardized for free whenever possible using our US Address Verification engine (if it is a US address), and returned back with an ID. Depending on your <a href=\"https://dashboard.lob.com/#/settings/editions\" target=\"_blank\">Print & Mail Edition</a>, US addresses may also be run through <a href=\"#tag/National-Change-of-Address\">National Change of Address Linkage(NCOALink)</a>. Non-US addresses will be standardized into uppercase only. If a US address used does not meet your account’s <a href=\"https://dashboard.lob.com/#/settings/account\" target=\"_blank\">US Mail strictness setting</a>, the request will fail. <a href=\"https://help.lob.com/print-and-mail/all-about-addresses\" target=\"_blank\">Lob Guide: Verification of Mailing Addresses</a>"
          }
        }
      },
      "input_from": {
        "title": "input_from",
        "type": "object",
        "properties": {
          "from": {
            "oneOf": [
              {
                "pattern": "^adr_[a-zA-Z0-9]+$",
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/inline_address"
              }
            ],
            "description": "Must either be an address ID or an inline object with correct address parameters. Must be a US address unless using a `custom_envelope`. All addresses will be standardized into uppercase without being modified by verification."
          }
        }
      },
      "editable": {
        "title": "editable",
        "type": "object",
        "properties": {
          "description": {
            "maxLength": 255,
            "type": [
              "string",
              "null"
            ],
            "description": "An internal description that identifies this resource. Must be no longer than 255 characters."
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Use metadata to store custom information for tagging and labeling back to your internal systems. Must be an object with up to 20 key-value pairs. Keys must be at most 40 characters and values must be at most 500 characters. Neither can contain the characters `\"` and `\\`. i.e. '{\"customer_id\" : \"NEWYORK2015\"}' Nested objects are not supported.  See [Metadata](#section/Metadata) for more information."
          },
          "mail_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/mail_type"
              },
              {}
            ]
          },
          "merge_variables": {
            "type": [
              "object",
              "null"
            ],
            "description": "You can input a merge variable payload object to your template to render dynamic content. For example, if you have a template like: `{{variable_name}}`, pass in `{\"variable_name\": \"Harry\"}` to render `Harry`. `merge_variables` must be an object. Any type of value is accepted as long as the object is valid JSON; you can use `strings`, `numbers`, `booleans`, `arrays`, `objects`, or `null`. The max length of the object is 25,000 characters. If you call `JSON.stringify` on your object, it can be no longer than 25,000 characters. Your variable names cannot contain any whitespace or any of the following special characters: `!`, `\"`, `#`, `%`, `&`, `'`, `(`, `)`, `*`, `+`, `,`, `/`, `;`, `<`, `=`, `>`, `@`, `[`, `\\`, `]`, `^`, `` ` ``, `{`, `|`, `}`, `~`. More instructions can be found in <a href=\"https://help.lob.com/print-and-mail/designing-mail-creatives/dynamic-personalization#using-html-and-merge-variables-10\" target=\"_blank\">our guide to using html and merge variables</a>. Depending on your <a href=\"https://dashboard.lob.com/#/settings/account\" target=\"_blank\">Merge Variable strictness</a> setting, if you define variables in your HTML but do not pass them here, you will either receive an error or the variable will render as an empty string."
          },
          "send_date": {}
        }
      },
      "qr_code": {
        "title": "qr_code",
        "required": [
          "position",
          "redirect_url",
          "width"
        ],
        "type": "object",
        "properties": {
          "position": {
            "const": "relative",
            "type": "string",
            "description": "Sets how a QR code is being positioned in the document. Together with this, you should provide one of 'top' or 'bottom', and one of 'left' or 'right'."
          },
          "top": {
            "type": "string",
            "description": "Vertical distance (in inches) to place QR code from the top. Only allowed if \"bottom\" isn't provided."
          },
          "right": {
            "type": "string",
            "description": "Horizonal distance (in inches) to place QR code from the right. Only allowed if \"left\" isn't provided."
          },
          "left": {
            "type": "string",
            "description": "Horizonal distance (in inches) to place QR code from the left. Only allowed if \"right\" isn't provided."
          },
          "bottom": {
            "type": "string",
            "description": "Vertical distance (in inches) to place QR code from the bottom. Only allowed if \"top\" isn't provided."
          },
          "redirect_url": {
            "type": "string",
            "description": "The url to redirect the user when a QR code is scanned. The url must start with `https://`"
          },
          "width": {
            "type": "string",
            "description": "The size (in inches) of the QR code with a minimum of 1 inch. All QR codes are generated as a square."
          },
          "pages": {
            "type": "string",
            "description": "Specify the pages where the QR code should be stamped in a comma separated format. Your QR code can be printed in the same position on multiple pages. For postcards, the values should either be \"front\", \"back\" (for either front or back) or \"front,back\" (for the QR code to be printed on both sides). For self-mailers, the values should either be \"inside\", \"outside\" (for either inside or outside) or \"inside,outside\" (for the QR code to be printed on both sides). For letters, the values can be specific page numbers (\"1\", \"3\"), page number ranges such as \"1-3\", or a comma separated combination of both (\"1,3,5-7\")."
          }
        },
        "description": "Customize and place a QR code on the creative at the required position."
      },
      "letter_editable": {
        "title": "letter_editable",
        "required": [
          "to",
          "from",
          "file",
          "color",
          "use_type"
        ],
        "type": "object",
        "properties": {
          "to": {
            "oneOf": [
              {
                "pattern": "^adr_[a-zA-Z0-9]+$",
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/inline_address"
              }
            ],
            "description": "Must either be an address ID or an inline object with correct address parameters. If an object is used, an address will be created, corrected, and standardized for free whenever possible using our US Address Verification engine (if it is a US address), and returned back with an ID. Depending on your <a href=\"https://dashboard.lob.com/#/settings/editions\" target=\"_blank\">Print & Mail Edition</a>, US addresses may also be run through <a href=\"#tag/National-Change-of-Address\">National Change of Address Linkage(NCOALink)</a>. Non-US addresses will be standardized into uppercase only. If a US address used does not meet your account’s <a href=\"https://dashboard.lob.com/#/settings/account\" target=\"_blank\">US Mail strictness setting</a>, the request will fail. <a href=\"https://help.lob.com/print-and-mail/all-about-addresses\" target=\"_blank\">Lob Guide: Verification of Mailing Addresses</a>"
          },
          "from": {
            "oneOf": [
              {
                "pattern": "^adr_[a-zA-Z0-9]+$",
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/inline_address"
              }
            ],
            "description": "Must either be an address ID or an inline object with correct address parameters. Must be a US address unless using a `custom_envelope`. All addresses will be standardized into uppercase without being modified by verification."
          },
          "description": {
            "maxLength": 255,
            "type": [
              "string",
              "null"
            ],
            "description": "An internal description that identifies this resource. Must be no longer than 255 characters."
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Use metadata to store custom information for tagging and labeling back to your internal systems. Must be an object with up to 20 key-value pairs. Keys must be at most 40 characters and values must be at most 500 characters. Neither can contain the characters `\"` and `\\`. i.e. '{\"customer_id\" : \"NEWYORK2015\"}' Nested objects are not supported.  See [Metadata](#section/Metadata) for more information."
          },
          "mail_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/mail_type"
              },
              {}
            ]
          },
          "merge_variables": {
            "type": [
              "object",
              "null"
            ],
            "description": "You can input a merge variable payload object to your template to render dynamic content. For example, if you have a template like: `{{variable_name}}`, pass in `{\"variable_name\": \"Harry\"}` to render `Harry`. `merge_variables` must be an object. Any type of value is accepted as long as the object is valid JSON; you can use `strings`, `numbers`, `booleans`, `arrays`, `objects`, or `null`. The max length of the object is 25,000 characters. If you call `JSON.stringify` on your object, it can be no longer than 25,000 characters. Your variable names cannot contain any whitespace or any of the following special characters: `!`, `\"`, `#`, `%`, `&`, `'`, `(`, `)`, `*`, `+`, `,`, `/`, `;`, `<`, `=`, `>`, `@`, `[`, `\\`, `]`, `^`, `` ` ``, `{`, `|`, `}`, `~`. More instructions can be found in <a href=\"https://help.lob.com/print-and-mail/designing-mail-creatives/dynamic-personalization#using-html-and-merge-variables-10\" target=\"_blank\">our guide to using html and merge variables</a>. Depending on your <a href=\"https://dashboard.lob.com/#/settings/account\" target=\"_blank\">Merge Variable strictness</a> setting, if you define variables in your HTML but do not pass them here, you will either receive an error or the variable will render as an empty string."
          },
          "send_date": {},
          "file": {},
          "extra_service": {},
          "cards": {
            "maxItems": 1,
            "minItems": 0,
            "type": [
              "array",
              "null"
            ],
            "items": {
              "pattern": "^card_[a-zA-Z0-9]+$",
              "type": "string"
            },
            "description": "A single-element array containing an existing card id in a string format. See [cards](#tag/Cards) for more information."
          },
          "color": {
            "type": "boolean"
          },
          "double_sided": {
            "type": "boolean",
            "description": "Set this attribute to `true` for double sided printing, or `false` for for single sided printing. Defaults to `true`.",
            "default": true
          },
          "address_placement": {
            "allOf": [
              {
                "$ref": "#/components/schemas/address_placement"
              },
              {}
            ]
          },
          "return_envelope": {},
          "perforated_page": {
            "type": [
              "integer",
              "null"
            ],
            "description": "Required if `return_envelope` is `true`. The number of the page that should be perforated for use with the return envelope. Must be greater than or equal to `1`. The blank page added by `address_placement=insert_blank_page` will be ignored when considering the perforated page number. To see how perforation will impact your letter design, view our <a href=\"https://s3-us-west-2.amazonaws.com/public.lob.com/assets/templates/letter_perf_template.pdf\" target=\"_blank\">perforation guide</a>.",
            "contentEncoding": "int32"
          },
          "custom_envelope": {
            "pattern": "^env_[a-zA-Z0-9]+$",
            "type": [
              "string",
              "null"
            ],
            "description": "Accepts an envelope ID for any customized envelope with available inventory. If no inventory is available for the specified ID, the letter will not be sent, and an error will be returned. If the letter has more than 6 sheets, it will be sent in a blank flat envelope. Custom envelopes may be created and ordered from the dashboard. This feature is exclusive to certain customers. Upgrade to the appropriate <a href=\"https://dashboard.lob.com/#/settings/editions\" target=\"_blank\">Print & Mail Edition</a> to gain access."
          },
          "billing_group_id": {
            "type": "string",
            "description": "An optional string with the billing group ID to tag your usage with. Is used for billing purposes. Requires special activation to use. See <a href=\"#tag/Billing-Groups\">Billing Group API</a> for more information."
          },
          "qr_code": {
            "allOf": [
              {
                "$ref": "#/components/schemas/QrCode4"
              },
              {}
            ]
          },
          "use_type": {},
          "fsc": {
            "type": "boolean",
            "description": "This is in beta. Contact support@lob.com or your account contact to learn more. Not available for `A4` letter size.",
            "default": false
          }
        }
      },
      "postcard_base": {
        "title": "postcard_base",
        "type": "object",
        "properties": {
          "description": {
            "maxLength": 255,
            "type": [
              "string",
              "null"
            ],
            "description": "An internal description that identifies this resource. Must be no longer than 255 characters."
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Use metadata to store custom information for tagging and labeling back to your internal systems. Must be an object with up to 20 key-value pairs. Keys must be at most 40 characters and values must be at most 500 characters. Neither can contain the characters `\"` and `\\`. i.e. '{\"customer_id\" : \"NEWYORK2015\"}' Nested objects are not supported.  See [Metadata](#section/Metadata) for more information."
          },
          "mail_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/mail_type"
              },
              {}
            ]
          },
          "merge_variables": {
            "type": [
              "object",
              "null"
            ],
            "description": "You can input a merge variable payload object to your template to render dynamic content. For example, if you have a template like: `{{variable_name}}`, pass in `{\"variable_name\": \"Harry\"}` to render `Harry`. `merge_variables` must be an object. Any type of value is accepted as long as the object is valid JSON; you can use `strings`, `numbers`, `booleans`, `arrays`, `objects`, or `null`. The max length of the object is 25,000 characters. If you call `JSON.stringify` on your object, it can be no longer than 25,000 characters. Your variable names cannot contain any whitespace or any of the following special characters: `!`, `\"`, `#`, `%`, `&`, `'`, `(`, `)`, `*`, `+`, `,`, `/`, `;`, `<`, `=`, `>`, `@`, `[`, `\\`, `]`, `^`, `` ` ``, `{`, `|`, `}`, `~`. More instructions can be found in <a href=\"https://help.lob.com/print-and-mail/designing-mail-creatives/dynamic-personalization#using-html-and-merge-variables-10\" target=\"_blank\">our guide to using html and merge variables</a>. Depending on your <a href=\"https://dashboard.lob.com/#/settings/account\" target=\"_blank\">Merge Variable strictness</a> setting, if you define variables in your HTML but do not pass them here, you will either receive an error or the variable will render as an empty string."
          },
          "send_date": {},
          "size": {
            "allOf": [
              {
                "$ref": "#/components/schemas/postcard_size"
              },
              {}
            ]
          }
        }
      },
      "psc_use_type": {
        "title": "psc_use_type",
        "enum": [
          "marketing",
          "operational"
        ],
        "type": "string",
        "description": "The use type for each mailpiece. Can be one of marketing, operational, or null. Null use_type is only allowed if an account default use_type is selected in Account Settings. For more information on use_type, see our  [Help Center article](https://help.lob.com/print-and-mail/building-a-mail-strategy/managing-mail-settings/declaring-mail-use-type)."
      },
      "postcard": {
        "title": "postcard",
        "required": [
          "to",
          "carrier",
          "id",
          "front_template_id",
          "back_template_id",
          "url"
        ],
        "type": "object",
        "properties": {
          "description": {
            "maxLength": 255,
            "type": [
              "string",
              "null"
            ],
            "description": "An internal description that identifies this resource. Must be no longer than 255 characters."
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Use metadata to store custom information for tagging and labeling back to your internal systems. Must be an object with up to 20 key-value pairs. Keys must be at most 40 characters and values must be at most 500 characters. Neither can contain the characters `\"` and `\\`. i.e. '{\"customer_id\" : \"NEWYORK2015\"}' Nested objects are not supported.  See [Metadata](#section/Metadata) for more information."
          },
          "mail_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/mail_type"
              },
              {}
            ]
          },
          "merge_variables": {
            "type": [
              "object",
              "null"
            ],
            "description": "You can input a merge variable payload object to your template to render dynamic content. For example, if you have a template like: `{{variable_name}}`, pass in `{\"variable_name\": \"Harry\"}` to render `Harry`. `merge_variables` must be an object. Any type of value is accepted as long as the object is valid JSON; you can use `strings`, `numbers`, `booleans`, `arrays`, `objects`, or `null`. The max length of the object is 25,000 characters. If you call `JSON.stringify` on your object, it can be no longer than 25,000 characters. Your variable names cannot contain any whitespace or any of the following special characters: `!`, `\"`, `#`, `%`, `&`, `'`, `(`, `)`, `*`, `+`, `,`, `/`, `;`, `<`, `=`, `>`, `@`, `[`, `\\`, `]`, `^`, `` ` ``, `{`, `|`, `}`, `~`. More instructions can be found in <a href=\"https://help.lob.com/print-and-mail/designing-mail-creatives/dynamic-personalization#using-html-and-merge-variables-10\" target=\"_blank\">our guide to using html and merge variables</a>. Depending on your <a href=\"https://dashboard.lob.com/#/settings/account\" target=\"_blank\">Merge Variable strictness</a> setting, if you define variables in your HTML but do not pass them here, you will either receive an error or the variable will render as an empty string."
          },
          "send_date": {},
          "size": {
            "allOf": [
              {
                "$ref": "#/components/schemas/postcard_size"
              },
              {}
            ]
          },
          "to": {},
          "carrier": {
            "const": "USPS",
            "type": "string"
          },
          "thumbnails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/thumbnail"
            },
            "description": ""
          },
          "expected_delivery_date": {
            "type": "string",
            "description": "A date in YYYY-MM-DD format of the mailpiece's expected delivery date based on its `send_date`.",
            "contentEncoding": "date"
          },
          "date_created": {
            "type": "string",
            "description": "A timestamp in ISO 8601 format of the date the resource was created.",
            "contentEncoding": "date-time"
          },
          "date_modified": {
            "type": "string",
            "description": "A timestamp in ISO 8601 format of the date the resource was last modified.",
            "contentEncoding": "date-time"
          },
          "deleted": {
            "type": "boolean",
            "description": "Only returned if the resource has been successfully deleted."
          },
          "from": {
            "allOf": [
              {
                "$ref": "#/components/schemas/address_us"
              },
              {}
            ]
          },
          "id": {
            "pattern": "^psc_[a-zA-Z0-9]+$",
            "type": "string",
            "description": "Unique identifier prefixed with `psc_`."
          },
          "front_template_id": {
            "pattern": "^tmpl_[a-zA-Z0-9]+$",
            "type": [
              "string",
              "null"
            ],
            "description": "The unique ID of the HTML template used for the front of the postcard. Only filled out when the request contains a valid postcard template ID."
          },
          "back_template_id": {
            "pattern": "^tmpl_[a-zA-Z0-9]+$",
            "type": [
              "string",
              "null"
            ],
            "description": "The unique ID of the HTML template used for the back of the postcard. Only filled out when the request contains a valid postcard template ID."
          },
          "front_template_version_id": {
            "pattern": "^vrsn_[a-zA-Z0-9]+$",
            "type": [
              "string",
              "null"
            ],
            "description": "The unique ID of the specific version of the HTML template used for the front of the postcard. Only filled out when the request contains a valid postcard template ID."
          },
          "back_template_version_id": {
            "pattern": "^vrsn_[a-zA-Z0-9]+$",
            "type": [
              "string",
              "null"
            ],
            "description": "The unique ID of the specific version of the HTML template used for the back of the postcard. Only filled out when the request contains a valid postcard template ID."
          },
          "tracking_events": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/tracking_event_normal"
            },
            "description": "An array of tracking_event objects ordered by ascending `time`. Will not be populated for postcards created in test mode."
          },
          "url": {
            "pattern": "^https://lob-assets\\.com/(letters|postcards|bank-accounts|checks|self-mailers|cards)/[a-z]{3,4}_[a-z0-9]{15,16}(\\.pdf|_thumb_[a-z]+_[0-9]+\\.png)\\?(version=[a-z0-9-]*&)?expires=[0-9]{10}&signature=[a-zA-Z0-9-_]+$",
            "type": "string",
            "description": "A [signed link](#section/Asset-URLs) served over HTTPS. The link returned will expire in 30 days to prevent mis-sharing. Each time a GET request is initiated, a new signed URL will be generated."
          },
          "campaign_id": {
            "type": [
              "string",
              "null"
            ],
            "description": "The unique ID of the associated campaign if the resource was generated from a campaign."
          },
          "use_type": {},
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Thestatusofthebuckslip."
              },
              {}
            ]
          },
          "failure_reason": {
            "type": [
              "string",
              "null"
            ],
            "description": "A string describing the reason for failure if the postcard failed to render."
          },
          "object": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Object10"
              },
              {}
            ]
          }
        }
      },
      "postcard_deletion": {
        "title": "postcard_deletion",
        "type": "object",
        "properties": {
          "id": {
            "pattern": "^psc_[a-zA-Z0-9]+$",
            "type": "string",
            "description": "Unique identifier prefixed with `psc_`."
          },
          "deleted": {
            "type": "boolean",
            "description": "Only returned if the resource has been successfully deleted."
          }
        },
        "description": "Lob uses RESTful HTTP response codes to indicate success or failure of an API request. In general, 2xx indicates success, 4xx indicate an input error, and 5xx indicates an error on Lob's end."
      },
      "input_from_us": {
        "title": "input_from_us",
        "type": "object",
        "properties": {
          "from": {
            "oneOf": [
              {
                "pattern": "^adr_[a-zA-Z0-9]+$",
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/inline_address_us"
              }
            ],
            "description": "*Required* if `to` address is international. Must either be an address ID or an inline object with correct address parameters. Must either be an address ID or an inline object with correct address parameters. All addresses will be standardized into uppercase without being modified by verification."
          }
        }
      },
      "postcard_editable": {
        "title": "postcard_editable",
        "required": [
          "to",
          "front",
          "back",
          "use_type"
        ],
        "type": "object",
        "properties": {
          "description": {
            "maxLength": 255,
            "type": [
              "string",
              "null"
            ],
            "description": "An internal description that identifies this resource. Must be no longer than 255 characters."
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Use metadata to store custom information for tagging and labeling back to your internal systems. Must be an object with up to 20 key-value pairs. Keys must be at most 40 characters and values must be at most 500 characters. Neither can contain the characters `\"` and `\\`. i.e. '{\"customer_id\" : \"NEWYORK2015\"}' Nested objects are not supported.  See [Metadata](#section/Metadata) for more information."
          },
          "mail_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/mail_type"
              },
              {}
            ]
          },
          "merge_variables": {
            "type": [
              "object",
              "null"
            ],
            "description": "You can input a merge variable payload object to your template to render dynamic content. For example, if you have a template like: `{{variable_name}}`, pass in `{\"variable_name\": \"Harry\"}` to render `Harry`. `merge_variables` must be an object. Any type of value is accepted as long as the object is valid JSON; you can use `strings`, `numbers`, `booleans`, `arrays`, `objects`, or `null`. The max length of the object is 25,000 characters. If you call `JSON.stringify` on your object, it can be no longer than 25,000 characters. Your variable names cannot contain any whitespace or any of the following special characters: `!`, `\"`, `#`, `%`, `&`, `'`, `(`, `)`, `*`, `+`, `,`, `/`, `;`, `<`, `=`, `>`, `@`, `[`, `\\`, `]`, `^`, `` ` ``, `{`, `|`, `}`, `~`. More instructions can be found in <a href=\"https://help.lob.com/print-and-mail/designing-mail-creatives/dynamic-personalization#using-html-and-merge-variables-10\" target=\"_blank\">our guide to using html and merge variables</a>. Depending on your <a href=\"https://dashboard.lob.com/#/settings/account\" target=\"_blank\">Merge Variable strictness</a> setting, if you define variables in your HTML but do not pass them here, you will either receive an error or the variable will render as an empty string."
          },
          "send_date": {},
          "size": {
            "allOf": [
              {
                "$ref": "#/components/schemas/postcard_size"
              },
              {}
            ]
          },
          "to": {
            "oneOf": [
              {
                "pattern": "^adr_[a-zA-Z0-9]+$",
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/inline_address"
              }
            ],
            "description": "Must either be an address ID or an inline object with correct address parameters. If an object is used, an address will be created, corrected, and standardized for free whenever possible using our US Address Verification engine (if it is a US address), and returned back with an ID. Depending on your <a href=\"https://dashboard.lob.com/#/settings/editions\" target=\"_blank\">Print & Mail Edition</a>, US addresses may also be run through <a href=\"#tag/National-Change-of-Address\">National Change of Address Linkage(NCOALink)</a>. Non-US addresses will be standardized into uppercase only. If a US address used does not meet your account’s <a href=\"https://dashboard.lob.com/#/settings/account\" target=\"_blank\">US Mail strictness setting</a>, the request will fail. <a href=\"https://help.lob.com/print-and-mail/all-about-addresses\" target=\"_blank\">Lob Guide: Verification of Mailing Addresses</a>"
          },
          "from": {
            "oneOf": [
              {
                "pattern": "^adr_[a-zA-Z0-9]+$",
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/inline_address_us"
              }
            ],
            "description": "*Required* if `to` address is international. Must either be an address ID or an inline object with correct address parameters. Must either be an address ID or an inline object with correct address parameters. All addresses will be standardized into uppercase without being modified by verification."
          },
          "front": {},
          "back": {},
          "billing_group_id": {
            "type": "string",
            "description": "An optional string with the billing group ID to tag your usage with. Is used for billing purposes. Requires special activation to use. See <a href=\"#tag/Billing-Groups\">Billing Group API</a> for more information."
          },
          "qr_code": {
            "allOf": [
              {
                "$ref": "#/components/schemas/QrCode4"
              },
              {}
            ]
          },
          "use_type": {}
        }
      },
      "scans": {
        "title": "scans",
        "type": "object",
        "properties": {
          "ip_location": {
            "type": "string"
          },
          "scan_date": {
            "type": "string"
          }
        }
      },
      "domain_response": {
        "title": "domain_response",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for a domain."
          },
          "domain": {
            "type": "string",
            "description": "The registered domain/hostname."
          },
          "account_id": {
            "type": "string",
            "description": "Unique identifier associated with the account the domain is registered for."
          }
        }
      },
      "domains_response": {
        "title": "domains_response",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/domain_response"
            },
            "description": "List of domains."
          }
        }
      },
      "domains": {
        "title": "domains",
        "required": [
          "domain"
        ],
        "type": "object",
        "properties": {
          "domain": {
            "type": "string",
            "description": "The registered domain/hostname."
          }
        }
      },
      "link_response": {
        "title": "link_response",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier prefixed with `lnk_`."
          },
          "campaign_id": {
            "pattern": "^cmp_[a-zA-Z0-9]+$",
            "type": "string",
            "description": "Unique identifier prefixed with `cmp_`."
          },
          "domain_id": {
            "type": "string",
            "description": "A unique identifier for the registered domain."
          },
          "resource_id": {
            "type": "string",
            "description": "The unique ID of the associated resource where the link was used."
          },
          "redirect_link": {
            "type": "string",
            "description": "The original target URL."
          },
          "short_link": {
            "type": "string",
            "description": "The shortened URL for the associated original URL."
          },
          "metadata_tag": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Use metadata to store custom information for tagging and labeling back to your internal systems. Must be an object with up to 20 key-value pairs. Keys must be at most 40 characters and values must be at most 500 characters. Neither can contain the characters `\"` and `\\`. i.e. '{\"customer_id\" : \"NEWYORK2015\"}' Nested objects are not supported.  See [Metadata](#section/Metadata) for more information."
          },
          "billing_group_id": {
            "type": "string",
            "description": "An optional string with the billing group ID to tag your usage with. Is used for billing purposes. Requires special activation to use. See <a href=\"#tag/Billing-Groups\">Billing Group API</a> for more information."
          }
        }
      },
      "links_response": {
        "title": "links_response",
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "The number of results in the current response.",
            "contentEncoding": "int32"
          },
          "limit": {
            "type": "integer",
            "description": "How many results to return.",
            "contentEncoding": "int32"
          },
          "offset": {
            "type": "integer",
            "description": "An integer that designates the offset at which to begin returning results. Defaults to 0.",
            "contentEncoding": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/link_response"
            },
            "description": "list of links"
          }
        }
      },
      "link_single": {
        "title": "link_single",
        "required": [
          "redirect_link"
        ],
        "type": "object",
        "properties": {
          "redirect_link": {
            "type": "string",
            "description": "The original target URL."
          },
          "domain": {
            "type": "string",
            "description": "The registered domain to be used for the short URL."
          },
          "slug": {
            "type": "string",
            "description": "The unique path for the shortened URL, if empty a unique path will be used."
          },
          "metadata_tag": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Use metadata to store custom information for tagging and labeling back to your internal systems. Must be an object with up to 20 key-value pairs. Keys must be at most 40 characters and values must be at most 500 characters. Neither can contain the characters `\"` and `\\`. i.e. '{\"customer_id\" : \"NEWYORK2015\"}' Nested objects are not supported.  See [Metadata](#section/Metadata) for more information."
          },
          "billing_group_id": {
            "type": "string",
            "description": "An optional string with the billing group ID to tag your usage with. Is used for billing purposes. Requires special activation to use. See <a href=\"#tag/Billing-Groups\">Billing Group API</a> for more information."
          }
        }
      },
      "self_mailer_base": {
        "title": "self_mailer_base",
        "type": "object",
        "properties": {
          "description": {
            "maxLength": 255,
            "type": [
              "string",
              "null"
            ],
            "description": "An internal description that identifies this resource. Must be no longer than 255 characters."
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Use metadata to store custom information for tagging and labeling back to your internal systems. Must be an object with up to 20 key-value pairs. Keys must be at most 40 characters and values must be at most 500 characters. Neither can contain the characters `\"` and `\\`. i.e. '{\"customer_id\" : \"NEWYORK2015\"}' Nested objects are not supported.  See [Metadata](#section/Metadata) for more information."
          },
          "mail_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/mail_type"
              },
              {}
            ]
          },
          "merge_variables": {
            "type": [
              "object",
              "null"
            ],
            "description": "You can input a merge variable payload object to your template to render dynamic content. For example, if you have a template like: `{{variable_name}}`, pass in `{\"variable_name\": \"Harry\"}` to render `Harry`. `merge_variables` must be an object. Any type of value is accepted as long as the object is valid JSON; you can use `strings`, `numbers`, `booleans`, `arrays`, `objects`, or `null`. The max length of the object is 25,000 characters. If you call `JSON.stringify` on your object, it can be no longer than 25,000 characters. Your variable names cannot contain any whitespace or any of the following special characters: `!`, `\"`, `#`, `%`, `&`, `'`, `(`, `)`, `*`, `+`, `,`, `/`, `;`, `<`, `=`, `>`, `@`, `[`, `\\`, `]`, `^`, `` ` ``, `{`, `|`, `}`, `~`. More instructions can be found in <a href=\"https://help.lob.com/print-and-mail/designing-mail-creatives/dynamic-personalization#using-html-and-merge-variables-10\" target=\"_blank\">our guide to using html and merge variables</a>. Depending on your <a href=\"https://dashboard.lob.com/#/settings/account\" target=\"_blank\">Merge Variable strictness</a> setting, if you define variables in your HTML but do not pass them here, you will either receive an error or the variable will render as an empty string."
          },
          "send_date": {},
          "size": {
            "allOf": [
              {
                "$ref": "#/components/schemas/self_mailer_size"
              },
              {}
            ]
          }
        }
      },
      "sfm_use_type": {
        "title": "sfm_use_type",
        "enum": [
          "marketing",
          "operational"
        ],
        "type": "string",
        "description": "The use type for each mailpiece. Can be one of marketing, operational, or null. Null use_type is only allowed if an account default use_type is selected in Account Settings. For more information on use_type, see our  [Help Center article](https://help.lob.com/print-and-mail/building-a-mail-strategy/managing-mail-settings/declaring-mail-use-type)."
      },
      "self_mailer": {
        "title": "self_mailer",
        "required": [
          "to",
          "carrier",
          "id",
          "use_type",
          "url"
        ],
        "type": "object",
        "properties": {
          "description": {
            "maxLength": 255,
            "type": [
              "string",
              "null"
            ],
            "description": "An internal description that identifies this resource. Must be no longer than 255 characters."
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Use metadata to store custom information for tagging and labeling back to your internal systems. Must be an object with up to 20 key-value pairs. Keys must be at most 40 characters and values must be at most 500 characters. Neither can contain the characters `\"` and `\\`. i.e. '{\"customer_id\" : \"NEWYORK2015\"}' Nested objects are not supported.  See [Metadata](#section/Metadata) for more information."
          },
          "mail_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/mail_type"
              },
              {}
            ]
          },
          "merge_variables": {
            "type": [
              "object",
              "null"
            ],
            "description": "You can input a merge variable payload object to your template to render dynamic content. For example, if you have a template like: `{{variable_name}}`, pass in `{\"variable_name\": \"Harry\"}` to render `Harry`. `merge_variables` must be an object. Any type of value is accepted as long as the object is valid JSON; you can use `strings`, `numbers`, `booleans`, `arrays`, `objects`, or `null`. The max length of the object is 25,000 characters. If you call `JSON.stringify` on your object, it can be no longer than 25,000 characters. Your variable names cannot contain any whitespace or any of the following special characters: `!`, `\"`, `#`, `%`, `&`, `'`, `(`, `)`, `*`, `+`, `,`, `/`, `;`, `<`, `=`, `>`, `@`, `[`, `\\`, `]`, `^`, `` ` ``, `{`, `|`, `}`, `~`. More instructions can be found in <a href=\"https://help.lob.com/print-and-mail/designing-mail-creatives/dynamic-personalization#using-html-and-merge-variables-10\" target=\"_blank\">our guide to using html and merge variables</a>. Depending on your <a href=\"https://dashboard.lob.com/#/settings/account\" target=\"_blank\">Merge Variable strictness</a> setting, if you define variables in your HTML but do not pass them here, you will either receive an error or the variable will render as an empty string."
          },
          "send_date": {},
          "size": {
            "allOf": [
              {
                "$ref": "#/components/schemas/self_mailer_size"
              },
              {}
            ]
          },
          "to": {},
          "carrier": {
            "const": "USPS",
            "type": "string"
          },
          "thumbnails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/thumbnail"
            },
            "description": ""
          },
          "expected_delivery_date": {
            "type": "string",
            "description": "A date in YYYY-MM-DD format of the mailpiece's expected delivery date based on its `send_date`.",
            "contentEncoding": "date"
          },
          "date_created": {
            "type": "string",
            "description": "A timestamp in ISO 8601 format of the date the resource was created.",
            "contentEncoding": "date-time"
          },
          "date_modified": {
            "type": "string",
            "description": "A timestamp in ISO 8601 format of the date the resource was last modified.",
            "contentEncoding": "date-time"
          },
          "deleted": {
            "type": "boolean",
            "description": "Only returned if the resource has been successfully deleted."
          },
          "from": {
            "allOf": [
              {
                "$ref": "#/components/schemas/address_us"
              },
              {}
            ]
          },
          "id": {
            "pattern": "^sfm_[a-zA-Z0-9]+$",
            "type": "string",
            "description": "Unique identifier prefixed with `sfm_`."
          },
          "outside_template_id": {
            "pattern": "^tmpl_[a-zA-Z0-9]+$",
            "type": [
              "string",
              "null"
            ],
            "description": "The unique ID of the HTML template used for the outside of the self mailer."
          },
          "inside_template_id": {
            "pattern": "^tmpl_[a-zA-Z0-9]+$",
            "type": [
              "string",
              "null"
            ],
            "description": "The unique ID of the HTML template used for the inside of the self mailer."
          },
          "outside_template_version_id": {
            "pattern": "^vrsn_[a-zA-Z0-9]+$",
            "type": [
              "string",
              "null"
            ],
            "description": "The unique ID of the specific version of the HTML template used for the outside of the self mailer."
          },
          "inside_template_version_id": {
            "pattern": "^vrsn_[a-zA-Z0-9]+$",
            "type": [
              "string",
              "null"
            ],
            "description": "The unique ID of the specific version of the HTML template used for the inside of the self mailer."
          },
          "object": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Object11"
              },
              {}
            ]
          },
          "tracking_events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tracking_event_certified"
            },
            "description": "An array of certified tracking events ordered by ascending `time`. Not populated in test mode."
          },
          "use_type": {},
          "url": {
            "pattern": "^https://lob-assets\\.com/(letters|postcards|bank-accounts|checks|self-mailers|cards)/[a-z]{3,4}_[a-z0-9]{15,16}(\\.pdf|_thumb_[a-z]+_[0-9]+\\.png)\\?(version=[a-z0-9-]*&)?expires=[0-9]{10}&signature=[a-zA-Z0-9-_]+$",
            "type": "string",
            "description": "A [signed link](#section/Asset-URLs) served over HTTPS. The link returned will expire in 30 days to prevent mis-sharing. Each time a GET request is initiated, a new signed URL will be generated."
          },
          "fsc": {
            "type": "boolean",
            "description": "This is in beta. Contact support@lob.com or your account contact to learn more. Not available for `11x9_bifold` self-mailer size.",
            "default": false
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Thestatusofthebuckslip."
              },
              {}
            ]
          },
          "failure_reason": {
            "type": [
              "string",
              "null"
            ],
            "description": "A string describing the reason for failure if the self mailer failed to render."
          }
        }
      },
      "self_mailer_deletion": {
        "title": "self_mailer_deletion",
        "type": "object",
        "properties": {
          "id": {
            "pattern": "^sfm_[a-zA-Z0-9]+$",
            "type": "string",
            "description": "Unique identifier prefixed with `sfm_`."
          },
          "deleted": {
            "type": "boolean",
            "description": "Only returned if the resource has been successfully deleted."
          }
        },
        "description": "Lob uses RESTful HTTP response codes to indicate success or failure of an API request. In general, 2xx indicates success, 4xx indicate an input error, and 5xx indicates an error on Lob's end."
      },
      "self_mailer_editable": {
        "title": "self_mailer_editable",
        "required": [
          "to",
          "inside",
          "outside",
          "use_type"
        ],
        "type": "object",
        "properties": {
          "description": {
            "maxLength": 255,
            "type": [
              "string",
              "null"
            ],
            "description": "An internal description that identifies this resource. Must be no longer than 255 characters."
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Use metadata to store custom information for tagging and labeling back to your internal systems. Must be an object with up to 20 key-value pairs. Keys must be at most 40 characters and values must be at most 500 characters. Neither can contain the characters `\"` and `\\`. i.e. '{\"customer_id\" : \"NEWYORK2015\"}' Nested objects are not supported.  See [Metadata](#section/Metadata) for more information."
          },
          "mail_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/mail_type"
              },
              {}
            ]
          },
          "merge_variables": {
            "type": [
              "object",
              "null"
            ],
            "description": "You can input a merge variable payload object to your template to render dynamic content. For example, if you have a template like: `{{variable_name}}`, pass in `{\"variable_name\": \"Harry\"}` to render `Harry`. `merge_variables` must be an object. Any type of value is accepted as long as the object is valid JSON; you can use `strings`, `numbers`, `booleans`, `arrays`, `objects`, or `null`. The max length of the object is 25,000 characters. If you call `JSON.stringify` on your object, it can be no longer than 25,000 characters. Your variable names cannot contain any whitespace or any of the following special characters: `!`, `\"`, `#`, `%`, `&`, `'`, `(`, `)`, `*`, `+`, `,`, `/`, `;`, `<`, `=`, `>`, `@`, `[`, `\\`, `]`, `^`, `` ` ``, `{`, `|`, `}`, `~`. More instructions can be found in <a href=\"https://help.lob.com/print-and-mail/designing-mail-creatives/dynamic-personalization#using-html-and-merge-variables-10\" target=\"_blank\">our guide to using html and merge variables</a>. Depending on your <a href=\"https://dashboard.lob.com/#/settings/account\" target=\"_blank\">Merge Variable strictness</a> setting, if you define variables in your HTML but do not pass them here, you will either receive an error or the variable will render as an empty string."
          },
          "send_date": {},
          "size": {
            "allOf": [
              {
                "$ref": "#/components/schemas/self_mailer_size"
              },
              {}
            ]
          },
          "to": {
            "oneOf": [
              {
                "pattern": "^adr_[a-zA-Z0-9]+$",
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/inline_address"
              }
            ],
            "description": "Must either be an address ID or an inline object with correct address parameters. If an object is used, an address will be created, corrected, and standardized for free whenever possible using our US Address Verification engine (if it is a US address), and returned back with an ID. Depending on your <a href=\"https://dashboard.lob.com/#/settings/editions\" target=\"_blank\">Print & Mail Edition</a>, US addresses may also be run through <a href=\"#tag/National-Change-of-Address\">National Change of Address Linkage(NCOALink)</a>. Non-US addresses will be standardized into uppercase only. If a US address used does not meet your account’s <a href=\"https://dashboard.lob.com/#/settings/account\" target=\"_blank\">US Mail strictness setting</a>, the request will fail. <a href=\"https://help.lob.com/print-and-mail/all-about-addresses\" target=\"_blank\">Lob Guide: Verification of Mailing Addresses</a>"
          },
          "from": {
            "oneOf": [
              {
                "pattern": "^adr_[a-zA-Z0-9]+$",
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/inline_address_us"
              }
            ],
            "description": "*Required* if `to` address is international. Must either be an address ID or an inline object with correct address parameters. Must either be an address ID or an inline object with correct address parameters. All addresses will be standardized into uppercase without being modified by verification."
          },
          "inside": {
            "oneOf": [
              {
                "maxLength": 10000,
                "pattern": "<",
                "type": "string"
              },
              {
                "pattern": "^tmpl_[a-zA-Z0-9]+$",
                "type": "string"
              },
              {
                "pattern": "^https://[-a-zA-Z0-9@:%._+~#=/]{1,256}.(html?|pdf|png|jpg)$",
                "type": "string"
              },
              {
                "pattern": "^(?!https://)[a-zA-Z0-9@:%._+~#=/]{1,256}.(html?|pdf|png|jpg)$",
                "type": "string"
              }
            ],
            "description": "The artwork to use as the inside of your self mailer.\n\nNotes:\n- HTML merge variables should not include delimiting whitespace.\n- PDF, PNG, and JPGs must be sized at 6\"x18\" at 300 DPI, while supplied HTML will be rendered to the specified `size`.\n- Be sure to leave room for address and postage information by following the templates provided here:\n  - <a href=\"https://s3-us-west-2.amazonaws.com/public.lob.com/assets/templates/self_mailers/6x18_sfm_bifold_template.pdf\" target=\"_blank\">6x18 bifold template</a>\n  - <a href=\"https://s3-us-west-2.amazonaws.com/public.lob.com/assets/templates/self_mailers/12x9_sfm_bifold_template.pdf\" target=\"_blank\">12x9 bifold template</a>\n  - <a href=\"https://s3-us-west-2.amazonaws.com/public.lob.com/assets/templates/self_mailers/17_75x9_trifold_sfm_template.pdf\" target=\"_blank\">17.75x9 trifold template</a>\n\n\nSee [here](#section/HTML-Examples) for HTML examples."
          },
          "outside": {
            "oneOf": [
              {
                "maxLength": 10000,
                "pattern": "<",
                "type": "string"
              },
              {
                "pattern": "^tmpl_[a-zA-Z0-9]+$",
                "type": "string"
              },
              {
                "pattern": "^https://[-a-zA-Z0-9@:%._+~#=/]{1,256}.(html?|pdf|png|jpg)$",
                "type": "string"
              },
              {
                "pattern": "^(?!https://)[a-zA-Z0-9@:%._+~#=/]{1,256}.(html?|pdf|png|jpg)$",
                "type": "string"
              }
            ],
            "description": "The artwork to use as the outside of your self mailer.\n\nNotes:\n- HTML merge variables should not include delimiting whitespace.\n- PDF, PNG, and JPGs must be sized at 6\"x18\" at 300 DPI, while supplied HTML will be rendered to the specified `size`.\n\nSee [here](#section/HTML-Examples) for HTML examples."
          },
          "billing_group_id": {
            "type": "string",
            "description": "An optional string with the billing group ID to tag your usage with. Is used for billing purposes. Requires special activation to use. See <a href=\"#tag/Billing-Groups\">Billing Group API</a> for more information."
          },
          "qr_code": {
            "allOf": [
              {
                "$ref": "#/components/schemas/QrCode4"
              },
              {}
            ]
          },
          "use_type": {},
          "fsc": {
            "type": "boolean",
            "description": "This is in beta. Contact support@lob.com or your account contact to learn more. Not available for `11x9_bifold` self-mailer size.",
            "default": false
          }
        }
      },
      "engine": {
        "title": "engine",
        "enum": [
          "legacy",
          "handlebars"
        ],
        "type": "string",
        "description": "The engine used to combine HTML template with merge variables.\n  * `legacy` - Lob's original engine\n  * `handlebars`"
      },
      "template_version_writable": {
        "title": "template_version_writable",
        "required": [
          "html"
        ],
        "type": "object",
        "properties": {
          "description": {
            "maxLength": 255,
            "type": [
              "string",
              "null"
            ],
            "description": "An internal description that identifies this resource. Must be no longer than 255 characters."
          },
          "html": {
            "maxLength": 100000,
            "type": "string",
            "description": "An HTML string of less than 100,000 characters to be used as the `published_version` of this template. See [here](#section/HTML-Examples) for guidance on designing HTML templates. Please see endpoint specific documentation for any other product-specific HTML details:\n- [Postcards](#operation/postcard_create) - `front` and `back`\n- [Self Mailers](#operation/self_mailer_create) - `inside` and `outside`\n- [Letters](#operation/letter_create) - `file`\n- [Checks](#operation/check_create) - `check_bottom` and `attachment`\n- [Cards](#operation/card_create) - `front` and `back`\n\nIf there is a syntax error with your variable names within your HTML, then an error will be thrown, e.g. using a `{{#users}}` opening tag without the corresponding closing tag `{{/users}}`."
          },
          "engine": {},
          "required_vars": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "An array of required variables to be used in a template. Only available for `handlebars` templates."
          }
        }
      },
      "template_version": {
        "title": "template_version",
        "required": [
          "html",
          "date_created",
          "date_modified",
          "object",
          "id"
        ],
        "type": "object",
        "properties": {
          "description": {
            "maxLength": 255,
            "type": [
              "string",
              "null"
            ],
            "description": "An internal description that identifies this resource. Must be no longer than 255 characters."
          },
          "html": {
            "maxLength": 100000,
            "type": "string",
            "description": "An HTML string of less than 100,000 characters to be used as the `published_version` of this template. See [here](#section/HTML-Examples) for guidance on designing HTML templates. Please see endpoint specific documentation for any other product-specific HTML details:\n- [Postcards](#operation/postcard_create) - `front` and `back`\n- [Self Mailers](#operation/self_mailer_create) - `inside` and `outside`\n- [Letters](#operation/letter_create) - `file`\n- [Checks](#operation/check_create) - `check_bottom` and `attachment`\n- [Cards](#operation/card_create) - `front` and `back`\n\nIf there is a syntax error with your variable names within your HTML, then an error will be thrown, e.g. using a `{{#users}}` opening tag without the corresponding closing tag `{{/users}}`."
          },
          "engine": {},
          "required_vars": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "An array of required variables to be used in a template. Only available for `handlebars` templates."
          },
          "date_created": {
            "type": "string",
            "description": "A timestamp in ISO 8601 format of the date the resource was created.",
            "contentEncoding": "date-time"
          },
          "date_modified": {
            "type": "string",
            "description": "A timestamp in ISO 8601 format of the date the resource was last modified.",
            "contentEncoding": "date-time"
          },
          "deleted": {
            "type": "boolean",
            "description": "Only returned if the resource has been successfully deleted."
          },
          "object": {
            "const": "version",
            "type": "string",
            "description": "Value is resource type."
          },
          "id": {
            "pattern": "^vrsn_[a-zA-Z0-9]+$",
            "type": "string",
            "description": "Unique identifier prefixed with `vrsn_`."
          },
          "suggest_json_editor": {
            "type": "boolean",
            "description": "Used by frontend, true if the template uses advanced features."
          },
          "merge_variables": {
            "type": "object",
            "description": "Object representing the keys of every merge variable present in the template. It has one key named 'keys', and its value is an array of strings."
          }
        }
      },
      "template_version_updatable": {
        "title": "template_version_updatable",
        "type": "object",
        "properties": {
          "description": {
            "maxLength": 255,
            "type": [
              "string",
              "null"
            ],
            "description": "An internal description that identifies this resource. Must be no longer than 255 characters."
          },
          "engine": {},
          "required_vars": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "An array of required variables to be used in a template. Only available for `handlebars` templates."
          }
        }
      },
      "template_version_deletion": {
        "title": "template_version_deletion",
        "type": "object",
        "properties": {
          "id": {
            "pattern": "^vrsn_[a-zA-Z0-9]+$",
            "type": "string",
            "description": "Unique identifier prefixed with `vrsn_`."
          },
          "deleted": {
            "type": "boolean",
            "description": "Only returned if the resource has been successfully deleted."
          }
        },
        "description": "Lob uses RESTful HTTP response codes to indicate success or failure of an API request. In general, 2xx indicates success, 4xx indicate an input error, and 5xx indicates an error on Lob's end."
      },
      "template": {
        "title": "template",
        "required": [
          "id",
          "versions",
          "published_version"
        ],
        "type": "object",
        "properties": {
          "description": {
            "maxLength": 255,
            "type": [
              "string",
              "null"
            ],
            "description": "An internal description that identifies this resource. Must be no longer than 255 characters."
          },
          "id": {
            "pattern": "^tmpl_[a-zA-Z0-9]+$",
            "type": "string",
            "description": "Unique identifier prefixed with `tmpl_`. ID of a saved [HTML template](#section/HTML-Templates)."
          },
          "versions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/template_version"
            },
            "description": "An array of all non-deleted [version objects](#tag/Template-Versions) associated with the template."
          },
          "published_version": {
            "allOf": [
              {
                "$ref": "#/components/schemas/template_version"
              },
              {}
            ]
          },
          "object": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Object12"
              },
              {}
            ]
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Use metadata to store custom information for tagging and labeling back to your internal systems. Must be an object with up to 20 key-value pairs. Keys must be at most 40 characters and values must be at most 500 characters. Neither can contain the characters `\"` and `\\`. i.e. '{\"customer_id\" : \"NEWYORK2015\"}' Nested objects are not supported.  See [Metadata](#section/Metadata) for more information."
          },
          "date_created": {
            "type": "string",
            "description": "A timestamp in ISO 8601 format of the date the resource was created.",
            "contentEncoding": "date-time"
          },
          "date_modified": {
            "type": "string",
            "description": "A timestamp in ISO 8601 format of the date the resource was last modified.",
            "contentEncoding": "date-time"
          },
          "deleted": {
            "type": "boolean",
            "description": "Only returned if the resource has been successfully deleted."
          }
        }
      },
      "template_update": {
        "title": "template_update",
        "type": "object",
        "properties": {
          "description": {
            "maxLength": 255,
            "type": [
              "string",
              "null"
            ],
            "description": "An internal description that identifies this resource. Must be no longer than 255 characters."
          },
          "published_version": {
            "pattern": "^vrsn_[a-zA-Z0-9]+$",
            "type": "string"
          }
        }
      },
      "template_deletion": {
        "title": "template_deletion",
        "type": "object",
        "properties": {
          "id": {
            "pattern": "^tmpl_[a-zA-Z0-9]+$",
            "type": "string",
            "description": "Unique identifier prefixed with `tmpl_`. ID of a saved [HTML template](#section/HTML-Templates)."
          },
          "deleted": {
            "type": "boolean",
            "description": "Only returned if the resource has been successfully deleted."
          }
        },
        "description": "Lob uses RESTful HTTP response codes to indicate success or failure of an API request. In general, 2xx indicates success, 4xx indicate an input error, and 5xx indicates an error on Lob's end."
      },
      "template_writable": {
        "title": "template_writable",
        "required": [
          "html"
        ],
        "type": "object",
        "properties": {
          "description": {
            "maxLength": 255,
            "type": [
              "string",
              "null"
            ],
            "description": "An internal description that identifies this resource. Must be no longer than 255 characters."
          },
          "html": {
            "maxLength": 100000,
            "type": "string",
            "description": "An HTML string of less than 100,000 characters to be used as the `published_version` of this template. See [here](#section/HTML-Examples) for guidance on designing HTML templates. Please see endpoint specific documentation for any other product-specific HTML details:\n- [Postcards](#operation/postcard_create) - `front` and `back`\n- [Self Mailers](#operation/self_mailer_create) - `inside` and `outside`\n- [Letters](#operation/letter_create) - `file`\n- [Checks](#operation/check_create) - `check_bottom` and `attachment`\n- [Cards](#operation/card_create) - `front` and `back`\n\nIf there is a syntax error with your variable names within your HTML, then an error will be thrown, e.g. using a `{{#users}}` opening tag without the corresponding closing tag `{{/users}}`."
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Use metadata to store custom information for tagging and labeling back to your internal systems. Must be an object with up to 20 key-value pairs. Keys must be at most 40 characters and values must be at most 500 characters. Neither can contain the characters `\"` and `\\`. i.e. '{\"customer_id\" : \"NEWYORK2015\"}' Nested objects are not supported.  See [Metadata](#section/Metadata) for more information."
          },
          "engine": {},
          "required_vars": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "An array of required variables to be used in a template. Only available for `handlebars` templates."
          }
        }
      },
      "upload_updatable": {
        "title": "upload_updatable",
        "type": "object",
        "properties": {
          "originalFilename": {
            "type": "string",
            "description": "Original filename provided when the upload is created."
          },
          "requiredAddressColumnMapping": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RequiredAddressColumnMapping"
              },
              {}
            ]
          },
          "optionalAddressColumnMapping": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OptionalAddressColumnMapping"
              },
              {}
            ]
          },
          "metadata": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Metadata1"
              },
              {}
            ]
          },
          "mergeVariableColumnMapping": {
            "type": [
              "object",
              "null"
            ],
            "description": "The mapping of column headers in your file to the merge variables present in your creative. See our <a href=\"https://help.lob.com/print-and-mail/building-a-mail-strategy/campaign-or-triggered-sends/campaign-audience-guide#step-3-map-merge-variable-data-if-applicable-7\" target=\"_blank\">Campaign Audience Guide</a> for additional details. <br />If a merge variable has the same \"name\" as a \"key\" in the `requiredAddressColumnMapping` or `optionalAddressColumnMapping` objects, then they **CANNOT** have a different value in this object. If a different value is provided, then when the campaign is processing it will get overwritten with the mapped value present in the `requiredAddressColumnMapping` or `optionalAddressColumnMapping` objects. If using customized QR code redirect from the Audience file, then a `qr_code_redirect_url` must be mapped to the column header as used in the CSV.",
            "examples": [
              {
                "name": "recipient_name",
                "gift_code": "code"
              }
            ]
          }
        }
      },
      "upload_file": {
        "title": "upload_file",
        "required": [
          "message",
          "filename"
        ],
        "type": "object",
        "properties": {
          "message": {
            "const": "File uploaded successfully",
            "type": "string"
          },
          "filename": {
            "type": "string"
          }
        }
      },
      "upload_create_export": {
        "title": "upload_create_export",
        "required": [
          "message",
          "exportId"
        ],
        "type": "object",
        "properties": {
          "message": {
            "const": "Export is processing",
            "type": "string"
          },
          "exportId": {
            "type": "string",
            "examples": [
              "ex_2dafd758ed3da9c43"
            ]
          }
        }
      },
      "us_autocompletions_writable": {
        "title": "us_autocompletions_writable",
        "required": [
          "address_prefix"
        ],
        "type": "object",
        "properties": {
          "address_prefix": {
            "type": "string",
            "description": "Only accepts numbers and street names in an alphanumeric format."
          },
          "city": {
            "type": "string",
            "description": "An optional city input used to filter suggestions. Case insensitive and does not match partial abbreviations."
          },
          "state": {
            "type": "string",
            "description": "An optional state input used to filter suggestions. Case insensitive and does not match partial abbreviations."
          },
          "zip_code": {
            "type": "string",
            "description": "An optional ZIP Code input used to filter suggestions. Matches partial entries."
          },
          "geo_ip_sort": {
            "type": "boolean",
            "description": "If `true`, sort suggestions by proximity to the IP set in the `X-Forwarded-For` header."
          }
        }
      },
      "suggestions": {
        "title": "suggestions",
        "required": [
          "primary_line",
          "city",
          "state",
          "zip_code"
        ],
        "type": "object",
        "properties": {
          "primary_line": {
            "type": "string",
            "description": "The primary delivery line (usually the street address) of the address.\nCombination of the following applicable `components` (primary number &\nsecondary information may be missing or inaccurate):\n* `primary_number`\n* `street_predirection`\n* `street_name`\n* `street_suffix`\n* `street_postdirection`\n* `secondary_designator`\n* `secondary_number`\n* `pmb_designator`\n* `pmb_number`"
          },
          "city": {
            "maxLength": 200,
            "type": "string"
          },
          "state": {
            "maxLength": 2,
            "type": "string",
            "description": "The <a href=\"https://en.wikipedia.org/wiki/ISO_3166-2\" target=\"_blank\">ISO 3166-2</a> two letter code for the state."
          },
          "zip_code": {
            "pattern": "^\\d{5}((-)?\\d{4})?$",
            "type": "string"
          },
          "object": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Object13"
              },
              {}
            ]
          }
        }
      },
      "us_autocompletions": {
        "title": "us_autocompletions",
        "type": "object",
        "properties": {
          "id": {
            "pattern": "^us_auto_[a-zA-Z0-9]+$",
            "type": "string",
            "description": "Unique identifier prefixed with `us_auto_`."
          },
          "suggestions": {
            "maxItems": 10,
            "minItems": 0,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/suggestions"
            },
            "description": "An array of objects representing suggested addresses."
          },
          "object": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Object13"
              },
              {}
            ]
          }
        }
      },
      "location": {
        "title": "location",
        "required": [
          "latitude",
          "longitude"
        ],
        "type": "object",
        "properties": {
          "latitude": {
            "maximum": 90.0,
            "minimum": -90.0,
            "type": [
              "number",
              "null"
            ],
            "description": "A positive or negative decimal indicating the geographic latitude of the address, specifying the north-to-south position of a location. This should be input with `longitude` to pinpoint locations on a map."
          },
          "longitude": {
            "maximum": 180.0,
            "minimum": -180.0,
            "type": [
              "number",
              "null"
            ],
            "description": "A positive or negative decimal indicating the geographic longitude of the address, specifying the north-to-south position of a location. This should be input with `latitude` to pinpoint locations on a map."
          }
        }
      },
      "components": {
        "title": "components",
        "required": [
          "zip_code",
          "zip_code_plus_4"
        ],
        "type": "object",
        "properties": {
          "zip_code": {
            "pattern": "^\\d{5}$",
            "type": "string",
            "description": "The 5-digit ZIP code"
          },
          "zip_code_plus_4": {
            "pattern": "^\\d{4}$",
            "type": "string"
          }
        },
        "description": "A nested object containing a breakdown of each component of a reverse geocoded response."
      },
      "location_analysis": {
        "title": "location_analysis",
        "required": [
          "latitude",
          "longitude",
          "distance"
        ],
        "type": "object",
        "properties": {
          "latitude": {
            "maximum": 90.0,
            "minimum": -90.0,
            "type": [
              "number",
              "null"
            ],
            "description": "A positive or negative decimal indicating the geographic latitude of the address, specifying the north-to-south position of a location. This should be used with `longitude` to pinpoint locations on a map. Will not be returned for undeliverable addresses or military addresses (state is `AA`, `AE`, or `AP`)."
          },
          "longitude": {
            "maximum": 180.0,
            "minimum": -180.0,
            "type": [
              "number",
              "null"
            ],
            "description": "A positive or negative decimal indicating the geographic longitude of the address, specifying the north-to-south position of a location. This should be used with `latitude` to pinpoint locations on a map. Will not be returned for undeliverable addresses or military addresses (state is `AA`, `AE`, or `AP`)."
          },
          "distance": {
            "type": "number",
            "description": "The distance from the input location to this exact zip code in miles."
          }
        },
        "description": "A nested object containing a breakdown of the analysis of a reverse geocoded location."
      },
      "addresses": {
        "title": "addresses",
        "type": "object",
        "properties": {
          "components": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Components3"
              },
              {}
            ]
          },
          "location_analysis": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LocationAnalysis1"
              },
              {}
            ]
          }
        }
      },
      "reverse_geocode": {
        "title": "reverse_geocode",
        "type": "object",
        "properties": {
          "id": {
            "pattern": "^us_reverse_geocode_[a-zA-Z0-9_]+$",
            "type": "string",
            "description": "Unique identifier prefixed with `us_reverse_geocode_`."
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/addresses"
            },
            "description": "list of addresses"
          },
          "object": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Object15"
              },
              {}
            ]
          }
        }
      },
      "single_line_address": {
        "title": "single_line_address",
        "required": [
          "address"
        ],
        "type": "object",
        "properties": {
          "address": {
            "maxLength": 500,
            "type": "string",
            "description": "The entire address in one string (e.g., \"210 King Street 94107\"). _Does not support a recipient and will error when other payload parameters are provided._"
          }
        }
      },
      "zip5": {
        "title": "zip5",
        "required": [
          "zip_code"
        ],
        "type": "object",
        "properties": {
          "zip_code": {
            "pattern": "^\\d{5}$",
            "type": "string",
            "description": "A 5-digit ZIP code.",
            "examples": [
              "94107"
            ]
          }
        }
      },
      "zip_lookup_city": {
        "title": "zip_lookup_city",
        "required": [
          "city",
          "state",
          "county",
          "county_fips",
          "preferred"
        ],
        "type": "object",
        "properties": {
          "city": {
            "maxLength": 200,
            "type": "string"
          },
          "state": {
            "maxLength": 2,
            "type": "string",
            "description": "The <a href=\"https://en.wikipedia.org/wiki/ISO_3166-2\" target=\"_blank\">ISO 3166-2</a> two letter code for the state."
          },
          "county": {
            "type": "string",
            "description": "County name of the address city."
          },
          "county_fips": {
            "pattern": "\\d{5}",
            "type": "string",
            "description": "A 5-digit <a href=\"https://en.wikipedia.org/wiki/FIPS_county_code\" target=\"_blank\">FIPS county code</a> which uniquely identifies `components[county]`. It consists of a 2-digit state code and a 3-digit county code."
          },
          "preferred": {
            "type": "boolean",
            "description": "Indicates whether or not the city is the <a href=\"https://en.wikipedia.org/wiki/ZIP_Code#ZIP_Codes_and_previous_zoning_lines\" target=\"_blank\">USPS default city</a> (preferred city) of a ZIP code. There is only one preferred city per ZIP code, which will always be in position 0 in the array of cities.",
            "examples": [
              true
            ]
          }
        }
      },
      "zip": {
        "title": "zip",
        "required": [
          "zip_code",
          "id",
          "cities",
          "zip_code_type",
          "object"
        ],
        "type": "object",
        "properties": {
          "zip_code": {
            "pattern": "^\\d{5}$",
            "type": "string",
            "description": "A 5-digit ZIP code.",
            "examples": [
              "94107"
            ]
          },
          "id": {
            "pattern": "^us_zip_[a-zA-Z0-9]+$",
            "type": "string",
            "description": "Unique identifier prefixed with `us_zip_`."
          },
          "cities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/zip_lookup_city"
            },
            "description": "An array of city objects containing valid cities for the `zip_code`. Multiple cities will be returned if more than one city is associated with the input ZIP code."
          },
          "zip_code_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/zip_code_type"
              },
              {}
            ]
          },
          "object": {
            "const": "us_zip_lookup",
            "type": "string",
            "description": "Value is resource type."
          }
        }
      },
      "postcard_types": {
        "title": "postcard_types",
        "enum": [
          "postcard.created",
          "postcard.rendered_pdf",
          "postcard.rendered_thumbnails",
          "postcard.deleted",
          "postcard.delivered",
          "postcard.failed",
          "postcard.mailed",
          "postcard.in_transit",
          "postcard.in_local_area",
          "postcard.international_exit",
          "postcard.processed_for_delivery",
          "postcard.re-routed",
          "postcard.returned_to_sender",
          "postcard.viewed"
        ],
        "type": "string",
        "description": "Unique identifier referring to status of postcard"
      },
      "self_mailer_types": {
        "title": "self_mailer_types",
        "enum": [
          "self_mailer.created",
          "self_mailer.rendered_pdf",
          "self_mailer.rendered_thumbnails",
          "self_mailer.deleted",
          "self_mailer.delivered",
          "self_mailer.failed",
          "self_mailer.mailed",
          "self_mailer.in_transit",
          "self_mailer.in_local_area",
          "self_mailer.international_exit",
          "self_mailer.processed_for_delivery",
          "self_mailer.re-routed",
          "self_mailer.returned_to_sender",
          "self_mailer.viewed"
        ],
        "type": "string",
        "description": "Unique identifier referring to status of self mailer"
      },
      "letter_types": {
        "title": "letter_types",
        "enum": [
          "letter.created",
          "letter.rendered_pdf",
          "letter.rendered_thumbnails",
          "letter.deleted",
          "letter.delivered",
          "letter.failed",
          "letter.mailed",
          "letter.in_transit",
          "letter.in_local_area",
          "letter.international_exit",
          "letter.processed_for_delivery",
          "letter.re-routed",
          "letter.returned_to_sender",
          "letter.certified.mailed",
          "letter.certified.in_transit",
          "letter.certified.in_local_area",
          "letter.certified.processed_for_delivery",
          "letter.certified.re-routed",
          "letter.certified.returned_to_sender",
          "letter.certified.delivered",
          "letter.certified.pickup_available",
          "letter.certified.issue",
          "letter.return_envelope.created",
          "letter.return_envelope.delivered",
          "letter.return_envelope.in_transit",
          "letter.return_envelope.in_local_area",
          "letter.return_envelope.international_exit",
          "letter.return_envelope.processed_for_delivery",
          "letter.return_envelope.re_routed",
          "letter.return_envelope.returned_to_sender",
          "letter.viewed"
        ],
        "type": "string",
        "description": "Unique identifier referring to status of letter"
      },
      "check_types": {
        "title": "check_types",
        "enum": [
          "check.created",
          "check.rendered_pdf",
          "check.rendered_thumbnails",
          "check.deleted",
          "check.delivered",
          "check.failed",
          "check.mailed",
          "check.in_transit",
          "check.in_local_area",
          "check.international_exit",
          "check.processed_for_delivery",
          "check.re-routed",
          "check.returned_to_sender"
        ],
        "type": "string",
        "description": "Unique identifier referring to status of check"
      },
      "address_types": {
        "title": "address_types",
        "enum": [
          "address.created",
          "address.deleted"
        ],
        "type": "string",
        "description": "Unique identifier referring to status of address"
      },
      "bank_account_types": {
        "title": "bank_account_types",
        "enum": [
          "bank_account.created",
          "bank_account.deleted",
          "bank_account.verified"
        ],
        "type": "string",
        "description": "Unique identifier referring to status of bank account"
      },
      "event_type": {
        "title": "event_type",
        "required": [
          "id",
          "enabled_for_test",
          "resource",
          "object"
        ],
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/postcard_types"
              },
              {
                "$ref": "#/components/schemas/self_mailer_types"
              },
              {
                "$ref": "#/components/schemas/letter_types"
              },
              {
                "$ref": "#/components/schemas/check_types"
              },
              {
                "$ref": "#/components/schemas/address_types"
              },
              {
                "$ref": "#/components/schemas/bank_account_types"
              }
            ]
          },
          "enabled_for_test": {
            "type": "boolean",
            "description": "Value is `true` if the event type is enabled in both the test and live environments and `false` if it is only enabled in the live environment."
          },
          "resource": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Resource"
              },
              {}
            ]
          },
          "object": {
            "const": "event_type",
            "type": "string",
            "description": "Value is resource type."
          }
        }
      },
      "events": {
        "title": "events",
        "required": [
          "id",
          "body",
          "reference_id",
          "event_type",
          "date_created",
          "object"
        ],
        "type": "object",
        "properties": {
          "id": {
            "pattern": "^evt_[a-zA-Z0-9_]+$",
            "type": "string",
            "description": "Unique identifier prefixed with `evt_`."
          },
          "body": {
            "type": "object",
            "description": "The body of the associated resource as they were at the time of the event, i.e. the [postcard object](#operation/postcard_retrieve), [the letter object](#operation/letter_retrieve), [the check object](#operation/check_retrieve), [the address object](#operation/address_retrieve), or [the bank account object](#operation/bank_account_retrieve). For `.deleted` events, the body matches the response for the corresponding delete endpoint for that resource (e.g. the [postcard delete response](#operation/postcard_delete))."
          },
          "reference_id": {
            "type": "string",
            "description": "Unique identifier of the related resource for the event."
          },
          "event_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/event_type"
              },
              {}
            ]
          },
          "date_created": {
            "type": "string",
            "description": "A timestamp in ISO 8601 format of the date the resource was created.",
            "contentEncoding": "date-time"
          },
          "object": {
            "const": "event",
            "type": "string",
            "description": "Value is resource type."
          }
        }
      },
      "AccountType": {
        "title": "AccountType",
        "enum": [
          "company",
          "individual"
        ],
        "type": "string",
        "description": "The type of entity that holds the account."
      },
      "addressobjwithcompanydefined": {
        "title": "addressobjwithcompanydefined",
        "required": [
          "company"
        ],
        "type": "object",
        "properties": {
          "description": {
            "maxLength": 255,
            "type": [
              "string",
              "null"
            ],
            "description": "An internal description that identifies this resource. Must be no longer than 255 characters."
          },
          "name": {
            "maxLength": 40,
            "type": [
              "string",
              "null"
            ],
            "description": "Either `name` or `company` is required, you may also add both. Must be no longer than 40 characters. If both `name` and `company` are provided, they will be printed on two separate lines above the rest of the address."
          },
          "company": {
            "maxLength": 40,
            "type": [
              "string",
              "null"
            ],
            "description": "Either `name` or `company` is required, you may also add both. Must be no longer than 40 characters. If both `name` and `company` are provided, they will be printed on two separate lines above the rest of the address. This field can be used for any secondary recipient information which is not part of the actual mailing address (Company Name, Department, Attention Line, etc)."
          },
          "address_line1": {
            "maxLength": 50,
            "type": "string",
            "description": "The primary number, street name, and directional information."
          },
          "address_line2": {
            "maxLength": 50,
            "type": [
              "string",
              "null"
            ],
            "description": "An optional field for address unit information. Total string sum of this plus `address_line1` may not exceed 50 characters."
          },
          "address_city": {
            "maxLength": 200,
            "type": "string"
          },
          "address_state": {
            "pattern": "^[a-zA-Z]{2}$",
            "type": "string",
            "description": "2 letter state short-name code"
          },
          "address_zip": {
            "pattern": "^\\d{5}(-\\d{4})?$",
            "type": "string",
            "description": "Must follow the ZIP format of `12345` or ZIP+4 format of `12345-1234`."
          },
          "phone": {
            "maxLength": 40,
            "type": [
              "string",
              "null"
            ],
            "description": "Must be no longer than 40 characters."
          },
          "email": {
            "maxLength": 100,
            "type": [
              "string",
              "null"
            ],
            "description": "Must be no longer than 100 characters."
          },
          "address_country": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AddressCountry2"
              },
              {}
            ]
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Use metadata to store custom information for tagging and labeling back to your internal systems. Must be an object with up to 20 key-value pairs. Keys must be at most 40 characters and values must be at most 500 characters. Neither can contain the characters `\"` and `\\`. i.e. '{\"customer_id\" : \"NEWYORK2015\"}' Nested objects are not supported.  See [Metadata](#section/Metadata) for more information."
          }
        }
      },
      "addressobjwithnamedefined": {
        "title": "addressobjwithnamedefined",
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "description": {
            "maxLength": 255,
            "type": [
              "string",
              "null"
            ],
            "description": "An internal description that identifies this resource. Must be no longer than 255 characters."
          },
          "name": {
            "maxLength": 40,
            "type": [
              "string",
              "null"
            ],
            "description": "Either `name` or `company` is required, you may also add both. Must be no longer than 40 characters. If both `name` and `company` are provided, they will be printed on two separate lines above the rest of the address."
          },
          "company": {
            "maxLength": 40,
            "type": [
              "string",
              "null"
            ],
            "description": "Either `name` or `company` is required, you may also add both. Must be no longer than 40 characters. If both `name` and `company` are provided, they will be printed on two separate lines above the rest of the address. This field can be used for any secondary recipient information which is not part of the actual mailing address (Company Name, Department, Attention Line, etc)."
          },
          "address_line1": {
            "maxLength": 50,
            "type": "string",
            "description": "The primary number, street name, and directional information."
          },
          "address_line2": {
            "maxLength": 50,
            "type": [
              "string",
              "null"
            ],
            "description": "An optional field for address unit information. Total string sum of this plus `address_line1` may not exceed 50 characters."
          },
          "address_city": {
            "maxLength": 200,
            "type": "string"
          },
          "address_state": {
            "pattern": "^[a-zA-Z]{2}$",
            "type": "string",
            "description": "2 letter state short-name code"
          },
          "address_zip": {
            "pattern": "^\\d{5}(-\\d{4})?$",
            "type": "string",
            "description": "Must follow the ZIP format of `12345` or ZIP+4 format of `12345-1234`."
          },
          "phone": {
            "maxLength": 40,
            "type": [
              "string",
              "null"
            ],
            "description": "Must be no longer than 40 characters."
          },
          "email": {
            "maxLength": 100,
            "type": [
              "string",
              "null"
            ],
            "description": "Must be no longer than 100 characters."
          },
          "address_country": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AddressCountry2"
              },
              {}
            ]
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Use metadata to store custom information for tagging and labeling back to your internal systems. Must be an object with up to 20 key-value pairs. Keys must be at most 40 characters and values must be at most 500 characters. Neither can contain the characters `\"` and `\\`. i.e. '{\"customer_id\" : \"NEWYORK2015\"}' Nested objects are not supported.  See [Metadata](#section/Metadata) for more information."
          }
        }
      },
      "AddressCountry": {
        "title": "AddressCountry",
        "const": "UNITED STATES",
        "type": "string",
        "description": "Full name of country"
      },
      "AddressCountry1": {
        "title": "AddressCountry1",
        "enum": [
          "AFGHANISTAN",
          "ALBANIA",
          "ALGERIA",
          "AMERICAN SAMOA",
          "ANDORRA",
          "ANGOLA",
          "ANGUILLA",
          "ANTARCTICA",
          "ANTIGUA AND BARBUDA",
          "ARGENTINA",
          "ARUBA",
          "AUSTRALIA",
          "AUSTRIA",
          "AZERBAIJAN",
          "BAHRAIN",
          "BANGLADESH",
          "BARBADOS",
          "BELARUS",
          "BELGIUM",
          "BELIZE",
          "BENIN",
          "BERMUDA",
          "BHUTAN",
          "BOLIVIA (PLURINATIONAL STATE OF)",
          "BONAIRE, SAINT EUSTATIUS AND SABA",
          "BOSNIA AND HERZEGOVINA",
          "BOTSWANA",
          "BRAZIL",
          "BRITISH INDIAN OCEAN TERRITORY",
          "BRITISH VIRGIN ISLANDS",
          "BRUNEI DARUSSALAM",
          "BULGARIA",
          "BURKINA FASO",
          "BURUNDI",
          "CABO VERDE",
          "CAMBODIA",
          "CAMEROON",
          "CANADA",
          "CAYMAN ISLANDS",
          "CENTRAL AFRICAN REPUBLIC",
          "CHAD",
          "CHILE",
          "CHINA",
          "COLOMBIA",
          "COMOROS",
          "CONGO",
          "CONGO, DEMOCRATIC REPUBLIC OF THE",
          "COOK ISLANDS",
          "COSTA RICA",
          "CÔTE D'IVOIRE",
          "CROATIA",
          "CUBA",
          "CURAÇAO",
          "CYPRUS",
          "CZECH REPUBLIC",
          "DENMARK",
          "DJIBOUTI",
          "DOMINICA",
          "DOMINICAN REPUBLIC",
          "ECUADOR",
          "EGYPT",
          "EL SALVADOR",
          "EQUATORIAL GUINEA",
          "ERITREA",
          "ESTONIA",
          "ESWATINI",
          "ETHIOPIA",
          "FALKLAND ISLANDS (MALVINAS)",
          "FAROE ISLANDS",
          "FIJI",
          "FINLAND",
          "FRANCE",
          "GABON",
          "GAMBIA",
          "GEORGIA",
          "GERMANY",
          "GHANA",
          "GIBRALTAR",
          "GREECE",
          "GREENLAND",
          "GRENADA",
          "GUATEMALA",
          "GUINEA",
          "GUINEA-BISSAU",
          "GUYANA",
          "HAITI",
          "HOLY SEE",
          "HONDURAS",
          "HONG KONG",
          "HUNGARY",
          "ICELAND",
          "INDIA",
          "INDONESIA",
          "IRAN (ISLAMIC REPUBLIC OF)",
          "IRAQ",
          "IRELAND",
          "ISRAEL",
          "ITALY",
          "JAMAICA",
          "JAPAN",
          "JORDAN",
          "KAZAKHSTAN",
          "KENYA",
          "KIRIBATI",
          "KOREA (DEMOCRATIC PEOPLE’S REPUBLIC OF)",
          "KOREA, REPUBLIC OF",
          "KUWAIT",
          "KYRGYZSTAN",
          "LAO PEOPLE’S DEMOCRATIC REPUBLIC",
          "LATVIA",
          "LEBANON",
          "LESOTHO",
          "LIBERIA",
          "LIBYA",
          "LIECHTENSTEIN",
          "LITHUANIA",
          "LUXEMBOURG",
          "MACAO",
          "MACEDONIA",
          "MADAGASCAR",
          "MALAWI",
          "MALAYSIA",
          "MALDIVES",
          "MALI",
          "MALTA",
          "MAURITANIA",
          "MAURITIUS",
          "MEXICO",
          "MOLDOVA, REPUBLIC OF",
          "MONACO",
          "MONGOLIA",
          "MONTENEGRO",
          "MONTSERRAT",
          "MOROCCO",
          "MOZAMBIQUE",
          "MYANMAR",
          "NAMIBIA",
          "NAURU",
          "NEPAL",
          "NETHERLAND ANTILLES",
          "NETHERLANDS",
          "NEW ZEALAND",
          "NICARAGUA",
          "NIGER",
          "NIGERIA",
          "NIUE",
          "NORFOLK ISLAND",
          "NORWAY",
          "OMAN",
          "PAKISTAN",
          "PANAMA",
          "PAPUA NEW GUINEA",
          "PARAGUAY",
          "PERU",
          "PHILIPPINES",
          "PITCAIRN",
          "POLAND",
          "PORTUGAL",
          "QATAR",
          "ROMANIA",
          "RUSSIAN FEDERATION",
          "RWANDA",
          "SAINT HELENA",
          "SAINT KITTS AND NEVIS",
          "SAINT LUCIA",
          "SAINT VINCENT AND THE GRENADINES",
          "SAMOA",
          "SAN MARINO",
          "SAO TOME AND PRINCIPE",
          "SAUDI ARABIA",
          "SENEGAL",
          "SERBIA",
          "SEYCHELLES",
          "SIERRA LEONE",
          "SINGAPORE",
          "SINT MAARTEN",
          "SLOVAKIA",
          "SLOVENIA",
          "SOLOMON ISLANDS",
          "SOMALIA",
          "SOUTH AFRICA",
          "SOUTH GEORGIA AND THE SOUTH SANDWICH ISLANDS",
          "SOUTH SUDAN",
          "SPAIN",
          "SRI LANKA",
          "SUDAN",
          "SURINAME",
          "SWEDEN",
          "SWITZERLAND",
          "SYRIAN ARAB REPUBLIC",
          "TAIWAN",
          "TAJIKISTAN",
          "TANZANIA",
          "THAILAND",
          "THE BAHAMAS",
          "TIMOR-LESTE",
          "TOGO",
          "TOKELAU",
          "TONGA",
          "TRINIDAD AND TOBAGO",
          "TUNISIA",
          "TURKEY",
          "TURKMENISTAN",
          "TURKS AND CAICOS ISLANDS",
          "TUVALU",
          "UGANDA",
          "UKRAINE",
          "UNITED ARAB EMIRATES",
          "UNITED KINGDOM",
          "URUGUAY",
          "UZBEKISTAN",
          "VANUATU",
          "VENEZUELA",
          "VIET NAM",
          "WESTERN SAHARA",
          "YEMEN",
          "ZAMBIA",
          "ZIMBABWE"
        ],
        "type": "string",
        "description": "Full name of country"
      },
      "AddressCountry2": {
        "title": "AddressCountry2",
        "const": "US",
        "type": "string"
      },
      "AddressType": {
        "title": "AddressType",
        "enum": [
          "residential",
          "commercial"
        ],
        "type": "string",
        "description": "Uses USPS's <a href=\"https://www.usps.com/nationalpremieraccounts/rdi.htm\" target=\"_blank\">Residential Delivery Indicator (RDI)</a> to identify\nwhether an address is classified as residential or\nbusiness. Possible values are:\n* `residential` –– The address is residential or a PO Box.\n* `commercial` –– The address is commercial.\n* `''` –– Not enough information provided to be determined."
      },
      "all_addresses": {
        "title": "all_addresses",
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "description": "Value is resource type."
          },
          "next_url": {
            "type": [
              "string",
              "null"
            ],
            "description": "Url of next page of items in list."
          },
          "previous_url": {
            "type": [
              "string",
              "null"
            ],
            "description": "Url of previous page of items in list."
          },
          "count": {
            "type": "integer",
            "description": "number of resources in a set",
            "contentEncoding": "int32"
          },
          "total_count": {
            "type": "integer",
            "description": "Indicates the total number of records. Provided when the request specifies an \"include\" query parameter",
            "contentEncoding": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/address"
            },
            "description": "list of addresses"
          }
        }
      },
      "all_bank_accounts": {
        "title": "all_bank_accounts",
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "description": "Value is resource type."
          },
          "next_url": {
            "type": [
              "string",
              "null"
            ],
            "description": "Url of next page of items in list."
          },
          "previous_url": {
            "type": [
              "string",
              "null"
            ],
            "description": "Url of previous page of items in list."
          },
          "count": {
            "type": "integer",
            "description": "number of resources in a set",
            "contentEncoding": "int32"
          },
          "total_count": {
            "type": "integer",
            "description": "Indicates the total number of records. Provided when the request specifies an \"include\" query parameter",
            "contentEncoding": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/bank_account"
            },
            "description": "list of bank_accounts"
          }
        }
      },
      "all_campaigns": {
        "title": "all_campaigns",
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "description": "Value is resource type."
          },
          "next_url": {
            "type": [
              "string",
              "null"
            ],
            "description": "Url of next page of items in list."
          },
          "previous_url": {
            "type": [
              "string",
              "null"
            ],
            "description": "Url of previous page of items in list."
          },
          "count": {
            "type": "integer",
            "description": "number of resources in a set",
            "contentEncoding": "int32"
          },
          "total_count": {
            "type": "integer",
            "description": "Indicates the total number of records. Provided when the request specifies an \"include\" query parameter",
            "contentEncoding": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/campaign"
            },
            "description": "list of campaigns"
          }
        }
      },
      "all_checks": {
        "title": "all_checks",
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "description": "Value is resource type."
          },
          "next_url": {
            "type": [
              "string",
              "null"
            ],
            "description": "Url of next page of items in list."
          },
          "previous_url": {
            "type": [
              "string",
              "null"
            ],
            "description": "Url of previous page of items in list."
          },
          "count": {
            "type": "integer",
            "description": "number of resources in a set",
            "contentEncoding": "int32"
          },
          "total_count": {
            "type": "integer",
            "description": "Indicates the total number of records. Provided when the request specifies an \"include\" query parameter",
            "contentEncoding": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/check"
            },
            "description": "list of checks"
          }
        }
      },
      "all_letters": {
        "title": "all_letters",
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "description": "Value is resource type."
          },
          "next_url": {
            "type": [
              "string",
              "null"
            ],
            "description": "Url of next page of items in list."
          },
          "previous_url": {
            "type": [
              "string",
              "null"
            ],
            "description": "Url of previous page of items in list."
          },
          "count": {
            "type": "integer",
            "description": "number of resources in a set",
            "contentEncoding": "int32"
          },
          "total_count": {
            "type": "integer",
            "description": "Indicates the total number of records. Provided when the request specifies an \"include\" query parameter",
            "contentEncoding": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/letter"
            },
            "description": "list of letters"
          }
        }
      },
      "all_postcards": {
        "title": "all_postcards",
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "description": "Value is resource type."
          },
          "next_url": {
            "type": [
              "string",
              "null"
            ],
            "description": "Url of next page of items in list."
          },
          "previous_url": {
            "type": [
              "string",
              "null"
            ],
            "description": "Url of previous page of items in list."
          },
          "count": {
            "type": "integer",
            "description": "number of resources in a set",
            "contentEncoding": "int32"
          },
          "total_count": {
            "type": "integer",
            "description": "Indicates the total number of records. Provided when the request specifies an \"include\" query parameter",
            "contentEncoding": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/postcard"
            },
            "description": "list of postcards"
          }
        }
      },
      "all_self_mailers": {
        "title": "all_self_mailers",
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "description": "Value is resource type."
          },
          "next_url": {
            "type": [
              "string",
              "null"
            ],
            "description": "Url of next page of items in list."
          },
          "previous_url": {
            "type": [
              "string",
              "null"
            ],
            "description": "Url of previous page of items in list."
          },
          "count": {
            "type": "integer",
            "description": "number of resources in a set",
            "contentEncoding": "int32"
          },
          "total_count": {
            "type": "integer",
            "description": "Indicates the total number of records. Provided when the request specifies an \"include\" query parameter",
            "contentEncoding": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/self_mailer"
            },
            "description": "list of self_mailers"
          }
        }
      },
      "all_template_versions": {
        "title": "all_template_versions",
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "description": "Value is resource type."
          },
          "next_url": {
            "type": [
              "string",
              "null"
            ],
            "description": "Url of next page of items in list."
          },
          "previous_url": {
            "type": [
              "string",
              "null"
            ],
            "description": "Url of previous page of items in list."
          },
          "count": {
            "type": "integer",
            "description": "number of resources in a set",
            "contentEncoding": "int32"
          },
          "total_count": {
            "type": "integer",
            "description": "Indicates the total number of records. Provided when the request specifies an \"include\" query parameter",
            "contentEncoding": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/template_version"
            },
            "description": "list of template versions"
          }
        }
      },
      "all_templates": {
        "title": "all_templates",
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "description": "Value is resource type."
          },
          "next_url": {
            "type": [
              "string",
              "null"
            ],
            "description": "Url of next page of items in list."
          },
          "previous_url": {
            "type": [
              "string",
              "null"
            ],
            "description": "Url of previous page of items in list."
          },
          "count": {
            "type": "integer",
            "description": "number of resources in a set",
            "contentEncoding": "int32"
          },
          "total_count": {
            "type": "integer",
            "description": "Indicates the total number of records. Provided when the request specifies an \"include\" query parameter",
            "contentEncoding": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/template"
            },
            "description": "list of templates"
          }
        }
      },
      "beforeafter": {
        "title": "beforeafter",
        "required": [
          "before",
          "after"
        ],
        "type": "object",
        "properties": {
          "before": {
            "type": "string",
            "description": "A reference to a list entry used for paginating to the previous set of entries. This field is pre-populated in the `previous_url` field in the return response."
          },
          "after": {
            "type": "string",
            "description": "A reference to a list entry used for paginating to the next set of entries. This field is pre-populated in the `next_url` field in the return response."
          }
        }
      },
      "BillingGroupsResponse": {
        "title": "BillingGroupsResponse",
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "description": "Value is resource type."
          },
          "next_url": {
            "type": [
              "string",
              "null"
            ],
            "description": "Url of next page of items in list."
          },
          "previous_url": {
            "type": [
              "string",
              "null"
            ],
            "description": "Url of previous page of items in list."
          },
          "count": {
            "type": "integer",
            "description": "number of resources in a set",
            "contentEncoding": "int32"
          },
          "total_count": {
            "type": "integer",
            "description": "Indicates the total number of records. Provided when the request specifies an \"include\" query parameter",
            "contentEncoding": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/billing_group"
            },
            "description": "list of billing_groups"
          }
        }
      },
      "BuckslipsOrdersResponse": {
        "title": "BuckslipsOrdersResponse",
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "description": "Value is resource type."
          },
          "next_url": {
            "type": [
              "string",
              "null"
            ],
            "description": "Url of next page of items in list."
          },
          "previous_url": {
            "type": [
              "string",
              "null"
            ],
            "description": "Url of previous page of items in list."
          },
          "count": {
            "type": "integer",
            "description": "number of resources in a set",
            "contentEncoding": "int32"
          },
          "total_count": {
            "type": "integer",
            "description": "Indicates the total number of records. Provided when the request specifies an \"include\" query parameter",
            "contentEncoding": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/buckslip_order"
            },
            "description": "List of buckslip orders"
          }
        }
      },
      "BuckslipsResponse": {
        "title": "BuckslipsResponse",
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "description": "Value is resource type."
          },
          "next_url": {
            "type": [
              "string",
              "null"
            ],
            "description": "Url of next page of items in list."
          },
          "previous_url": {
            "type": [
              "string",
              "null"
            ],
            "description": "Url of previous page of items in list."
          },
          "count": {
            "type": "integer",
            "description": "number of resources in a set",
            "contentEncoding": "int32"
          },
          "total_count": {
            "type": "integer",
            "description": "Indicates the total number of records. Provided when the request specifies an \"include\" query parameter",
            "contentEncoding": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/buckslip"
            },
            "description": "list of buckslips"
          }
        }
      },
      "campaign_deleted": {
        "title": "campaign_deleted",
        "type": "object",
        "properties": {
          "id": {
            "pattern": "^cmp_[a-zA-Z0-9]+$",
            "type": "string",
            "description": "Unique identifier prefixed with `cmp_`."
          },
          "deleted": {
            "type": "boolean",
            "description": "True if the resource has been successfully deleted."
          }
        },
        "description": "Lob uses RESTful HTTP response codes to indicate success or failure of an API request. In general, 2xx indicates success, 4xx indicate an input error, and 5xx indicates an error on Lob's end."
      },
      "CardsOrdersResponse": {
        "title": "CardsOrdersResponse",
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "description": "Value is resource type."
          },
          "next_url": {
            "type": [
              "string",
              "null"
            ],
            "description": "Url of next page of items in list."
          },
          "previous_url": {
            "type": [
              "string",
              "null"
            ],
            "description": "Url of previous page of items in list."
          },
          "count": {
            "type": "integer",
            "description": "number of resources in a set",
            "contentEncoding": "int32"
          },
          "total_count": {
            "type": "integer",
            "description": "Indicates the total number of records. Provided when the request specifies an \"include\" query parameter",
            "contentEncoding": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/card_order"
            },
            "description": "List of card orders"
          }
        }
      },
      "CardsResponse": {
        "title": "CardsResponse",
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "description": "Value is resource type."
          },
          "next_url": {
            "type": [
              "string",
              "null"
            ],
            "description": "Url of next page of items in list."
          },
          "previous_url": {
            "type": [
              "string",
              "null"
            ],
            "description": "Url of previous page of items in list."
          },
          "count": {
            "type": "integer",
            "description": "number of resources in a set",
            "contentEncoding": "int32"
          },
          "total_count": {
            "type": "integer",
            "description": "Indicates the total number of records. Provided when the request specifies an \"include\" query parameter",
            "contentEncoding": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/card"
            },
            "description": "list of cards"
          }
        }
      },
      "CarrierRouteType": {
        "title": "CarrierRouteType",
        "enum": [
          "city_delivery",
          "rural_route",
          "highway_contract",
          "po_box",
          "general_delivery"
        ],
        "type": "string",
        "description": "The type of `components[carrier_route]`. For more detailed information about\neach carrier route type, see [US Verification Details](#tag/US-Verification-Types)."
      },
      "case": {
        "title": "case",
        "enum": [
          "upper",
          "proper"
        ],
        "type": "string"
      },
      "CheckTemplate": {
        "title": "CheckTemplate",
        "enum": [
          "common",
          "jpm"
        ],
        "type": "string",
        "description": "The check template used for printing. The defualt value is `common`. If you bank with JP Morgan Chase and wish to use Positive Pay use the `jpm` template. `jpm` requires additional information to be provided."
      },
      "Code": {
        "title": "Code",
        "enum": [
          "bad_request",
          "conflict",
          "feature_limit_reached",
          "internal_server_error",
          "invalid",
          "not_deletable",
          "not_found",
          "request_timeout",
          "service_unavailable",
          "unrecognized_endpoint",
          "unsupported_lob_version",
          "address_length_exceeds_limit",
          "bank_account_already_verified",
          "bank_error",
          "billing_address_required",
          "custom_envelope_inventory_depleted",
          "deleted_bank_account",
          "failed_deliverability_strictness",
          "file_pages_below_min",
          "file_pages_exceed_max",
          "file_size_exceeds_limit",
          "foreign_return_address",
          "inconsistent_page_dimensions",
          "invalid_bank_account",
          "invalid_bank_account_verification",
          "invalid_check_international",
          "invalid_country_covid",
          "invalid_file",
          "invalid_file_dimensions",
          "invalid_file_download_time",
          "invalid_file_url",
          "invalid_image_dpi",
          "invalid_international_feature",
          "invalid_perforation_return_envelope",
          "invalid_template_html",
          "mail_use_type_can_not_be_null",
          "merge_variable_required",
          "merge_variable_whitespace",
          "payment_method_unverified",
          "pdf_encrypted",
          "special_characters_restricted",
          "unembedded_fonts",
          "email_required",
          "invalid_api_key",
          "publishable_key_not_allowed",
          "rate_limit_exceeded",
          "unauthorized",
          "unauthorized_token"
        ],
        "type": "string",
        "description": "A pre-defined string identifying an error. Error codes fall into three categories:\n\n**GENERIC**\n* `bad_request` - 422: an invalid request was made. See error message for details.\n* `conflict` - 409/422: this operation would leave data in a conflicted state.\n* `feature_limit_reached` - 403: the account has reached its resource limit and requires upgrading to add more.\n* `internal_server_error` - 500: an error has occured on Lob's servers. Please try request again.\n* `invalid` - 422: an invalid request was made. See error message for details.\n* `not_deletable` - 422: an attempt was made to delete a resource, but the resource cannot be deleted.\n* `not_found` - 404: the requested resource was not found.\n* `request_timeout` - 408: the request took too long. Please try again.\n* `service_unavailable` - 503: the Lob servers are temporarily unavailable. Please try agian.\n* `unrecognized_endpoint` - 404: the requested endpoint doesn't exist.\n* `unsupported_lob_version` - 422: an unsupported Lob API version was requested.\n\n**ADVANCED**\n* `address_length_exceeds_limit` - 422: the sum of to.address_line1 and to.address_line2 cannot surpass 50 characters.\n* `bank_account_already_verified` - 422: the bank account has already been verified.\n* `bank_error` - 422: there's an issue with the bank account.\n* `billing_address_required` - 403: in order to create a live mail piece, your account needs to set up a billing address.\n* `custom_envelope_inventory_depleted` - 422: custom envelope inventory is depleted, and more will need to be ordered.\n* `deleted_bank_account` - 404: checks cannot be created with a deleted bank account.\n* `failed_deliverability_strictness` - 422: the `to` address doesn't meet strictness requirements. See <a href=\"https://dashboard.lob.com/#/settings/account\" target=\"_blank\">Account Settings</a> to configure strictness.\n* `file_pages_below_min` - 422: not enough pages.\n* `file_pages_exceed_max` - 422: too many pages.\n* `file_size_exceeds_limit` - 422: the file size is too large. See description for details.\n* `foreign_return_address` - 422: the `from` address must be a US address.\n* `inconsistent_page_dimensions` - 422: all pages of the input file must have the same dimensions.\n* `invalid_bank_account` - 422: the provided bank routing number is invalid.\n* `invalid_bank_account_verification` - 422: verification amounts do not match.\n* `invalid_check_international` - 422: checks cannot be sent internationally.\n* `invalid_country_covid` - 422: the postal service in the specified country is currently unable to process the request due to COVID-19 restrictions.\n* `invalid_file` - 422: the file is invalid.\n* `invalid_file_dimensions` - 422: file dimensions are incorrect for the selected mail type.\n* `invalid_file_download_time` - 422: file download from remote server took too long.\n* `invalid_file_url` - 422: the file URL when creating a resource is invalid.\n* `invalid_image_dpi` - 422: DPI must be at least 300.\n* `invalid_international_feature` - 422: the specified product cannot be sent to the destination.\n* `invalid_perforation_return_envelope` - 422: both `return_envelope` and `perforation` must be used together.\n* `invalid_template_html` - 422: the provided HTML is invalid.\n* `mail_use_type_can_not_be_null` - 422: use_type must be one of \"marketing\" or \"operational\". Alternatively, an admin can set the account default use type in Account Settings.\n* `merge_variable_required` - 422: a required merge variable is missing.\n* `merge_variable_whitespace` - 422: merge variable names cannot contain whitespace.\n* `payment_method_unverified` - 401: you must have a verified bank account or credit card to submit live requests.\n* `pdf_encrypted` - 422: an encrypted PDF was provided.\n* `special_characters_restricted` - 422: cannot use special characters for merge variable names.\n* `unembedded_fonts` - 422: the provided PDF contains non-standard unembedded fonts. See description for details.\n\n**AUTHENTICATION**\n* `email_required` - 401: account must have a verified email address before creating live resources.\n* `invalid_api_key` - 401/403: the API key is invalid.\n* `publishable_key_not_allowed` - 403: the requested operation needs a secret key, not a publishable key. See [API Keys](#section/API-Keys) for more information.\n* `rate_limit_exceeded` - 429: requests were sent too quickly and must be slowed down.\n* `unauthorized` - 401: the request isn't authorized.\n* `unauthorized_token` - 401: token isn't authorized."
      },
      "Code1": {
        "title": "Code1",
        "enum": [
          400,
          404
        ],
        "type": "integer",
        "description": "A conventional HTTP status code"
      },
      "Confidence": {
        "title": "Confidence",
        "enum": [
          "high",
          "medium",
          "low"
        ],
        "type": "string",
        "description": "Indicates the likelihood the recipient name and address match based on our custom internal calculation. Possible values are:\n- `high` — Has a Lob confidence score greater than 70.\n- `medium` — Has a Lob confidence score between 40 and 70.\n- `low` — Has a Lob confidence score less than 40.\n- `\"\"` — No tracking data exists for this address."
      },
      "Coverage": {
        "title": "Coverage",
        "enum": [
          "SUBBUILDING",
          "HOUSENUMBER/BUILDING",
          "STREET",
          "LOCALITY",
          "SPARSE"
        ],
        "type": "string",
        "description": "The coverage level for the country. This represents the maximum level of\naccuracy an input address can be verified to.\n\n* `SUBBUILDING` - Coverage down to unit numbers. For example, in an apartment or a large building\n* `HOUSENUMBER/BUILDING` - Coverage down to house number. For example, the address where a house or building may be located\n* `STREET` - Coverage down to street. This means that we can verify that an street exists in a city, state, country\n* `LOCALITY` - Coverage down to city, state, or village or province. This means that we can verify that a city, village, province, or state exists in a country. Countries differ in how they define what is a province, state, city, village, etc. This attempts to group eveyrthing together.\n* `SPARSE` - Some addresses for this country exist in our databases"
      },
      "creative_writable": {
        "title": "creative_writable",
        "required": [
          "resource_type",
          "campaign_id",
          "front",
          "back",
          "details"
        ],
        "type": "object",
        "properties": {
          "resource_type": {
            "const": "postcard",
            "type": "string",
            "description": "Mailpiece type for the creative"
          },
          "campaign_id": {
            "pattern": "^cmp_[a-zA-Z0-9]+$",
            "type": "string",
            "description": "Unique identifier prefixed with `cmp_`."
          },
          "front": {},
          "back": {},
          "details": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Details2"
              },
              {}
            ]
          },
          "from": {},
          "description": {
            "maxLength": 255,
            "type": [
              "string",
              "null"
            ],
            "description": "An internal description that identifies this resource. Must be no longer than 255 characters."
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Use metadata to store custom information for tagging and labeling back to your internal systems. Must be an object with up to 20 key-value pairs. Keys must be at most 40 characters and values must be at most 500 characters. Neither can contain the characters `\"` and `\\`. i.e. '{\"customer_id\" : \"NEWYORK2015\"}' Nested objects are not supported.  See [Metadata](#section/Metadata) for more information."
          }
        }
      },
      "creative_writable1": {
        "title": "creative_writable1",
        "required": [
          "resource_type",
          "campaign_id",
          "details",
          "file",
          "from"
        ],
        "type": "object",
        "properties": {
          "resource_type": {
            "const": "letter",
            "type": "string",
            "description": "Mailpiece type for the creative"
          },
          "campaign_id": {
            "pattern": "^cmp_[a-zA-Z0-9]+$",
            "type": "string",
            "description": "Unique identifier prefixed with `cmp_`."
          },
          "details": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Details3"
              },
              {}
            ]
          },
          "file": {},
          "from": {},
          "description": {
            "maxLength": 255,
            "type": [
              "string",
              "null"
            ],
            "description": "An internal description that identifies this resource. Must be no longer than 255 characters."
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Use metadata to store custom information for tagging and labeling back to your internal systems. Must be an object with up to 20 key-value pairs. Keys must be at most 40 characters and values must be at most 500 characters. Neither can contain the characters `\"` and `\\`. i.e. '{\"customer_id\" : \"NEWYORK2015\"}' Nested objects are not supported.  See [Metadata](#section/Metadata) for more information."
          }
        }
      },
      "creative_writable2": {
        "title": "creative_writable2",
        "required": [
          "resource_type",
          "campaign_id",
          "inside",
          "outside",
          "details"
        ],
        "type": "object",
        "properties": {
          "resource_type": {
            "const": "self_mailer",
            "type": "string",
            "description": "Mailpiece type for the creative"
          },
          "campaign_id": {
            "pattern": "^cmp_[a-zA-Z0-9]+$",
            "type": "string",
            "description": "Unique identifier prefixed with `cmp_`."
          },
          "inside": {},
          "outside": {},
          "details": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Details4"
              },
              {}
            ]
          },
          "from": {},
          "description": {
            "maxLength": 255,
            "type": [
              "string",
              "null"
            ],
            "description": "An internal description that identifies this resource. Must be no longer than 255 characters."
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Use metadata to store custom information for tagging and labeling back to your internal systems. Must be an object with up to 20 key-value pairs. Keys must be at most 40 characters and values must be at most 500 characters. Neither can contain the characters `\"` and `\\`. i.e. '{\"customer_id\" : \"NEWYORK2015\"}' Nested objects are not supported.  See [Metadata](#section/Metadata) for more information."
          }
        }
      },
      "DateCreated": {
        "title": "DateCreated",
        "enum": [
          "asc",
          "desc"
        ],
        "type": "string"
      },
      "DateModified": {
        "title": "DateModified",
        "enum": [
          "asc",
          "desc"
        ],
        "type": "string"
      },
      "Datum": {
        "title": "Datum",
        "type": "object",
        "properties": {
          "rowNumber": {
            "type": "number",
            "description": "The row number of the csv file containing this data."
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Status4"
              },
              {}
            ]
          },
          "errorMessage": {
            "type": [
              "string",
              "null"
            ],
            "description": "The error message detailing the reason why processing the line item failed."
          },
          "mailpieceId": {
            "type": [
              "string",
              "null"
            ],
            "description": "The mailpiece id created from the line item when it was validated."
          },
          "originalData": {
            "type": "object",
            "description": "Key-value pairs where each key is the column header and each value is the value of the column for the row."
          }
        }
      },
      "Deliverability": {
        "title": "Deliverability",
        "enum": [
          "deliverable",
          "deliverable_unnecessary_unit",
          "deliverable_incorrect_unit",
          "deliverable_missing_unit",
          "undeliverable"
        ],
        "type": "string",
        "description": "Summarizes the deliverability of the `us_verification` object.\nFor full details, see the `deliverability_analysis` field. Possible values are:\n* `deliverable` – The address is deliverable by the USPS.\n* `deliverable_unnecessary_unit` – The address is deliverable, but the secondary unit information is unnecessary.\n* `deliverable_incorrect_unit` – The address is deliverable to the building's default address but the secondary unit provided may not exist. There is a chance the mail will not reach the intended recipient.\n* `deliverable_missing_unit` – The address is deliverable to the building's default address but is missing secondary unit information. There is a chance the mail will not reach the intended recipient.\n* `undeliverable` – The address is not deliverable according to the USPS."
      },
      "Deliverability1": {
        "title": "Deliverability1",
        "enum": [
          "deliverable",
          "deliverable_missing_info",
          "undeliverable",
          "no_match"
        ],
        "type": "string",
        "description": "Summarizes the deliverability of the `intl_verification` object. Possible values are:\n* `deliverable` — The address is deliverable.\n* `deliverable_missing_info` — The address is missing some information, but is most likely deliverable.\n* `undeliverable` — The address is most likely not deliverable. Some components of the address (such as city or postal code) may have been found.\n* `no_match` — This address is not deliverable. No matching street could be found within the city or postal code."
      },
      "DpvActive": {
        "title": "DpvActive",
        "enum": [
          "Y",
          "N"
        ],
        "type": "string",
        "description": "Corresponds to the USPS field `dpv_no_stat`. Indicates that an address has been vacated in the recent past, and is no longer receiving deliveries. If it's been unoccupied for 90+ days, or temporarily vacant, this will be flagged. Possible values are:\n* `Y` –– Address is active.\n* `N` –– Address is not active.\n* `''` –– A DPV match is not made (`deliverability_analysis[dpv_confirmation]` is `N` or an empty string).",
        "examples": [
          "Y"
        ]
      },
      "DpvCmra": {
        "title": "DpvCmra",
        "enum": [
          "Y",
          "N"
        ],
        "type": "string",
        "description": "Indicates whether or not the address is <a href=\"https://en.wikipedia.org/wiki/Commercial_mail_receiving_agency\" target=\"_blank\">CMRA-authorized</a>. Possible values are:\n* `Y` –– Address is CMRA-authorized.\n* `N` –– Address is not CMRA-authorized.\n* `''` –– A DPV match is not made (`deliverability_analysis[dpv_confirmation]` is `N` or an empty string).",
        "examples": [
          "N"
        ]
      },
      "DpvConfirmation": {
        "title": "DpvConfirmation",
        "enum": [
          "Y",
          "S",
          "D",
          "N"
        ],
        "type": "string",
        "description": "Result of Delivery Point Validation (DPV), which determines whether or not the address is deliverable by the USPS. Possible values are:\n* `Y` –– The address is deliverable by the USPS.\n* `S` –– The address is deliverable by removing the provided secondary unit designator. This information may be incorrect or unnecessary.\n* `D` –– The address is deliverable to the building's default address but is missing a secondary unit designator and/or number.\n  There is a chance the mail will not reach the intended recipient.\n* `N` –– The address is not deliverable according to the USPS, but parts of the address are valid (such as the street and ZIP code).\n* `''` –– This address is not deliverable. No matching street could be found within the city or ZIP code.",
        "examples": [
          "Y"
        ]
      },
      "DpvVacant": {
        "title": "DpvVacant",
        "enum": [
          "Y",
          "N"
        ],
        "type": "string",
        "description": "Indicates that an address was once deliverable, but has become vacant and is no longer receiving deliveries. Possible values are:\n* `Y` –– Address is vacant.\n* `N` –– Address is not vacant.\n* `''` –– A DPV match is not made (`deliverability_analysis[dpv_confirmation]` is `N` or an empty string).",
        "examples": [
          "N"
        ]
      },
      "Error1": {
        "title": "Error1",
        "required": [
          "message",
          "status_code",
          "code"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "A human-readable message with more details about the error",
            "examples": [
              "Rate limit exceeded. Please wait 5 seconds and try your request again."
            ]
          },
          "status_code": {
            "allOf": [
              {
                "$ref": "#/components/schemas/failure_status_code"
              },
              {}
            ]
          },
          "code": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Code"
              },
              {}
            ]
          }
        }
      },
      "Event": {
        "title": "Event",
        "enum": [
          "package_accepted",
          "package_arrived",
          "package_departed",
          "package_processing",
          "package_processed",
          "package_in_local_area",
          "delivery_scheduled",
          "out_for_delivery",
          "pickup_available",
          "delivered",
          "package_forwarded",
          "returned_to_sender",
          "address_issue",
          "contact_carrier",
          "delayed",
          "delivery_attempted",
          "delivery_rescheduled",
          "location_inaccessible",
          "notice_left",
          "package_damaged",
          "package_disposed",
          "package_held",
          "package_lost",
          "package_unclaimed",
          "package_undeliverable",
          "reschedule_delivery",
          "other"
        ],
        "type": "string",
        "description": "Find the full table [here](#tag/Tracking-Events). A detailed substatus about the event:\n* `package_accepted` - Package has been accepted into the carrier network for delivery.\n* `package_arrived` - Package has arrived at an intermediate location in the carrier network.\n* `package_departed` - Package has departed from an intermediate location in the carrier network.\n* `package_processing` - Package is processing at an intermediate location in the carrier network.\n* `package_processed` - Package has been processed at an intermediate location.\n* `package_in_local_area` - Package is at a location near the end destination.\n* `delivery_scheduled` - Package is scheduled for delivery.\n* `out_for_delivery` - Package is out for delivery.\n* `pickup_available` - Package is available for pickup at carrier location.\n* `delivered` - Package has been delivered.\n* `package_forwarded` - Package has been forwarded.\n* `returned_to_sender` - Package is to be returned to sender.\n* `address_issue` - Address information is incorrect. Contact carrier to ensure delivery.\n* `contact_carrier` - Contact the carrier for more information.\n* `delayed` - Delivery of package is delayed.\n* `delivery_attempted` - Delivery of package has been attempted. Contact carrier to ensure delivery.\n* `delivery_rescheduled` - Delivery of package has been rescheduled.\n* `location_inaccessible` - Delivery location inaccessible to carrier. Contact carrier to ensure delivery.\n* `notice_left` - Carrier left notice during attempted delivery. Follow carrier instructions on notice.\n* `package_damaged` - Package has been damaged. Contact carrier for more details.\n* `package_disposed` - Package has been disposed.\n* `package_held` - Package held at carrier location. Contact carrier for more details.\n* `package_lost` - Package has been lost. Contact carrier for more details.\n* `package_unclaimed` - Package is unclaimed.\n* `package_undeliverable` - Package is not able to be delivered.\n* `reschedule_delivery` - Contact carrier to reschedule delivery.\n* `other` - Unrecognized carrier status."
      },
      "ExtraService1": {
        "title": "ExtraService1",
        "enum": [
          "certified",
          "certified_return_receipt"
        ],
        "type": "string",
        "description": "Add an extra service to your letter. See <a href=\"https://www.lob.com/pricing/print-mail#compare\" target=\"_blank\">pricing</a> for extra costs incurred.\n  * `certified` - track and confirm delivery for domestic destinations. An extra sheet (1 PDF page single-sided or 2 PDF pages double-sided) is added to the beginning of your letter for address and barcode information. See here for templates: <a href=\"https://s3-us-west-2.amazonaws.com/public.lob.com/assets/templates/letter_certified_template.pdf\" target=\"_blank\">#10 envelope</a> and <a href=\"https://s3-us-west-2.amazonaws.com/public.lob.com/assets/templates/letter_certified_flat_template.pdf\" target=\"_blank\">flat envelope</a> (used for letters over 6 pages single-sided or 12 pages double-sided). You will not be charged for this extra sheet.\n  * `certified_return_receipt` - request an electronic copy of the recipient's signature to prove delivery of your certified letter"
      },
      "feature_flag_disabled1": {
        "title": "feature_flag_disabled1",
        "type": "object",
        "properties": {
          "code": {
            "type": "number",
            "description": "The error code"
          },
          "message": {
            "type": "string",
            "description": "Details of the error message with the feature flagged mentioned."
          }
        }
      },
      "From2": {
        "title": "From2",
        "required": [
          "address_line1",
          "address_city",
          "address_state",
          "address_zip",
          "name",
          "company"
        ],
        "type": "object",
        "properties": {
          "address_line1": {
            "maxLength": 64,
            "type": "string",
            "description": "The primary number, street name, and directional information."
          },
          "address_line2": {
            "maxLength": 64,
            "type": [
              "string",
              "null"
            ],
            "description": "An optional field containing any information which can't fit into line 1."
          },
          "address_city": {
            "maxLength": 200,
            "type": "string"
          },
          "address_state": {
            "pattern": "^[a-zA-Z]{2}$",
            "type": "string",
            "description": "2 letter state short-name code"
          },
          "address_zip": {
            "pattern": "^\\d{5}(-\\d{4})?$",
            "type": "string",
            "description": "Must follow the ZIP format of `12345` or ZIP+4 format of `12345-1234`."
          },
          "description": {
            "maxLength": 255,
            "type": [
              "string",
              "null"
            ],
            "description": "An internal description that identifies this resource. Must be no longer than 255 characters."
          },
          "name": {
            "maxLength": 40,
            "type": [
              "string",
              "null"
            ],
            "description": "Either `name` or `company` is required, you may also add both. Must be no longer than 40 characters. If both `name` and `company` are provided, they will be printed on two separate lines above the rest of the address."
          },
          "company": {
            "maxLength": 40,
            "type": [
              "string",
              "null"
            ],
            "description": "Either `name` or `company` is required, you may also add both. Must be no longer than 40 characters. If both `name` and `company` are provided, they will be printed on two separate lines above the rest of the address. This field can be used for any secondary recipient information which is not part of the actual mailing address (Company Name, Department, Attention Line, etc)."
          },
          "phone": {
            "maxLength": 40,
            "type": [
              "string",
              "null"
            ],
            "description": "Must be no longer than 40 characters."
          },
          "email": {
            "maxLength": 100,
            "type": [
              "string",
              "null"
            ],
            "description": "Must be no longer than 100 characters."
          },
          "address_country": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AddressCountry2"
              },
              {}
            ]
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Use metadata to store custom information for tagging and labeling back to your internal systems. Must be an object with up to 20 key-value pairs. Keys must be at most 40 characters and values must be at most 500 characters. Neither can contain the characters `\"` and `\\`. i.e. '{\"customer_id\" : \"NEWYORK2015\"}' Nested objects are not supported.  See [Metadata](#section/Metadata) for more information."
          }
        },
        "description": "Must either be an address ID or an inline object with correct address parameters. All addresses will be standardized into uppercase without being modified by verification."
      },
      "HTTPValidationError1": {
        "title": "HTTPValidationError1",
        "type": "object",
        "properties": {
          "detail": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "description": ""
          }
        }
      },
      "imageatcheckbottom": {
        "title": "imageatcheckbottom",
        "required": [
          "use_type",
          "to",
          "from",
          "bank_account",
          "amount",
          "check_bottom"
        ],
        "type": "object",
        "properties": {
          "description": {
            "maxLength": 255,
            "type": [
              "string",
              "null"
            ],
            "description": "An internal description that identifies this resource. Must be no longer than 255 characters."
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Use metadata to store custom information for tagging and labeling back to your internal systems. Must be an object with up to 20 key-value pairs. Keys must be at most 40 characters and values must be at most 500 characters. Neither can contain the characters `\"` and `\\`. i.e. '{\"customer_id\" : \"NEWYORK2015\"}' Nested objects are not supported.  See [Metadata](#section/Metadata) for more information."
          },
          "merge_variables": {
            "type": [
              "object",
              "null"
            ],
            "description": "You can input a merge variable payload object to your template to render dynamic content. For example, if you have a template like: `{{variable_name}}`, pass in `{\"variable_name\": \"Harry\"}` to render `Harry`. `merge_variables` must be an object. Any type of value is accepted as long as the object is valid JSON; you can use `strings`, `numbers`, `booleans`, `arrays`, `objects`, or `null`. The max length of the object is 25,000 characters. If you call `JSON.stringify` on your object, it can be no longer than 25,000 characters. Your variable names cannot contain any whitespace or any of the following special characters: `!`, `\"`, `#`, `%`, `&`, `'`, `(`, `)`, `*`, `+`, `,`, `/`, `;`, `<`, `=`, `>`, `@`, `[`, `\\`, `]`, `^`, `` ` ``, `{`, `|`, `}`, `~`. More instructions can be found in <a href=\"https://help.lob.com/print-and-mail/designing-mail-creatives/dynamic-personalization#using-html-and-merge-variables-10\" target=\"_blank\">our guide to using html and merge variables</a>. Depending on your <a href=\"https://dashboard.lob.com/#/settings/account\" target=\"_blank\">Merge Variable strictness</a> setting, if you define variables in your HTML but do not pass them here, you will either receive an error or the variable will render as an empty string."
          },
          "send_date": {},
          "mail_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MailType2"
              },
              {}
            ]
          },
          "memo": {
            "maxLength": 40,
            "type": [
              "string",
              "null"
            ],
            "description": "Text to include on the memo line of the check."
          },
          "check_number": {
            "maximum": 500000000.0,
            "minimum": 1.0,
            "type": "integer",
            "description": "An integer that designates the check number.\nIf `check_number` is not provided, checks created from a new `bank_account` will start at `10000` and increment with each check created with the `bank_account`.\nA provided `check_number` overrides the defaults. Subsequent checks created with the same `bank_account` will increment from the provided check number.",
            "contentEncoding": "int32"
          },
          "message": {
            "maxLength": 400,
            "type": "string",
            "description": "Max of 400 characters to be included at the bottom of the check page."
          },
          "use_type": {},
          "to": {
            "oneOf": [
              {
                "pattern": "^adr_[a-zA-Z0-9]+$",
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/inline_address_us_chk11"
              }
            ],
            "description": "Must either be an address ID or an inline object with correct address parameters. Checks cannot be sent internationally (`address_country` must be `US`). The total string of the sum of `address_line1` and `address_line2` must be no longer than 50 characters combined. If an object is used, an address will be created, corrected, and standardized for free whenever possible using our US Address Verification engine, and returned back with an ID. Depending on your <a href=\"https://dashboard.lob.com/#/settings/editions\" target=\"_blank\">Print & Mail Edition</a>, addresses may also be run through [National Change of Address (NCOALink)](#tag/National-Change-of-Address). If an address used does not meet your account’s <a href=\"https://dashboard.lob.com/#/settings/account\" target=\"_blank\">US Mail Strictness Setting</a>, the request will fail. <a href=\"https://help.lob.com/print-and-mail/all-about-addresses\" target=\"_blank\">More about verification of mailing addresses</a>"
          },
          "from": {
            "oneOf": [
              {
                "pattern": "^adr_[a-zA-Z0-9]+$",
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/inline_address_us"
              }
            ],
            "description": "Must either be an address ID or an inline object with correct address parameters. Must either be an address ID or an inline object with correct address parameters. All addresses will be standardized into uppercase without being modified by verification."
          },
          "bank_account": {
            "pattern": "^bank_[a-zA-Z0-9]+$",
            "type": "string"
          },
          "amount": {
            "maximum": 999999.99,
            "type": "number",
            "description": "The payment amount to be sent in US dollars. Amounts will be rounded to two decimal places."
          },
          "logo": {
            "oneOf": [
              {
                "pattern": "^https://[-a-zA-Z0-9@:%._+~#=/]{1,256}.(png|jpg)$",
                "type": "string"
              },
              {
                "pattern": "^(?!https://)[a-zA-Z0-9@:%._+~#=/]{1,256}.(png|jpg)$",
                "type": "string"
              }
            ],
            "description": "Accepts a remote URL or local file upload to an image to print (in grayscale) in the upper-left corner of your check. Image requirements:\n\n  * RGB or CMYK\n\n  * square\n\n  * minimum size: 100px x 100px\n\n  * transparent backgrond\n\n  * `png` or `jpg`"
          },
          "check_bottom": {},
          "attachment": {
            "oneOf": [
              {
                "maxLength": 10000,
                "pattern": "<",
                "type": "string"
              },
              {
                "pattern": "^tmpl_[a-zA-Z0-9]+$",
                "type": "string"
              },
              {
                "pattern": "^https://[-a-zA-Z0-9@:%._+~#=/]{1,256}.(html?|pdf|png|jpg)$",
                "type": "string"
              },
              {
                "pattern": "^(?!https://)[a-zA-Z0-9@:%._+~#=/]{1,256}.(html?|pdf|png|jpg)$",
                "type": "string"
              }
            ],
            "description": "A document to include with the check.\n\nNotes:\n- HTML merge variables should not include delimiting whitespace.\n- All pages of PDF, PNG, and JPGs must be sized at 8.5\"x11\" at 300 DPI, while supplied HTML will be rendered and trimmed to as many 8.5\"x11\" pages as necessary.\n- If a PDF is provided, it must be 6 pages or fewer.\n- The attachment will be printed double-sided in black & white and will be included in the envelope after the check page.\n- Please follow these <a href=\"https://s3-us-west-2.amazonaws.com/public.lob.com/assets/templates/check_attachment_template.pdf\" target=\"_blank\">design guidelines</a>.\n\nSee <a href=\"https://lob.com/pricing/print-mail#compare\" target=\"_blank\">pricing</a> for extra costs incurred. Need more help? Consult our [HTML examples](#section/HTML-Examples)."
          },
          "billing_group_id": {
            "type": "string",
            "description": "An optional string with the billing group ID to tag your usage with. Is used for billing purposes. Requires special activation to use. See <a href=\"#tag/Billing-Groups\">Billing Group API</a> for more information."
          }
        }
      },
      "inline_address_us_chk": {
        "title": "inline_address_us_chk",
        "required": [
          "address_line1",
          "address_city",
          "address_state",
          "address_zip"
        ],
        "type": "object",
        "properties": {
          "description": {
            "maxLength": 255,
            "type": [
              "string",
              "null"
            ],
            "description": "An internal description that identifies this resource. Must be no longer than 255 characters."
          },
          "name": {
            "maxLength": 40,
            "type": [
              "string",
              "null"
            ],
            "description": "Either `name` or `company` is required, you may also add both. Must be no longer than 40 characters. If both `name` and `company` are provided, they will be printed on two separate lines above the rest of the address."
          },
          "company": {
            "maxLength": 40,
            "type": [
              "string",
              "null"
            ],
            "description": "Either `name` or `company` is required, you may also add both. Must be no longer than 40 characters. If both `name` and `company` are provided, they will be printed on two separate lines above the rest of the address. This field can be used for any secondary recipient information which is not part of the actual mailing address (Company Name, Department, Attention Line, etc)."
          },
          "address_line1": {
            "maxLength": 50,
            "type": "string",
            "description": "The primary number, street name, and directional information."
          },
          "address_line2": {
            "maxLength": 50,
            "type": [
              "string",
              "null"
            ],
            "description": "An optional field for address unit information. Total string sum of this plus `address_line1` may not exceed 50 characters."
          },
          "address_city": {
            "maxLength": 200,
            "type": "string"
          },
          "address_state": {
            "pattern": "^[a-zA-Z]{2}$",
            "type": "string",
            "description": "2 letter state short-name code"
          },
          "address_zip": {
            "pattern": "^\\d{5}(-\\d{4})?$",
            "type": "string",
            "description": "Must follow the ZIP format of `12345` or ZIP+4 format of `12345-1234`."
          },
          "phone": {
            "maxLength": 40,
            "type": [
              "string",
              "null"
            ],
            "description": "Must be no longer than 40 characters."
          },
          "email": {
            "maxLength": 100,
            "type": [
              "string",
              "null"
            ],
            "description": "Must be no longer than 100 characters."
          },
          "address_country": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AddressCountry2"
              },
              {}
            ]
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Use metadata to store custom information for tagging and labeling back to your internal systems. Must be an object with up to 20 key-value pairs. Keys must be at most 40 characters and values must be at most 500 characters. Neither can contain the characters `\"` and `\\`. i.e. '{\"customer_id\" : \"NEWYORK2015\"}' Nested objects are not supported.  See [Metadata](#section/Metadata) for more information."
          }
        }
      },
      "LacsIndicator": {
        "title": "LacsIndicator",
        "enum": [
          "Y",
          "N"
        ],
        "type": "string",
        "description": "Indicates whether this address has been converted by\n<a href=\"https://postalpro.usps.com/address-quality/lacslink\" target=\"_blank\">LACS<sup>Link</sup></a>.\nLACS<sup>Link</sup> corrects outdated addresses into their modern counterparts.\nPossible values are:\n* `Y` –– New address produced with a matching record in LACS<sup>Link</sup>.\n* `N` –– New address could not be produced with a matching record in LACS<sup>Link</sup>.\n* `''` –– A DPV match is not made (`deliverability_analysis[dpv_confirmation]` is `N` or an empty string)."
      },
      "Level": {
        "title": "Level",
        "enum": [
          "high",
          "medium",
          "low"
        ],
        "type": "string",
        "description": "Indicates the likelihood that the address is a valid, mail-receiving address. Possible values are:\n  - `high` — Over 70% of mailpieces Lob has sent to this address were delivered successfully and recent mailings were also successful.\n  - `medium` — Between 40% and 70% of mailpieces Lob has sent to this address were delivered successfully.\n  - `low` — Less than 40% of mailpieces Lob has sent to this address were delivered successfully and recent mailings weren't successful.\n  - `\"\"` — No tracking data exists for this address or lob deliverability was unable to find a corresponding level of mail success."
      },
      "MailType2": {
        "title": "MailType2",
        "const": "usps_first_class",
        "type": "string",
        "description": "Checks must be sent `usps_first_class`"
      },
      "Mode": {
        "title": "Mode",
        "enum": [
          "test",
          "live"
        ],
        "type": "string",
        "description": "The environment in which the mailpieces were created. Today, will only be `live`."
      },
      "Name": {
        "title": "Name",
        "enum": [
          "Mailed",
          "In Transit",
          "In Local Area",
          "Processed for Delivery",
          "Delivered",
          "Re-Routed",
          "Returned to Sender",
          "International Exit"
        ],
        "type": "string",
        "description": "Name of tracking event (for normal postcards, self mailers, letters, and checks):\n\n  * `Mailed` - The mailpiece has been handed off to and accepted by USPS\n    and is en route. <a href=\"https://help.lob.com/print-and-mail/getting-data-and-results/tracking-your-mail#mailed-tracking-events-4\" target=\"_blank\">More about\n    Mailed.</a>\n    Note this data is only available in Enterprise editions of\n    Lob. <a href=\"https://lob.com/support/contact#contact\" target=\"_blank\">Contact Sales</a> if\n    you want access to this feature.\n\n  * `In Transit` - The mailpiece is being processed at the entry/origin facility.\n\n  * `In Local Area` - The mailpiece is being processed at the destination facility.\n\n  * `Processed for Delivery` - The mailpiece has been greenlit for\n    delivery at the recipient's nearest postal facility. The mailpiece\n    should reach the mailbox within 1 business day of this tracking\n    event.\n\n  * `Delivered` - The mail piece has been delivered to \n    the recipient’s address. The final scan is generated when the mail \n    carrier's GPS unit leaves the delivery area.\n\n  * `Re-Routed` - The mailpiece is re-routed due to recipient change of\n    address, address errors, or USPS relabeling of barcode/ID tag\n    area.\n\n  * `Returned to Sender` - The mailpiece is being returned to sender due\n    to barcode, ID tag area, or address errors.\n  \n  * `International Exit` - The mail piece has been processed to \n    ship to a destination abroad. This is typically the last \n    scan a US-originated international mail piece will receive \n    from the USPS.\n\n<a href=\"https://help.lob.com/print-and-mail/getting-data-and-results/tracking-your-mail#mailed-tracking-events-4\" target=\"_blank\">More about tracking</a>"
      },
      "Name1": {
        "title": "Name1",
        "enum": [
          "Mailed",
          "In Transit",
          "In Local Area",
          "Processed for Delivery",
          "Pickup Available",
          "Delivered",
          "Re-Routed",
          "Returned to Sender",
          "Issue"
        ],
        "type": "string",
        "description": "Name of tracking event for Certified letters. Letters sent with USPS Certified Mail are fully tracked by USPS, therefore their tracking events have an additional details object with more detailed information about the tracking event. Some certified tracking event names have multiple meanings, noted in the list here. See the description of the details object for the full set of combined certified tracking event name meanings.\n\n  * `Mailed` - Package has been accepted into the carrier network for delivery.\n\n  * `In Transit` - Maps to four distinct stages of transit.\n\n  * `In Local Area` - Package is at a location near the end destination.\n\n  * `Processed for Delivery` - Maps to two distinct stages of delivery.\n\n  * `Pickup Available` - Package is available for pickup at carrier location.\n\n  * `Delivered` - Package has been delivered.\n\n  * `Re-Routed` - Package has been forwarded.\n\n  * `Returned to Sender` - Package is to be returned to sender.\n\n  * `Issue` - Maps to (at least) 15 possible issues, some of which are actionable."
      },
      "Object": {
        "title": "Object",
        "const": "billing_group",
        "type": "string",
        "description": "Value is resource type."
      },
      "Object1": {
        "title": "Object1",
        "const": "us_verification",
        "type": "string",
        "description": "Value is resource type."
      },
      "Object2": {
        "title": "Object2",
        "const": "intl_verification",
        "type": "string",
        "description": "Value is resource type."
      },
      "object3": {
        "title": "object3",
        "const": "tracking_event",
        "type": "string",
        "description": "Value is resource type."
      },
      "Object5": {
        "title": "Object5",
        "const": "check",
        "type": "string",
        "description": "Value is resource type."
      },
      "Object6": {
        "title": "Object6",
        "const": "id_validation",
        "type": "string",
        "description": "Value is resource type."
      },
      "Object8": {
        "title": "Object8",
        "const": "letter",
        "type": "string",
        "description": "Value is resource type."
      },
      "Object10": {
        "title": "Object10",
        "const": "postcard",
        "type": "string",
        "description": "Value is resource type."
      },
      "Object11": {
        "title": "Object11",
        "const": "self_mailer",
        "type": "string",
        "description": "Value is resource type."
      },
      "Object12": {
        "title": "Object12",
        "const": "template",
        "type": "string",
        "description": "Value is resource type."
      },
      "Object13": {
        "title": "Object13",
        "const": "us_autocompletion",
        "type": "string",
        "description": "Value is resource type."
      },
      "Object15": {
        "title": "Object15",
        "const": "us_reverse_geocode_lookup",
        "type": "string",
        "description": "Value is resource type."
      },
      "Orientation": {
        "title": "Orientation",
        "enum": [
          "horizontal",
          "vertical"
        ],
        "type": "string",
        "description": "The orientation of the card."
      },
      "QrCodeAnalyticsResponse": {
        "title": "QrCodeAnalyticsResponse",
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "description": "Value is resource type."
          },
          "count": {
            "type": "integer",
            "description": "number of resources in a set",
            "contentEncoding": "int32"
          },
          "total_count": {
            "type": "integer",
            "description": "Indicates the total number of records. Provided when the request specifies an \"include\" query parameter",
            "contentEncoding": "int32"
          },
          "scanned_count": {
            "type": "integer",
            "description": "Indicates the number of QR Codes out of `count` that were scanned atleast once.",
            "contentEncoding": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/qr_code_scans"
            },
            "description": "List of QR code analytics"
          }
        }
      },
      "qr_code_scans": {
        "title": "qr_code_scans",
        "type": "object",
        "properties": {
          "resource_id": {
            "type": "string",
            "description": "Unique identifier for each mail piece."
          },
          "date_created": {
            "type": "string",
            "description": "A timestamp in ISO 8601 format of the date the resource was created.",
            "contentEncoding": "date-time"
          },
          "number_of_scans": {
            "type": "number",
            "description": "Number of times the QR Code associated with this mail piece was scanned."
          },
          "scans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/scans"
            },
            "description": "Detailed scan information associated with each mail piece."
          }
        }
      },
      "RecordType": {
        "title": "RecordType",
        "enum": [
          "street",
          "highrise",
          "firm",
          "po_box",
          "rural_route",
          "general_delivery"
        ],
        "type": "string",
        "description": "A description of the type of address. Populated if a DPV match is made (`deliverability_analysis[dpv_confirmation]`\nis `Y`, `S`, or `D`). For more detailed information about each record type, see\n[US Verification Details](#tag/US-Verification-Types)."
      },
      "Resource": {
        "title": "Resource",
        "enum": [
          "postcards",
          "self mailers",
          "letters",
          "checks",
          "addresses",
          "bank accounts"
        ],
        "type": "string"
      },
      "returned_resource": {
        "title": "returned_resource",
        "required": [
          "resource_type",
          "details"
        ],
        "type": "object",
        "properties": {
          "resource_type": {
            "const": "postcard",
            "type": "string",
            "description": "Mailpiece type for the creative"
          },
          "details": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Details5"
              },
              {}
            ]
          },
          "from": {},
          "description": {
            "maxLength": 255,
            "type": [
              "string",
              "null"
            ],
            "description": "An internal description that identifies this resource. Must be no longer than 255 characters."
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Use metadata to store custom information for tagging and labeling back to your internal systems. Must be an object with up to 20 key-value pairs. Keys must be at most 40 characters and values must be at most 500 characters. Neither can contain the characters `\"` and `\\`. i.e. '{\"customer_id\" : \"NEWYORK2015\"}' Nested objects are not supported.  See [Metadata](#section/Metadata) for more information."
          }
        }
      },
      "returned_resource1": {
        "title": "returned_resource1",
        "required": [
          "resource_type",
          "details",
          "from"
        ],
        "type": "object",
        "properties": {
          "resource_type": {
            "const": "letter",
            "type": "string",
            "description": "Mailpiece type for the creative"
          },
          "details": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Details6"
              },
              {}
            ]
          },
          "from": {},
          "description": {
            "maxLength": 255,
            "type": [
              "string",
              "null"
            ],
            "description": "An internal description that identifies this resource. Must be no longer than 255 characters."
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Use metadata to store custom information for tagging and labeling back to your internal systems. Must be an object with up to 20 key-value pairs. Keys must be at most 40 characters and values must be at most 500 characters. Neither can contain the characters `\"` and `\\`. i.e. '{\"customer_id\" : \"NEWYORK2015\"}' Nested objects are not supported.  See [Metadata](#section/Metadata) for more information."
          }
        }
      },
      "returned_resource2": {
        "title": "returned_resource2",
        "required": [
          "resource_type",
          "details"
        ],
        "type": "object",
        "properties": {
          "resource_type": {
            "const": "self_mailer",
            "type": "string",
            "description": "Mailpiece type for the creative"
          },
          "details": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Details7"
              },
              {}
            ]
          },
          "from": {},
          "description": {
            "maxLength": 255,
            "type": [
              "string",
              "null"
            ],
            "description": "An internal description that identifies this resource. Must be no longer than 255 characters."
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Use metadata to store custom information for tagging and labeling back to your internal systems. Must be an object with up to 20 key-value pairs. Keys must be at most 40 characters and values must be at most 500 characters. Neither can contain the characters `\"` and `\\`. i.e. '{\"customer_id\" : \"NEWYORK2015\"}' Nested objects are not supported.  See [Metadata](#section/Metadata) for more information."
          }
        }
      },
      "returned1": {
        "title": "returned1",
        "type": "object",
        "properties": {
          "mail_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/mail_type"
              },
              {}
            ]
          },
          "size": {
            "allOf": [
              {
                "$ref": "#/components/schemas/postcard_size"
              },
              {}
            ]
          },
          "front_original_url": {
            "maxLength": 2083,
            "minLength": 1,
            "type": "string",
            "description": "The original URL of the `front` template."
          },
          "back_original_url": {
            "maxLength": 2083,
            "minLength": 1,
            "type": "string",
            "description": "The original URL of the `back` template."
          },
          "address_placement": {
            "allOf": [
              {
                "$ref": "#/components/schemas/address_placement"
              },
              {}
            ]
          },
          "buckslips": {
            "maxItems": 1,
            "minItems": 0,
            "type": [
              "array",
              "null"
            ],
            "items": {
              "pattern": "^bck_[a-zA-Z0-9]+$",
              "type": "string"
            },
            "description": "A single-element array containing an existing buckslip id in a string format. See [buckslips](#tag/Buckslips) for more information."
          },
          "cards": {
            "maxItems": 1,
            "minItems": 0,
            "type": [
              "array",
              "null"
            ],
            "items": {
              "pattern": "^card_[a-zA-Z0-9]+$",
              "type": "string"
            },
            "description": "A single-element array containing an existing card id in a string format. See [cards](#tag/Cards) for more information."
          },
          "custom_envelope": {},
          "color": {
            "type": "boolean",
            "description": "Set this key to `true` if you would like to print in color. Set to `false` if you would like to print in black and white."
          },
          "double_sided": {
            "type": "boolean",
            "description": "Set this attribute to `true` for double sided printing, or `false` for for single sided printing. Defaults to `true`.",
            "default": true
          },
          "extra_service": {},
          "file_original_url": {
            "type": "string",
            "description": "The original URL of the `file` template."
          },
          "inside_original_url": {
            "maxLength": 2083,
            "minLength": 1,
            "type": "string",
            "description": "The original URL of the `inside` template."
          },
          "outside_original_url": {
            "maxLength": 2083,
            "minLength": 1,
            "type": "string",
            "description": "The original URL of the `outside` template."
          }
        },
        "description": "Properties that the postcards in your Creative should have. Check within in order to add a QR code to your creative."
      },
      "SendDate": {
        "title": "SendDate",
        "enum": [
          "asc",
          "desc"
        ],
        "type": "string"
      },
      "Size": {
        "title": "Size",
        "const": "8.75x3.75",
        "type": "string",
        "description": "The size of the buckslip"
      },
      "Size1": {
        "title": "Size1",
        "enum": [
          "3.375x2.125",
          "2.125x3.375"
        ],
        "type": "string",
        "description": "The size of the card"
      },
      "sort_by": {
        "title": "sort_by",
        "required": [
          "date_created",
          "date_modified"
        ],
        "type": "object",
        "properties": {
          "date_created": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DateCreated"
              },
              {}
            ]
          },
          "date_modified": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DateCreated"
              },
              {}
            ]
          }
        }
      },
      "sort_by1": {
        "title": "sort_by1",
        "required": [
          "date_created",
          "send_date"
        ],
        "type": "object",
        "properties": {
          "date_created": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DateCreated"
              },
              {}
            ]
          },
          "send_date": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DateCreated"
              },
              {}
            ]
          }
        }
      },
      "State": {
        "title": "State",
        "enum": [
          "in_progress",
          "failed",
          "succeeded"
        ],
        "type": "string",
        "description": "The state of the export file, which can be `in_progress`, `failed` or `succeeded`."
      },
      "Status": {
        "title": "Status",
        "enum": [
          "pending",
          "printing",
          "available",
          "cancelled",
          "depleted"
        ],
        "type": "string",
        "description": "The status of the buckslip order."
      },
      "Status1": {
        "title": "Status1",
        "enum": [
          "LV4",
          "LV3",
          "LV2",
          "LV1",
          "LF4",
          "LF3",
          "LF2",
          "LF1",
          "LM4",
          "LM3",
          "LM2",
          "LU1"
        ],
        "type": "string",
        "description": "The status level for the country. This represents the maximum level of\naccuracy an input address can be verified to.\n\n* `LV4` - Verified. The input data is correct. All input data was able to match in databases.\n* `LV3` - Verified. The input data is correct. All input data was able to match in databases <em>after</em> some or all elements were standarized. The input data may also be using outdated city, state, or country names.\n* `LV2` - Verified. The input data is correct although some input data is unverifiable due to incomplete data.\n* `LV1` - Verified. The input data is acceptable but in an attempt to standarize user input, errors were introduced.\n* `LF4` - Fixed. The input data is matched and fixed. (Example: Brighon, UK -> Brighton, UK)\n* `LF3` - Fixed. The input data is matched and fixed but some elements such as Subbuilding number and house number cannot be checked.\n* `LF2` - Fixed. The input data is matched but some elements such as Street cannot be checked.\n* `LF1` - Fixed. The input data is acceptable but in an attempt to standarize user input, errors were introduced.\n* `LM4` - Missing Info. The input data cannot be corrected completely.\n* `LM3` - Missing Info. The input data cannot be corrected completely and there were multiple matches found in databases.\n* `LM2` - Missing Info. The input data cannot be corrected completely and only some elements were found.\n* `LU1` - Unverified. The input data cannot be corrected or matched."
      },
      "Status2": {
        "title": "Status2",
        "enum": [
          "pending",
          "printing",
          "available",
          "cancelled",
          "depleted"
        ],
        "type": "string",
        "description": "The status of the card order."
      },
      "status3": {
        "title": "status3",
        "enum": [
          "Validated",
          "Failed",
          "Processing"
        ],
        "type": "string"
      },
      "Status4": {
        "title": "Status4",
        "enum": [
          "Validated",
          "Failed",
          "Processing"
        ],
        "type": "string",
        "description": "The processing status of line item."
      },
      "StreetPostdirection": {
        "title": "StreetPostdirection",
        "enum": [
          "N",
          "S",
          "E",
          "W",
          "NE",
          "SW",
          "SE",
          "NW"
        ],
        "type": "string",
        "description": "Geographic direction following a street name (`N`, `S`, `E`, `W`, `NE`, `SW`, `SE`, `NW`)."
      },
      "StreetPredirection": {
        "title": "StreetPredirection",
        "enum": [
          "N",
          "S",
          "E",
          "W",
          "NE",
          "SW",
          "SE",
          "NW"
        ],
        "type": "string",
        "description": "Geographic direction preceding a street name (`N`, `S`, `E`, `W`, `NE`, `SW`, `SE`, `NW`)."
      },
      "SuiteReturnCode": {
        "title": "SuiteReturnCode",
        "enum": [
          "A",
          "00"
        ],
        "type": "string",
        "description": "A return code that indicates whether the address was matched and corrected by\n<a href=\"https://postalpro.usps.com/address-quality-solutions/suitelink\" target=\"_blank\">Suite<sup>Link</sup></a>.\nSuite<sup>Link</sup> attempts to provide secondary information to business addresses.\nPossible values are:\n* `A` –– A Suite<sup>Link</sup> match was found and secondary information was added.\n* `00` –– A Suite<sup>Link</sup> match could not be found and no secondary information was added.\n* `''` –– Suite<sup>Link</sup> lookup was not attempted."
      },
      "Thefinishofthebuckslip.": {
        "title": "Thefinishofthebuckslip.",
        "enum": [
          "gloss",
          "matte"
        ],
        "type": "string"
      },
      "Thestatusofthebuckslip.": {
        "title": "Thestatusofthebuckslip.",
        "enum": [
          "processed",
          "rendered",
          "failed"
        ],
        "type": "string"
      },
      "Thestatusofthecard.": {
        "title": "Thestatusofthecard.",
        "enum": [
          "processed",
          "rendered"
        ],
        "type": "string"
      },
      "Thestatusofthecheck.": {
        "title": "Thestatusofthecheck.",
        "enum": [
          "processed",
          "rendered",
          "failed"
        ],
        "type": "string"
      },
      "Thestatusoftheletter.": {
        "title": "Thestatusoftheletter.",
        "enum": [
          "processed",
          "rendered",
          "failed"
        ],
        "type": "string"
      },
      "Thestatusofthepostcard.": {
        "title": "Thestatusofthepostcard.",
        "enum": [
          "processed",
          "rendered",
          "failed"
        ],
        "type": "string"
      },
      "Thestatusoftheselfmailer.": {
        "title": "Thestatusoftheselfmailer.",
        "enum": [
          "processed",
          "rendered",
          "failed"
        ],
        "type": "string"
      },
      "Thestockofthebuckslip.": {
        "title": "Thestockofthebuckslip.",
        "enum": [
          "text",
          "cover"
        ],
        "type": "string"
      },
      "Type": {
        "title": "Type",
        "enum": [
          "all",
          "failures",
          "successes"
        ],
        "type": "string"
      },
      "Type1": {
        "title": "Type1",
        "enum": [
          "all",
          "failures",
          "successes"
        ],
        "type": "string",
        "description": "The export file type, which can be `all`, `failures` or `successes`."
      },
      "upload_export_error1": {
        "title": "upload_export_error1",
        "required": [
          "code",
          "message",
          "errors"
        ],
        "type": "object",
        "properties": {
          "code": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Code1"
              },
              {}
            ]
          },
          "message": {
            "type": "string",
            "description": "A human-readable message with more details about the error"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "An array of pre-defined strings that identify an error"
          }
        },
        "examples": [
          {
            "code": 400,
            "message": "Invalid body, check 'errors' property for more info.",
            "errors": [
              "type must be a string"
            ]
          }
        ]
      },
      "UploadsExportsRequest": {
        "title": "UploadsExportsRequest",
        "type": "object",
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Type"
              },
              {}
            ]
          }
        }
      },
      "UploadsExportsResponse": {
        "title": "UploadsExportsResponse",
        "required": [
          "id",
          "dateCreated",
          "dateModified",
          "deleted",
          "s3Url",
          "state",
          "type",
          "uploadId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "pattern": "^ex_[a-zA-Z0-9]+$",
            "type": "string",
            "description": "Unique identifier prefixed with `ex_`."
          },
          "dateCreated": {
            "type": "string",
            "description": "A timestamp in ISO 8601 format of the date the export was created",
            "contentEncoding": "date-time"
          },
          "dateModified": {
            "type": "string",
            "description": "A timestamp in ISO 8601 format of the date the export was last modified",
            "contentEncoding": "date-time"
          },
          "deleted": {
            "type": "boolean",
            "description": "Returns as `true` if the resource has been successfully deleted."
          },
          "s3Url": {
            "type": "string",
            "description": "The URL for the generated export file."
          },
          "state": {
            "allOf": [
              {
                "$ref": "#/components/schemas/State"
              },
              {}
            ]
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Type1"
              },
              {}
            ]
          },
          "uploadId": {
            "pattern": "^upl_[a-zA-Z0-9]+$",
            "type": "string",
            "description": "Unique identifier prefixed with `upl_`."
          }
        }
      },
      "UploadsReportResponse": {
        "title": "UploadsReportResponse",
        "required": [
          "data",
          "count",
          "total_count"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Datum"
            },
            "description": ""
          },
          "next_url": {
            "type": [
              "string",
              "null"
            ],
            "description": "Url of next page of items in list."
          },
          "prev_url": {
            "type": [
              "string",
              "null"
            ],
            "description": "Url of previous page of items in list."
          },
          "count": {
            "type": "integer",
            "description": "number of resources in a set",
            "contentEncoding": "int32"
          },
          "total_count": {
            "type": "integer",
            "description": "Indicates the total number of records. Provided when the request specifies an \"include\" query parameter",
            "contentEncoding": "int32"
          }
        }
      },
      "ValidationError": {
        "title": "ValidationError",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "type": "object",
        "properties": {
          "loc": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "contentEncoding": "int32"
                }
              ]
            },
            "description": ""
          },
          "msg": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "wordsatcheckbottom": {
        "title": "wordsatcheckbottom",
        "required": [
          "message",
          "use_type",
          "to",
          "from",
          "bank_account",
          "amount"
        ],
        "type": "object",
        "properties": {
          "description": {
            "maxLength": 255,
            "type": [
              "string",
              "null"
            ],
            "description": "An internal description that identifies this resource. Must be no longer than 255 characters."
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Use metadata to store custom information for tagging and labeling back to your internal systems. Must be an object with up to 20 key-value pairs. Keys must be at most 40 characters and values must be at most 500 characters. Neither can contain the characters `\"` and `\\`. i.e. '{\"customer_id\" : \"NEWYORK2015\"}' Nested objects are not supported.  See [Metadata](#section/Metadata) for more information."
          },
          "merge_variables": {
            "type": [
              "object",
              "null"
            ],
            "description": "You can input a merge variable payload object to your template to render dynamic content. For example, if you have a template like: `{{variable_name}}`, pass in `{\"variable_name\": \"Harry\"}` to render `Harry`. `merge_variables` must be an object. Any type of value is accepted as long as the object is valid JSON; you can use `strings`, `numbers`, `booleans`, `arrays`, `objects`, or `null`. The max length of the object is 25,000 characters. If you call `JSON.stringify` on your object, it can be no longer than 25,000 characters. Your variable names cannot contain any whitespace or any of the following special characters: `!`, `\"`, `#`, `%`, `&`, `'`, `(`, `)`, `*`, `+`, `,`, `/`, `;`, `<`, `=`, `>`, `@`, `[`, `\\`, `]`, `^`, `` ` ``, `{`, `|`, `}`, `~`. More instructions can be found in <a href=\"https://help.lob.com/print-and-mail/designing-mail-creatives/dynamic-personalization#using-html-and-merge-variables-10\" target=\"_blank\">our guide to using html and merge variables</a>. Depending on your <a href=\"https://dashboard.lob.com/#/settings/account\" target=\"_blank\">Merge Variable strictness</a> setting, if you define variables in your HTML but do not pass them here, you will either receive an error or the variable will render as an empty string."
          },
          "send_date": {},
          "mail_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MailType2"
              },
              {}
            ]
          },
          "memo": {
            "maxLength": 40,
            "type": [
              "string",
              "null"
            ],
            "description": "Text to include on the memo line of the check."
          },
          "check_number": {
            "maximum": 500000000.0,
            "minimum": 1.0,
            "type": "integer",
            "description": "An integer that designates the check number.\nIf `check_number` is not provided, checks created from a new `bank_account` will start at `10000` and increment with each check created with the `bank_account`.\nA provided `check_number` overrides the defaults. Subsequent checks created with the same `bank_account` will increment from the provided check number.",
            "contentEncoding": "int32"
          },
          "message": {
            "maxLength": 400,
            "type": "string",
            "description": "Max of 400 characters to be included at the bottom of the check page."
          },
          "use_type": {},
          "to": {
            "oneOf": [
              {
                "pattern": "^adr_[a-zA-Z0-9]+$",
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/inline_address_us_chk11"
              }
            ],
            "description": "Must either be an address ID or an inline object with correct address parameters. Checks cannot be sent internationally (`address_country` must be `US`). The total string of the sum of `address_line1` and `address_line2` must be no longer than 50 characters combined. If an object is used, an address will be created, corrected, and standardized for free whenever possible using our US Address Verification engine, and returned back with an ID. Depending on your <a href=\"https://dashboard.lob.com/#/settings/editions\" target=\"_blank\">Print & Mail Edition</a>, addresses may also be run through [National Change of Address (NCOALink)](#tag/National-Change-of-Address). If an address used does not meet your account’s <a href=\"https://dashboard.lob.com/#/settings/account\" target=\"_blank\">US Mail Strictness Setting</a>, the request will fail. <a href=\"https://help.lob.com/print-and-mail/all-about-addresses\" target=\"_blank\">More about verification of mailing addresses</a>"
          },
          "from": {
            "oneOf": [
              {
                "pattern": "^adr_[a-zA-Z0-9]+$",
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/inline_address_us"
              }
            ],
            "description": "Must either be an address ID or an inline object with correct address parameters. Must either be an address ID or an inline object with correct address parameters. All addresses will be standardized into uppercase without being modified by verification."
          },
          "bank_account": {
            "pattern": "^bank_[a-zA-Z0-9]+$",
            "type": "string"
          },
          "amount": {
            "maximum": 999999.99,
            "type": "number",
            "description": "The payment amount to be sent in US dollars. Amounts will be rounded to two decimal places."
          },
          "logo": {
            "oneOf": [
              {
                "pattern": "^https://[-a-zA-Z0-9@:%._+~#=/]{1,256}.(png|jpg)$",
                "type": "string"
              },
              {
                "pattern": "^(?!https://)[a-zA-Z0-9@:%._+~#=/]{1,256}.(png|jpg)$",
                "type": "string"
              }
            ],
            "description": "Accepts a remote URL or local file upload to an image to print (in grayscale) in the upper-left corner of your check. Image requirements:\n\n  * RGB or CMYK\n\n  * square\n\n  * minimum size: 100px x 100px\n\n  * transparent backgrond\n\n  * `png` or `jpg`"
          },
          "check_bottom": {},
          "attachment": {
            "oneOf": [
              {
                "maxLength": 10000,
                "pattern": "<",
                "type": "string"
              },
              {
                "pattern": "^tmpl_[a-zA-Z0-9]+$",
                "type": "string"
              },
              {
                "pattern": "^https://[-a-zA-Z0-9@:%._+~#=/]{1,256}.(html?|pdf|png|jpg)$",
                "type": "string"
              },
              {
                "pattern": "^(?!https://)[a-zA-Z0-9@:%._+~#=/]{1,256}.(html?|pdf|png|jpg)$",
                "type": "string"
              }
            ],
            "description": "A document to include with the check.\n\nNotes:\n- HTML merge variables should not include delimiting whitespace.\n- All pages of PDF, PNG, and JPGs must be sized at 8.5\"x11\" at 300 DPI, while supplied HTML will be rendered and trimmed to as many 8.5\"x11\" pages as necessary.\n- If a PDF is provided, it must be 6 pages or fewer.\n- The attachment will be printed double-sided in black & white and will be included in the envelope after the check page.\n- Please follow these <a href=\"https://s3-us-west-2.amazonaws.com/public.lob.com/assets/templates/check_attachment_template.pdf\" target=\"_blank\">design guidelines</a>.\n\nSee <a href=\"https://lob.com/pricing/print-mail#compare\" target=\"_blank\">pricing</a> for extra costs incurred. Need more help? Consult our [HTML examples](#section/HTML-Examples)."
          },
          "billing_group_id": {
            "type": "string",
            "description": "An optional string with the billing group ID to tag your usage with. Is used for billing purposes. Requires special activation to use. See <a href=\"#tag/Billing-Groups\">Billing Group API</a> for more information."
          }
        }
      },
      "x-lang-output": {
        "title": "x-lang-output",
        "enum": [
          "native",
          "match"
        ],
        "type": "string"
      },
      "inline_address_us_chk1": {
        "title": "inline_address_us_chk1",
        "type": "object",
        "properties": {
          "description": {
            "maxLength": 255,
            "type": [
              "string",
              "null"
            ],
            "description": "An internal description that identifies this resource. Must be no longer than 255 characters."
          },
          "name": {
            "maxLength": 40,
            "type": [
              "string",
              "null"
            ],
            "description": "Either `name` or `company` is required, you may also add both. Must be no longer than 40 characters. If both `name` and `company` are provided, they will be printed on two separate lines above the rest of the address."
          },
          "company": {
            "maxLength": 40,
            "type": [
              "string",
              "null"
            ],
            "description": "Either `name` or `company` is required, you may also add both. Must be no longer than 40 characters. If both `name` and `company` are provided, they will be printed on two separate lines above the rest of the address. This field can be used for any secondary recipient information which is not part of the actual mailing address (Company Name, Department, Attention Line, etc)."
          },
          "address_line1": {
            "maxLength": 50,
            "type": "string",
            "description": "The primary number, street name, and directional information."
          },
          "address_line2": {
            "maxLength": 50,
            "type": [
              "string",
              "null"
            ],
            "description": "An optional field for address unit information. Total string sum of this plus `address_line1` may not exceed 50 characters."
          },
          "address_city": {
            "maxLength": 200,
            "type": "string"
          },
          "address_state": {
            "pattern": "^[a-zA-Z]{2}$",
            "type": "string",
            "description": "2 letter state short-name code"
          },
          "address_zip": {
            "pattern": "^\\d{5}(-\\d{4})?$",
            "type": "string",
            "description": "Must follow the ZIP format of `12345` or ZIP+4 format of `12345-1234`."
          },
          "phone": {
            "maxLength": 40,
            "type": [
              "string",
              "null"
            ],
            "description": "Must be no longer than 40 characters."
          },
          "email": {
            "maxLength": 100,
            "type": [
              "string",
              "null"
            ],
            "description": "Must be no longer than 100 characters."
          },
          "address_country": {},
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Use metadata to store custom information for tagging and labeling back to your internal systems. Must be an object with up to 20 key-value pairs. Keys must be at most 40 characters and values must be at most 500 characters. Neither can contain the characters `\"` and `\\`. i.e. '{\"customer_id\" : \"NEWYORK2015\"}' Nested objects are not supported.  See [Metadata](#section/Metadata) for more information."
          }
        }
      },
      "Addresses0Error1": {
        "title": "Addresses0Error1",
        "required": [
          "error"
        ],
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {}
            ]
          }
        }
      },
      "AddressesResponse1": {
        "title": "AddressesResponse1",
        "type": "object",
        "properties": {
          "id": {
            "pattern": "^adr_[a-zA-Z0-9]+$",
            "type": "string",
            "description": "Unique identifier prefixed with `adr_`."
          },
          "deleted": {
            "type": "boolean",
            "description": "Only returned if the resource has been successfully deleted."
          }
        }
      },
      "BankAccounts0Error1": {
        "title": "BankAccounts0Error1",
        "required": [
          "error"
        ],
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {}
            ]
          }
        }
      },
      "BankAccountsResponse1": {
        "title": "BankAccountsResponse1",
        "type": "object",
        "properties": {
          "id": {
            "pattern": "^bank_[a-zA-Z0-9]+$",
            "type": "string"
          },
          "deleted": {
            "type": "boolean",
            "description": "Only returned if the resource has been successfully deleted."
          }
        }
      },
      "BankAccountsVerify0Error1": {
        "title": "BankAccountsVerify0Error1",
        "required": [
          "error"
        ],
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {}
            ]
          }
        }
      },
      "BillingGroups0Error1": {
        "title": "BillingGroups0Error1",
        "required": [
          "error"
        ],
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {}
            ]
          }
        }
      },
      "Buckslips0Error1": {
        "title": "Buckslips0Error1",
        "required": [
          "error"
        ],
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {}
            ]
          }
        }
      },
      "BuckslipsOrders0Error1": {
        "title": "BuckslipsOrders0Error1",
        "required": [
          "error"
        ],
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {}
            ]
          }
        }
      },
      "BuckslipsResponse1": {
        "title": "BuckslipsResponse1",
        "type": "object",
        "properties": {
          "id": {
            "pattern": "^bck_[a-zA-Z0-9]+$",
            "type": "string",
            "description": "Unique identifier prefixed with `bck_`."
          },
          "deleted": {
            "type": "boolean",
            "description": "Only returned if the resource has been successfully deleted."
          }
        }
      },
      "BulkIntlVerifications0Error1": {
        "title": "BulkIntlVerifications0Error1",
        "required": [
          "error"
        ],
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {}
            ]
          }
        }
      },
      "BulkUsVerifications0Error1": {
        "title": "BulkUsVerifications0Error1",
        "required": [
          "error"
        ],
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {}
            ]
          }
        }
      },
      "Campaigns0Error1": {
        "title": "Campaigns0Error1",
        "required": [
          "error"
        ],
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {}
            ]
          }
        }
      },
      "CampaignsResponse4": {
        "title": "CampaignsResponse4",
        "type": "object",
        "properties": {
          "id": {
            "pattern": "^cmp_[a-zA-Z0-9]+$",
            "type": "string",
            "description": "Unique identifier prefixed with `cmp_`."
          },
          "deleted": {
            "type": "boolean",
            "description": "True if the resource has been successfully deleted."
          }
        }
      },
      "CampaignsSend0Error1": {
        "title": "CampaignsSend0Error1",
        "required": [
          "error"
        ],
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {}
            ]
          }
        }
      },
      "Cards0Error1": {
        "title": "Cards0Error1",
        "required": [
          "error"
        ],
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {}
            ]
          }
        }
      },
      "CardsOrders0Error1": {
        "title": "CardsOrders0Error1",
        "required": [
          "error"
        ],
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {}
            ]
          }
        }
      },
      "CardsResponse5": {
        "title": "CardsResponse5",
        "type": "object",
        "properties": {
          "id": {
            "pattern": "^card_[a-zA-Z0-9]+$",
            "type": "string",
            "description": "Unique identifier prefixed with `card_`."
          },
          "deleted": {
            "type": "boolean",
            "description": "Only returned if the resource has been successfully deleted."
          }
        }
      },
      "case1": {
        "title": "case1",
        "enum": [
          "upper",
          "proper"
        ],
        "type": "string",
        "description": "Casing of the verified address. Possible values are `upper` and `proper` for uppercased (e.g. \"PO BOX\") and proper-cased (e.g. \"PO Box\"), respectively. Only affects `primary_line`, `city`, and `state`. Default casing is `upper`."
      },
      "case2": {
        "title": "case2",
        "enum": [
          "upper",
          "proper"
        ],
        "type": "string",
        "description": "Casing of the verified address. Possible values are `upper` and `proper` for uppercased (e.g. \"PO BOX\") and proper-cased (e.g. \"PO Box\"), respectively. Only affects `recipient`, `primary_line`, `secondary_line`, `urbanization`, and `last_line`. Default casing is `upper`."
      },
      "Checks0Error1": {
        "title": "Checks0Error1",
        "required": [
          "error"
        ],
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {}
            ]
          }
        }
      },
      "ChecksResponse": {
        "title": "ChecksResponse",
        "type": "object",
        "properties": {
          "id": {
            "pattern": "^chk_[a-zA-Z0-9]+$",
            "type": "string",
            "description": "Unique identifier prefixed with `chk_`."
          },
          "deleted": {
            "type": "boolean",
            "description": "Only returned if the resource has been successfully deleted."
          }
        }
      },
      "Components1": {
        "title": "Components1",
        "type": "object",
        "properties": {
          "primary_number": {
            "type": "string",
            "description": "The numeric or alphanumeric part of an address preceding the street name. Often the house, building, or PO Box number."
          },
          "street_name": {
            "type": "string",
            "description": "The name of the street."
          },
          "city": {
            "maxLength": 200,
            "type": "string"
          },
          "state": {
            "maxLength": 2,
            "type": "string",
            "description": "The <a href=\"https://en.wikipedia.org/wiki/ISO_3166-2\" target=\"_blank\">ISO 3166-2</a> two letter code for the state."
          },
          "postal_code": {
            "maxLength": 12,
            "type": "string",
            "description": "The postal code."
          }
        }
      },
      "Components3": {
        "title": "Components3",
        "required": [
          "zip_code",
          "zip_code_plus_4"
        ],
        "type": "object",
        "properties": {
          "zip_code": {
            "pattern": "^\\d{5}$",
            "type": "string",
            "description": "The 5-digit ZIP code"
          },
          "zip_code_plus_4": {
            "pattern": "^\\d{4}$",
            "type": "string"
          }
        }
      },
      "Components4": {
        "title": "Components4",
        "required": [
          "primary_number",
          "street_predirection",
          "street_name",
          "street_suffix",
          "street_postdirection",
          "secondary_designator",
          "secondary_number",
          "pmb_designator",
          "pmb_number",
          "extra_secondary_designator",
          "extra_secondary_number",
          "city",
          "state",
          "zip_code",
          "zip_code_plus_4",
          "zip_code_type",
          "delivery_point_barcode",
          "address_type",
          "record_type",
          "default_building_address",
          "county",
          "county_fips",
          "carrier_route",
          "carrier_route_type"
        ],
        "type": "object",
        "properties": {
          "primary_number": {
            "type": "string",
            "description": "The numeric or alphanumeric part of an address preceding the street name. Often the house, building, or PO Box number."
          },
          "street_predirection": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StreetPredirection"
              },
              {}
            ]
          },
          "street_name": {
            "type": "string",
            "description": "The name of the street."
          },
          "street_suffix": {
            "type": "string",
            "description": "The standard USPS abbreviation for the street suffix (`ST`, `AVE`, `BLVD`, etc)."
          },
          "street_postdirection": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StreetPostdirection"
              },
              {}
            ]
          },
          "secondary_designator": {
            "type": "string",
            "description": "The standard USPS abbreviation describing the `components[secondary_number]` (`STE`, `APT`, `BLDG`, etc)."
          },
          "secondary_number": {
            "type": "string",
            "description": "Number of the apartment/unit/etc."
          },
          "pmb_designator": {
            "type": "string",
            "description": "Designator of a <a href=\"https://en.wikipedia.org/wiki/Commercial_mail_receiving_agency\" target=\"_blank\">CMRA-authorized</a> private mailbox."
          },
          "pmb_number": {
            "type": "string",
            "description": "Number of a <a href=\"https://en.wikipedia.org/wiki/Commercial_mail_receiving_agency\" target=\"_blank\">CMRA-authorized</a> private mailbox."
          },
          "extra_secondary_designator": {
            "type": "string",
            "description": "An extra (often unnecessary) secondary designator provided with the input address."
          },
          "extra_secondary_number": {
            "type": "string",
            "description": "An extra (often unnecessary) secondary number provided with the input address."
          },
          "city": {
            "maxLength": 200,
            "type": "string"
          },
          "state": {
            "maxLength": 2,
            "type": "string",
            "description": "The <a href=\"https://en.wikipedia.org/wiki/ISO_3166-2\" target=\"_blank\">ISO 3166-2</a> two letter code for the state."
          },
          "zip_code": {
            "pattern": "^\\d{5}$",
            "type": "string",
            "description": "The 5-digit ZIP code"
          },
          "zip_code_plus_4": {
            "pattern": "^\\d{4}$",
            "type": "string"
          },
          "zip_code_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/zip_code_type"
              },
              {}
            ]
          },
          "delivery_point_barcode": {
            "type": "string",
            "description": "A 12-digit identifier that uniquely identifies a delivery point (location where mail can be sent and received). It consists of the 5-digit ZIP code (`zip_code`), 4-digit ZIP+4 add-on (`zip_code_plus_4`), 2-digit delivery point, and 1-digit delivery point check digit."
          },
          "address_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AddressType"
              },
              {}
            ]
          },
          "record_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RecordType"
              },
              {}
            ]
          },
          "default_building_address": {
            "type": "boolean",
            "description": "Designates whether or not the address is the default address for a building containing multiple delivery points."
          },
          "county": {
            "type": "string",
            "description": "County name of the address city."
          },
          "county_fips": {
            "pattern": "\\d{5}",
            "type": "string",
            "description": "A 5-digit <a href=\"https://en.wikipedia.org/wiki/FIPS_county_code\" target=\"_blank\">FIPS county code</a> which uniquely identifies `components[county]`. It consists of a 2-digit state code and a 3-digit county code."
          },
          "carrier_route": {
            "type": "string",
            "description": "A 4-character code assigned to a mail delivery route within a ZIP code."
          },
          "carrier_route_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CarrierRouteType"
              },
              {}
            ]
          },
          "latitude": {
            "type": [
              "number",
              "null"
            ],
            "description": "A positive or negative decimal indicating the geographic latitude of the address, specifying the north-to-south position of a location. This should be used with `longitude` to pinpoint locations on a map. Will not be returned for undeliverable addresses or military addresses (state is `AA`, `AE`, or `AP`)."
          },
          "longitude": {
            "type": [
              "number",
              "null"
            ],
            "description": "A positive or negative decimal indicating the geographic longitude of the address, specifying the north-to-south position of a location. This should be used with `latitude` to pinpoint locations on a map. Will not be returned for undeliverable addresses or military addresses (state is `AA`, `AE`, or `AP`)."
          }
        }
      },
      "Content-Type": {
        "title": "Content-Type",
        "const": "application/x-www-form-urlencoded",
        "type": "string"
      },
      "Creatives0Error1": {
        "title": "Creatives0Error1",
        "required": [
          "error"
        ],
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {}
            ]
          }
        }
      },
      "DeliverabilityAnalysis1": {
        "title": "DeliverabilityAnalysis1",
        "required": [
          "dpv_confirmation",
          "dpv_cmra",
          "dpv_vacant",
          "dpv_active",
          "dpv_footnotes",
          "ews_match",
          "lacs_indicator",
          "lacs_return_code",
          "suite_return_code"
        ],
        "type": "object",
        "properties": {
          "dpv_confirmation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DpvConfirmation"
              },
              {}
            ]
          },
          "dpv_cmra": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DpvCmra"
              },
              {}
            ]
          },
          "dpv_vacant": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DpvVacant"
              },
              {}
            ]
          },
          "dpv_active": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DpvActive"
              },
              {}
            ]
          },
          "dpv_footnotes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/dpv_footnote"
            },
            "description": "An array of 2-character strings that gives more insight into how `deliverability_analysis[dpv_confirmation]` was determined. Will always include at least 1 string, and can include up to 3. For details, see [US Verification Details](#tag/US-Verification-Types).",
            "examples": [
              [
                "AA",
                "BB"
              ]
            ]
          },
          "ews_match": {
            "type": "boolean",
            "description": "Indicates whether or not an address has been flagged in the <a href=\"https://docs.informatica.com/data-engineering/data-engineering-quality/10-4-0/address-validator-port-reference/postal-carrier-certification-data-ports/early-warning-system-return-code.html\" target=\"_blank\">Early Warning System</a>, meaning the address is under development and not yet ready to receive mail. However, it should become available in a few months.",
            "examples": [
              false
            ]
          },
          "lacs_indicator": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LacsIndicator"
              },
              {}
            ]
          },
          "lacs_return_code": {
            "type": "string",
            "description": "A code indicating how `deliverability_analysis[lacs_indicator]` was determined.\nPossible values are:\n* `A` — A new address was produced because a match was found in LACS<sup>Link</sup>.\n* `92` — A LACS<sup>Link</sup> record was matched after dropping secondary information.\n* `14` — A match was found in LACS<sup>Link</sup>, but could not be converted to a deliverable address.\n* `00` — A match was not found in LACS<sup>Link</sup>, and no new address was produced.\n* `''` — LACS<sup>Link</sup> was not attempted."
          },
          "suite_return_code": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SuiteReturnCode"
              },
              {}
            ]
          }
        }
      },
      "Details": {
        "title": "Details",
        "type": "object",
        "properties": {
          "mail_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/mail_type"
              },
              {}
            ]
          },
          "size": {
            "allOf": [
              {
                "$ref": "#/components/schemas/postcard_size"
              },
              {}
            ]
          },
          "front_original_url": {
            "maxLength": 2083,
            "minLength": 1,
            "type": "string",
            "description": "The original URL of the `front` template."
          },
          "back_original_url": {
            "maxLength": 2083,
            "minLength": 1,
            "type": "string",
            "description": "The original URL of the `back` template."
          },
          "address_placement": {
            "allOf": [
              {
                "$ref": "#/components/schemas/address_placement"
              },
              {}
            ]
          },
          "buckslips": {
            "maxItems": 1,
            "minItems": 0,
            "type": [
              "array",
              "null"
            ],
            "items": {
              "pattern": "^bck_[a-zA-Z0-9]+$",
              "type": "string"
            },
            "description": "A single-element array containing an existing buckslip id in a string format. See [buckslips](#tag/Buckslips) for more information."
          },
          "cards": {
            "maxItems": 1,
            "minItems": 0,
            "type": [
              "array",
              "null"
            ],
            "items": {
              "pattern": "^card_[a-zA-Z0-9]+$",
              "type": "string"
            },
            "description": "A single-element array containing an existing card id in a string format. See [cards](#tag/Cards) for more information."
          },
          "custom_envelope": {},
          "color": {
            "type": "boolean",
            "description": "Set this key to `true` if you would like to print in color. Set to `false` if you would like to print in black and white."
          },
          "double_sided": {
            "type": "boolean",
            "description": "Set this attribute to `true` for double sided printing, or `false` for for single sided printing. Defaults to `true`.",
            "default": true
          },
          "extra_service": {},
          "file_original_url": {
            "type": "string",
            "description": "The original URL of the `file` template."
          },
          "inside_original_url": {
            "maxLength": 2083,
            "minLength": 1,
            "type": "string",
            "description": "The original URL of the `inside` template."
          },
          "outside_original_url": {
            "maxLength": 2083,
            "minLength": 1,
            "type": "string",
            "description": "The original URL of the `outside` template."
          }
        }
      },
      "Details2": {
        "title": "Details2",
        "type": "object",
        "properties": {
          "mail_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/mail_type"
              },
              {}
            ]
          },
          "size": {
            "allOf": [
              {
                "$ref": "#/components/schemas/postcard_size"
              },
              {}
            ]
          },
          "qr_code": {
            "allOf": [
              {
                "$ref": "#/components/schemas/QrCode1"
              },
              {}
            ]
          }
        }
      },
      "Details3": {
        "title": "Details3",
        "required": [
          "color"
        ],
        "type": "object",
        "properties": {
          "address_placement": {
            "allOf": [
              {
                "$ref": "#/components/schemas/address_placement"
              },
              {}
            ]
          },
          "add_on_types": {
            "maxItems": 3,
            "minItems": 0,
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/letter_add_on_types"
            },
            "description": "An array containing the types of add-ons for the Letter Creative."
          },
          "buckslips": {
            "maxItems": 1,
            "minItems": 0,
            "type": [
              "array",
              "null"
            ],
            "items": {
              "pattern": "^bck_[a-zA-Z0-9]+$",
              "type": "string"
            },
            "description": "A single-element array containing an existing buckslip id in a string format. See [buckslips](#tag/Buckslips) for more information. Note that buckslip letter campaigns require a minimum send quantity of 5,000 letters per campaign."
          },
          "cards": {
            "maxItems": 1,
            "minItems": 0,
            "type": [
              "array",
              "null"
            ],
            "items": {
              "pattern": "^card_[a-zA-Z0-9]+$",
              "type": "string"
            },
            "description": "A single-element array containing an existing card id in a string format. See [cards](#tag/Cards) for more information."
          },
          "color": {
            "type": "boolean",
            "description": "Set this key to `true` if you would like to print in color. Set to `false` if you would like to print in black and white."
          },
          "custom_envelope": {
            "pattern": "^env_[a-zA-Z0-9]+$",
            "type": [
              "string",
              "null"
            ],
            "description": "Accepts an envelope ID for any customized envelope with available inventory. If no inventory is available for the specified ID, the letter will not be sent, and an error will be returned. If the letter has more than 6 sheets, it will be sent in a blank flat envelope. Custom envelopes may be created and ordered from the dashboard. This feature is exclusive to certain customers. Upgrade to the appropriate <a href=\"https://dashboard.lob.com/#/settings/editions\" target=\"_blank\">Print & Mail Edition</a> to gain access."
          },
          "double_sided": {
            "type": "boolean",
            "description": "Set this attribute to `true` for double sided printing, or `false` for for single sided printing. Defaults to `true`.",
            "default": true
          },
          "extra_service": {},
          "mail_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/mail_type"
              },
              {}
            ]
          },
          "qr_code": {
            "allOf": [
              {
                "$ref": "#/components/schemas/QrCode1"
              },
              {}
            ]
          }
        }
      },
      "Details4": {
        "title": "Details4",
        "type": "object",
        "properties": {
          "mail_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/mail_type"
              },
              {}
            ]
          },
          "size": {
            "allOf": [
              {
                "$ref": "#/components/schemas/self_mailer_size"
              },
              {}
            ]
          },
          "qr_code": {
            "allOf": [
              {
                "$ref": "#/components/schemas/QrCode1"
              },
              {}
            ]
          }
        }
      },
      "Details5": {
        "title": "Details5",
        "type": "object",
        "properties": {
          "mail_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/mail_type"
              },
              {}
            ]
          },
          "size": {
            "allOf": [
              {
                "$ref": "#/components/schemas/postcard_size"
              },
              {}
            ]
          },
          "front_original_url": {
            "maxLength": 2083,
            "minLength": 1,
            "type": "string",
            "description": "The original URL of the `front` template."
          },
          "back_original_url": {
            "maxLength": 2083,
            "minLength": 1,
            "type": "string",
            "description": "The original URL of the `back` template."
          }
        }
      },
      "Details6": {
        "title": "Details6",
        "type": "object",
        "properties": {
          "address_placement": {
            "allOf": [
              {
                "$ref": "#/components/schemas/address_placement"
              },
              {}
            ]
          },
          "buckslips": {
            "maxItems": 1,
            "minItems": 0,
            "type": [
              "array",
              "null"
            ],
            "items": {
              "pattern": "^bck_[a-zA-Z0-9]+$",
              "type": "string"
            },
            "description": "A single-element array containing an existing buckslip id in a string format. See [buckslips](#tag/Buckslips) for more information."
          },
          "cards": {
            "maxItems": 1,
            "minItems": 0,
            "type": [
              "array",
              "null"
            ],
            "items": {
              "pattern": "^card_[a-zA-Z0-9]+$",
              "type": "string"
            },
            "description": "A single-element array containing an existing card id in a string format. See [cards](#tag/Cards) for more information."
          },
          "custom_envelope": {},
          "color": {
            "type": "boolean",
            "description": "Set this key to `true` if you would like to print in color. Set to `false` if you would like to print in black and white."
          },
          "double_sided": {
            "type": "boolean",
            "description": "Set this attribute to `true` for double sided printing, or `false` for for single sided printing. Defaults to `true`.",
            "default": true
          },
          "extra_service": {},
          "file_original_url": {
            "type": "string",
            "description": "The original URL of the `file` template."
          },
          "mail_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/mail_type"
              },
              {}
            ]
          }
        }
      },
      "Details7": {
        "title": "Details7",
        "type": "object",
        "properties": {
          "mail_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/mail_type"
              },
              {}
            ]
          },
          "size": {
            "allOf": [
              {
                "$ref": "#/components/schemas/self_mailer_size"
              },
              {}
            ]
          },
          "inside_original_url": {
            "maxLength": 2083,
            "minLength": 1,
            "type": "string",
            "description": "The original URL of the `inside` template."
          },
          "outside_original_url": {
            "maxLength": 2083,
            "minLength": 1,
            "type": "string",
            "description": "The original URL of the `outside` template."
          }
        }
      },
      "Domains0Error1": {
        "title": "Domains0Error1",
        "required": [
          "error"
        ],
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {}
            ]
          }
        }
      },
      "DomainsLinks0Error1": {
        "title": "DomainsLinks0Error1",
        "required": [
          "error"
        ],
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {}
            ]
          }
        }
      },
      "IdentityValidation0Error1": {
        "title": "IdentityValidation0Error1",
        "required": [
          "error"
        ],
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {}
            ]
          }
        }
      },
      "IntlAutocompletions0Error1": {
        "title": "IntlAutocompletions0Error1",
        "required": [
          "error"
        ],
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {}
            ]
          }
        }
      },
      "IntlVerifications0Error1": {
        "title": "IntlVerifications0Error1",
        "required": [
          "error"
        ],
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {}
            ]
          }
        }
      },
      "Letters0Error1": {
        "title": "Letters0Error1",
        "required": [
          "error"
        ],
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {}
            ]
          }
        }
      },
      "LettersResponse": {
        "title": "LettersResponse",
        "type": "object",
        "properties": {
          "id": {
            "pattern": "^ltr_[a-zA-Z0-9]+$",
            "type": "string",
            "description": "Unique identifier prefixed with `ltr_`."
          },
          "deleted": {
            "type": "boolean",
            "description": "Only returned if the resource has been successfully deleted."
          }
        }
      },
      "Links0Error1": {
        "title": "Links0Error1",
        "required": [
          "error"
        ],
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {}
            ]
          }
        }
      },
      "LinksShorten0Error1": {
        "title": "LinksShorten0Error1",
        "required": [
          "error"
        ],
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {}
            ]
          }
        }
      },
      "LinksShortenBulk0Error1": {
        "title": "LinksShortenBulk0Error1",
        "required": [
          "error"
        ],
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {}
            ]
          }
        }
      },
      "LobConfidenceScore1": {
        "title": "LobConfidenceScore1",
        "required": [
          "score",
          "level"
        ],
        "type": "object",
        "properties": {
          "score": {
            "maximum": 100.0,
            "minimum": 0.0,
            "type": [
              "number",
              "null"
            ],
            "description": "A numerical score between 0 and 100 that represents the percentage of mailpieces Lob has sent to this addresses that have been delivered successfully over the past 2 years. Will be `null` if no tracking data exists for this address."
          },
          "level": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Level"
              },
              {}
            ]
          }
        }
      },
      "LocationAnalysis1": {
        "title": "LocationAnalysis1",
        "required": [
          "latitude",
          "longitude",
          "distance"
        ],
        "type": "object",
        "properties": {
          "latitude": {
            "maximum": 90.0,
            "minimum": -90.0,
            "type": [
              "number",
              "null"
            ],
            "description": "A positive or negative decimal indicating the geographic latitude of the address, specifying the north-to-south position of a location. This should be used with `longitude` to pinpoint locations on a map. Will not be returned for undeliverable addresses or military addresses (state is `AA`, `AE`, or `AP`)."
          },
          "longitude": {
            "maximum": 180.0,
            "minimum": -180.0,
            "type": [
              "number",
              "null"
            ],
            "description": "A positive or negative decimal indicating the geographic longitude of the address, specifying the north-to-south position of a location. This should be used with `latitude` to pinpoint locations on a map. Will not be returned for undeliverable addresses or military addresses (state is `AA`, `AE`, or `AP`)."
          },
          "distance": {
            "type": "number",
            "description": "The distance from the input location to this exact zip code in miles."
          }
        }
      },
      "Metadata1": {
        "title": "Metadata1",
        "required": [
          "columns"
        ],
        "type": "object",
        "properties": {
          "columns": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of column names from the csv file which you want associated with each of your mailpieces"
          }
        }
      },
      "OptionalAddressColumnMapping": {
        "title": "OptionalAddressColumnMapping",
        "required": [
          "address_line2",
          "company",
          "address_country"
        ],
        "type": "object",
        "properties": {
          "address_line2": {
            "type": [
              "string",
              "null"
            ],
            "description": "The column header from the csv file that should be mapped to the optional field \"address_line2\""
          },
          "company": {
            "type": [
              "string",
              "null"
            ],
            "description": "The column header from the csv file that should be mapped to the optional field \"company\""
          },
          "address_country": {
            "type": [
              "string",
              "null"
            ],
            "description": "The column header from the csv file that should be mapped to the optional field \"address_country\""
          }
        }
      },
      "Postcards0Error1": {
        "title": "Postcards0Error1",
        "required": [
          "error"
        ],
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {}
            ]
          }
        }
      },
      "PostcardsResponse1": {
        "title": "PostcardsResponse1",
        "type": "object",
        "properties": {
          "id": {
            "pattern": "^psc_[a-zA-Z0-9]+$",
            "type": "string",
            "description": "Unique identifier prefixed with `psc_`."
          },
          "deleted": {
            "type": "boolean",
            "description": "Only returned if the resource has been successfully deleted."
          }
        }
      },
      "QrCode1": {
        "title": "QrCode1",
        "required": [
          "position",
          "width"
        ],
        "type": "object",
        "properties": {
          "position": {
            "const": "relative",
            "type": "string",
            "description": "Sets how a QR code is being positioned in the document. Together with this, you should provide one of 'top' or 'bottom', and one of 'left' or 'right'."
          },
          "top": {
            "type": "string",
            "description": "Vertical distance (in inches) to place QR code from the top. Only allowed if \"bottom\" isn't provided."
          },
          "right": {
            "type": "string",
            "description": "Horizonal distance (in inches) to place QR code from the right. Only allowed if \"left\" isn't provided."
          },
          "left": {
            "type": "string",
            "description": "Horizonal distance (in inches) to place QR code from the left. Only allowed if \"right\" isn't provided."
          },
          "bottom": {
            "type": "string",
            "description": "Vertical distance (in inches) to place QR code from the bottom. Only allowed if \"top\" isn't provided."
          },
          "redirect_url": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "description": "Redirect all mail recipients to either a single URL or a custom personalized URL for each recipient.  To redirect to a single URL for the whole campaign, add a `redirect_url` in the request body along with the url as string. To redirect to a custom URL for each recipient, do not provide any value for `redirect_url`. Instead, create an extra column in the [audience file](https://help.lob.com/print-and-mail/building-a-mail-strategy/campaign-or-triggered-sends/campaign-audience-guide) with a unique link against each address row and while creating an upload, map `qr_code_redirect_url` to this column. If the QR code section is used but a redirection url is not provided or mapped while creating an upload, then there might be failures in creating individual mail pieces."
          },
          "width": {
            "type": "string",
            "description": "The size (in inches) of the QR code with a minimum of 1 inch. All QR codes are generated as a square."
          },
          "pages": {
            "type": "string",
            "description": "Specify the pages where the QR code should be stamped in a comma separated format. Your QR code can be printed in the same position on multiple pages. For postcards, the values should either be \"front\", \"back\" (for either front or back) or \"front,back\" (for the QR code to be printed on both sides). For self-mailers, the values should either be \"inside\", \"outside\" (for either inside or outside) or \"inside,outside\" (for the QR code to be printed on both sides). For letters, the values can be specific page numbers (\"1\", \"3\"), page number ranges such as \"1-3\", or a comma separated combination of both (\"1,3,5-7\")."
          }
        }
      },
      "QrCode4": {
        "title": "QrCode4",
        "required": [
          "position",
          "redirect_url",
          "width"
        ],
        "type": "object",
        "properties": {
          "position": {
            "const": "relative",
            "type": "string",
            "description": "Sets how a QR code is being positioned in the document. Together with this, you should provide one of 'top' or 'bottom', and one of 'left' or 'right'."
          },
          "top": {
            "type": "string",
            "description": "Vertical distance (in inches) to place QR code from the top. Only allowed if \"bottom\" isn't provided."
          },
          "right": {
            "type": "string",
            "description": "Horizonal distance (in inches) to place QR code from the right. Only allowed if \"left\" isn't provided."
          },
          "left": {
            "type": "string",
            "description": "Horizonal distance (in inches) to place QR code from the left. Only allowed if \"right\" isn't provided."
          },
          "bottom": {
            "type": "string",
            "description": "Vertical distance (in inches) to place QR code from the bottom. Only allowed if \"top\" isn't provided."
          },
          "redirect_url": {
            "type": "string",
            "description": "The url to redirect the user when a QR code is scanned. The url must start with `https://`"
          },
          "width": {
            "type": "string",
            "description": "The size (in inches) of the QR code with a minimum of 1 inch. All QR codes are generated as a square."
          },
          "pages": {
            "type": "string",
            "description": "Specify the pages where the QR code should be stamped in a comma separated format. Your QR code can be printed in the same position on multiple pages. For postcards, the values should either be \"front\", \"back\" (for either front or back) or \"front,back\" (for the QR code to be printed on both sides). For self-mailers, the values should either be \"inside\", \"outside\" (for either inside or outside) or \"inside,outside\" (for the QR code to be printed on both sides). For letters, the values can be specific page numbers (\"1\", \"3\"), page number ranges such as \"1-3\", or a comma separated combination of both (\"1,3,5-7\")."
          }
        }
      },
      "RequiredAddressColumnMapping": {
        "title": "RequiredAddressColumnMapping",
        "required": [
          "name",
          "address_line1",
          "address_city",
          "address_state",
          "address_zip"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": [
              "string",
              "null"
            ],
            "description": "The column header from the csv file that should be mapped to the required field `name`"
          },
          "address_line1": {
            "type": [
              "string",
              "null"
            ],
            "description": "The column header from the csv file that should be mapped to the required field `address_line1`"
          },
          "address_city": {
            "type": [
              "string",
              "null"
            ],
            "description": "The column header from the csv file that should be mapped to the required field `address_city`"
          },
          "address_state": {
            "type": [
              "string",
              "null"
            ],
            "description": "The column header from the csv file that should be mapped to the required field `address_state`"
          },
          "address_zip": {
            "type": [
              "string",
              "null"
            ],
            "description": "The column header from the csv file that should be mapped to the required field `address_zip`"
          }
        }
      },
      "SelfMailers0Error1": {
        "title": "SelfMailers0Error1",
        "required": [
          "error"
        ],
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {}
            ]
          }
        }
      },
      "SelfMailersResponse1": {
        "title": "SelfMailersResponse1",
        "type": "object",
        "properties": {
          "id": {
            "pattern": "^sfm_[a-zA-Z0-9]+$",
            "type": "string",
            "description": "Unique identifier prefixed with `sfm_`."
          },
          "deleted": {
            "type": "boolean",
            "description": "Only returned if the resource has been successfully deleted."
          }
        }
      },
      "status31": {
        "title": "status31",
        "enum": [
          "Validated",
          "Failed",
          "Processing"
        ],
        "type": "string",
        "description": "The status of line items to filter and retrieve. By default all line items are returned."
      },
      "Templates0Error1": {
        "title": "Templates0Error1",
        "required": [
          "error"
        ],
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {}
            ]
          }
        }
      },
      "TemplatesResponse2": {
        "title": "TemplatesResponse2",
        "type": "object",
        "properties": {
          "id": {
            "pattern": "^tmpl_[a-zA-Z0-9]+$",
            "type": "string",
            "description": "Unique identifier prefixed with `tmpl_`. ID of a saved [HTML template](#section/HTML-Templates)."
          },
          "deleted": {
            "type": "boolean",
            "description": "Only returned if the resource has been successfully deleted."
          }
        }
      },
      "TemplatesVersions0Error1": {
        "title": "TemplatesVersions0Error1",
        "required": [
          "error"
        ],
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {}
            ]
          }
        }
      },
      "TemplatesVersionsResponse2": {
        "title": "TemplatesVersionsResponse2",
        "type": "object",
        "properties": {
          "id": {
            "pattern": "^vrsn_[a-zA-Z0-9]+$",
            "type": "string",
            "description": "Unique identifier prefixed with `vrsn_`."
          },
          "deleted": {
            "type": "boolean",
            "description": "Only returned if the resource has been successfully deleted."
          }
        }
      },
      "Uploads404Error1": {
        "title": "Uploads404Error1",
        "required": [
          "error"
        ],
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {}
            ]
          }
        }
      },
      "UploadsReport404Error1": {
        "title": "UploadsReport404Error1",
        "required": [
          "error"
        ],
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {}
            ]
          }
        }
      },
      "UsAutocompletions0Error1": {
        "title": "UsAutocompletions0Error1",
        "required": [
          "error"
        ],
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {}
            ]
          }
        }
      },
      "UsReverseGeocodeLookups0Error1": {
        "title": "UsReverseGeocodeLookups0Error1",
        "required": [
          "error"
        ],
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {}
            ]
          }
        }
      },
      "UsVerifications0Error1": {
        "title": "UsVerifications0Error1",
        "required": [
          "error"
        ],
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {}
            ]
          }
        }
      },
      "UsZipLookups0Error1": {
        "title": "UsZipLookups0Error1",
        "required": [
          "error"
        ],
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {}
            ]
          }
        }
      },
      "x-lang-output1": {
        "title": "x-lang-output1",
        "enum": [
          "native",
          "match"
        ],
        "type": "string",
        "description": "* `native` - Translate response to the native language of the country in the request\n* `match` - match the response to the language in the request\n\nDefault response is in English."
      },
      "address": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/address_us"
          },
          {
            "$ref": "#/components/schemas/address_intl"
          }
        ]
      },
      "address_editable": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/address_editable_us"
          },
          {
            "$ref": "#/components/schemas/address_editable_intl"
          }
        ]
      },
      "From": {
        "oneOf": [
          {
            "pattern": "^adr_[a-zA-Z0-9]+$",
            "type": "string"
          },
          {
            "$ref": "#/components/schemas/inline_address_us"
          }
        ],
        "description": "Must either be an address ID or an inline object with correct address parameters. All addresses will be standardized into uppercase without being modified by verification."
      },
      "returned_resource3": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/returned_resource"
          },
          {
            "$ref": "#/components/schemas/returned_resource1"
          },
          {
            "$ref": "#/components/schemas/returned_resource2"
          }
        ]
      },
      "send_date": {
        "anyOf": [
          {
            "type": "string",
            "contentEncoding": "date-time"
          },
          {
            "type": "string",
            "contentEncoding": "date"
          }
        ],
        "description": "A timestamp in ISO 8601 format which specifies a date after the current time and up to 180 days in the future to send the letter off for production. Setting a send date overrides the default [cancellation window](#section/Cancellation-Windows) applied to the mailpiece. Until the `send_date` has passed, the mailpiece can be canceled. If a date in the format `2017-11-01` is passed, it will evaluate to midnight UTC of that date (`2017-11-01T00:00:00.000Z`). If a datetime is passed, that exact time will be used. A `send_date` passed with no time zone will default to UTC, while a `send_date` passed with a time zone will be converted to UTC."
      },
      "inline_address_us_chk11": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/addressobjwithnamedefined"
          },
          {
            "$ref": "#/components/schemas/addressobjwithcompanydefined"
          }
        ]
      },
      "check_bottom": {
        "oneOf": [
          {
            "maxLength": 10000,
            "pattern": "<",
            "type": "string"
          },
          {
            "pattern": "^tmpl_[a-zA-Z0-9]+$",
            "type": "string"
          },
          {
            "pattern": "^https://[-a-zA-Z0-9@:%._+~#=/]{1,256}.(html?|pdf|png|jpg)$",
            "type": "string"
          },
          {
            "pattern": "^(?!https://)[a-zA-Z0-9@:%._+~#=/]{1,256}.(html?|pdf|png|jpg)$",
            "type": "string"
          }
        ],
        "description": "The artwork to use on the bottom of the check page.\n\nNotes:\n- HTML merge variables should not include delimiting whitespace.\n- PDF, PNG, and JPGs must be sized at 8.5\"x11\" at 300 DPI, while supplied HTML will be rendered and trimmed to fit on a 8.5\"x11\" page.\n- The check bottom will always be printed in black & white.\n- Must conform to <a href=\"https://s3-us-west-2.amazonaws.com/public.lob.com/assets/templates/check_bottom_template.pdf\" target=\"_blank\">this template</a>.\n\nNeed more help? Consult our [HTML examples](#section/HTML-Examples)."
      },
      "check_editable": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/wordsatcheckbottom"
          },
          {
            "$ref": "#/components/schemas/imageatcheckbottom"
          }
        ]
      },
      "crv_front": {
        "oneOf": [
          {
            "pattern": "^tmpl_[a-zA-Z0-9]+$",
            "type": "string"
          },
          {
            "pattern": "^(?!https://)[a-zA-Z0-9@:%._+~#=/]{1,256}.(html?|pdf|png|jpg)$",
            "type": "string"
          }
        ],
        "description": "The artwork to use as the front of your postcard.\n\nNotes:\n- HTML merge variables should not include delimiting whitespace.\n- PDF, PNG, and JPGs must be sized at 4.25\"x6.25\", 6.25\"x9.25\", or 6.25\"x11.25\" at 300 DPI, while supplied HTML template will be rendered to the specified `size`.\n\nSee [here](#section/HTML-Examples) for HTML examples."
      },
      "crv_back": {
        "oneOf": [
          {
            "pattern": "^tmpl_[a-zA-Z0-9]+$",
            "type": "string"
          },
          {
            "pattern": "^(?!https://)[a-zA-Z0-9@:%._+~#=/]{1,256}.(html?|pdf|png|jpg)$",
            "type": "string"
          }
        ],
        "description": "The artwork to use as the back of your postcard creative.\n\nNotes:\n- HTML merge variables should not include delimiting whitespace.\n- PDF, PNG, and JPGs must be sized at 4.25\"x6.25\", 6.25\"x9.25\", or 6.25\"x11.25\" at 300 DPI, while supplied HTML template will be rendered to the specified `size`.\n- Be sure to leave room for address and postage information by following the templates provided here:\n  - <a href=\"https://s3-us-west-2.amazonaws.com/public.lob.com/assets/templates/postcards/4x6_postcard.pdf\" target=\"_blank\">4x6 template</a>\n  - <a href=\"https://s3-us-west-2.amazonaws.com/public.lob.com/assets/templates/postcards/6x9_postcard.pdf\" target=\"_blank\">6x9 template</a>\n  - <a href=\"https://s3-us-west-2.amazonaws.com/public.lob.com/assets/templates/postcards/6x11_postcard.pdf\" target=\"_blank\">6x11 template</a>\n\n\nSee [here](#section/HTML-Examples) for HTML examples."
      },
      "crv_file": {
        "oneOf": [
          {
            "pattern": "^tmpl_[a-zA-Z0-9]+$",
            "type": "string"
          },
          {
            "pattern": "^(?!https://)[a-zA-Z0-9@:%._+~#=/]{1,256}.(html?|pdf|png|jpg)$",
            "type": "string"
          }
        ],
        "description": "Notes:\n- HTML merge variables should not include delimiting whitespace.\n- All pages of a supplied PDF file must be sized at 8.5\"x11\", while supplied HTML will be rendered and trimmed to as many 8.5\"x11\" pages as necessary.\n- For design specifications, please see our <a href=\"https://s3-us-west-2.amazonaws.com/public.lob.com/assets/templates/letter_template.pdf\" target=\"_blank\">PDF</a> and [HTML](#section/HTML-Examples) templates.\n- If a `custom_envelope` is used, follow <a href=\"https://s3-us-west-2.amazonaws.com/public.lob.com/assets/templates/letter_custom_envelope.pdf\" target=\"_blank\">this template</a>.\n- For domestic destinations, the file limit is 60 pages single-sided or 120 pages double-sided. For international destinations, the file limit is 6 pages single-sided or 12 pages double-sided. PDFs that surpass the file limit will error, while HTML that renders more pages than the file limit will be trimmed.\n- Any letters over 6 pages single-sided or 12 pages double-sided will be placed in a <a href=\"https://s3-us-west-2.amazonaws.com/public.lob.com/assets/templates/letter_flat_template.pdf\" target=\"_blank\">flat envelope</a> instead of the standard double window envelope.\n\nSee <a href=\"https://lob.com/pricing/print-mail#compare\" target=\"_blank\">pricing</a> for extra costs incurred."
      },
      "crv_inside": {
        "oneOf": [
          {
            "pattern": "^tmpl_[a-zA-Z0-9]+$",
            "type": "string"
          },
          {
            "pattern": "^(?!https://)[a-zA-Z0-9@:%._+~#=/]{1,256}.(html?|pdf|png|jpg)$",
            "type": "string"
          }
        ],
        "description": "The artwork to use as the inside of your self mailer creative.\nNotes:\n- HTML merge variables should not include delimiting whitespace.\n- PDF, PNG, and JPGs must be sized at 6.25\"x18.25\", 12.25\"x9.25\" or 11.25\"x9.25\" at 300 DPI, while supplied HTML template will be rendered to the specified `size`.\n- Be sure to leave room for address and postage information by following the templates provided here:\n  - <a href=\"https://s3-us-west-2.amazonaws.com/public.lob.com/assets/templates/self_mailers/6x18_sfm_bifold_template.pdf\" target=\"_blank\">6x18 bifold template</a>\n  - <a href=\"https://s3-us-west-2.amazonaws.com/public.lob.com/assets/templates/self_mailers/11x9_sfm_bifold_template.pdf\" target=\"_blank\">11x9 bifold template</a>\n  - <a href=\"https://s3-us-west-2.amazonaws.com/public.lob.com/assets/templates/self_mailers/12x9_sfm_bifold_template.pdf\" target=\"_blank\">12x9 bifold template</a>\n\n\nSee [here](#section/HTML-Examples) for HTML examples."
      },
      "crv_outside": {
        "oneOf": [
          {
            "pattern": "^tmpl_[a-zA-Z0-9]+$",
            "type": "string"
          },
          {
            "pattern": "^(?!https://)[a-zA-Z0-9@:%._+~#=/]{1,256}.(html?|pdf|png|jpg)$",
            "type": "string"
          }
        ],
        "description": "The artwork to use as the outside of your self mailer creative.\nNotes:\n- HTML merge variables should not include delimiting whitespace.\n- PDF, PNG, and JPGs must be sized at 6.25\"x18.25\", 12.25\"x9.25\" or 11.25\"x9.25\" at 300 DPI, while supplied HTML template will be rendered to the specified `size`.\n- Be sure to leave room for address and postage information by following the templates provided here:\n  - <a href=\"https://s3-us-west-2.amazonaws.com/public.lob.com/assets/templates/self_mailers/6x18_sfm_bifold_template.pdf\" target=\"_blank\">6x18 bifold template</a>\n  - <a href=\"https://s3-us-west-2.amazonaws.com/public.lob.com/assets/templates/self_mailers/11x9_sfm_bifold_template.pdf\" target=\"_blank\">11x9 bifold template</a>\n  - <a href=\"https://s3-us-west-2.amazonaws.com/public.lob.com/assets/templates/self_mailers/12x9_sfm_bifold_template.pdf\" target=\"_blank\">12x9 bifold template</a>\n\n\nSee [here](#section/HTML-Examples) for HTML examples."
      },
      "creative_writable3": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/creative_writable"
          },
          {
            "$ref": "#/components/schemas/creative_writable1"
          },
          {
            "$ref": "#/components/schemas/creative_writable2"
          }
        ]
      },
      "identity_validation_writable": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/recipient_input"
          },
          {
            "$ref": "#/components/schemas/company_input"
          }
        ]
      },
      "identity_validation": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/recipient_validation"
          },
          {
            "$ref": "#/components/schemas/company_validation"
          }
        ]
      },
      "intl_verification_writable": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/multiple_components_intl"
          },
          {
            "$ref": "#/components/schemas/single_line_address_intl"
          }
        ]
      },
      "inline_address": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/inline_address_us"
          },
          {
            "$ref": "#/components/schemas/inline_address_intl"
          }
        ]
      },
      "return_address": {
        "oneOf": [
          {
            "pattern": "^adr_[a-zA-Z0-9]+$",
            "type": "string"
          },
          {
            "$ref": "#/components/schemas/inline_address"
          }
        ],
        "description": "Specifies the address the return envelope will be sent back to. This is an optional argument that is available if an account is signed up for the return envelope tracking beta, and has `return_envelope`, and `perforated_page` fields populated in the API request."
      },
      "return_envelope_returned1": {
        "oneOf": [
          {
            "type": "boolean"
          },
          {
            "$ref": "#/components/schemas/return_envelope_returned"
          }
        ]
      },
      "letter": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/no_extra_service"
          },
          {
            "$ref": "#/components/schemas/registered"
          },
          {
            "$ref": "#/components/schemas/certified"
          }
        ]
      },
      "ltr_file": {
        "oneOf": [
          {
            "maxLength": 10000,
            "pattern": "<",
            "type": "string"
          },
          {
            "pattern": "^tmpl_[a-zA-Z0-9]+$",
            "type": "string"
          },
          {
            "pattern": "^https://[-a-zA-Z0-9@:%._+~#=/]{1,256}.(html?|pdf|png|jpg)$",
            "type": "string"
          },
          {
            "pattern": "^(?!https://)[a-zA-Z0-9@:%._+~#=/]{1,256}.(html?|pdf)$",
            "type": "string"
          }
        ],
        "description": "Notes:\n- HTML merge variables should not include delimiting whitespace.\n- All pages of a supplied PDF file must be sized at 8.5\"x11\", while supplied HTML will be rendered and trimmed to as many 8.5\"x11\" pages as necessary.\n- For design specifications, please see our <a href=\"https://s3-us-west-2.amazonaws.com/public.lob.com/assets/templates/letter_template.pdf\" target=\"_blank\">PDF</a> and [HTML](#section/HTML-Examples) templates.\n- If a `custom_envelope` is used, follow <a href=\"https://s3-us-west-2.amazonaws.com/public.lob.com/assets/templates/letter_custom_envelope.pdf\" target=\"_blank\">this template</a>.\n- For domestic destinations, the file limit is 60 pages single-sided or 120 pages double-sided. For international destinations, the file limit is 6 pages single-sided or 12 pages double-sided. PDFs that surpass the file limit will error, while HTML that renders more pages than the file limit will be trimmed.\n- Any letters over 6 pages single-sided or 12 pages double-sided will be placed in a <a href=\"https://s3-us-west-2.amazonaws.com/public.lob.com/assets/templates/letter_flat_template.pdf\" target=\"_blank\">flat envelope</a> instead of the standard double window envelope.\n\nSee <a href=\"https://lob.com/pricing/print-mail#compare\" target=\"_blank\">pricing</a> for extra costs incurred."
      },
      "return_envelope_user_provided": {
        "oneOf": [
          {
            "type": "boolean"
          },
          {
            "type": "string"
          }
        ],
        "description": "Indicates if a return envelope is requested for the letter. The value corresponding to this field is by default a boolean. But if the account is signed up for custom return envelopes, the value is of type string and is `no_9_single_window` for a standard return envelope and a custom `return_envelope_id` for non-standard return envelopes.\n\nTo include a return envelope with your letter, set to `true` and specify the `perforated_page`. See <a href=\"https://www.lob.com/pricing/print-mail#compare\" target=\"_blank\">pricing</a> for extra costs incurred."
      },
      "psc_front": {
        "oneOf": [
          {
            "maxLength": 10000,
            "pattern": "<",
            "type": "string"
          },
          {
            "pattern": "^tmpl_[a-zA-Z0-9]+$",
            "type": "string"
          },
          {
            "pattern": "^https://[-a-zA-Z0-9@:%._+~#=/]{1,256}.(html?|pdf|png|jpg)$",
            "type": "string"
          },
          {
            "pattern": "^(?!https://)[a-zA-Z0-9@:%._+~#=/]{1,256}.(html?|pdf|png|jpg)$",
            "type": "string"
          }
        ],
        "description": "The artwork to use as the front of your postcard.\n\nNotes:\n- HTML merge variables should not include delimiting whitespace.\n- PDF, PNG, and JPGs must be sized at 4.25\"x6.25\", 6.25\"x9.25\", or 6.25\"x11.25\" at 300 DPI, while supplied HTML will be rendered to the specified `size`.\n\nSee [here](#section/HTML-Examples) for HTML examples."
      },
      "psc_back": {
        "oneOf": [
          {
            "maxLength": 10000,
            "pattern": "<",
            "type": "string"
          },
          {
            "pattern": "^tmpl_[a-zA-Z0-9]+$",
            "type": "string"
          },
          {
            "pattern": "^https://[-a-zA-Z0-9@:%._+~#=/]{1,256}.(html?|pdf|png|jpg)$",
            "type": "string"
          },
          {
            "pattern": "^(?!https://)[a-zA-Z0-9@:%._+~#=/]{1,256}.(html?|pdf|png|jpg)$",
            "type": "string"
          }
        ],
        "description": "The artwork to use as the back of your postcard.\n\nNotes:\n- HTML merge variables should not include delimiting whitespace.\n- PDF, PNG, and JPGs must be sized at 4.25\"x6.25\", 6.25\"x9.25\", or 6.25\"x11.25\" at 300 DPI, while supplied HTML will be rendered to the specified `size`.\n- Be sure to leave room for address and postage information by following the templates provided here:\n  - <a href=\"https://s3-us-west-2.amazonaws.com/public.lob.com/assets/templates/postcards/4x6_postcard.pdf\" target=\"_blank\">4x6 template</a>\n  - <a href=\"https://s3-us-west-2.amazonaws.com/public.lob.com/assets/templates/postcards/6x9_postcard.pdf\" target=\"_blank\">6x9 template</a>\n  - <a href=\"https://s3-us-west-2.amazonaws.com/public.lob.com/assets/templates/postcards/6x11_postcard.pdf\" target=\"_blank\">6x11 template</a>\n\n\nSee [here](#section/HTML-Examples) for HTML examples."
      },
      "us_verifications_writable": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/multiple_components"
          },
          {
            "$ref": "#/components/schemas/single_line_address"
          }
        ]
      }
    },
    "securitySchemes": {
      "basicAuth": {
        "type": "http",
        "scheme": "basic"
      }
    }
  },
  "security": [
    {
      "basicAuth": []
    }
  ],
  "tags": [
    {
      "name": "Addresses",
      "description": "To add an address to your address book, you create a new address object. You can retrieve and delete individual\naddresses as well as get a list of addresses. Addresses are identified by a unique random ID.\n<div class=\"back-to-top\" ><a href=\"#\" onclick=\"toTopLink()\">back to top</a></div>\n"
    },
    {
      "name": "Authentication",
      "description": "Requests made to the API are protected with <a href=\"https://en.wikipedia.org/wiki/Basic_access_authentication\" target=\"_blank\">HTTP Basic authentication</a>.\nIn order to properly authenticate with the API you must use your API key as the username\nwhile leaving the password blank. Requests not properly authenticated will return a `401`\n[error code](#tag/Errors). You can find your account's API keys\nin your <a href=\"https://dashboard.lob.com/settings/api-keys\" target=\"_blank\">Dashboard Settings</a>.\n### Example Request\ncurl uses the -u flag to pass basic auth credentials (adding a colon after your API key will prevent it from asking you for a\npassword). One of our test API keys has been filled into all the examples on the page, so you can test out any example right away.\n```bash\ncurl https://api.lob.com/v1/addresses \\\n  -u test_0dc8dXXXXXXXXXXXXXXXXXXXXXX5b0cc:\n```\n## API Keys\n  Lob authenticates your API requests using your account's API keys.\n  If you do not include your key when making an API request, or use\n  one that is incorrect or outdated, Lob returns an error with a `401`\n  HTTP response code. You can find all API keys in your dashboard\n  under <a href=\"https://dashboard.lob.com/settings/api-keys\" target=\"_blank\">Settings</a>.\n  There are two types of API keys: *secret* and *publishable*.\n  - **Secret API keys** should be kept confidential and only stored on your own servers.\n  Your account's secret API key can perform any API request to Lob without restriction.\n  - **Publishable API keys** are limited to US verifications, international verifications,\n  and US autocomplete requests. For maximum security, we encourage you to not expose your \n  secret key. You can include the publishable keys in JavaScript code or in an Android or iPhone app\n  without exposing your Lob Print and Mail account services or your secret key. Publishable keys are always\n  prefixed with `[environment]_pub`.\n  Every type comes with a pair of keys: one for the testing environment and one for the\n  live environment. We recommend reading [Test and Live Environments](#tag/Test-and-Live-Environments)\n  for more information.\n  <br><br>\n  <div class=\"back-to-top\" ><a href=\"#\" onclick=\"toTopLink()\">back to top</a></div>\n"
    },
    {
      "name": "Bank Accounts",
      "description": "Bank Accounts allow you to store your bank account securely in our system. The API provides\nendpoints for creating bank accounts, deleting bank accounts, verifying bank accounts,\nretrieving individual bank accounts, and retrieving a list of bank accounts.\n<div class=\"back-to-top\" ><a href=\"#\" onclick=\"toTopLink()\">back to top</a></div>\n"
    },
    {
      "name": "Beta Program",
      "description": "At Lob, we pride ourselves on building high quality platform capabilities rapidly\nand iteratively, so we can constantly be delivering additional value to our customers.\nWhen evaluating a new product or feature from Lob, you may see that it has been released in Beta.\n\nTypically, something in Beta means that the feature is early in its lifecycle here at\nLob. While we fully stand behind the quality of everything we release in Beta, we do\nanticipate receiving a higher level of customer feedback on Beta features, as well as a\nfaster pace of changes from our engineering team in response to that feedback.\n\nBy participating in a Lob Beta program, you will have the opportunity to get early access\nto a new product capability, as well as having a unique opportunity to influence the product's\ndirection with your feedback.\n\nYou should also anticipate that features in Beta may have functional or design limitations,\nand might change rapidly as we receive customer feedback and make improvements. In particular,\nnew APIs in Beta may also go through more frequent versioning and version deprecation cycles\nthan our more mature APIs.\n\nIf you are participating in a Beta program and want to provide feedback, please feel free to\n<a href=\"https://lob.com/support#contact\" target=\"_blank\">contact us</a>!\n<div class=\"back-to-top\" ><a href=\"#\" onclick=\"toTopLink()\">back to top</a></div>\n"
    },
    {
      "name": "Billing Groups",
      "description": "The Billing Groups API allows you to create and view labels that can be attached to certain consumption-based\nusages of Letters, Checks, Postcards and Self-Mailers to customize your bill. Please check each\nresource API section to learn more about how to access the Billing Groups API.\n<div class=\"back-to-top\" ><a href=\"#\" onclick=\"toTopLink()\">back to top</a></div>\n"
    },
    {
      "name": "Buckslip Orders",
      "description": "The Buckslip Orders endpoint allows you to easily create buckslip orders for existing buckslips.\nThe API provides endpoints for creating buckslip orders and listing buckslip orders for a given buckslip.\n<div class=\"back-to-top\" ><a href=\"#\" onclick=\"toTopLink()\">back to top</a></div>\n"
    },
    {
      "name": "Buckslips",
      "description": "The Buckslips endpoint allows you to easily create buckslips that can later be used as add-ons for Letters Campaigns. Note that a Letter Campaign with Buckslip add-on requires a minimum send quantity of 5,000 letters.\nThe API provides endpoints for creating buckslips, retrieving individual buckslips, creating buckslip orders, and retrieving a list of buckslips.\n<div class=\"back-to-top\" ><a href=\"#\" onclick=\"toTopLink()\">back to top</a></div>\n"
    },
    {
      "name": "Bulk Intl Verifications",
      "description": "Verify a list of non-US addresses.\n<div class=\"back-to-top\" ><a href=\"#\" onclick=\"toTopLink()\">back to top</a></div>\n"
    },
    {
      "name": "Bulk US Verifications",
      "description": "Verify a list of US addresses.\n<div class=\"back-to-top\" ><a href=\"#\" onclick=\"toTopLink()\">back to top</a></div>\n"
    },
    {
      "name": "Campaigns",
      "description": "The campaigns endpoint allows you to create and view campaigns that can be used to send multiple letters or postcards.\nThe API provides endpoints for creating campaigns, updating campaigns, retrieving individual campaigns, listing campaigns, and deleting\ncampaigns.\n"
    },
    {
      "name": "Card Orders",
      "description": "The card orders endpoint allows you to easily create card orders for existing cards.\nThe API provides endpoints for creating card orders and listing card orders for a given card.\n<div class=\"back-to-top\" ><a href=\"#\" onclick=\"toTopLink()\">back to top</a></div>\n"
    },
    {
      "name": "Cards",
      "description": "The cards endpoint allows you to easily create cards that can later be affixed to Letters.\nThe API provides endpoints for creating cards, retrieving individual cards, creating card orders, and retrieving a list of cards.\n<div class=\"back-to-top\" ><a href=\"#\" onclick=\"toTopLink()\">back to top</a></div>\n"
    },
    {
      "name": "Checks",
      "description": "Checks allow you to send payments via physical checks. The API provides endpoints\nfor creating checks, retrieving individual checks, canceling checks, and retrieving a list of checks.\n<div class=\"back-to-top\" ><a href=\"#\" onclick=\"toTopLink()\">back to top</a></div>\n"
    },
    {
      "name": "Creatives",
      "description": "The creatives endpoint allows you to create and view creatives. Creatives are used to create\nreusable letter and postcard templates. The API provides endpoints for creating creatives, updating creatives,\nretrieving individual creatives, and deleting creatives.\n"
    },
    {
      "name": "Errors",
      "description": "Lob uses RESTful HTTP response codes to indicate success or failure of an API request - read below for more information. In general, 2xx indicates success, 4xx indicate an input error, and 5xx indicates an error on Lob's end.\n\n<table>\n  <tr>\n    <th style=\"white-space: nowrap\">ATTRIBUTE</th>\n    <th style=\"white-space: nowrap\">DESCRIPTION</th>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>code</code></td>\n    <td style=\"white-space: nowrap\">A consistent machine-keyable string identifying the error</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>status_code</code></td>\n    <td style=\"white-space: nowrap\">A conventional HTTP status code</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>message</code></td>\n    <td style=\"white-space: nowrap\">A human-readable, subject-to-change message with more details about the error</td>\n  </tr>\n</table>\n\n### HTTP Status Code Summary\n\n<table>\n  <tr>\n    <th style=\"white-space: nowrap\">STATUS_CODE</th>\n    <th style=\"white-space: nowrap\">CODE</th>\n    <th style=\"white-space: nowrap\">MESSAGE</th>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>200</code></td>\n    <td style=\"white-space: nowrap\">SUCCESS</td>\n    <td style=\"white-space: nowrap\">Successful API request</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>401</code></td>\n    <td style=\"white-space: nowrap\">UNAUTHORIZED</td>\n    <td style=\"white-space: nowrap\">Authorization error with your API key or account</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>403</code></td>\n    <td style=\"white-space: nowrap\">FORBIDDEN</td>\n    <td style=\"white-space: nowrap\">Forbidden error with your API key or account</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>404</code></td>\n    <td style=\"white-space: nowrap\">NOT FOUND</td>\n    <td style=\"white-space: nowrap\">The requested item does not exist</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>422</code></td>\n    <td style=\"white-space: nowrap\">BAD REQUEST</td>\n    <td style=\"white-space: nowrap\">The query or body parameters did not pass validation</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>429</code></td>\n    <td style=\"white-space: nowrap\">TOO MANY REQUESTS</td>\n    <td style=\"white-space: nowrap\">Too many requests have been sent with an API key in a given amount of time</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>500</code></td>\n    <td style=\"white-space: nowrap\">SERVER ERROR</td>\n    <td style=\"white-space: nowrap\">An internal server error occurred, please contact support@lob.com</td>\n  </tr>\n</table>\n\n### Error Codes - Generic\n\n<table>\n  <tr>\n    <th style=\"white-space: nowrap\">STATUS_CODE</th>\n    <th style=\"white-space: nowrap\">CODE</th>\n    <th style=\"white-space: nowrap\">MESSAGE</th>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>422</code></td>\n    <td style=\"white-space: nowrap\">BAD_REQUEST</td>\n    <td style=\"white-space: nowrap\">An invalid request was made. See error message for details.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>409/422</code></td>\n    <td style=\"white-space: nowrap\">CONFLICT</td>\n    <td style=\"white-space: nowrap\">This operation would leave data in a conflicted state.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>403</code></td>\n    <td style=\"white-space: nowrap\">FEATURE_LIMIT_REACHED</td>\n    <td style=\"white-space: nowrap\">The account has reached its resource limit and requires upgrading to add more.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>500</code></td>\n    <td style=\"white-space: nowrap\">INTERNAL_SERVER_ERROR</td>\n    <td style=\"white-space: nowrap\">An error has occured on Lob's servers. Please try request again.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>422</code></td>\n    <td style=\"white-space: nowrap\">INVALID</td>\n    <td style=\"white-space: nowrap\">An invalid request was made. See error message for details.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>422</code></td>\n    <td style=\"white-space: nowrap\">NOT_DELETABLE</td>\n    <td style=\"white-space: nowrap\">An attempt was made to delete a resource, but the resource cannot be deleted.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>404</code></td>\n    <td style=\"white-space: nowrap\">NOT_FOUND</td>\n    <td style=\"white-space: nowrap\">The requested resource was not found.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>408</code></td>\n    <td style=\"white-space: nowrap\">REQUEST_TIMEOUT</td>\n    <td style=\"white-space: nowrap\">The request took too long. Please try again.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>503</code></td>\n    <td style=\"white-space: nowrap\">SERVICE_UNAVAILABLE</td>\n    <td style=\"white-space: nowrap\">The Lob servers are temporarily unavailable. Please try again.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>404</code></td>\n    <td style=\"white-space: nowrap\">UNRECOGNIZED_ENDPOINT</td>\n    <td style=\"white-space: nowrap\">The requested endpoint doesn't exist.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>422</code></td>\n    <td style=\"white-space: nowrap\">UNSUPPORTED_LOB_VERSION</td>\n    <td style=\"white-space: nowrap\">An unsupported Lob API version was requested.</td>\n  </tr>\n</table>\n\n### Error Codes - Authentication\n\n<table>\n  <tr>\n    <th style=\"white-space: nowrap\">STATUS_CODE</th>\n    <th style=\"white-space: nowrap\">CODE</th>\n    <th style=\"white-space: nowrap\">MESSAGE</th>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>401</code></td>\n    <td style=\"white-space: nowrap\">EMAIL_REQUIRED</td>\n    <td style=\"white-space: nowrap\">Account must have a verified email address before creating live resources.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>401</code></td>\n    <td style=\"white-space: nowrap\">UNAUTHORIZED</td>\n    <td style=\"white-space: nowrap\">The request isn't authorized.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>401</code></td>\n    <td style=\"white-space: nowrap\">UNAUTHORIZED_TOKEN</td>\n    <td style=\"white-space: nowrap\">Token isn't authorized.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>401/403</code></td>\n    <td style=\"white-space: nowrap\">INVALID_API_KEY</td>\n    <td style=\"white-space: nowrap\">The API key is invalid.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>403</code></td>\n    <td style=\"white-space: nowrap\">PUBLISHABLE_KEY_NOT_ALLOWED</td>\n    <td style=\"white-space: nowrap\">The requested operation needs a secret key, not a publishable key. See [API Keys](#tag/API-Keys) for more information.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>429</code></td>\n    <td style=\"white-space: nowrap\">RATE_LIMIT_EXCEEDED</td>\n    <td style=\"white-space: nowrap\">Requests were sent too quickly and must be slowed down.</td>\n  </tr>\n</table>\n\n ### Error Codes - Advanced\n\n <table>\n  <tr>\n    <th style=\"white-space: nowrap\">STATUS_CODE</th>\n    <th style=\"white-space: nowrap\">CODE</th>\n    <th style=\"white-space: nowrap\">MESSAGE</th>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>401</code></td>\n    <td style=\"white-space: nowrap\">PAYMENT_METHOD_UNVERIFIED</td>\n    <td style=\"white-space: nowrap\">You must have a verified bank account or credit card to submit live requests.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>404</code></td>\n    <td style=\"white-space: nowrap\">DELETED_BANK_ACCOUNT</td>\n    <td style=\"white-space: nowrap\">Checks cannot be created with a deleted bank account.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>422</code></td>\n    <td style=\"white-space: nowrap\">ADDRESS_LENGTH_EXCEEDS_LIMIT</td>\n    <td style=\"white-space: nowrap\">The sum of to.address_line1 and to.address_line2 cannot surpass 50 characters.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>422</code></td>\n    <td style=\"white-space: nowrap\">BANK_ACCOUNT_ALREADY_VERIFIED</td>\n    <td style=\"white-space: nowrap\">The bank account has already been verified.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>422</code></td>\n    <td style=\"white-space: nowrap\">BANK_ERROR</td>\n    <td style=\"white-space: nowrap\">There's an issue with the bank account.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>403</code></td>\n    <td style=\"white-space: nowrap\">BILLING_ADDRESS_REQUIRED</td>\n    <td style=\"white-space: nowrap\">In order to create a live mail piece, your account needs to set up a billing address.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>422</code></td>\n    <td style=\"white-space: nowrap\">CUSTOM_ENVELOPE_INVENTORY_DEPLETED</td>\n    <td style=\"white-space: nowrap\">Custom envelope inventory is depleted, and more will need to be ordered.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>422</code></td>\n    <td style=\"white-space: nowrap\">FAILED_DELIVERABILITY_STRICTNESS</td>\n    <td style=\"white-space: nowrap\">The to address doesn't meet strictness requirements.\n    See <a href=\"https://dashboard.lob.com/#/settings/account\" target=\"_blank\">Account Settings</a> to configure strictness.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>422</code></td>\n    <td style=\"white-space: nowrap\">FILE_PAGES_BELOW_MIN</td>\n    <td style=\"white-space: nowrap\">Not enough pages.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>422</code></td>\n    <td style=\"white-space: nowrap\">FILE_PAGES_EXCEED_MAX</td>\n    <td style=\"white-space: nowrap\">Too many pages.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>422</code></td>\n    <td style=\"white-space: nowrap\">FILE_SIZE_EXCEEDS_LIMIT</td>\n    <td style=\"white-space: nowrap\">The file size is too large. See description for details.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>422</code></td>\n    <td style=\"white-space: nowrap\">FOREIGN_RETURN_ADDRESS</td>\n    <td style=\"white-space: nowrap\">The 'from' address must be a US address.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>422</code></td>\n    <td style=\"white-space: nowrap\">INCONSISTENT_PAGE_DIMENSIONS</td>\n    <td style=\"white-space: nowrap\">All pages of the input file must have the same dimensions.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>422</code></td>\n    <td style=\"white-space: nowrap\">INVALID_BANK_ACCOUNT</td>\n    <td style=\"white-space: nowrap\">The provided bank routing number is invalid.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>422</code></td>\n    <td style=\"white-space: nowrap\">INVALID_BANK_ACCOUNT_VERIFICATION</td>\n    <td style=\"white-space: nowrap\">Verification amounts do not match.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>422</code></td>\n    <td style=\"white-space: nowrap\">INVALID_CHECK_INTERNATIONAL</td>\n    <td style=\"white-space: nowrap\">Checks cannot be sent internationally.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>422</code></td>\n    <td style=\"white-space: nowrap\">INVALID_COUNTRY_COVID</td>\n    <td style=\"white-space: nowrap\">The postal service in the specified country is currently unable to process the request due to COVID-19 restrictions.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>422</code></td>\n    <td style=\"white-space: nowrap\">INVALID_FILE</td>\n    <td style=\"white-space: nowrap\">The file is invalid.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>422</code></td>\n    <td style=\"white-space: nowrap\">INVALID_FILE_DIMENSIONS</td>\n    <td style=\"white-space: nowrap\">File dimensions are incorrect for the selected mail type.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>422</code></td>\n    <td style=\"white-space: nowrap\">INVALID_FILE_DOWNLOAD_TIME</td>\n    <td style=\"white-space: nowrap\">File download from remote server took too long.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>422</code></td>\n    <td style=\"white-space: nowrap\">INVALID_FILE_URL</td>\n    <td style=\"white-space: nowrap\">The file URL when creating a resource is invalid.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>422</code></td>\n    <td style=\"white-space: nowrap\">INVALID_IMAGE_DPI</td>\n    <td style=\"white-space: nowrap\">DPI must be at least 300.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>422</code></td>\n    <td style=\"white-space: nowrap\">INVALID_INTERNATIONAL_FEATURE</td>\n    <td style=\"white-space: nowrap\">The specified product cannot be sent to the destination.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>422</code></td>\n    <td style=\"white-space: nowrap\">INVALID_PERFORATION_RETURN_ENVELOPE</td>\n    <td style=\"white-space: nowrap\">Both `return_envelope` and `perforation` must be used together.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>422</code></td>\n    <td style=\"white-space: nowrap\">INVALID_TEMPLATE_HTML</td>\n    <td style=\"white-space: nowrap\">The provided HTML is invalid.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>422</code></td>\n    <td style=\"white-space: nowrap\">MAIL_USE_TYPE_CAN_NOT_BE_NULL</td>\n    <td style=\"white-space: nowrap\">`use_type` must be one of \"marketing\" or \"operational\". Alternatively, an admin can set the account default use type in Account Settings.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>422</code></td>\n    <td style=\"white-space: nowrap\">MERGE_VARIABLE_REQUIRED</td>\n    <td style=\"white-space: nowrap\">A required merge variable is missing.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>422</code></td>\n    <td style=\"white-space: nowrap\">MERGE_VARIABLE_WHITESPACE</td>\n    <td style=\"white-space: nowrap\">Merge variable names cannot contain whitespace.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>422</code></td>\n    <td style=\"white-space: nowrap\">PDF_ENCRYPTED</td>\n    <td style=\"white-space: nowrap\">An encrypted PDF was provided.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>422</code></td>\n    <td style=\"white-space: nowrap\">SPECIAL_CHARACTERS_RESTRICTED</td>\n    <td style=\"white-space: nowrap\">Cannot use special characters for merge variable names.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>422</code></td>\n    <td style=\"white-space: nowrap\">UNEMBEDDED_FONTS</td>\n    <td style=\"white-space: nowrap\">The provided PDF contains non-standard unembedded fonts. See description for details.</td>\n  </tr>\n</table>\n<div class=\"back-to-top\" ><a href=\"#\" onclick=\"toTopLink()\">back to top</a></div>\n"
    },
    {
      "name": "Events",
      "description": "When various notable things happen within the Lob architecture, Events will be created. To get these events sent to your server\nautomatically when they occur, you can set up [Webhooks](#tag/Webhooks).\n\n<h3>Postcards</h3>\n\n<table>\n  <tr>\n    <th style=\"white-space: nowrap\">EVENT TYPE</th>\n    <th style=\"white-space: nowrap\">LIVE-ONLY</th>\n    <th style=\"white-space: nowrap\">WHEN EVENT TYPE OCCURS</th>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>postcard.created</code></td>\n    <td style=\"white-space: nowrap\"><code>false</code></td>\n    <td style=\"white-space: nowrap\">A postcard is successfully created (Lob returns a 200 status code).</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>postcard.rendered_pdf</code></td>\n    <td style=\"white-space: nowrap\"><code>false</code></td>\n    <td style=\"white-space: nowrap\">A postcard's PDF proof is successfully rendered.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>postcard.rendered_thumbnails</code></td>\n    <td style=\"white-space: nowrap\"><code>false</code></td>\n    <td style=\"white-space: nowrap\">A postcard's thumbnails are successfully rendered.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>postcard.deleted</code></td>\n    <td style=\"white-space: nowrap\"><code>false</code></td>\n    <td style=\"white-space: nowrap\">A postcard is successfully canceled.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>postcard.mailed</code></td>\n    <td style=\"white-space: nowrap\"><code>true</code></td>\n    <td style=\"white-space: nowrap\">A postcard receives a \"Mailed\" <a href='#operation/tracking_event'>tracking event</a>. Only enabled for certain <a href='https://dashboard.lob.com/#/settings/editions' target=\"_blank\">Print & Mail Editions</a>.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>postcard.in_transit</code></td>\n    <td style=\"white-space: nowrap\"><code>true</code></td>\n    <td style=\"white-space: nowrap\">A postcard receives an \"In Transit\" <a href='#operation/tracking_event'>tracking event</a>.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>postcard.in_local_area</code></td>\n    <td style=\"white-space: nowrap\"><code>true</code></td>\n    <td style=\"white-space: nowrap\">A postcard receives an \"In Local Area\" <a href='#operation/tracking_event'>tracking event</a>.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>postcard.processed_for_delivery</code></td>\n    <td style=\"white-space: nowrap\"><code>true</code></td>\n    <td style=\"white-space: nowrap\">A postcard receives a \"Processed for Delivery\" <a href='#operation/tracking_event'>tracking event</a>.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>postcard.delivered</code></td>\n    <td style=\"white-space: nowrap\"><code>false</code></td>\n    <td style=\"white-space: nowrap\">A postcard receives a \"Delivered\" <a href='#operation/tracking_event'>tracking event</a>.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>postcard.failed</code></td>\n    <td style=\"white-space: nowrap\"><code>false</code></td>\n    <td style=\"white-space: nowrap\">A postcard receives a \"Failed\" <a href='#operation/tracking_event'>tracking event</a>.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>postcard.re-routed</code></td>\n    <td style=\"white-space: nowrap\"><code>true</code></td>\n    <td style=\"white-space: nowrap\">A postcard receives a \"Re-Routed\" <a href='#operation/tracking_event'>tracking event</a>.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>postcard.returned_to_sender</code></td>\n    <td style=\"white-space: nowrap\"><code>true</code></td>\n    <td style=\"white-space: nowrap\">A postcard receives a \"Returned to Sender\" <a href='#operation/tracking_event'>tracking event</a>.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>postcard.international_exit</code></td>\n    <td style=\"white-space: nowrap\"><code>true</code></td>\n    <td style=\"white-space: nowrap\">A postcard receives a \"International Exit\" <a href='#operation/tracking_event'>tracking event</a>.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>postcard.viewed</code></td>\n    <td style=\"white-space: nowrap\"><code>false</code></td>\n    <td style=\"white-space: nowrap\">A postcard QR code or URL was scanned or viewed by the recipient. </td>\n  </tr>\n</table>\n\n<h3>Self Mailers</h3>\n\n<table>\n  <tr>\n    <th style=\"white-space: nowrap\">EVENT TYPE</th>\n    <th style=\"white-space: nowrap\">LIVE-ONLY</th>\n    <th style=\"white-space: nowrap\">WHEN EVENT TYPE OCCURS</th>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>self_mailer.created</code></td>\n    <td style=\"white-space: nowrap\"><code>false</code></td>\n    <td style=\"white-space: nowrap\">A self_mailer is successfully created (Lob returns a 200 status code).</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>self_mailer.rendered_pdf</code></td>\n    <td style=\"white-space: nowrap\"><code>false</code></td>\n    <td style=\"white-space: nowrap\">A self_mailer's PDF proof is successfully rendered.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>self_mailer.rendered_thumbnails</code></td>\n    <td style=\"white-space: nowrap\"><code>false</code></td>\n    <td style=\"white-space: nowrap\">A self_mailer's thumbnails are successfully rendered.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>self_mailer.deleted</code></td>\n    <td style=\"white-space: nowrap\"><code>false</code></td>\n    <td style=\"white-space: nowrap\">A self_mailer is successfully canceled.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>self_mailer.mailed</code></td>\n    <td style=\"white-space: nowrap\"><code>true</code></td>\n    <td style=\"white-space: nowrap\">A self_mailer receives a \"Mailed\" <a href='#operation/tracking_event'>tracking event</a>. Only enabled for certain\n    <a href=\"https://dashboard.lob.com/#/settings/editions\" target=\"_blank\">Print & Mail Editions</a>.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>self_mailer.in_transit</code></td>\n    <td style=\"white-space: nowrap\"><code>true</code></td>\n    <td style=\"white-space: nowrap\">A self_mailer receives an \"In Transit\" <a href='#operation/tracking_event'>tracking event</a>.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>self_mailer.in_local_area</code></td>\n    <td style=\"white-space: nowrap\"><code>true</code></td>\n    <td style=\"white-space: nowrap\">A self_mailer receives an \"In Local Area\" <a href='#operation/tracking_event'>tracking event</a>.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>self_mailer.processed_for_delivery</code></td>\n    <td style=\"white-space: nowrap\"><code>true</code></td>\n    <td style=\"white-space: nowrap\">A self_mailer receives a \"Processed for Delivery\" <a href='#operation/tracking_event'>tracking event</a>.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>self_mailer.delivered</code></td>\n    <td style=\"white-space: nowrap\"><code>true</code></td>\n    <td style=\"white-space: nowrap\">A self_mailer receives an \"Delivered\" <a href='#operation/tracking_event'>tracking event</a>.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>self_mailer.failed</code></td>\n    <td style=\"white-space: nowrap\"><code>false</code></td>\n    <td style=\"white-space: nowrap\">A self_mailer receives an \"Failed\" <a href='#operation/tracking_event'>tracking event</a>.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>self_mailer.re-routed</code></td>\n    <td style=\"white-space: nowrap\"><code>true</code></td>\n    <td style=\"white-space: nowrap\">A self_mailer receives a \"Re-Routed\" <a href='#operation/tracking_event'>tracking event</a>.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>self_mailer.returned_to_sender</code></td>\n    <td style=\"white-space: nowrap\"><code>true</code></td>\n    <td style=\"white-space: nowrap\">A self_mailer receives a \"Returned to Sender\" <a href='#operation/tracking_event'>tracking event</a>.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>self_mailer.international_exit</code></td>\n    <td style=\"white-space: nowrap\"><code>true</code></td>\n    <td style=\"white-space: nowrap\">A self_mailer receives an \"International Exit\" <a href='#operation/tracking_event'>tracking event</a>.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>self_mailer.viewed</code></td>\n    <td style=\"white-space: nowrap\"><code>false</code></td>\n    <td style=\"white-space: nowrap\">A self_mailer's QR code or URL was scanned or viewed by the recipient. </td>\n  </tr>\n</table>\n\n<h3>Letters</h3>\n\n<table>\n  <tr>\n    <th style=\"white-space: nowrap\">EVENT TYPE</th>\n    <th style=\"white-space: nowrap\">LIVE-ONLY</th>\n    <th style=\"white-space: nowrap\">WHEN EVENT TYPE OCCURS</th>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>letter.created</code></td>\n    <td style=\"white-space: nowrap\"><code>false</code></td>\n    <td style=\"white-space: nowrap\">A letter is successfully created (Lob returns a 200 status code).</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>letter.rendered_pdf</code></td>\n    <td style=\"white-space: nowrap\"><code>false</code></td>\n    <td style=\"white-space: nowrap\">A letter's PDF proof is successfully rendered.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>letter.rendered_thumbnails</code></td>\n    <td style=\"white-space: nowrap\"><code>false</code></td>\n    <td style=\"white-space: nowrap\">A letter's thumbnails are successfully rendered.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>letter.deleted</code></td>\n    <td style=\"white-space: nowrap\"><code>false</code></td>\n    <td style=\"white-space: nowrap\">A letter is successfully canceled.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>letter.mailed</code></td>\n    <td style=\"white-space: nowrap\"><code>true</code></td>\n    <td style=\"white-space: nowrap\">A letter receives a \"Mailed\" <a href='#operation/tracking_event'>tracking event</a>. Only enabled for certain\n    <a href=\"https://dashboard.lob.com/#/settings/editions\" target=\"_blank\">Print & Mail Editions</a>.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>letter.in_transit</code></td>\n    <td style=\"white-space: nowrap\"><code>true</code></td>\n    <td style=\"white-space: nowrap\">A letter receives an \"In Transit\" <a href='#operation/tracking_event'>tracking event</a>.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>letter.in_local_area</code></td>\n    <td style=\"white-space: nowrap\"><code>true</code></td>\n    <td style=\"white-space: nowrap\">A letter receives an \"In Local Area\" <a href='#operation/tracking_event'>tracking event</a>.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>letter.processed_for_delivery</code></td>\n    <td style=\"white-space: nowrap\"><code>true</code></td>\n    <td style=\"white-space: nowrap\">A letter receives a \"Processed for Delivery\" <a href='#operation/tracking_event'>tracking event</a>.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>letter.delivered</code></td>\n    <td style=\"white-space: nowrap\"><code>true</code></td>\n    <td style=\"white-space: nowrap\">A letter receives a \"Delivered\" <a href='#operation/tracking_event'>tracking event</a>.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>letter.failed</code></td>\n    <td style=\"white-space: nowrap\"><code>false</code></td>\n    <td style=\"white-space: nowrap\">A letter receives a \"Failed\" <a href='#operation/tracking_event'>tracking event</a>.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>letter.re-routed</code></td>\n    <td style=\"white-space: nowrap\"><code>true</code></td>\n    <td style=\"white-space: nowrap\">A letter receives a \"Re-Routed\" <a href='#operation/tracking_event'>tracking event</a>.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>letter.returned_to_sender</code></td>\n    <td style=\"white-space: nowrap\"><code>true</code></td>\n    <td style=\"white-space: nowrap\">A letter receives a \"Returned to Sender\" <a href='#operation/tracking_event'>tracking event</a>.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>letter.international_exit</code></td>\n    <td style=\"white-space: nowrap\"><code>true</code></td>\n    <td style=\"white-space: nowrap\">A letter receives a \"International Exit\" <a href='#operation/tracking_event'>tracking event</a>.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>letter.viewed</code></td>\n    <td style=\"white-space: nowrap\"><code>false</code></td>\n    <td style=\"white-space: nowrap\">A letter's QR code or URL was scanned or viewed by the recipient. </td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>letter.certified.mailed</code></td>\n    <td style=\"white-space: nowrap\"><code>true</code></td>\n    <td style=\"white-space: nowrap\">A certified letter receives a \"Mailed\" <a href='#operation/tracking_event'>tracking event</a>. Only enabled for certain\n    <a href=\"https://dashboard.lob.com/#/settings/editions\" target=\"_blank\">Print & Mail Editions</a>.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>letter.certified.in_transit</code></td>\n    <td style=\"white-space: nowrap\"><code>true</code></td>\n    <td style=\"white-space: nowrap\">A certified letter receives an \"In Transit\" <a href='#operation/tracking_event'>tracking event</a>.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>letter.certified.in_local_area</code></td>\n    <td style=\"white-space: nowrap\"><code>true</code></td>\n    <td style=\"white-space: nowrap\">A certified letter receives an \"In Transit\" <a href='#operation/tracking_event'>tracking event</a>.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>letter.certified.processed_for_delivery</code></td>\n    <td style=\"white-space: nowrap\"><code>true</code></td>\n    <td style=\"white-space: nowrap\">A certified letter receives a \"Processed for Delivery\" <a href='#operation/tracking_event'>tracking event</a>.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>letter.certified.re-routed</code></td>\n    <td style=\"white-space: nowrap\"><code>true</code></td>\n    <td style=\"white-space: nowrap\">A certified letter receives a \"Re-Routed\" <a href='#operation/tracking_event'>tracking event</a>.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>letter.certified.returned_to_sender</code></td>\n    <td style=\"white-space: nowrap\"><code>true</code></td>\n    <td style=\"white-space: nowrap\">A certified letter receives a \"Returned to Sender\" <a href='#operation/tracking_event'>tracking event</a>.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>letter.certified.delivered</code></td>\n    <td style=\"white-space: nowrap\"><code>true</code></td>\n    <td style=\"white-space: nowrap\">A certified letter receives a \"Delivered\" <a href='#operation/tracking_event'>tracking event</a>.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>letter.certified.pickup_available</code></td>\n    <td style=\"white-space: nowrap\"><code>true</code></td>\n    <td style=\"white-space: nowrap\">A certified letter receives a \"Pickup Available\" <a href='#operation/tracking_event'>tracking event</a>.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>letter.certified.issue</code></td>\n    <td style=\"white-space: nowrap\"><code>true</code></td>\n    <td style=\"white-space: nowrap\">A certified letter receives an \"Issue\" <a href='#operation/tracking_event'>tracking event</a>.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>letter.return_envelope.created</code></td>\n    <td style=\"white-space: nowrap\"><code>false</code></td>\n    <td style=\"white-space: nowrap\">A return envelope is created (occurs simultaneously with letter creation).</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>letter.return_envelope.in_transit</code></td>\n    <td style=\"white-space: nowrap\"><code>true</code></td>\n    <td style=\"white-space: nowrap\">A return envelope receives an \"In Transit\" <a href='#operation/tracking_event'>tracking event</a>.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>letter.return_envelope.in_local_area</code></td>\n    <td style=\"white-space: nowrap\"><code>true</code></td>\n    <td style=\"white-space: nowrap\">A return envelope receives an \"In Local Area\" <a href='#operation/tracking_event'>tracking event</a>.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>letter.return_envelope.processed_for_delivery</code></td>\n    <td style=\"white-space: nowrap\"><code>true</code></td>\n    <td style=\"white-space: nowrap\">A return envelope receives a \"Processed for Delivery\" <a href='#operation/tracking_event'>tracking event</a>.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>letter.return_envelope.re-routed</code></td>\n    <td style=\"white-space: nowrap\"><code>true</code></td>\n    <td style=\"white-space: nowrap\">A return envelope receives a \"Re-Routed\" <a href='#operation/tracking_event'>tracking event</a>.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>letter.return_envelope.returned_to_sender</code></td>\n    <td style=\"white-space: nowrap\"><code>true</code></td>\n    <td style=\"white-space: nowrap\">A return envelope receives a \"Returned to Sender\" <a href='#operation/tracking_event'>tracking event</a>.</td>\n  </tr>\n</table>\n\n<h3>Checks</h3>\n\n<table>\n  <tr>\n    <th style=\"white-space: nowrap\">EVENT TYPE</th>\n    <th style=\"white-space: nowrap\">LIVE-ONLY</th>\n    <th style=\"white-space: nowrap\">WHEN EVENT TYPE OCCURS</th>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>check.created</code></td>\n    <td style=\"white-space: nowrap\"><code>false</code></td>\n    <td style=\"white-space: nowrap\">A check is successfully created (Lob returns a 200 status code).</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>check.rendered_pdf</code></td>\n    <td style=\"white-space: nowrap\"><code>false</code></td>\n    <td style=\"white-space: nowrap\">A check's PDF proof is successfully rendered.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>check.rendered_thumbnails</code></td>\n    <td style=\"white-space: nowrap\"><code>false</code></td>\n    <td style=\"white-space: nowrap\">A check's thumbnails are successfully rendered.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>check.deleted</code></td>\n    <td style=\"white-space: nowrap\"><code>false</code></td>\n    <td style=\"white-space: nowrap\">A check is successfully canceled.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>check.mailed</code></td>\n    <td style=\"white-space: nowrap\"><code>true</code></td>\n    <td style=\"white-space: nowrap\">A check receives a \"Mailed\" <a href='#operation/tracking_event'>tracking event</a>. Only enabled for certain <a href=\"https://dashboard.lob.com/#/settings/editions\" target=\"_blank\">Print & Mail Editions</a>.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>check.in_transit</code></td>\n    <td style=\"white-space: nowrap\"><code>true</code></td>\n    <td style=\"white-space: nowrap\">A check receives an \"In Transit\" <a href='#operation/tracking_event'>tracking event</a>.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>check.in_local_area</code></td>\n    <td style=\"white-space: nowrap\"><code>true</code></td>\n    <td style=\"white-space: nowrap\">A check receives an \"In Local Area\" <a href='#operation/tracking_event'>tracking event</a>.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>check.processed_for_delivery</code></td>\n    <td style=\"white-space: nowrap\"><code>true</code></td>\n    <td style=\"white-space: nowrap\">A check receives a \"Processed for Delivery\" <a href='#operation/tracking_event'>tracking event</a>.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>check.delivered</code></td>\n    <td style=\"white-space: nowrap\"><code>true</code></td>\n    <td style=\"white-space: nowrap\">A check receives a \"Delivered\" <a href='#operation/tracking_event'>tracking event</a>.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>check.failed</code></td>\n    <td style=\"white-space: nowrap\"><code>false</code></td>\n    <td style=\"white-space: nowrap\">A check receives a \"Failed\" <a href='#operation/tracking_event'>tracking event</a>.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>check.re-routed</code></td>\n    <td style=\"white-space: nowrap\"><code>true</code></td>\n    <td style=\"white-space: nowrap\">A check receives a \"Re-Routed\" <a href='#operation/tracking_event'>tracking event</a>.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>check.returned_to_sender</code></td>\n    <td style=\"white-space: nowrap\"><code>true</code></td>\n    <td style=\"white-space: nowrap\">A check receives a \"Returned to Sender\" <a href='#operation/tracking_event'>tracking event</a>.</td>\n  </tr>\n</table>\n\n<h3>Addresses</h3>\n\n<table>\n  <tr>\n    <th style=\"white-space: nowrap\">EVENT TYPE</th>\n    <th style=\"white-space: nowrap\">LIVE-ONLY</th>\n    <th style=\"white-space: nowrap\">WHEN EVENT TYPE OCCURS</th>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>address.created</code></td>\n    <td style=\"white-space: nowrap\"><code>false</code></td>\n    <td style=\"white-space: nowrap\">An address is successfully created (Lob returns a 200 status code).</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>address.deleted</code></td>\n    <td style=\"white-space: nowrap\"><code>false</code></td>\n    <td style=\"white-space: nowrap\">An address is successfully deleted.</td>\n  </tr>\n</table>\n\n<h3>Bank Accounts</h3>\n\n<table>\n  <tr>\n    <th style=\"white-space: nowrap\">EVENT TYPE</th>\n    <th style=\"white-space: nowrap\">LIVE-ONLY</th>\n    <th style=\"white-space: nowrap\">WHEN EVENT TYPE OCCURS</th>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>bank_account.created</code></td>\n    <td style=\"white-space: nowrap\"><code>false</code></td>\n    <td style=\"white-space: nowrap\">A bank account is successfully created (Lob returns a 200 status code).</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>bank_account.deleted</code></td>\n    <td style=\"white-space: nowrap\"><code>false</code></td>\n    <td style=\"white-space: nowrap\">A bank account is successfully deleted.</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>bank_account.verified</code></td>\n    <td style=\"white-space: nowrap\"><code>false</code></td>\n    <td style=\"white-space: nowrap\">A bank account is successfully verified.</td>\n  </tr>\n</table>\n<div class=\"back-to-top\" ><a href=\"#\" onclick=\"toTopLink()\">back to top</a></div>\n"
    },
    {
      "name": "Getting Started",
      "description": "### 1. Get Setup\n* Create an account at <a href=\"https://dashboard.lob.com/#/register\" target=\"_blank\">Lob.com</a>\n* Obtain your API keys in the Lob dashboard <a href=\"https://dashboard.lob.com/settings/api-keys\" target=\"_blank\">settings</a>\n* You'll use the format, `test_*.` for your Test API key and `live_*.` for your Live API key.\n\n### 2. Explore\n* Try out in Postman:\n<div class=\"postman-run-button\"\ndata-postman-action=\"collection/fork\"\ndata-postman-var-1=\"16169677-975ecb9f-ea22-4d8f-a4f9-53a42f2aee03\"\ndata-postman-collection-url=\"entityId=16169677-975ecb9f-ea22-4d8f-a4f9-53a42f2aee03&entityType=collection&workspaceId=5404d3a5-5a84-4df6-b078-a1547e1a68a7\"\nstyle=\"background:#0099d7;color: white;display: flex;justify-content: center;align-items: center;\">\n  Run in Postman\n</div>\n<script type=\"text/javascript\">\n  (function (p,o,s,t,m,a,n) {\n    !p[s] && (p[s] = function () { (p[t] || (p[t] = [])).push(arguments); });\n    !o.getElementById(s+t) && o.getElementsByTagName(\"head\")[0].appendChild((\n      (n = o.createElement(\"script\")),\n      (n.id = s+t), (n.async = 1), (n.src = m), n\n    ));\n  }(window, document, \"_pm\", \"PostmanRunObject\", \"https://run.pstmn.io/button.js\"));\n</script>\n* Launch your terminal and copy/paste a CURL command.\n```bash\ncurl https://api.lob.com/v1/addresses \\\n  -u test_0dc8d51e0acffcb1880e0f19c79b2f5b0cc:\n```\n* Download a [Lob SDK](#tag/SDKs-and-Tools) into your favorite IDE (integrated development environment)\n\n### 3. Learn more\nTry our quick start (TypeScript, Python, PHP, Java or Ruby):\n* <a href=\"https://help.lob.com/developer-docs/quickstart-guide\" target=\"_blank\">Send your first Postcards</a>\n\nUse Case guides\n* <a href=\"https://help.lob.com/developer-docs/use-case-guides/mass-deletion-setup\" target=\"_blank\">Mass Deletion Setup</a>\n* <a href=\"https://help.lob.com/developer-docs/use-case-guides/ncoa-restrictions\" target=\"_blank\">NCOA Restrictions</a>\n* <a href=\"https://help.lob.com/developer-docs/use-case-guides/override-cancellation-window\" target=\"_blank\">Override Cancellation Window</a>\n* <a href=\"https://help.lob.com/developer-docs/use-case-guides/visibility-of-address-changes\" target=\"_blank\">Visibility of Address Changes</a>\n* <a href=\"https://help.lob.com/developer-docs/use-case-guides/ingesting-tracking-events-with-webhooks\" target=\"_blank\">Ingesting Tracking Events with Webhooks</a>\n<div class=\"back-to-top\" ><a href=\"#\" onclick=\"toTopLink()\">back to top</a></div>\n"
    },
    {
      "name": "Identity Validation",
      "description": "Validates whether a given name is associated with an address.\n<div class=\"back-to-top\" ><a href=\"#\" onclick=\"toTopLink()\">back to top</a></div>\n"
    },
    {
      "name": "Intl Autocompletions",
      "description": "Address autocompletion for non-US addresses. Given partial address information, this endpoint returns up to 10 address suggestions.\n## Autocompletion Test Env\nYour test API key does not autocomplete international addresses and is used to simulate\nbehavior. With your test API key, requests with specific values for `address_prefix`\nreturn predetermined values. When `address_prefix` is set to:\n- `0 suggestions` - Returns no suggestions\n- `[PRIMARY NUMBER] s[uggestion]` - Returns a maximum of ten predefined suggested addresses.\n  `[PRIMARY NUMBER]` does not have to be a valid primary number when sending a test request.\n  Each additional letter in `suggestion` reduces the number of suggestions by one (e.g.\n  `1 su` returns 9 suggested addresses). `[PRIMARY NUMBER]` does not affect the number of\n  suggestions returned.\nCountry is a required field.\nCity and state filters work as expected and filter the list of predetermined suggested addresses.\nSee the `test` request & response examples under [Autocomplete Examples](#operation/intl_autocompletions) within the \"Autocomplete\na partial address\" section in Intl Autocompletions.\n<div class=\"back-to-top\" ><a href=\"#\" onclick=\"toTopLink()\">back to top</a></div>\n"
    },
    {
      "name": "Intl Verifications",
      "description": "Address verification for non-US addresses\n<br>\n<div class=\"back-to-top\" ><a href=\"#\" onclick=\"toTopLink()\">back to top</a></div>\n\n## Intl Verifications Test Env\n\nWhen verifying international addresses, you'll likely want to test against\na wide array of addresses to ensure you're handling responses correctly.\nWith your test API key, requests that use specific values for `primary_line`\nlet you explore the responses to many types of addresses:\n\n<table>\n  <tr>\n    <th style=\"white-space: nowrap\">DELIVERABILITY OF SAMPLE RESPONSE</th>\n    <th style=\"white-space: nowrap\">SET <code>primary_line</code> TO</th>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>deliverable</code></td>\n    <td style=\"white-space: nowrap\">deliverable</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>deliverable_missing_info</code></td>\n    <td style=\"white-space: nowrap\">deliverable missing info</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>undeliverable</code></td>\n    <td style=\"white-space: nowrap\">undeliverable</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>no_match</code></td>\n    <td style=\"white-space: nowrap\">no match</td>\n  </tr>\n</table>\n\nSee the `test` request & response examples under [Intl Verification Examples](#operation/intl_verification) within the\n\"Verify an international address section\" in Intl Verifications.\n\nYou can rely on the response from these examples generally matching the response\nyou'd see in the live environment with an address of that type (excluding the `recipient` field).\n\nThe test API key does not perform any verification, automatic correction, or standardization\nfor addresses. If you wish to try these features out, use our <a href=\"https://lob.com/address-verification\" target=\"_blank\">live demo</a>\nor the free plan (see <a href=\"https://lob.com/pricing/address-verification\" target=\"_blank\">our pricing</a> for details).\n<div class=\"back-to-top\" ><a href=\"#\" onclick=\"toTopLink()\">back to top</a></div>\n"
    },
    {
      "name": "Introduction",
      "description": "Lob’s Print & Mail and Address Verification APIs help companies transform outdated,\nmanual print-and-mail processes; save 1,000s of hours in processing time by sending mail much more\nquickly; and increase ROI on offline communications.\n\nAutomate direct mail by triggering on-demand postcards, letters, and checks directly from your\nCRM or customer data systems.\n\nAddress Verification corrects, standardizes, and cleanses address data for assured delivery with\ninstant verification across 240+ countries and territories.\n\nLob's print delivery network eliminates the hassle of vendor management with automated\nproduction and postage across a global network of vetted commercial printers.\n\nTracking & Analytics gives you complete visibility of production and delivery for each piece of\nmail you send to meet compliance requirements and measure campaign performance.\n"
    },
    {
      "name": "Letters",
      "description": "The letters endpoint allows you to easily print and mail letters. The API provides endpoints for\ncreating letters, retrieving individual letters, canceling letters, and retrieving a list of letters.\n<div class=\"back-to-top\" ><a href=\"#\" onclick=\"toTopLink()\">back to top</a></div>\n"
    },
    {
      "name": "Manage Mail",
      "description": "## Cancellation Windows\n\nBy default, all new accounts have a 5 minute cancellation window for postcards,\nself mailers, letters, and checks. Within that timeframe, you can cancel\nmailings from production, free of charge. Once the window has passed for a\npostcard, self mailer, letter, or check, the mailing is no longer cancelable.\nIn addition, certain customers can customize their cancellation windows by\nproduct in their <a href=\"https://dashboard.lob.com/#\" target=\"_blank\">Dashboard Settings</a>. Upgrade to\nthe appropriate <a href=\"https://dashboard.lob.com/#/settings/editions\" target=\"_blank\">Print & Mail Edition</a>\nto automatically gain access to this ability. For more details on this feature,\ncheck out our <a href=\"https://help.lob.com/print-and-mail/building-a-mail-strategy/managing-mail-settings#cancellation-windows-4\" target=\"_blank\">Cancellation Guide</a>.\n\nIf you schedule a postcard, self mailer, letter, or check for up to 180 days\nin the future by supplying the `send_date` parameter, that will override any\ncancellation window you may have for that product.\n<br>\n<div class=\"back-to-top\" ><a href=\"#\" onclick=\"toTopLink()\">back to top</a></div>\n\n## Scheduled Mailings\n\nPostcards, self mailers, letters, and checks can be scheduled to be sent up\nto 180 days in advance. You can use this feature to:\n- Create automated drip campaigns (e.g. send a postcard at 15, 30, and 60\ndays)\n- Schedule recurring sends\n- Plan your mailing schedule ahead of time\n\nUp until the time a mailing is scheduled for, it can also be canceled.\nIf you use this feature in conjunction with [a cancellation window](\nindex.html#section/Cancellation-Windows), the `send_date` parameter will always\ntake precedence.\n\nFor implementation details, see documentation below for each respective\nendpoint. For more help, see our <a href=\"https://help.lob.com/print-and-mail/building-a-mail-strategy/choosing-a-delivery-strategy#scheduled-mailings-15\" target=\"_blank\">Scheduled Mailings Guide</a>.\n\nThis feature is exclusive to certain customers. Upgrade to the appropriate\n<a href=\"https://dashboard.lob.com/#/settings/editions\" target=\"_blank\">Print & Mail Edition</a> to\ngain access.\n\n### Example Create Request using Send Date\n\n```bash\n  curl https://api.lob.com/v1/postcards \\\n    -u test_0dc8d51e0acffcb1880e0f19c79b2f5b0cc: \\\n    -d \"description=Demo Future Postcard\" \\\n    -d \"to=adr_bae820679f3f536b\" \\\n    -d \"from=adr_210a8d4b0b76d77b\" \\\n    -d \"front=tmpl_b846a20859ae11a\" \\\n    -d \"back=tmpl_01b0d396a10c268\" \\\n    -d \"merge_variables[name]=Harry\" \\\n    -d \"send_date=2021-07-26\"\n```\n<div class=\"back-to-top\" ><a href=\"#\" onclick=\"toTopLink()\">back to top</a></div>\n"
    },
    {
      "name": "National Change of Address",
      "description": "National Change of Address Linkage (NCOALink) is a service offered by the USPS, which allows individuals\nor businesses who have recently moved to have any mail forwarded from their previous address\nto their new address.\n\nAs a CASS-certified Address Verification Provider, Lob also offers NCOALink\nfunctionality to our Print & Mail customers. With the Lob NCOALink feature enabled, Postcards,\nLetters, Checks and Addresses can automatically be corrected to reflect an individual's or business's\nnew address in the case that they have moved (only if they have registered for NCOALink with the USPS).\n\nDue to privacy concerns and USPS constraints, for customers with NCOALink enabled, our API responses\nfor a limited set of endpoints differ slightly in the case when an address has been changed through NCOALink.\n\n**NOTE**: This feature is exclusive to certain customers. Upgrade to the appropriate <a href='https://dashboard.lob.com/#/settings/editions' target=\"_blank\">Print & Mail Editions</a> to gain access.\n\nFor more information, see our <a href=\"https://help.lob.com/print-and-mail/all-about-addresses#national-change-of-address-ncoa-7\" target=\"_blank\">NCOALink guide</a>.\n<br>\n<div class=\"back-to-top\" ><a href=\"#\" onclick=\"toTopLink()\">back to top</a></div>\n\n## NCOALink Live Environment\nThough there are no changes to API requests, there are significant changes to our API responses, but\nonly in the event that an address has been changed through NCOALink. If an address has not been changed\nthrough NCOALink, the response would be identical to our standard responses, except the addition of a\n`recipient_moved` field, which is `false` for unchanged addresses.\n\nIf an address has been changed through NCOALink, we are required to suppress the following response\nfields for that address:\n- `address_line1`\n- `address_line2`\n- The +4 portion of the ZIP+4 (5-digit ZIP code will still be present)\n\nSee the `ncoa_us_live` example under [Response samples](#operation/address_create) within the \"Create an Address\" section in Addresses\n<br>\n<div class=\"back-to-top\" ><a href=\"#\" onclick=\"toTopLink()\">back to top</a></div>\n\n## NCOALink Test Environment\n\nIn addition to sending live requests, you may also want to simulate what an NCOALink response might\nlook like so that you can ensure your application behaves as expected. The behavior of NCOALink in\nLob's Test Environment is very similar to our [US Verifications Test Mode](#section/US-Verifications-Test-Env).\n\nTo simulate an NCOALink request, send a POST request to any of the four endpoints below with an `address_line1` field equal to `NCOA`:\n- `POST /v1/addresses`\n- `POST /v1/checks`\n- `POST /v1/letters`\n- `POST /v1/postcards`\n- `POST /v1/self_mailers`\n\nA static address will always be returned, as documented in the `ncoa_us_test` example under [Response samples](#operation/address_create) within the \"Create an Address\"\nsection in Addresses (along with the corresponding request under \"Request samples\").\n<div class=\"back-to-top\" ><a href=\"#\" onclick=\"toTopLink()\">back to top</a></div>\n"
    },
    {
      "name": "Postcards",
      "description": "The postcards endpoint allows you to easily print and mail postcards. The API provides endpoints for creating postcards,\nretrieving individual postcards, canceling postcards, and retrieving a list of postcards.\n<div class=\"back-to-top\" ><a href=\"#\" onclick=\"toTopLink()\">back to top</a></div>\n"
    },
    {
      "name": "QR Codes",
      "description": "\nLob QR codes allow you to generate a QR code that is unique to each mailpiece, thereby allowing each and every customers to receive a personalized link. See the Create endpoint for <a href=\"#tag/Letters/operation/letter_create\">Letters</a>, <a href=\"#tag/Postcards/operation/postcard_create\">Postcards</a> or <a href=\"#tag/Self-Mailers/operation/self_mailer_create\">Self Mailers</a> to learn how to embed a QR code into your mail piece.\n\nWebhooks can be used to integrate Lob QR code scans into your omni channel marketing strategy. See the <a href=\"#tag/Webhooks\">Webhooks</a> section of our documentation to learn how to enable the `letter.viewed`, `postcard.viewed` and `self_mailer.viewed` event notifications for your mail pieces.\n\nFurthermore, our QR code Analytics endpoint can be used to track the impact and engagement rate of your mail sends. Lob can tell you exactly which recipients opened your mailpiece. Our Analytics endpoint allows you to see exactly which recipient scanned a mailpiece, when they scanned it, and more!\n\n<div class=\"back-to-top\" ><a href=\"#\" onclick=\"toTopLink()\">back to top</a></div>\n"
    },
    {
      "name": "Rate Limiting",
      "description": "To prevent misuse, we enforce a rate limit on an API Key and endpoint basis, similar to the way many other APIs enforce rate limits. By default, all accounts and their corresponding Test and Live API Keys have a rate limit of 150 requests per 5 seconds per endpoint. The `POST /v1/us_verifications` and `POST /v1/us_autocompletions` endpoints have a limit of 300 requests per 5 seconds for all accounts.\n\nWhen your application exceeds the rate limit for a given API endpoint, the Lob API will return an HTTP 429 \"Too Many Requests\" response code instead of the variety of codes you would find across the other API endpoints.\n\n**HTTP Headers**\n\nHTTP headers are returned on each request to a rate limited endpoint. Ensure that you inspect these headers during your requests as they provide relevant data on how many more requests your application is allowed to make for the endpoint you just utilized.\n\nWhile the headers are documented here in titlecase, HTTP headers are case insensitive and certain libraries may transform them to lowercase. Please inspect your headers carefully to see how they will be represented in your chosen development scenario.\n<table>\n  <tbody>\n    <tr>\n      <td>X-Rate-Limit-Limit:</td>\n      <td>the rate limit ceiling for a given request</td>\n    </tr>\n    <tr>\n      <td>X-Rate-Limit-Remaining:</td>\n      <td>the number of requests remaining in this window</td>\n    </tr>\n    <tr>\n      <td>X-Rate-Limit-Reset:</td>\n      <td>the time at which the rate limit window resets (in <a  href=\"https://en.wikipedia.org/wiki/Unix_time\"  target=\"_blank\">UTC epoch seconds</a>)\n    </td>\n    </tr>\n  </tbody>\n</table>\n\n### Example HTTP Headers\n\n```bash\n  X-Rate-Limit-Limit:150\n  X-Rate-Limit-Remaining:100\n  X-Rate-Limit-Reset:1528749846\n```\n\n### Example Response\n\nIf you hit the rate limit on a given endpoint, this is the body of the HTTP 429 message that you will see:\n\n```javascript\n  {\n    \"error\": {\n      \"message\": \"Rate limit exceeded. Please wait 5 seconds and try your request again.\",\n      \"code\": \"rate_limit_exceeded\",\n      \"status_code\": 429\n    }\n  }\n``` <div class=\"back-to-top\" ><a href=\"#\" onclick=\"toTopLink()\">back to top</a></div>"
    },
    {
      "name": "Requests and Responses",
      "description": "## Asset URLs\n\nAll asset URLs returned by the Lob API (postcards, letters, thumbnails,\netc) are signed links served over HTTPS. All links returned will expire in\n30 days to prevent mis-sharing. Each time a GET request is initiated, a\nnew signed URL will be generated.\n<br>\n<div class=\"back-to-top\" ><a href=\"#\" onclick=\"toTopLink()\">back to top</a></div>\n\n## Query Parameters\n\nQuery parameters which consist of lists of strings require that all elements of\nthe list be double-quoted, as per query filter standards.\n<br>\n<div class=\"back-to-top\" ><a href=\"#\" onclick=\"toTopLink()\">back to top</a></div>\n\n## Idempotent Requests\n\nLob supports idempotency for safely retrying `POST` requests to create\npostcards, self mailers, letters, and checks without accidentally creating\nduplicates.\n\nFor example, if a request to create a check fails due to a network error,\nyou can safely retry the same request with the same idempotency key and\nguarantee that only one check will ultimately be created and sent. When a\nrequest is sent with an idempotency key for an already created resource,\nthe response object for the existing resource will be returned.\n\nTo perform an idempotent `POST` request to one of the mailpiece product\nendpoints, provide an additional `Idempotency-Key` header or an `idempotency_key`\nquery parameter to the request. If multiple idempotency keys are provided,\nthe request will fail. How you create unique keys is up to you, but we\nsuggest using random values, such as V4 UUIDs. Idempotency keys are intended\nto prevent issues over a short periods of time, therefore keys expire after\n24 hours. Keys are unique by mode (Test vs. Live) as well as by resource\n(postcard vs. letter, etc.).\n\nBy default, all `GET` and `DELETE` requests are idempotent by nature, so\nthey do not require an additional idempotency key.\n\nFor more help integrating idempotency keys, refer to our\n<a href=\"https://help.lob.com/print-and-mail/building-a-mail-strategy/managing-mail-settings#idempotent-requests-12\" target=\"_blank\">implementation guide</a>.\n\n**Headers**\n<table>\n  <tbody>\n    <tr>\n      <td>Idempotency-Key:</td>\n      <td>\n        optional\n        <p style=\"color:#888;margin-top:0px;\">\n          <font size=\"-1\">\n            A string of no longer than 256 characters\n            that uniquely identifies this resource.\n          </font>\n        </p>\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n**Query Parameters**\n<table>\n  <tbody>\n    <tr>\n      <td>idempotency-key:</td>\n      <td>\n        optional\n        <p style=\"color:#888;margin-top:0px;\">\n          <font size=\"-1\">\n            A string of no longer than 256 characters\n            that uniquely identifies this resource.\n          </font>\n        </p>\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n### Example Request\n\n```bash\n  curl https://api.lob.com/v1/postcards \\\n    -u test_0dc8d51e0acffcb1880e0f19c79b2f5b0cc: \\\n    -H \"Idempotency-Key: 026e7634-24d7-486c-a0bb-4a17fd0eebc5\" \\\n    -d \"to=adr_bae820679f3f536b\" \\\n    -d \"from=adr_210a8d4b0b76d77b\" \\\n    --data-urlencode \"front=<html style='margin: 130px; font-size: 50;'>Front HTML for {{name}}</html>\" \\\n    --data-urlencode \"back=<html style='margin: 130px; font-size: 50;'>Back HTML</html>\" \\\n    -d \"merge_variables[name]=Harry\"\n```\n<br>\n<div class=\"back-to-top\" ><a href=\"#\" onclick=\"toTopLink()\">back to top</a></div>\n\n## Metadata\n\nWhen creating any Lob object, you can include a metadata object with up to 20 key-value pairs of\ncustom data. You can use metadata to store information like `metadata[customer_id] = \"987654\"` or\n`metadata[campaign] = \"NEWYORK2015\"`. This is especially useful for filtering and matching to internal\nsystems.\n\nEach metadata key must be less than 40 characters long and values must be less than 500 characters.\nMetadata does not support nested objects.\n\n### Example Create Request with Metadata\n\n```bash\n  curl https://api.lob.com/v1/postcards \\\n    -u test_0dc8d51e0acffcb1880e0f19c79b2f5b0cc: \\\n    -d \"description=Demo Postcard job\" \\\n    -d \"metadata[campaign]=NEWYORK2015\" \\\n    -d \"to=adr_bae820679f3f536b\" \\\n    -d \"from=adr_210a8d4b0b76d77b\" \\\n    --data-urlencode \"front=<html style='margin: 130px; font-size: 50;'>Front HTML for {{name}}</html>\" \\\n    --data-urlencode \"back=<html style='margin: 130px; font-size: 50;'>Back HTML</html>\" \\\n    -d \"merge_variables[name]=Harry\"\n```\n\n### Example List Request with Metadata Filter\n\n```bash\n  curl -g \"https://api.lob.com/v1/postcards?metadata[campaign]=NEWYORK2015&limit=2\" \\\n    -u test_0dc8d51e0acffcb1880e0f19c79b2f5b0cc:\n```\n<br>\n<div class=\"back-to-top\" ><a href=\"#\" onclick=\"toTopLink()\">back to top</a></div>\n\n\n## Request Body\n\nWhen manually sending a POST HTTP request directly to the Lob API, without\nthe use of a library, you may represent the body as either a Form URL\nEncoded request, a JSON document, or a Multipart Form Data request.\n\nHowever, if you're using one of our [SDKs](#tag/SDKs-and-Tools),\nthe generation of the request bodies is done for you automatically and you don't\nneed to worry about the format.\n\n### Form URL Encoded\n\nThis request body encoding is accompanied with the\n`Content-Type: application/x-www-form-urlencoded` header. The content is an\nexample of what the [Verify a US address](index.html#operation/us_verification)\nendpoint accepts. An example of a request body encoded in this format follows.\n\n\n```javascript\n  primary_line=210 King Street&city=San Francisco&state=CA&zip_code=94107\n```\n\n### JSON\n\nThis request body encoding is accompanied with the `Content-Type: application/json` header.\nThe content is an example of what the [Verify a US address endpoint](index.html#operation/us_verification)\naccepts. An example of a request body encoded in this format follows.\n\n\n```javascript\n  {\n    \"primary_line\": \"210 King Street\",\n    \"city\": \"San Francisco\",\n    \"state\": \"CA\",\n    \"zip_code\": \"94107\"\n  }\n```\n\n### Multipart Form Data\n\nThis request body encoding is accompanied with the `Content-Type: multipart/form-data`\nheader. This is the only format that can be used for uploading a file to the API. The\ncontent is an example of what the [Create a check](index.html#operation/check_create)\nendpoint accepts. An example of a request body encoded in this format follows.\n\n\n```javascript\n  --------------------------7015ebe79c0a5f8c\n  Content-Disposition: form-data; name=\"description\"\n\n  Demo Letter\n  --------------------------7015ebe79c0a5f8c\n  Content-Disposition: form-data; name=\"to\"\n\n  adr_bae820679f3f536b\n  --------------------------7015ebe79c0a5f8c\n  Content-Disposition: form-data; name=\"from\"\n\n  adr_210a8d4b0b76d77b\n  --------------------------7015ebe79c0a5f8c\n  Content-Disposition: form-data; name=\"file\"; filename=\"file.pdf\"\n  Content-Type: application/pdf\n\n  <FILE CONTENT>\n  --------------------------7015ebe79c0a5f8c\n  Content-Disposition: form-data; name=\"color\"\n\n  true\n  --------------------------7015ebe79c0a5f8c--\n```\n<div class=\"back-to-top\" ><a href=\"#\" onclick=\"toTopLink()\">back to top</a></div>\n"
    },
    {
      "name": "Reverse Geocode Lookups",
      "description": "Find a list of zip codes associated with a valid US location via latitude and longitude. <br> <div class=\"back-to-top\" ><a href=\"#\" onclick=\"toTopLink()\">back to top</a></div>\n"
    },
    {
      "name": "SDKs and Tools",
      "description": "Please visit our <a href=\"https://www.github.com/lob\" target=\"_blank\">Github</a> for a list of our supported libraries.\n- <a href=\"https://github.com/lob/lob-typescript-sdk\" target=\"_blank\">Typescript</a>\n- <a href=\"https://github.com/lob/lob-php\" target=\"_blank\">PHP</a>\n- <a href=\"https://github.com/lob/lob-python\" target=\"_blank\">Python</a>\n- <a href=\"https://github.com/lob/lob-java\" target=\"_blank\">Java</a>\n- <a href=\"https://github.com/lob/lob-ruby/tree/main\" target=\"_blank\">Ruby</a>\n- <a href=\"https://github.com/lob/lob-dotnet\" target=\"_blank\">CSharp</a>\n- <a href=\"https://github.com/lob/lob-elixir\" target=\"_blank\">Elixir</a>\n- <a href=\"https://github.com/lob/lob-go\" target=\"_blank\">Go</a>\n- <a href=\"https://github.com/lob/lob-node\" target=\"_blank\">Node.js (legacy)</a>\n- <a href=\"https://github.com/lob/lob-java/tree/12.3.7-Legacy\" target=\"_blank\">Java (legacy)</a>\n- <a href=\"https://github.com/lob/lob-php/tree/v3-legacy\" target=\"_blank\">PHP (legacy)</a>\n- <a href=\"https://github.com/lob/lob-python/tree/legacy_v4\" target=\"_blank\">Python (Legacy)</a>\n- <a href=\"https://github.com/lob/lob-ruby/tree/legacy-v5\" target=\"_blank\">Ruby (Legacy)</a>\n\n<br><br>\n<div class=\"back-to-top\" ><a href=\"#\" onclick=\"toTopLink()\">back to top</a></div>\n"
    },
    {
      "name": "Self Mailers",
      "description": "The self mailer endpoint allows you to easily print and mail self mailers. The API provides endpoints\nfor creating self mailers, retrieving individual self mailers, canceling self mailers, and retrieving a list of self mailers.\n<div class=\"back-to-top\" ><a href=\"#\" onclick=\"toTopLink()\">back to top</a></div>\n"
    },
    {
      "name": "Template Design",
      "description": "## HTML Templates\nYou can save commonly used HTML as templates within Lob to more easily manage them. You can reference\nyour saved templates in postcard, letter, and check requests instead of having to pass a long HTML\nstring on each request. Additionally, you can make changes to your HTML templates and update them\nindependently, without having to touch your API integration. Templates can be created, edited,\nand viewed on your <a href=\"https://dashboard.lob.com/#/templates\" target=\"_blank\">Dashboard</a>. To use a template in a postcard,\nletter, or check, see the documentation for each endpoint below. For help using templates, check out our\n<a href=\"https://help.lob.com/print-and-mail/designing-mail-creatives/dynamic-personalization#html-templates-1\" target=\"_blank\">HTML Templates Guide</a> or get started with a\n<a href=\"https://lob.com/template-gallery\" target=\"_blank\">pre-designed template from our gallery</a>. In Live mode, you can only have\nas many templates as allotted in your current\n<a href=\"https://dashboard.lob.com/#/settings/editions\" target=\"_blank\">Print & Mail Edition</a>. There is no limit in Test mode.\n\nIf you'd like to interact with templates programmatically, check out our Beta Program for API access\nto the [HTML Templates Endpoints](#tag/Templates).\n\n### Example Create Request using HTML Templates\n```bash\n  curl https://api.lob.com/v1/postcards \\\n    -u test_0dc8d51e0acffcb1880e0f19c79b2f5b0cc: \\\n    -d \"description=Demo Postcard job\" \\\n    -d \"to=adr_78c304d54912c502\" \\\n    -d \"from=adr_61a0865c8c573139\" \\\n    -d \"front=tmpl_b846a20859ae11a\" \\\n    -d \"back=tmpl_01b0d396a10c268\" \\\n    -d \"merge_variables[name]=Harry\"\n```\n<br>\n<div class=\"back-to-top\" ><a href=\"#\" onclick=\"toTopLink()\">back to top</a></div>\n\n## HTML Examples\nUse a pre-designed template from our <a href=\"https://lob.com/resources/template-gallery\" target=\"_blank\">gallery</a> or follow these\nbasic <a href=\"https://github.com/lob/examples\" target=\"_blank\">guidelines</a> as starting points for creating custom Postcards,\nSelf Mailers, Letters, and Checks.\n\nPlease follow the standards used in these templates, such as:\n- For any linked assets, you must use a performant file hosting provider with no rate limits such as Amazon\nS3.\n- Use inline styles or an internal stylesheet, do not link to external stylesheets.\n- Link to images that are 300DPI and sized at the final desired size on the physical mailing. For example,\nfor a photo that is desired to be 1in x 1in on the final postcard, the image asset should be sized at 1in\nx 1in at 300DPI (which equates to 300px by 300px).\n- The sum of all linked assets should not exceed 5MB in file size.\n- Use `-webkit` prefixes for CSS properties when recommended <a href=\"http://shouldiprefix.com/\" target=\"_blank\">here</a>.\n\nBecause different browsers have varying user-agent styles, the HTML you see in your browser will not\nalways look identical to what is produced through the API. It is **strongly** recommended that you test all\nHTML requests by reviewing the final PDF files in your Test Environment, as these are the files that will be\nprinted.\n<br>\n<div class=\"back-to-top\" ><a href=\"#\" onclick=\"toTopLink()\">back to top</a></div>\n\n## Image Prepping\nCurrently we support the following file types for all endpoints:\n- PDF\n- PNG\n- JPEG\n\n**Templates**\n\nYou can find pre-made templates that already adhere to all of these guidelines here:\n- [Postcards](#tag/Postcards)\n- [Letters](#tag/Letters)\n- [Checks](#tag/Checks)\n- [Self Mailers](#tag/Self-Mailers)\n\n**Prepping All Images**\n\nThe following guidelines apply to image types:\n- Images should be 300 dpi or higher - PNG/JPEG files with less than 300 dpi will be rejected.\n- Your artwork should include a 1/8\" border around the final trim size. This means your final file size will be a total of 0.25\" larger than your expected printed piece (ie, a 4\"x6\" postcard should be submitted as 4.25\"x6.25\"). There is no need to include crop marks in your submitted content.\n- Include a safe zone – make sure no critical elements are within 1/8\" from the edge of the final size.\n- Do not include any additional postage marks or indicia.\n- File sizes should be no larger than 5MB.\n\n**Prepping PDFs**\n\nTo ensure that you are producing PDF's correctly please follow the guidelines below:\n- [Make sure all non-standard fonts are embedded.](#section/Standard-PDF-Fonts)\n- Generated PDF's need to be be PDF/A compliant.\n\n**Prepping PNGs/JPEGs**\n\nTo ensure that you are producing PNG's/JPEG's correctly please follow the guidelines below:\n\n- Minimum 300 dpi. The dpi is calculated as (width of image in pixels) / (width of product in inches) and (length of image in pixels) / (length of product in inches). For Example: 1275px x 1875px image used to create a 4.25\" x 6.25\" postcard has a dpi of 300.\n- Submitted images must have the same length to width ratio as the chosen product. Images will not be cropped or stretched by the API.\n<br>\n<div class=\"back-to-top\" ><a href=\"#\" onclick=\"toTopLink()\">back to top</a></div>\n\n## Standard PDF Fonts\nIdeally, all fonts in provided PDFs should be embedded. Embedding a font in a PDF ensures that the final\nprinted product will look as it was designed. Fonts can vary greatly in size and shape, even within the\nsame family. If the exact font that was used to design the artwork is not used to print, the look and\nplacement of the text is not guaranteed to be the same.\n\nIn general, requests that provide PDFs with un-embedded fonts will be rejected. We make an exception for\n\"standard fonts\", a set of fonts that we have identified as being common. PDFs that contain un-embedded\nfonts that are found in the list, and match the accepted <a href=\"https://en.wikipedia.org/wiki/Category:Font_formats\" target=\"_blank\">font type</a>\nwill be accepted. Otherwise, the request will be rejected.\n\nFont embedding is an essential part of standard PDF workflows. Fonts should be embedded automatically by\nPDF editing software that are compliant with PDF standards.\n\n<table>\n  <tr>\n    <th style=\"white-space: nowrap\">FONT NAME</th>\n    <th style=\"white-space: nowrap\">TYPES</th>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>Arial</code></td>\n    <td style=\"white-space: nowrap\">Type 1, TrueType, CID TrueType</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>Arial,Bold</code></td>\n    <td style=\"white-space: nowrap\">Type 1, TrueType, CID TrueType</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>Arial,BoldItalic</code></td>\n    <td style=\"white-space: nowrap\">Type 1, TrueType, CID TrueType</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>Arial,Italic</code></td>\n    <td style=\"white-space: nowrap\">TrueType, CID TrueType</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>ArialMT</code></td>\n    <td style=\"white-space: nowrap\">TrueType, CID TrueType</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>Arial-BoldMT</code></td>\n    <td style=\"white-space: nowrap\">TrueType</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>Arial-BoldItalicMT</code></td>\n    <td style=\"white-space: nowrap\">TrueType</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>Arial-ItalicMT</code></td>\n    <td style=\"white-space: nowrap\">TrueType</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>ArialNarrow</code></td>\n    <td style=\"white-space: nowrap\">TrueType</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>ArialNarrow-Bold</code></td>\n    <td style=\"white-space: nowrap\">TrueType</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>Calibri</code></td>\n    <td style=\"white-space: nowrap\">TrueType</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>Calibri-Bold</code></td>\n    <td style=\"white-space: nowrap\">TrueType</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>Calibri-Italic</code></td>\n    <td style=\"white-space: nowrap\">TrueType</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>Courier</code></td>\n    <td style=\"white-space: nowrap\">Type 1</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>Courier-Oblique</code></td>\n    <td style=\"white-space: nowrap\">Type 1</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>Courier-Bold</code></td>\n    <td style=\"white-space: nowrap\">Type 1</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>Courier-BoldOblique</code></td>\n    <td style=\"white-space: nowrap\">Type 1</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>CourierNewPSMT</code></td>\n    <td style=\"white-space: nowrap\">TrueType</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>CourierNewPS-ItalicMT</code></td>\n    <td style=\"white-space: nowrap\">TrueType</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>CourierNewPS-BoldMT</code></td>\n    <td style=\"white-space: nowrap\">TrueType</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>Helvetica</code></td>\n    <td style=\"white-space: nowrap\">Type 1</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>Helvetica-Bold</code></td>\n    <td style=\"white-space: nowrap\">Type 1</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>Helvetica-BoldOblique</code></td>\n    <td style=\"white-space: nowrap\">Type 1</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>Helvetica-Oblique</code></td>\n    <td style=\"white-space: nowrap\">Type 1</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>LucidaConsole</code></td>\n    <td style=\"white-space: nowrap\">TrueType</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>MsSansSerif</code></td>\n    <td style=\"white-space: nowrap\">TrueType</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>MsSansSerif,Bold</code></td>\n    <td style=\"white-space: nowrap\">TrueType</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>Symbol</code></td>\n    <td style=\"white-space: nowrap\">Type 1, TrueType</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>Tahoma</code></td>\n    <td style=\"white-space: nowrap\">TrueType</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>Tahoma-Bold</code></td>\n    <td style=\"white-space: nowrap\">TrueType</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>Times-Bold</code></td>\n    <td style=\"white-space: nowrap\">Type 1</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>Times-BoldItalic</code></td>\n    <td style=\"white-space: nowrap\">Type 1</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>Times-Italic</code></td>\n    <td style=\"white-space: nowrap\">Type 1</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>Times-Roman</code></td>\n    <td style=\"white-space: nowrap\">Type 1</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>TimesNewRomanPS-BoldItalicMT</code></td>\n    <td style=\"white-space: nowrap\">TrueType</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>TimesNewRomanPS-BoldMT</code></td>\n    <td style=\"white-space: nowrap\">TrueType</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>TimesNewRomanPS-ItalicMT</code></td>\n    <td style=\"white-space: nowrap\">TrueType</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>TimesNewRomanPSMT</code></td>\n    <td style=\"white-space: nowrap\">TrueType, CID TrueType</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>TimesNewRomanPSMT,Bold</code></td>\n    <td style=\"white-space: nowrap\">TrueType</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>Verdana</code></td>\n    <td style=\"white-space: nowrap\">TrueType</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>Verdana-Bold</code></td>\n    <td style=\"white-space: nowrap\">TrueType</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>Verdana,Italic</code></td>\n    <td style=\"white-space: nowrap\">TrueType</td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\"><code>ZapfDingbats</code></td>\n    <td style=\"white-space: nowrap\">Type 1</td>\n  </tr>\n</table>\n<div class=\"back-to-top\" ><a href=\"#\" onclick=\"toTopLink()\">back to top</a></div>\n"
    },
    {
      "name": "Template Versions",
      "description": "These API endpoints allow you to create, retrieve, update and delete versions of reusable HTML templates for use with the Print & Mail API.\n<div class=\"back-to-top\" ><a href=\"#\" onclick=\"toTopLink()\">back to top</a></div>\n"
    },
    {
      "name": "Templates",
      "description": "These API endpoints allow you to create, retrieve, update and delete reusable HTML templates for use with the Print & Mail API.\n<div class=\"back-to-top\" ><a href=\"#\" onclick=\"toTopLink()\">back to top</a></div>\n"
    },
    {
      "name": "Test and Live Environments",
      "description": "To make the API as explorable as possible, accounts have test and live\nenvironment API keys. You're not charged any fees in the test environment,\nso we encourage you to use it to try out services, perform quality\nassurance, and run automated testing. Objects―addresses, letters, checks,\netc―in one environment cannot be manipulated by objects in the other.\n\nIn general, a payment method (either credit card or ACH account) must be\nadded to your account to make live API requests. However, a payment method\nis not required for the first 300 live requests per month to the\n`/v1/us_verifications` endpoint. After the first 300 requests, you will\nbegin receiving errors with status code `403`.\n\nRequests made in the test environment always validate request arguments,\nsimulate live environment behavior, and enforce rate limits. _They never\nprint, mail nor, for verification services, verify addresses._ The US &\nInternational verification services trigger behavior with specific\nargument values, and, if you plan on using those, we recommend reading\n[US Verification Test Environment](#tag/US-Verifications-Test-Environment)\nand [Intl Verification Test Environment](#tag/Intl-Verifications-Test-Environment).\n\nTo switch between environments, use the appropriate key for that\nenvironment when performing a request. You can find each environment's API\nkey in your dashboard under Settings; test API keys are always prefixed\nwith `test_` and production API keys with `live_`.\n<div class=\"back-to-top\" ><a href=\"#\" onclick=\"toTopLink()\">back to top</a></div>\n"
    },
    {
      "name": "Tracking Events",
      "description": "As mailpieces travel through the mail stream, USPS scans their unique barcodes, and Lob processes these mail scans to generate tracking events.\n\n<h3>Certified Tracking Event Details</h3>\n\nLetters sent with USPS Certified Mail are fully tracked by USPS, and\ntherefore their [tracking events](#operation/tracking_event) have an\nadditional `details` object with more detailed information about the\ntracking event. The following table shows the potential values for\nthe fields in the `details` object mapped to the tracking event `name`.\n\n<table>\n  <tr>\n    <th style=\"white-space: nowrap\">NAME</th>\n    <th style=\"white-space: nowrap\">EVENT</th>\n    <th style=\"white-space: nowrap\">DESCRIPTION</th>\n    <th style=\"white-space: nowrap\">ACTION REQUIRED</th>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\">Mailed</td>\n    <td style=\"white-space: nowrap\"><code>package_accepted</code></td>\n    <td>Package has been accepted into the carrier network for delivery.</td>\n    <td style=\"white-space: nowrap\"><code>false</code></td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\">In Transit</td>\n    <td style=\"white-space: nowrap\"><code>package_arrived</code></td>\n    <td>Package has arrived at an intermediate location in the carrier network.</td>\n    <td style=\"white-space: nowrap\"><code>false</code></td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\">In Transit</td>\n    <td style=\"white-space: nowrap\"><code>package_departed</code></td>\n    <td>Package has departed from an intermediate location in the carrier network.</td>\n    <td style=\"white-space: nowrap\"><code>false</code></td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\">In Transit</td>\n    <td style=\"white-space: nowrap\"><code>package_processing</code></td>\n    <td>Package is processing at an intermediate location in the carrier network.</td>\n    <td style=\"white-space: nowrap\"><code>false</code></td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\">In Transit</td>\n    <td style=\"white-space: nowrap\"><code>package_processed</code></td>\n    <td>Package has been processed at an intermediate location.</td>\n    <td style=\"white-space: nowrap\"><code>false</code></td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\">In Local Area</td>\n    <td style=\"white-space: nowrap\"><code>package_in_local_area</code></td>\n    <td>Package is at a location near the end destination.</td>\n    <td style=\"white-space: nowrap\"><code>false</code></td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\">Processed For Delivery</td>\n    <td style=\"white-space: nowrap\"><code>delivery_scheduled</code></td>\n    <td>Package is scheduled for delivery.</td>\n    <td style=\"white-space: nowrap\"><code>false</code></td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\">Processed For Delivery</td>\n    <td style=\"white-space: nowrap\"><code>out_for_delivery</code></td>\n    <td>Package is out for delivery.</td>\n    <td style=\"white-space: nowrap\"><code>false</code></td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\">Pickup Available</td>\n    <td style=\"white-space: nowrap\"><code>pickup_available</code></td>\n    <td>Package is available for pickup at carrier location.</td>\n    <td style=\"white-space: nowrap\"><code>true</code></td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\">Delivered</td>\n    <td style=\"white-space: nowrap\"><code>delivered</code></td>\n    <td>Package has been delivered.</td>\n    <td style=\"white-space: nowrap\"><code>false</code></td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\">Re-Routed</td>\n    <td style=\"white-space: nowrap\"><code>package_forwarded</code></td>\n    <td>Package has been forwarded.</td>\n    <td style=\"white-space: nowrap\"><code>false</code></td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\">Returned to Sender</td>\n    <td style=\"white-space: nowrap\"><code>returned_to_sender</code></td>\n    <td>Package is to be returned to sender.</td>\n    <td style=\"white-space: nowrap\"><code>false</code></td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\">Issue</td>\n    <td style=\"white-space: nowrap\"><code>address_issue</code></td>\n    <td>Address information is incorrect. Contact carrier to ensure delivery.</td>\n    <td style=\"white-space: nowrap\"><code>true</code></td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\">Issue</td>\n    <td style=\"white-space: nowrap\"><code>contact_carrier</code></td>\n    <td>Contact the carrier for more information.</td>\n    <td style=\"white-space: nowrap\"><code>true</code></td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\">Issue</td>\n    <td style=\"white-space: nowrap\"><code>delayed</code></td>\n    <td>Delivery of package is delayed.</td>\n    <td style=\"white-space: nowrap\"><code>false</code></td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\">Issue</td>\n    <td style=\"white-space: nowrap\"><code>delivery_attempted</code></td>\n    <td>Delivery of package has been attempted. Contact carrier to ensure delivery.</td>\n    <td style=\"white-space: nowrap\"><code>true</code></td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\">Issue</td>\n    <td style=\"white-space: nowrap\"><code>delivery_rescheduled</code></td>\n    <td>Delivery of package has been rescheduled.</td>\n    <td style=\"white-space: nowrap\"><code>false</code></td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\">Issue</td>\n    <td style=\"white-space: nowrap\"><code>location_inaccessible</code></td>\n    <td>Delivery location inaccessible to carrier. Contact carrier to ensure delivery.</td>\n    <td style=\"white-space: nowrap\"><code>true</code></td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\">Issue</td>\n    <td style=\"white-space: nowrap\"><code>notice_left</code></td>\n    <td>Carrier left notice during attempted delivery. Follow carrier instructions on notice.</td>\n    <td style=\"white-space: nowrap\"><code>true</code></td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\">Issue</td>\n    <td style=\"white-space: nowrap\"><code>package_damaged</code></td>\n    <td>Package has been damaged. Contact carrier for more details.</td>\n    <td style=\"white-space: nowrap\"><code>true</code></td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\">Issue</td>\n    <td style=\"white-space: nowrap\"><code>package_disposed</code></td>\n    <td>Package has been disposed.</td>\n    <td style=\"white-space: nowrap\"><code>false</code></td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\">Issue</td>\n    <td style=\"white-space: nowrap\"><code>package_held</code></td>\n    <td>Package held at carrier location. Contact carrier for more details.</td>\n    <td style=\"white-space: nowrap\"><code>true</code></td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\">Issue</td>\n    <td style=\"white-space: nowrap\"><code>package_lost</code></td>\n    <td>Package has been lost. Contact carrier for more details.</td>\n    <td style=\"white-space: nowrap\"><code>true</code></td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\">Issue</td>\n    <td style=\"white-space: nowrap\"><code>package_unclaimed</code></td>\n    <td>Package is unclaimed.</td>\n    <td style=\"white-space: nowrap\"><code>true</code></td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\">Issue</td>\n    <td style=\"white-space: nowrap\"><code>package_undeliverable</code></td>\n    <td>Package is not able to be delivered.</td>\n    <td style=\"white-space: nowrap\"><code>true</code></td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\">Issue</td>\n    <td style=\"white-space: nowrap\"><code>reschedule_delivery</code></td>\n    <td>Contact carrier to reschedule delivery.</td>\n    <td style=\"white-space: nowrap\"><code>true</code></td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\">Issue</td>\n    <td style=\"white-space: nowrap\"><code>other</code></td>\n    <td>Unrecognized carrier status.</td>\n    <td style=\"white-space: nowrap\"><code>false</code></td>\n  </tr>\n</table>\n<div class=\"back-to-top\" ><a href=\"#\" onclick=\"toTopLink()\">back to top</a></div>\n"
    },
    {
      "name": "Uploads",
      "description": "The uploads endpoint allows you to upload audience files that are then associated with a given campaign.\nAt this time, only CSV files are allowed. The API provides endpoints for creating uploads, uploading audience files,\nand marking uploaded files as ready for processing. The API also provides endpoints for downloading files that\ndescribe the results, both successful and not, of the processing.\n"
    },
    {
      "name": "URL Shortener",
      "description": "Lob's URL shortener allows you to generate unique short links, either with Lob's own domain or your own custom domains. Each custom link enables Lob to track mail individually and provide customers the relevant tracking data in their dashboard.\n\nWebhooks can be used to integrate Lob's URL Shortener scans into your omni channel marketing stratergy. See the <a href=\"#tag/Webhooks\">Webhooks</a> section of our documentation to learn how to enable the `letter.viewed`, `postcard.viewed` and `self_mailer.viewed` event notifications for your mail pieces.\n\nFurthermore, you can use our Retrieve endpoints to track the impact and engagement rate of links created. \n\n<div class=\"back-to-top\" ><a href=\"#\" onclick=\"toTopLink()\">back to top</a></div>\n"
    },
    {
      "name": "US Autocompletions",
      "description": "Given partial address information, this endpoint returns up to 10 address suggestions. <br> <div class=\"back-to-top\" ><a href=\"#\" onclick=\"toTopLink()\">back to top</a></div>\n## Autocompletion Test Env\nYour test API key does not autocomplete US addresses and is used to simulate behavior. With your test API key, requests with specific values for `address_prefix` return predetermined values. When `address_prefix` is set to:\n- `0 suggestions` - Returns no suggestions - `[PRIMARY NUMBER] s[uggestion]` - Returns a maximum of ten predefined suggested addresses.\n  `[PRIMARY NUMBER]` does not have to be a valid primary number when sending a test request.\n  Each additional letter in `suggestion` reduces the number of suggestions by one (e.g.\n  `1 su` returns 9 suggested addresses). `[PRIMARY NUMBER]` does not affect the number of\n  suggestions returned.\n\nCity and state filters work as expected and filter the list of predetermined suggested addresses.\nSee the `test` request & response examples under [Autocomplete Examples](#operation/autocompletion) within the \"Autocomplete a partial address\" section in US Autocompletions. <div class=\"back-to-top\" ><a href=\"#\" onclick=\"toTopLink()\">back to top</a></div>\n"
    },
    {
      "name": "US Verification Types",
      "description": "These are detailed definitions for various fields in the [US verification object](#operation/us_verification).\n\n<h3>ZIP Code Types - <code>components[zip_code_type]</code></h3>\n\n<table>\n  <tbody>\n    <tr>\n      <td style=\"white-space: nowrap\"><code>standard</code></td>\n      <td>The default ZIP code type. Used when none of the other types apply.</td>\n    </tr>\n    <tr>\n      <td><code>po_box</code></td>\n      <td>The ZIP code contains only PO Boxes.</td>\n    </tr>\n    <tr>\n      <td><code>unique</code></td>\n      <td>The ZIP code is uniquely assigned to a single organization (such as a government agency) that receives a large volume of mail.</td>\n    </tr>\n    <tr>\n      <td><code>military</code></td>\n      <td>The ZIP code contains military addresses.</td>\n    </tr>\n    <tr>\n      <td><i>empty string</i></td>\n      <td>A match could not be made with the provided inputs.</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3>Record Types - <code>components[record_type]</code></h3>\n\n<table>\n  <tbody>\n    <tr>\n      <td><code>street</code></td>\n      <td>The default address type.</td>\n    </tr>\n    <tr>\n      <td><code>highrise</code></td>\n      <td>The address is a commercial building, apartment complex, highrise, etc.</td>\n    </tr>\n    <tr>\n      <td><code>firm</code></td>\n      <td>The address is of an organizational entity which receives a minimum number of mailpieces per day.</td>\n    </tr>\n    <tr>\n      <td><code>po_box</code></td>\n      <td>The address is a PO Box.</td>\n    </tr>\n    <tr>\n      <td><code>rural_route</code></td>\n      <td>The address exists on a Rural Route. This is an older system of mail delivery which is still used in some parts of the country.</td>\n    </tr>\n    <tr>\n      <td style=\"white-space: nowrap\"><code>general_delivery</code></td>\n      <td>The address is part of the USPS General Delivery service, which allows individuals without permanent addresses to receive mail.</td>\n    </tr>\n    <tr>\n      <td><i>empty string</i></td>\n      <td>A match could not be made with the provided inputs.</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3>Carrier Route Types - <code>components[carrier_route_type]</code></h3>\n\n<table class=\"table-docs table-docs-code\">\n  <tbody>\n    <tr>\n      <td><code>city_delivery</code></td>\n      <td>The default carrier route type. Used when none of the other types apply.</td>\n    </tr>\n    <tr>\n      <td><code>rural_route</code></td>\n      <td>The carrier route is a Rural Route. This is an older system of mail delivery which is still used in some parts of the country.</td>\n    </tr>\n    <tr>\n      <td><code>highway_contract</code></td>\n      <td>The carrier route is a Highway Contract Route. This is an older system of mail delivery which is still used in some parts of the country.</td>\n    </tr>\n    <tr>\n      <td><code>po_box</code></td>\n      <td>The carrier route consists of PO Boxes.</td>\n    </tr>\n    <tr>\n      <td style=\"white-space: nowrap\"><code>general_delivery</code></td>\n      <td>The carrier route is part of the USPS General Delivery service, which allows individuals without permanent addresses to receive mail.</td>\n    </tr>\n    <tr>\n      <td><i>empty string</i></td>\n      <td>A match could not be made with the provided inputs.</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3>DPV Footnotes - <code>deliverability_analysis[dpv_footnotes]</code></h3>\n\n<table class=\"table-docs table-docs-code\">\n  <tbody>\n    <tr>\n      <td style=\"white-space: nowrap\"><code>AA</code></td>\n      <td>Some parts of the address (such as the street and ZIP code) are valid.</td>\n    </tr>\n    <tr>\n      <td><code>A1</code></td>\n      <td>The address is invalid based on given inputs.</td>\n    </tr>\n    <tr>\n      <td><code>BB</code></td>\n      <td>The address is deliverable.</td>\n    </tr>\n    <tr>\n      <td><code>CC</code></td>\n      <td>The address is deliverable by removing the provided secondary unit designator.</td>\n    </tr>\n    <tr>\n      <td><code>N1</code></td>\n      <td>The address is deliverable but is missing a secondary information (apartment, unit, etc).</td>\n    </tr>\n    <tr>\n      <td><code>F1</code></td>\n      <td>The address is a deliverable military address.</td>\n    </tr>\n    <tr>\n      <td><code>G1</code></td>\n      <td>The address is a deliverable General Delivery address. General Delivery is a USPS service which allows individuals without permanent addresses to receive mail.</td>\n    </tr>\n    <tr>\n      <td><code>U1</code></td>\n      <td>The address is a deliverable unique address. A unique ZIP code is assigned to a single organization (such as a government agency) that receives a large volume of mail.</td>\n    </tr>\n    <tr>\n      <td><code>M1</code></td>\n      <td>The primary number is missing.</td>\n    </tr>\n    <tr>\n      <td><code>M3</code></td>\n      <td>The primary number is invalid.</td>\n    </tr>\n    <tr>\n      <td><code>P1</code></td>\n      <td>PO Box, Rural Route, or Highway Contract box number is missing.</td>\n    </tr>\n    <tr>\n      <td><code>P3</code></td>\n      <td>PO Box, Rural Route, or Highway Contract box number is invalid.</td>\n    </tr>\n    <tr>\n      <td><code>R1</code></td>\n      <td>The address matched to a <a href=\"https://en.wikipedia.org/wiki/Commercial_mail_receiving_agency\" target=\"_blank\">CMRA</a> and private mailbox information is not present.</td>\n    </tr>\n    <tr>\n      <td><code>R7</code></td>\n      <td>The address matched to a Phantom Carrier Route (<code>carrier_route</code> of <code>R777</code>), which corresponds to physical addresses that are not eligible for delivery.</td>\n    </tr>\n    <tr>\n      <td><code>RR</code></td>\n      <td>The address matched to a <a href=\"https://en.wikipedia.org/wiki/Commercial_mail_receiving_agency\" target=\"_blank\">CMRA</a> and private mailbox information is present.</td>\n    </tr>\n  </tbody>\n</table>\n<div class=\"back-to-top\" ><a href=\"#\" onclick=\"toTopLink()\">back to top</a></div>\n"
    },
    {
      "name": "US Verifications",
      "description": "Validate, automatically correct, and standardize the addresses in your\naddress book based on USPS's <a href=\"https://postalpro.usps.com/certifications/cass\" target=\"_blank\">Coding Accuracy Support System (CASS)</a>.\n<br>\n<div class=\"back-to-top\" ><a href=\"#\" onclick=\"toTopLink()\">back to top</a></div>\n\n## US Verifications Test Env\n\nWhen verifying US addresses, you'll likely want to test against a wide array of addresses to\nensure you're handling responses correctly. With your test API key, requests that use specific\nvalues for `address` or `primary_line` and (if using `primary_line`) an arbitrary five digit\nnumber for `zip_code` (e.g. \"11111\") let you explore the responses to many types of addresses:\n\n<table>\n  <tr>\n    <th style=\"white-space: nowrap\">ADDRESS TYPE FOR SAMPLE RESPONSE</th>\n    <th style=\"white-space: nowrap\">DELIVERABILITY</th>\n    <th style=\"white-space: nowrap\">SET <code>primary_line</code> OR <code>address</code> TO</th>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\">Commercial highrise</td>\n    <td style=\"white-space: nowrap\"><code>deliverable</code></td>\n    <td style=\"white-space: nowrap\"><code>commercial highrise</code></td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\">Residential highrise</td>\n    <td style=\"white-space: nowrap\"><code>deliverable</code></td>\n    <td style=\"white-space: nowrap\"><code>residential highrise</code></td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\">Residential house</td>\n    <td style=\"white-space: nowrap\"><code>deliverable</code></td>\n    <td style=\"white-space: nowrap\"><code>residential house</code></td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\">PO Box</td>\n    <td style=\"white-space: nowrap\"><code>deliverable</code></td>\n    <td style=\"white-space: nowrap\"><code>po box</code></td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\">Rural route</td>\n    <td style=\"white-space: nowrap\"><code>deliverable</code></td>\n    <td style=\"white-space: nowrap\"><code>rural route</code></td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\">Puerty Rico address w/ urbanization</td>\n    <td style=\"white-space: nowrap\"><code>deliverable</code></td>\n    <td style=\"white-space: nowrap\"><code>puerto rico</code></td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\">Military address</td>\n    <td style=\"white-space: nowrap\"><code>deliverable</code></td>\n    <td style=\"white-space: nowrap\"><code>military</code></td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\">Department of state</td>\n    <td style=\"white-space: nowrap\"><code>deliverable</code></td>\n    <td style=\"white-space: nowrap\"><code>department of state</code></td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\">Generic deliverable</td>\n    <td style=\"white-space: nowrap\"><code>deliverable</code></td>\n    <td style=\"white-space: nowrap\"><code>deliverable</code></td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\">Missing a suite number</td>\n    <td style=\"white-space: nowrap\"><code>deliverable_missing_unit</code></td>\n    <td style=\"white-space: nowrap\"><code>missing unit</code></td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\">Suite number doesn't exist</td>\n    <td style=\"white-space: nowrap\"><code>deliverable_incorrect_unit</code></td>\n    <td style=\"white-space: nowrap\"><code>incorrect unit</code></td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\">Residential house with unnecessary suite number</td>\n    <td style=\"white-space: nowrap\"><code>deliverable_unnecessary_unit</code></td>\n    <td style=\"white-space: nowrap\"><code>unnecessary unit</code></td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\">Undeliverable and block matched</td>\n    <td style=\"white-space: nowrap\"><code>undeliverable</code></td>\n    <td style=\"white-space: nowrap\"><code>undeliverable block match</code></td>\n  </tr>\n  <tr>\n    <td style=\"white-space: nowrap\">Undeliverable and no block matched</td>\n    <td style=\"white-space: nowrap\"><code>undeliverable</code></td>\n    <td style=\"white-space: nowrap\"><code>undeliverable no match</code></td>\n  </tr>\n</table>\n\nSee the `test` request & response examples under [US Verification Examples](#operation/us_verification) within the\n\"Verify a US or US territory address\" section in US Verifications.\n\nYou can rely on the response from these examples generally matching the response you'd see in the live environment with an\naddress of that type (excluding the `recipient` field).\n\nThe test API key does not perform any verification, automatic correction, or standardization for addresses. If you wish to\ntry these features out, use our <a href=\"https://lob.com/address-verification\" target=\"_blank\">live demo</a> or the free plan (see <a href=\"https://lob.com/pricing/address-verification\" target=\"_blank\">our pricing</a> for details).\n<div class=\"back-to-top\" ><a href=\"#\" onclick=\"toTopLink()\">back to top</a></div>\n"
    },
    {
      "name": "Versioning and Changelog",
      "description": "### API Versioning\n\nWhen backwards-incompatible changes are made to the API, a new dated version\nis released. The latest version of the API is version **2020-02-11**. \nAll versions prior to, and inclusive of, 2019-02-11 have been sunsetted. You can\nview your version and upgrade to the latest version in your\n<a href=\"https://dashboard.lob.com/settings/api-keys\" target=\"_blank\">Dashboard Settings</a>. You will\nonly need to specify a version if you would like to test a newer version of\nthe API without doing a full upgrade. The API will return an error if a\nversion older than your current one is passed in.\n\n### Example Request\n\n```bash\n  curl https://api.lob.com/v1/addresses \\\n    -u test_0dc8d51e0acffcb1880e0f19c79b2f5b0cc: \\\n    -H \"Lob-Version: 2020-02-11\"\n```\n\n### Specification Versioning\nYou might be wondering why our API and specification use different versioning schemes.\nLob's API predates our specification and follows the <a href=\"https://stripe.com/blog/api-versioning\" target=\"_blank\">Stripe versioning</a>\napproach. This works well to manage backwards-incompatible changes to our API.\n\nFor our API specification (used to create this documentation), we've chosen <a href=\"https://semver.org/\" target=\"_blank\">semantic\nversioning</a>. This versioning reflects the backward-compatible\nchanges that do not require a versioning of Lob's API.\n\nLob's API specification will be used to generate artifacts like documentation, client SDKs,\nand other developer tooling. Semantic versioning of our specification will inform how we\nversion those artifacts like SDKs. It is helpful to know the version of a specification\nused to produce an artifact in order reference the specification release notes.\n\n\n### Changelog\n <a href=\"https://app.getbeamer.com/lob/en?all\" target=\"_blank\">View our Changelog here.</a>\n"
    },
    {
      "name": "Webhooks",
      "description": "Webhooks are an easy way to get notifications on events happening asynchronously\nwithin Lob's architecture. For example, when a postcard gets a \"Processed For\nDelivery\" tracking event, an event object of type `postcard.processed_for_delivery`\nwill be created. If you are subscribed to that event type in that Environment\n(Test vs. Live), Lob will send that event to any URLs you've specified via an\nHTTP POST request. In Live mode, you can only have as many webhooks as allotted\nin your current <a href=\"https://dashboard.lob.com/#/settings/editions\" target=\"_blank\">Print & Mail Edition</a>.\nThere is no limit in Test mode.\nYou can view and create <a href=\"https://dashboard.lob.com/#/webhooks\" target=\"_blank\">webhooks</a> on the\nLob Dashboard, as well as view your <a href=\"https://dashboard.lob.com/#/events\" target=\"_blank\">events</a>.\nSee our <a href=\"https://help.lob.com/print-and-mail/getting-data-and-results/using-webhooks\" target=\"_blank\">Webhooks Integration Guide</a> for more\ndetails on how to integrate. Please see the full list of event types available for\nsubscription here.\n<div class=\"back-to-top\" ><a href=\"#\" onclick=\"toTopLink()\">back to top</a></div>\n"
    },
    {
      "name": "Zip Lookups",
      "description": "Find a list of cities, states and associated information about a US ZIP code. <div class=\"back-to-top\" ><a href=\"#\" onclick=\"toTopLink()\">back to top</a></div>\n"
    }
  ]
}