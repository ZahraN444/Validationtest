{
  "AuthenticateEndpointsWith": [
    {
      "AuthenticationToApply": {
        "AuthenticationSchemeName": "CustomAuth"
      },
      "OptionType": "Single",
      "Name": "JustCustomAuth",
      "Description": ""
    },
    {
      "AuthenticationToApply": {
        "AuthenticationSchemeName": "OAuthBearerToken"
      },
      "OptionType": "Single",
      "Name": "JustOAuthBearerToken",
      "Description": ""
    },
    {
      "AuthenticationsToApply": [
        {
          "AuthenticationSchemeName": "basicAuth"
        },
        {
          "AuthenticationSchemeName": "apiKey"
        },
        {
          "AuthenticationSchemeName": "apiHeader"
        }
      ],
      "OptionType": "Group",
      "Name": "BasicAuthAndApiKeyAndApiHeader",
      "Description": "My hello tttesting"
    }
  ],
  "Name": "MultiAuth-Sample",
  "BaseUri": "http://localhost:3000",
  "ServerConfiguration": {
    "UseParent": false,
    "DefaultEnvironment": "testing",
    "DefaultServer": "default",
    "Environments": [
      {
        "Name": "production",
        "Servers": [
          {
            "Name": "default",
            "Url": "http://apimatic.hopto.org:{suites}"
          },
          {
            "Name": "auth",
            "Url": "http://apimaticauth.hopto.org:3000"
          }
        ]
      },
      {
        "Name": "testing",
        "Servers": [
          {
            "Name": "default",
            "Url": "http://localhost:3000"
          },
          {
            "Name": "auth",
            "Url": "http://localhost:3000/oauth2/auth-server"
          }
        ]
      }
    ],
    "Parameters": [
      {
        "Optional": true,
        "AnyOfTypes": [],
        "AnyOfCasesMeta": [],
        "OneOfTypes": [],
        "OneOfCasesMeta": [],
        "NotTypes": [],
        "NotCasesMeta": [],
        "Type": "String",
        "Constant": false,
        "IsStream": false,
        "IsAttribute": false,
        "Examples": [],
        "Attributes": {},
        "Nullable": false,
        "NullableArrayItems": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "IsArray": false,
        "IsMap": false,
        "IsArrayOfMap": false,
        "Deprecated": false,
        "Name": "port",
        "Description": "",
        "DefaultValue": "80"
      },
      {
        "Optional": true,
        "AnyOfTypes": [],
        "AnyOfCasesMeta": [],
        "OneOfTypes": [],
        "OneOfCasesMeta": [],
        "NotTypes": [],
        "NotCasesMeta": [],
        "Type": "SuiteCode",
        "Constant": false,
        "IsStream": false,
        "IsAttribute": false,
        "Examples": [],
        "Nullable": false,
        "NullableArrayItems": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "IsArray": false,
        "IsMap": false,
        "IsArrayOfMap": false,
        "Deprecated": false,
        "Name": "suites",
        "Description": "",
        "DefaultValue": "1"
      }
    ]
  },
  "ImageUri": "",
  "Description": "API for Markdown Notes app.",
  "Version": "1.0",
  "Contact": {},
  "AdditionalHeaders": [
    {
      "Name": "accessToken",
      "Description": "",
      "DefaultValue": ""
    }
  ],
  "Authentication": {
    "Type": "Basic",
    "AuthType": "Basic",
    "Parameters": [],
    "Scopes": [],
    "ParamFormats": {}
  },
  "AuthenticationSchemes": {
    "basicAuth": {
      "Description": "Basic authentication requires a username and a password to access the protected resources.",
      "AuthenticationType": "Basic",
      "Parameters": []
    },
    "apiKey": {
      "Description": "This authentication requires custom query parameters to be passed along for authorization.",
      "AuthenticationType": "CustomQuery",
      "Parameters": [
        {
          "Name": "token",
          "Description": "",
          "DefaultValue": ""
        },
        {
          "Name": "api-key",
          "Description": "",
          "DefaultValue": ""
        }
      ]
    },
    "apiHeader": {
      "Description": "This authentication requires custom header parameters to be passed along for authorization.",
      "AuthenticationType": "CustomHeader",
      "Parameters": [
        {
          "Name": "token",
          "Description": "",
          "DefaultValue": ""
        },
        {
          "Name": "api-key",
          "Description": "",
          "DefaultValue": ""
        }
      ]
    },
    "OAuthCCG": {
      "Description": "A grant suitable for a confidential client that is requesting access to the protected resources under its control.",
      "AuthenticationType": "OAuth_v2_TwoLeggedFlow_ClientCredentials",
      "Parameters": [],
      "OAuthInfo": {
        "AccessTokenUrl": "/request_token",
        "OAuth2Server": "auth",
        "Scopes": [],
        "ParamFormats": {}
      }
    },
    "OAuthACG": {
      "Description": "A rredirection-based flow optimized for confidential clients. The client must be capable of interacting with the resource owner's user-agent and capable of receiving incoming requests (via redirection) from the authorization server.",
      "AuthenticationType": "OAuth_v2_WebServerFlow",
      "Parameters": [],
      "OAuthInfo": {
        "AuthorizationUrl": "/oauth/authorize",
        "AccessTokenUrl": "/oauth2/non-auth-server/token",
        "OAuth2Server": "",
        "Scopes": [
          {
            "Name": "read_scope",
            "Value": "file_requests.read",
            "Description": "Read requests for files"
          }
        ],
        "ParamFormats": {}
      }
    },
    "OAuthROPCG": {
      "Description": "A grant suitable for clients capable of obtaining resource owner's credentials. The resource owner has a trust relationship with the client, such as the device operating system or a highly privileged application.",
      "AuthenticationType": "OAuth_v2_Resource_Owner_Password",
      "Parameters": [],
      "OAuthInfo": {
        "AccessTokenUrl": "/oauth2/non-auth-server/token",
        "Scopes": [],
        "ParamFormats": {}
      }
    },
    "OAuthBearerToken": {
      "Description": "It authenticates requests via tokens that are generated by the server in response to a login request so it requires a Bearer token value in order to proceed with making any API calls.",
      "AuthenticationType": "OAuth_v2_BearerToken",
      "Parameters": [],
      "OAuthInfo": {
        "Scopes": [],
        "ParamFormats": {}
      }
    },
    "CustomAuth": {
      "Description": "It requires a placeholder implementation to be filled in for authenticating the requests.",
      "AuthenticationType": "CustomAuth",
      "Parameters": []
    }
  },
  "Endpoints": [
    {
      "AuthenticateEndpointWith": [
        {
          "AuthenticationToApply": {
            "AuthenticationSchemeName": "CustomAuth"
          },
          "OptionType": "Single",
          "Name": "JustCustomAuth",
          "Description": ""
        }
      ],
      "Name": "Custom Authentication",
      "HTTPMethod": "GET",
      "Group": "Authentication",
      "RequiresAuthentication": true,
      "Route": "/auth/customAuthentication",
      "Responses": {},
      "Response": {
        "Optional": false,
        "AnyOfTypes": [],
        "AnyOfCasesMeta": [],
        "OneOfTypes": [],
        "OneOfCasesMeta": [],
        "NotTypes": [],
        "NotCasesMeta": [],
        "Type": "String",
        "Constant": false,
        "IsStream": false,
        "IsAttribute": false,
        "Examples": [],
        "Attributes": {},
        "Nullable": false,
        "NullableArrayItems": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "IsArray": false,
        "IsMap": false,
        "IsArrayOfMap": false,
        "Deprecated": false,
        "Name": "response",
        "DefaultValue": ""
      },
      "HasOptionalQueryParams": false,
      "HasOptionalFieldParams": false,
      "CollectParameters": false,
      "RequiredScopes": [],
      "Parameters": [],
      "Errors": [],
      "TestCases": [
        {
          "Name": "custom Authentication Test",
          "Enabled": true,
          "ShouldPass": true,
          "InputParameters": [],
          "ExpectedStatus": "200",
          "ExpectedHeaders": [],
          "ExpectedHeadersAllowExtra": true,
          "ExpectedBody": "You've passed the test!",
          "ExpectedBodyMatchMode": "RAW",
          "ExpectedArrayOrderedMatching": false,
          "ExpectedArrayCheckCount": false,
          "ResponseMatchSchema": true
        }
      ],
      "WrapBodyInObject": false,
      "Deprecated": false,
      "XmlRequest": false,
      "XmlResponse": false,
      "ErrorTemplates": {},
      "SkipAdditionalHeaders": false
    },
    {
      "AuthenticateEndpointWith": [
        {
          "AuthenticationToApply": {
            "AuthenticationSchemeName": "OAuthBearerToken"
          },
          "OptionType": "Single",
          "Name": "JustOAuthBearerToken",
          "Description": ""
        }
      ],
      "Name": "OAuth Bearer Token",
      "HTTPMethod": "GET",
      "Group": "Authentication",
      "RequiresAuthentication": true,
      "Route": "/auth/oauth2",
      "Responses": {},
      "Response": {
        "Optional": false,
        "AnyOfTypes": [],
        "AnyOfCasesMeta": [],
        "OneOfTypes": [],
        "OneOfCasesMeta": [],
        "NotTypes": [],
        "NotCasesMeta": [],
        "Type": "String",
        "Constant": false,
        "IsStream": false,
        "IsAttribute": false,
        "Examples": [],
        "Attributes": {},
        "Nullable": false,
        "NullableArrayItems": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "IsArray": false,
        "IsMap": false,
        "IsArrayOfMap": false,
        "Deprecated": false,
        "Name": "response",
        "DefaultValue": ""
      },
      "HasOptionalQueryParams": false,
      "HasOptionalFieldParams": false,
      "CollectParameters": false,
      "RequiredScopes": [],
      "Parameters": [],
      "Errors": [],
      "TestCases": [
        {
          "Name": "OAuth2Test",
          "Description": "",
          "Enabled": true,
          "ShouldPass": true,
          "InputParameters": [],
          "ExpectedStatus": "200",
          "ExpectedHeaders": [],
          "ExpectedHeadersAllowExtra": true,
          "ExpectedBody": "You've passed the test!",
          "ExpectedBodyMatchMode": "RAW",
          "ExpectedArrayOrderedMatching": false,
          "ExpectedArrayCheckCount": false,
          "ResponseMatchSchema": false
        }
      ],
      "WrapBodyInObject": false,
      "Deprecated": false,
      "XmlRequest": false,
      "XmlResponse": false,
      "ErrorTemplates": {},
      "SkipAdditionalHeaders": false
    },
    {
      "AuthenticateEndpointWith": [
        {
          "AuthenticationToApply": {
            "AuthenticationSchemeName": "OAuthCCG"
          },
          "OptionType": "Single",
          "Name": "JustOAuthCCG",
          "Description": ""
        }
      ],
      "Name": "OAuth Client Credentials Grant",
      "HTTPMethod": "GET",
      "Group": "Authentication",
      "RequiresAuthentication": true,
      "Route": "/oauth2/non-auth-server/status",
      "Responses": {},
      "Response": {
        "Optional": false,
        "AnyOfTypes": [],
        "AnyOfCasesMeta": [],
        "OneOfTypes": [],
        "OneOfCasesMeta": [],
        "NotTypes": [],
        "NotCasesMeta": [],
        "Type": "ServiceStatus",
        "Constant": false,
        "IsStream": false,
        "IsAttribute": false,
        "Examples": [],
        "Nullable": false,
        "NullableArrayItems": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "IsArray": false,
        "IsMap": false,
        "IsArrayOfMap": false,
        "Deprecated": false,
        "Name": "response",
        "DefaultValue": ""
      },
      "HasOptionalQueryParams": false,
      "HasOptionalFieldParams": false,
      "CollectParameters": false,
      "RequiredScopes": [],
      "Parameters": [],
      "Errors": [],
      "TestCases": [
        {
          "Name": "check service status",
          "Enabled": true,
          "ShouldPass": true,
          "InputParameters": [],
          "ExpectedStatus": "200",
          "ExpectedHeaders": [],
          "ExpectedHeadersAllowExtra": true,
          "ExpectedBodyMatchMode": "NONE",
          "ExpectedArrayOrderedMatching": false,
          "ExpectedArrayCheckCount": false,
          "ResponseMatchSchema": true
        }
      ],
      "WrapBodyInObject": false,
      "Deprecated": false,
      "XmlRequest": false,
      "XmlResponse": false,
      "ErrorTemplates": {},
      "SkipAdditionalHeaders": false
    },
    {
      "AuthenticateEndpointWith": [
        {
          "AuthenticationsToApply": [
            {
              "AuthenticationSchemeName": "OAuthACG"
            },
            {
              "AuthenticationSchemeName": "OAuthROPCG"
            }
          ],
          "OptionType": "Group",
          "Name": "OAuth2 combinations",
          "Description": ""
        }
      ],
      "Name": "OAuth Authorization Grant",
      "HTTPMethod": "GET",
      "Group": "Authentication",
      "RequiresAuthentication": true,
      "Route": "/oauth2/non-auth-server/user",
      "Responses": {},
      "Response": {
        "Optional": false,
        "AnyOfTypes": [],
        "AnyOfCasesMeta": [],
        "OneOfTypes": [],
        "OneOfCasesMeta": [],
        "NotTypes": [],
        "NotCasesMeta": [],
        "Type": "User",
        "Constant": false,
        "IsStream": false,
        "IsAttribute": false,
        "Examples": [],
        "Nullable": false,
        "NullableArrayItems": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "IsArray": false,
        "IsMap": false,
        "IsArrayOfMap": false,
        "Deprecated": false,
        "Name": "response",
        "DefaultValue": ""
      },
      "HasOptionalQueryParams": false,
      "HasOptionalFieldParams": false,
      "CollectParameters": false,
      "RequiredScopes": [],
      "Parameters": [],
      "Errors": [],
      "TestCases": [],
      "WrapBodyInObject": false,
      "Deprecated": false,
      "XmlRequest": false,
      "XmlResponse": false,
      "ErrorTemplates": {},
      "SkipAdditionalHeaders": false
    },
    {
      "AuthenticateEndpointWith": [
        {
          "AuthenticationToApply": {
            "AuthenticationSchemeName": "apiKey"
          },
          "OptionType": "Single",
          "Name": "JustApiKey",
          "Description": ""
        },
        {
          "AuthenticationToApply": {
            "AuthenticationSchemeName": "apiHeader"
          },
          "OptionType": "Single",
          "Name": "JustApiHeader",
          "Description": ""
        }
      ],
      "Name": "Custom Query Or Header Authentication",
      "HTTPMethod": "GET",
      "Group": "Authentication",
      "RequiresAuthentication": true,
      "Route": "/auth/customQueryOrHeaderParam",
      "Responses": {},
      "Response": {
        "Optional": false,
        "AnyOfTypes": [],
        "AnyOfCasesMeta": [],
        "OneOfTypes": [],
        "OneOfCasesMeta": [],
        "NotTypes": [],
        "NotCasesMeta": [],
        "Type": "String",
        "Constant": false,
        "IsStream": false,
        "IsAttribute": false,
        "Examples": [],
        "Attributes": {},
        "Nullable": false,
        "NullableArrayItems": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "IsArray": false,
        "IsMap": false,
        "IsArrayOfMap": false,
        "Deprecated": false,
        "Name": "response",
        "DefaultValue": ""
      },
      "HasOptionalQueryParams": false,
      "HasOptionalFieldParams": false,
      "CollectParameters": false,
      "RequiredScopes": [],
      "Parameters": [],
      "Errors": [],
      "TestCases": [
        {
          "Name": "custom query param test",
          "Enabled": true,
          "ShouldPass": true,
          "InputParameters": [],
          "ExpectedStatus": "200",
          "ExpectedHeaders": [],
          "ExpectedHeadersAllowExtra": true,
          "ExpectedBody": "You've passed the test!",
          "ExpectedBodyMatchMode": "RAW",
          "ExpectedArrayOrderedMatching": false,
          "ExpectedArrayCheckCount": false,
          "ResponseMatchSchema": true
        }
      ],
      "WrapBodyInObject": false,
      "Deprecated": false,
      "XmlRequest": false,
      "XmlResponse": false,
      "ErrorTemplates": {},
      "SkipAdditionalHeaders": false
    },
    {
      "AuthenticateEndpointWith": [
        {
          "AuthenticationsToApply": [
            {
              "AuthenticationSchemeName": "basicAuth"
            },
            {
              "AuthenticationSchemeName": "apiKey"
            },
            {
              "AuthenticationSchemeName": "apiHeader"
            }
          ],
          "OptionType": "Group",
          "Name": "BasicAuthAndApiKeyAndApiHeader",
          "Description": ""
        }
      ],
      "Name": "Basic Auth And Api/Header Auth",
      "HTTPMethod": "GET",
      "Group": "Authentication",
      "RequiresAuthentication": true,
      "Route": "/auth/basicAndApiKeyAndApiHeader",
      "Responses": {},
      "Response": {
        "Optional": false,
        "AnyOfTypes": [],
        "AnyOfCasesMeta": [],
        "OneOfTypes": [],
        "OneOfCasesMeta": [],
        "NotTypes": [],
        "NotCasesMeta": [],
        "Type": "String",
        "Constant": false,
        "IsStream": false,
        "IsAttribute": false,
        "Examples": [],
        "Attributes": {},
        "Nullable": false,
        "NullableArrayItems": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "IsArray": false,
        "IsMap": false,
        "IsArrayOfMap": false,
        "Deprecated": false,
        "Name": "response",
        "DefaultValue": ""
      },
      "HasOptionalQueryParams": false,
      "HasOptionalFieldParams": false,
      "CollectParameters": false,
      "RequiredScopes": [],
      "Parameters": [],
      "Errors": [],
      "TestCases": [
        {
          "Name": "BasicAuthAndApiKeyAndApiHeader",
          "Description": "",
          "Enabled": true,
          "ShouldPass": true,
          "InputParameters": [],
          "ExpectedStatus": "200",
          "ExpectedHeaders": [],
          "ExpectedHeadersAllowExtra": true,
          "ExpectedBody": "You've passed the test!",
          "ExpectedBodyMatchMode": "RAW",
          "ExpectedArrayOrderedMatching": false,
          "ExpectedArrayCheckCount": false,
          "ResponseMatchSchema": false
        }
      ],
      "WrapBodyInObject": false,
      "Deprecated": false,
      "XmlRequest": false,
      "XmlResponse": false,
      "ErrorTemplates": {},
      "SkipAdditionalHeaders": false
    },
    {
      "AuthenticateEndpointWith": [
        {
          "AuthenticationToApply": {
            "AuthenticationSchemeName": "OAuthCCG"
          },
          "OptionType": "Single",
          "Name": "JustOAuthCCG",
          "Description": ""
        },
        {
          "AuthenticationToApply": {
            "AuthenticationSchemeName": "OAuthBearerToken"
          },
          "OptionType": "Single",
          "Name": "JustOAuthBearerToken",
          "Description": ""
        }
      ],
      "Name": "OAuth Grant Types OR Combinations",
      "Description": "This endpoint tests or combinations of OAuth types",
      "HTTPMethod": "GET",
      "Group": "Authentication",
      "RequiresAuthentication": true,
      "Route": "/oauth2/oauthOrCombination",
      "Responses": {},
      "Response": {
        "Optional": false,
        "AnyOfTypes": [],
        "AnyOfCasesMeta": [],
        "OneOfTypes": [],
        "OneOfCasesMeta": [],
        "NotTypes": [],
        "NotCasesMeta": [],
        "Type": "String",
        "Constant": false,
        "IsStream": false,
        "IsAttribute": false,
        "Examples": [],
        "Attributes": {},
        "Nullable": false,
        "NullableArrayItems": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "IsArray": false,
        "IsMap": false,
        "IsArrayOfMap": false,
        "Deprecated": false,
        "Name": "response",
        "DefaultValue": ""
      },
      "HasOptionalQueryParams": false,
      "HasOptionalFieldParams": false,
      "CollectParameters": false,
      "RequiredScopes": [],
      "Parameters": [],
      "Errors": [],
      "TestCases": [
        {
          "Name": "OAuthOrCombinationTest",
          "Description": "",
          "Enabled": true,
          "ShouldPass": true,
          "InputParameters": [],
          "ExpectedStatus": "200",
          "ExpectedHeaders": [],
          "ExpectedHeadersAllowExtra": true,
          "ExpectedBody": "You've passed the test!",
          "ExpectedBodyMatchMode": "RAW",
          "ExpectedArrayOrderedMatching": false,
          "ExpectedArrayCheckCount": false,
          "ResponseMatchSchema": false
        }
      ],
      "WrapBodyInObject": false,
      "Deprecated": false,
      "XmlRequest": false,
      "XmlResponse": false,
      "ErrorTemplates": {},
      "SkipAdditionalHeaders": false
    },
    {
      "AuthenticateEndpointWith": [],
      "Name": "Multiple Auth Combination",
      "Description": "This endpoint uses globally applied auth which is a hypothetical scneraio but covers the worst case.",
      "HTTPMethod": "GET",
      "Group": "Authentication",
      "RequiresAuthentication": true,
      "Route": "/auth/multipleAuthCombination",
      "Responses": {},
      "Response": {
        "Optional": false,
        "AnyOfTypes": [],
        "AnyOfCasesMeta": [],
        "OneOfTypes": [],
        "OneOfCasesMeta": [],
        "NotTypes": [],
        "NotCasesMeta": [],
        "Type": "String",
        "Constant": false,
        "IsStream": false,
        "IsAttribute": false,
        "Examples": [],
        "Attributes": {},
        "Nullable": false,
        "NullableArrayItems": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "IsArray": false,
        "IsMap": false,
        "IsArrayOfMap": false,
        "Deprecated": false,
        "Name": "response",
        "DefaultValue": ""
      },
      "HasOptionalQueryParams": false,
      "HasOptionalFieldParams": false,
      "CollectParameters": false,
      "RequiredScopes": [],
      "Parameters": [],
      "Errors": [],
      "TestCases": [
        {
          "Name": "MultipleAuthOrCombinationTest",
          "Description": "",
          "Enabled": true,
          "ShouldPass": true,
          "InputParameters": [],
          "ExpectedStatus": "200",
          "ExpectedHeaders": [],
          "ExpectedHeadersAllowExtra": true,
          "ExpectedBody": "You've passed the test!",
          "ExpectedBodyMatchMode": "RAW",
          "ExpectedArrayOrderedMatching": false,
          "ExpectedArrayCheckCount": false,
          "ResponseMatchSchema": false
        }
      ],
      "WrapBodyInObject": false,
      "ExternalDocumentation": {
        "Url": "http://swagger.io/endpoint1",
        "Description": "Swagger URL Endpoint 1"
      },
      "Deprecated": false,
      "XmlRequest": false,
      "XmlResponse": false,
      "ErrorTemplates": {},
      "SkipAdditionalHeaders": false
    },
    {
      "AuthenticateEndpointWith": [],
      "Name": "No Auth",
      "Description": "This endpoint does not use auth.",
      "HTTPMethod": "GET",
      "Group": "Authentication",
      "RequiresAuthentication": false,
      "Route": "/auth/noAuth",
      "Responses": {},
      "Response": {
        "Optional": false,
        "AnyOfTypes": [],
        "AnyOfCasesMeta": [],
        "OneOfTypes": [],
        "OneOfCasesMeta": [],
        "NotTypes": [],
        "NotCasesMeta": [],
        "Type": "String",
        "Constant": false,
        "IsStream": false,
        "IsAttribute": false,
        "Examples": [],
        "Attributes": {},
        "Nullable": false,
        "NullableArrayItems": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "IsArray": false,
        "IsMap": false,
        "IsArrayOfMap": false,
        "Deprecated": false,
        "Name": "response",
        "DefaultValue": ""
      },
      "HasOptionalQueryParams": false,
      "HasOptionalFieldParams": false,
      "CollectParameters": false,
      "RequiredScopes": [],
      "Parameters": [
        {
          "ParamFormat": "Query",
          "AutoGeneratedOrModified": false,
          "Optional": false,
          "AnyOfTypes": [],
          "AnyOfCasesMeta": [],
          "OneOfTypes": [],
          "OneOfCasesMeta": [],
          "NotTypes": [],
          "NotCasesMeta": [],
          "Type": "Boolean",
          "IsSdlNativeType": true,
          "Constant": true,
          "IsStream": true,
          "IsAttribute": false,
          "Examples": [],
          "Nullable": true,
          "NullableArrayItems": false,
          "ReadOnly": false,
          "WriteOnly": false,
          "IsArray": false,
          "IsMap": false,
          "IsArrayOfMap": false,
          "Deprecated": false,
          "Name": "array",
          "Description": "",
          "DefaultValue": "true"
        }
      ],
      "Errors": [],
      "TestCases": [],
      "WrapBodyInObject": false,
      "ExternalDocumentation": {
        "Url": "http://swagger.io/endpoint1",
        "Description": "Swagger URL Endpoint 1"
      },
      "Deprecated": true,
      "DeprecationDetails": {
        "DeprecatedInVersion": "0.0.1-alpha",
        "Message": "   You should not use this method as it requires no auth and can bring security issues to the server and api call itself!!"
      },
      "XmlRequest": false,
      "XmlResponse": false,
      "ErrorTemplates": {},
      "SkipAdditionalHeaders": false
    }
  ],
  "EndpointGroups": [
    {
      "Name": "Authentication",
      "Description": ""
    }
  ],
  "CustomTypes": [
    {
      "Name": "SuiteCode",
      "ImplementationType": "Enumeration",
      "Description": "A integer based enum representing a Suite in a game of cards",
      "Fields": [
        {
          "Optional": false,
          "AnyOfTypes": [],
          "AnyOfCasesMeta": [],
          "OneOfTypes": [],
          "OneOfCasesMeta": [],
          "NotTypes": [],
          "NotCasesMeta": [],
          "Type": "Number",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Examples": [],
          "Attributes": {},
          "Nullable": false,
          "NullableArrayItems": false,
          "ReadOnly": false,
          "WriteOnly": false,
          "IsArray": false,
          "IsMap": false,
          "IsArrayOfMap": false,
          "Deprecated": false,
          "Name": "Hearts",
          "Description": "",
          "DefaultValue": "1"
        },
        {
          "Optional": false,
          "AnyOfTypes": [],
          "AnyOfCasesMeta": [],
          "OneOfTypes": [],
          "OneOfCasesMeta": [],
          "NotTypes": [],
          "NotCasesMeta": [],
          "Type": "Number",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Examples": [],
          "Attributes": {},
          "Nullable": false,
          "NullableArrayItems": false,
          "ReadOnly": false,
          "WriteOnly": false,
          "IsArray": false,
          "IsMap": false,
          "IsArrayOfMap": false,
          "Deprecated": false,
          "Name": "Spades",
          "Description": "",
          "DefaultValue": "2"
        },
        {
          "Optional": false,
          "AnyOfTypes": [],
          "AnyOfCasesMeta": [],
          "OneOfTypes": [],
          "OneOfCasesMeta": [],
          "NotTypes": [],
          "NotCasesMeta": [],
          "Type": "Number",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Examples": [],
          "Attributes": {},
          "Nullable": false,
          "NullableArrayItems": false,
          "ReadOnly": false,
          "WriteOnly": false,
          "IsArray": false,
          "IsMap": false,
          "IsArrayOfMap": false,
          "Deprecated": false,
          "Name": "Clubs",
          "Description": "",
          "DefaultValue": "3"
        },
        {
          "Optional": false,
          "AnyOfTypes": [],
          "AnyOfCasesMeta": [],
          "OneOfTypes": [],
          "OneOfCasesMeta": [],
          "NotTypes": [],
          "NotCasesMeta": [],
          "Type": "Number",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Examples": [],
          "Attributes": {},
          "Nullable": false,
          "NullableArrayItems": false,
          "ReadOnly": false,
          "WriteOnly": false,
          "IsArray": false,
          "IsMap": false,
          "IsArrayOfMap": false,
          "Deprecated": false,
          "Name": "Diamonds",
          "Description": "",
          "DefaultValue": "4"
        }
      ],
      "ExampleValues": [],
      "Deprecated": false,
      "IsXmlType": false
    },
    {
      "Name": "ServiceStatus",
      "ImplementationType": "Structure",
      "Fields": [
        {
          "Optional": true,
          "AnyOfTypes": [],
          "AnyOfCasesMeta": [],
          "OneOfTypes": [],
          "OneOfCasesMeta": [],
          "NotTypes": [],
          "NotCasesMeta": [],
          "Type": "String",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Examples": [],
          "Attributes": {},
          "Nullable": false,
          "NullableArrayItems": false,
          "ReadOnly": false,
          "WriteOnly": false,
          "IsArray": false,
          "IsMap": false,
          "IsArrayOfMap": false,
          "Deprecated": false,
          "Name": "app",
          "Description": "",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "AnyOfTypes": [],
          "AnyOfCasesMeta": [],
          "OneOfTypes": [],
          "OneOfCasesMeta": [],
          "NotTypes": [],
          "NotCasesMeta": [],
          "Type": "String",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Examples": [],
          "Attributes": {},
          "Nullable": false,
          "NullableArrayItems": false,
          "ReadOnly": false,
          "WriteOnly": false,
          "IsArray": false,
          "IsMap": false,
          "IsArrayOfMap": false,
          "Deprecated": false,
          "Name": "moto",
          "Description": "",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "AnyOfTypes": [],
          "AnyOfCasesMeta": [],
          "OneOfTypes": [],
          "OneOfCasesMeta": [],
          "NotTypes": [],
          "NotCasesMeta": [],
          "Type": "Number",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Examples": [],
          "Attributes": {},
          "Nullable": false,
          "NullableArrayItems": false,
          "ReadOnly": false,
          "WriteOnly": false,
          "IsArray": false,
          "IsMap": false,
          "IsArrayOfMap": false,
          "Deprecated": false,
          "Name": "notes",
          "Description": "",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "AnyOfTypes": [],
          "AnyOfCasesMeta": [],
          "OneOfTypes": [],
          "OneOfCasesMeta": [],
          "NotTypes": [],
          "NotCasesMeta": [],
          "Type": "Number",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Examples": [],
          "Attributes": {},
          "Nullable": false,
          "NullableArrayItems": false,
          "ReadOnly": false,
          "WriteOnly": false,
          "IsArray": false,
          "IsMap": false,
          "IsArrayOfMap": false,
          "Deprecated": false,
          "Name": "users",
          "Description": "",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "AnyOfTypes": [],
          "AnyOfCasesMeta": [],
          "OneOfTypes": [],
          "OneOfCasesMeta": [],
          "NotTypes": [],
          "NotCasesMeta": [],
          "Type": "String",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Examples": [],
          "Attributes": {},
          "Nullable": false,
          "NullableArrayItems": false,
          "ReadOnly": false,
          "WriteOnly": false,
          "IsArray": false,
          "IsMap": false,
          "IsArrayOfMap": false,
          "Deprecated": false,
          "Name": "time",
          "Description": "",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "AnyOfTypes": [],
          "AnyOfCasesMeta": [],
          "OneOfTypes": [],
          "OneOfCasesMeta": [],
          "NotTypes": [],
          "NotCasesMeta": [],
          "Type": "String",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Examples": [],
          "Attributes": {},
          "Nullable": false,
          "NullableArrayItems": false,
          "ReadOnly": false,
          "WriteOnly": false,
          "IsArray": false,
          "IsMap": false,
          "IsArrayOfMap": false,
          "Deprecated": false,
          "Name": "os",
          "Description": "",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "AnyOfTypes": [],
          "AnyOfCasesMeta": [],
          "OneOfTypes": [],
          "OneOfCasesMeta": [],
          "NotTypes": [],
          "NotCasesMeta": [],
          "Type": "String",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Examples": [],
          "Attributes": {},
          "Nullable": false,
          "NullableArrayItems": false,
          "ReadOnly": false,
          "WriteOnly": false,
          "IsArray": false,
          "IsMap": false,
          "IsArrayOfMap": false,
          "Deprecated": false,
          "Name": "php_version",
          "Description": "",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "AnyOfTypes": [],
          "AnyOfCasesMeta": [],
          "OneOfTypes": [],
          "OneOfCasesMeta": [],
          "NotTypes": [],
          "NotCasesMeta": [],
          "Type": "String",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Examples": [],
          "Attributes": {},
          "Nullable": false,
          "NullableArrayItems": false,
          "ReadOnly": false,
          "WriteOnly": false,
          "IsArray": false,
          "IsMap": false,
          "IsArrayOfMap": false,
          "Deprecated": false,
          "Name": "status",
          "Description": "",
          "DefaultValue": ""
        }
      ],
      "ExampleValues": [],
      "Deprecated": false,
      "IsXmlType": false
    },
    {
      "Name": "User",
      "ImplementationType": "Structure",
      "Fields": [
        {
          "Optional": true,
          "AnyOfTypes": [],
          "AnyOfCasesMeta": [],
          "OneOfTypes": [],
          "OneOfCasesMeta": [],
          "NotTypes": [],
          "NotCasesMeta": [],
          "Type": "Number",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Examples": [],
          "Attributes": {},
          "Nullable": false,
          "NullableArrayItems": false,
          "ReadOnly": false,
          "WriteOnly": false,
          "IsArray": false,
          "IsMap": false,
          "IsArrayOfMap": false,
          "Deprecated": false,
          "Name": "id",
          "Description": "",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "AnyOfTypes": [],
          "AnyOfCasesMeta": [],
          "OneOfTypes": [],
          "OneOfCasesMeta": [],
          "NotTypes": [],
          "NotCasesMeta": [],
          "Type": "String",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Examples": [],
          "Attributes": {},
          "Nullable": false,
          "NullableArrayItems": false,
          "ReadOnly": false,
          "WriteOnly": false,
          "IsArray": false,
          "IsMap": false,
          "IsArrayOfMap": false,
          "Deprecated": false,
          "Name": "name",
          "Description": "",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "AnyOfTypes": [],
          "AnyOfCasesMeta": [],
          "OneOfTypes": [],
          "OneOfCasesMeta": [],
          "NotTypes": [],
          "NotCasesMeta": [],
          "Type": "String",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Examples": [],
          "Attributes": {},
          "Nullable": false,
          "NullableArrayItems": false,
          "ReadOnly": false,
          "WriteOnly": false,
          "IsArray": false,
          "IsMap": false,
          "IsArrayOfMap": false,
          "Deprecated": false,
          "Name": "email",
          "Description": "",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "AnyOfTypes": [],
          "AnyOfCasesMeta": [],
          "OneOfTypes": [],
          "OneOfCasesMeta": [],
          "NotTypes": [],
          "NotCasesMeta": [],
          "Type": "String",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Examples": [],
          "Attributes": {},
          "Nullable": false,
          "NullableArrayItems": false,
          "ReadOnly": false,
          "WriteOnly": false,
          "IsArray": false,
          "IsMap": false,
          "IsArrayOfMap": false,
          "Deprecated": false,
          "Name": "created_at",
          "Description": "",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "AnyOfTypes": [],
          "AnyOfCasesMeta": [],
          "OneOfTypes": [],
          "OneOfCasesMeta": [],
          "NotTypes": [],
          "NotCasesMeta": [],
          "Type": "String",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Examples": [],
          "Attributes": {},
          "Nullable": false,
          "NullableArrayItems": false,
          "ReadOnly": false,
          "WriteOnly": false,
          "IsArray": false,
          "IsMap": false,
          "IsArrayOfMap": false,
          "Deprecated": false,
          "Name": "updated_at",
          "Description": "",
          "DefaultValue": ""
        }
      ],
      "ExampleValues": [],
      "Deprecated": false,
      "IsXmlType": false
    }
  ],
  "UserDefinedImportedTypes": [],
  "GlobalTypeCombinators": {},
  "CodeGenSettings": {
    "SynchronyMode": "Asynchronous",
    "ModelSerializationScheme": "Json",
    "ArraySerialization": "Indexed",
    "Nullify404": false,
    "UseHttpMethodPrefix": false,
    "UseModelPrefix": false,
    "UseExceptionPrefix": true,
    "UseEnumPrefix": true,
    "UseControllerPrefix": true,
    "UseConstructorsForConfig": false,
    "Timeout": 0.0,
    "AndroidUseAppManifest": false,
    "iOSUseAppInfoPlist": false,
    "iOSGenerateCoreData": false,
    "CollapseParamsToArray": false,
    "RunscopeEnabled": false,
    "AndroidHttpClient": "UNIREST",
    "JavaHttpClient": "JAVA_OK",
    "ObjCHttpClient": "UNIREST",
    "CSharpHttpClient": "UNIREST",
    "NodeHttpClient": "NODE_REQUEST",
    "JavaUsePropertiesConfig": false,
    "PHPHttpClient": "UNIREST",
    "EnablePHPComposerVersionString": false,
    "EnableGlobalUserAgent": true,
    "EnableAdditionalModelProperties": true,
    "PreserveParameterOrder": true,
    "ValidateRequiredParameters": false,
    "AppendContentHeaders": true,
    "GenerateInterfaces": false,
    "UseCommonSDKLibrary": false,
    "ParameterArrayFormat": "ParamArrayWithIndex",
    "SecurityProtocols": [
      "Ssl3",
      "Tls",
      "Ssl3",
      "Tls",
      "Ssl3",
      "Tls"
    ],
    "GenerateTravisConfig": false,
    "GenerateCircleConfig": false,
    "GenerateAppveyorConfig": false,
    "GenerateJenkinsConfig": false,
    "EnableLogging": false,
    "EnableHttpCache": false,
    "Retries": 0,
    "RetryInterval": 1.0,
    "BackoffFactor": 2.0,
    "StatusCodesToRetry": [
      408,
      413,
      429,
      500,
      502,
      503,
      504,
      521,
      522,
      524
    ],
    "RequestMethodsToRetry": [
      "GET",
      "PUT"
    ],
    "UserConfigurableRetries": true,
    "GenerateAdvancedDocs": true,
    "DisableDocs": false,
    "StoreTimezoneInformation": false,
    "UnderscoreNumbers": true,
    "UseSingletonPattern": true,
    "IgnoreIfNullJson": false,
    "DisableLinting": false,
    "SortResources": false,
    "LiftParameterDescriptionFromCustomType": false,
    "AllowSkippingSSLCertVerification": false,
    "ApplyCustomizations": [
      "aptc-umc1c"
    ],
    "DoNotSplitWords": [],
    "ReturnCompleteHttpResponse": false,
    "ThrowForHttpErrorStatusCodes": true,
    "GenerateModels": true,
    "GenerateEnums": true,
    "GenerateExceptions": true,
    "ResponseMapping": {
      "Type": "Simple"
    },
    "ForceKeywordArgsInRuby": false,
    "SymbolizeHashKeysInRuby": false,
    "UsageExampleEndpoint": {
      "Description": "",
      "EndpointGroupName": "",
      "EndpointName": ""
    },
    "IsLatestVersion": false,
    "CustomDependencies": [],
    "EnableImmutableModels": false,
    "UseEndpointMethodName": false,
    "EncodeTemplateParameters": true,
    "GenerateExamplesForOptionalFields": false,
    "MultitargetDotnetVersions": false,
    "BackoffMax": 0.0,
    "RetryOnTimeout": true,
    "EnableCookies": false,
    "EnableJsonPassThroughForAny": false,
    "PascalCaseEnumForCSharp": false,
    "PascalCaseEnumForTypeScript": false,
    "EnableExperimentalTypeCombinatorGeneration": false,
    "ErrorTemplates": {}
  },
  "Errors": [],
  "TestGenSettings": {
    "Configuration": {
      "OAuthCCG-OAuthClientId": "23",
      "OAuthCCG-OAuthClientSecret": "tQNSqQlXBIwZcY9auoujQ57ckDcoh3t8UPbBRkSF",
      "OAuthACG-OAuthClientId": "24",
      "OAuthACG-OAuthClientSecret": "Y9auoujQ57ckDtQNSqQlXBIwZccoh3t8UPbBRkSF",
      "OAuthACG-OAuthRedirectUri": "x",
      "OAuthROPCG-OAuthClientId": "25",
      "OAuthROPCG-OAuthClientSecret": "ckDcoh3t8UPbBRkSFtQNSqQlXBIwZcY9auoujQ57",
      "OAuthROPCG-OAuthUsername": "apimatic",
      "OAuthROPCG-OAuthPassword": "api-d604257e42-matic",
      "OAuthBearerToken-AccessToken": "0b79bab50daca910b000d4f1a2b675d604257e42",
      "baseUri": "http://localhost:3000",
      "apiHeader-token": "Qaws2W233WedeRe4T56G6Vref2",
      "apiHeader-api-key": "api-key",
      "basicAuth-username": "Zeeshan",
      "basicAuth-password": "bhai_99",
      "apiKey-token": "asdqwaxr2gSdhasWSDbdAgdA637sdAhde7Adysi23",
      "apiKey-api-key": "api-key",
      "accessToken": "azHmdOe09EdchxeWsdnplkQbv76sJH"
    },
    "TestTimeout": 30,
    "PrecisionDelta": 0.01
  },
  "Roles": [],
  "Namespaces": [],
  "ExportSettings": {
    "ExportExtensions": false,
    "UseDateTimeOnlyInRaml": false,
    "SetPostmanParamValuesAsVariables": false,
    "WrapResponseFieldInWsdl": true,
    "AllowEmptyTypeAttributesInXsd": false,
    "WrapInputOutputTypesInElementInXsd": false,
    "AddRefSiblingDataInAllOfSchema": true,
    "EncodeUrlParamsInPostman": true,
    "UseXsdBase64BinaryType": false,
    "ExportXmlMetaData": true,
    "ExportDiscriminatorMappingValues": true,
    "ExportGlobalTypeCombinators": true,
    "ExportAnyType": true,
    "ExportOptionalParametersAsDisabled": false,
    "ExportApiKeyAuthInPostman": true,
    "GenerateSampleValueFromRegexPattern": false,
    "UseHttpMethodPrefixForAutoGeneratedWsdlNames": true,
    "ForceAllowModelExampleExportForSampleGeneration": false
  }
}