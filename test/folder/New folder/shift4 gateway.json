{
  "openapi": "3.0.0",
  "info": {
    "title": "Shift4 Gateway API",
    "description": "The Shift4 Paxxyments API is built as a RESTful interface utilizing JSON in the HTTP body.  This document has four main sections:\n\n  - Quickstart Development Guide: This outlines and provides overall guidance for an integrator to implement Shift4 Payments.\n\n  - Endpoints: This section defines the specification for the request and response for each method.  Sample JSON bodies for requests and responses are included. Note: The Shift4 REST API responses will filter out values that are empty strings, false (Boolean), or zeros (numeric). For example, if a zero is sent in a numeric field such as tax, the API will not return that field in the response.   \n\n  - Design Considerations: Concepts relating to the payments industry in general or Shift4 Payments specifically are explained here.  Depending on your business cases, only some of these sections will apply.\n\n  - Appendices: Test card numbers, test server trigger values, error codes etc. are listed here.\n\n\n# Development Quick Start\nThe integration of your interface with Shift4 can begin once a Client GUID (Globally Unique ID) and Auth Token are supplied by your API Analyst. If you have not yet received these items, please reach out to Shift4 to have them supplied for your integration.\nThis quickstart will follow inorder and inline through the documentation for the following most used commands:\n  - Exchanging your GUID and Auth Token for an Access Token (Required)\n  - Authorizing a payment \n  - Capturing a payment\n  - Making a sale/purchase in one call\n  - Refunding a payment\n  - Retrieving invoice information\n  - Voiding a payment\n\nPlease note that if you are tokenzing your credit card information outside of Shift4, authorizing and capturing a payment is not available unless you store the tokenized value from Shift4 from an authorized payment request and use this token in the subsequent capture request.\n\n## Universal Transaction Gateway (UTG)\nSetting up a UTG locally is only required when an integrator is dealing with physical card transactions and needs a payment device to read the card. If you are an e-commerce integrator only (card not present transactions), this step can be skipped.\n\n## Test Environment - Client Certificate Installation\nIf you get any certificate type errors when attempting to establish a connection to our gateway, you'll need to install this [server certificate](https://myportal.shift4.com/index.cfm?action=support.security) issued by GeoTrust manually on your server. The ZIP file contains a single .p7b file that includes the entire certificate chain.\n\n## Test Scripts\nOur test scripts are provided to our integration partners directly from your API Analyst that is geared toward your integration in particular. If you have not yet received it, please ask your API Analyst for a copy.\n\n## URLs\nTest: [https://utgapi.shift4test.com/api/rest/v1/](https://utgapi.shift4test.com/api/rest/v1/)\n\nProduction: [https://utg.shift4api.net/api/rest/v1/](https://utg.shift4api.net/api/rest/v1/)\n\n## Access Token Exchange\nYour interface will need to retrieve an Access Token via an [Access Token Exchange](#operation/accesstokenexchange) for each merchant account. This process requires a Client GUID (globally unique ID), which will be provided by Shift4 Payments, and an Auth Token, which will be provided by the merchant's [Lighthouse Transaction Manager](https://ltm.shift4test.com/) Account Administrator. After performing an [Access Token Exchange](#operation/accesstokenexchange), the Access Token will be used to identify your interface and the merchant account in all subsequent API requests. This gives merchants more control over who is able to make API requests on their behalf.\n\nShift4 authenticates your interface to the Shift4 API via an Access Token, which is obtained by supplying your Client GUID and Auth Token in an Access Token Exchange POST.\n\n\n### Client GUID\n<b>Your Client GUID is permanent for that interface and will be the same for testing and production.</b> Therefore, it must be hard coded into your application to identify the interface across all merchant accounts and must not be a configurable field. The Client GUID serves as a digital thumbprint that uniquely identifies your interface to Shift4 Payments.\n\n\n### Auth Token\nAn Auth Token gives your application permission to make API requests on behalf of a given merchant account. The test Auth Token can be reused as needed only in the certification environment.\n\nIn production, the merchant's [Lighthouse Transaction Manager](https://ltm.shift4test.com/) Account Administrator will provide an Auth Token for your interface. An Auth Token in production is valid only for a single [Access Token Exchange](#operation/accesstokenexchange) for a specific merchant account within a limited number of days (1, 3, 7, 30, 60, or 90). Therefore, an Auth Token should never be stored by your application, and should be immediately discarded after an Access Token has been acquired.\n\nIf there is an [Access Token Exchange](#operation/accesstokenexchange) failure in production, or if an Access Token has been revoked, the merchant's [Lighthouse Transaction Manager](https://ltm.shift4test.com/) Account Administrator will need to provide a new Auth Token for your interface. Therefore, Interfaces must be built to account for the fact that a <b>new Access Token may be required if there is a security incident or compliance concern</b>. In an event such as this, the [Lighthouse Transaction Manager](https://ltm.shift4test.com/) Account Administrator will provide a new Auth Token for your interface. After a new Access Token has been generated for the affected account, the Account Administrator can revoke the old one. This ensures the merchant can continue processing transactions.\n\nOnce you have your Access Token, you can run transactions against each of the supported endpoints for your integration.\n\n\n## Required Headers on all Subsequent API Calls Testingggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\nThis information must be added to the header of all API requests.\n\n<b>InterfaceVersion:</b> The version of the program or application that is sending requests.\n\n<b>InterfaceName:</b> The name of the program or application that is sending requests.\n\n<b>CompanyName:</b> The vendor or partner that designed and certified the interface.\n\n<b>AccessToken:</b> The security credential received from the Access Token Exchange API.",
    "contact": {
      "url": "https://www.shift4.com/contact-us/"
    },
    "version": "1.6.12"
  },
  "servers": [
    {
      "url": "https://utgapi.shift4test.com/api/rest/v1",
      "description": "Test URL",
      "variables": {}
    },
    {
      "url": "https://utg.shift4api.net/api/rest/v1",
      "description": "Production URL",
      "variables": {}
    },
    {
      "url": "https://api.shift4api.net/api/rest/v1",
      "description": "Production URL",
      "variables": {}
    }
  ],
  "paths": {
    "/credentials/accesstoken": {
      "post": {
        "tags": [
          "Credentials"
        ],
        "summary": "accesstokenexchange",
        "description": "This function is used to request exchanging a Client GUID and Auth Token for an Access Token.\n\n\nTest URL&colon; https://utgapi.shift4test.com/api/rest/v1/credentials/accesstoken\n\n\nProduction URL&colon; https://utg.shift4api.net/api/rest/v1/credentials/accesstoken\n\n\nLocally Installed UTG URL&colon; https://[UTG_LISTENING_IP_ADDRESS]:[UTG_PORT]/api/rest/v1/credentials/accesstoken\n\n\nFor example, if the IP address of the UTG you are connecting to is 192.168.1.10, and the REST port of UTG API interface is 277, then the URL would be&colon; https://192.168.1.10:277/api/rest/v1/credentials/accesstoken\n\n\nExamples to set the `user_parameters` :\n ```json\n{ \n  runtime_filters: [{\"column_name\": \"Color\", \"operator\": \"EQ\", \"values\": [\"red\"], \"persist\": false}],\n  runtime_sorts: [{\"column_name\": \"Color\", \"order\": \"ASC\", \"persist\": false}],\n  parameters: [{\"name\": \"Color\", \"values\": [\"ASC\"], \"persist\": false}],\n}\n```",
        "operationId": "accesstokenexchange",
        "parameters": [
          {
            "name": "InterfaceVersion",
            "in": "header",
            "description": "Refers to the version of the program or application that is sending requests to Shift4 Payments. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =\n\nExamples to set the `user_parameters` :\n ```json\n{ \n  runtime_filters: [{\"column_name\": \"Color\", \"operator\": \"EQ\", \"values\": [\"red\"], \"persist\": false}],\n  runtime_sorts: [{\"column_name\": \"Color\", \"order\": \"ASC\", \"persist\": false}],\n  parameters: [{\"name\": \"Color\", \"values\": [\"ASC\"], \"persist\": false}],\n}\n```",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 11,
              "type": "string",
              "example": "2.1"
            }
          },
          {
            "name": "InterfaceName",
            "in": "header",
            "description": "Refers to the name of the program or application that is sending requests to Shift4 Payments. This should be the name of the program that you purchased or created. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =\n\nExamples to set the `user_parameters` :\n ```json\n{ \n  runtime_filters: [{\"column_name\": \"Color\", \"operator\": \"EQ\", \"values\": [\"red\"], \"persist\": false}],\n}\n```",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 25,
              "type": "string",
              "example": "ForwardPOS"
            }
          },
          {
            "name": "CompanyName",
            "in": "header",
            "description": "Refers to the vendor or partner that designed and certified the interface. The information you use in this field should match what Shift Payments has on file or what was agreed upon in your Integration Plan. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =\n\nExamples to set the `user_parameters` :\n ```json\n{ \n  runtime_filters: [{\"col_nm\": \"Color\", \"optr\": \"EQ\", \"val\": [\"red\"],\n}\n```",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 26,
              "type": "string",
              "example": "PAWS"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CredentialsAccesstokenRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "AccessToken request was processed",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CredentialsAccesstokenResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CredentialsAccesstoken400Error1"
                },
                "examples": {
                  "Error": {
                    "summary": "AuthToken Not Valid",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "AuthToken not valid ENGINE01CE",
                            "primaryCode": 9862,
                            "secondaryCode": 0,
                            "shortText": "AuthToken"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "504": {
            "description": "Timeout",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeoutResponse1"
                },
                "examples": {
                  "Error": {
                    "summary": "Timeout Error",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "Timeout waiting for response across the internet",
                            "primaryCode": 9951,
                            "secondaryCode": 0,
                            "shortText": "RESPONSE TIMEOUT"
                          },
                          "lighthouse": {
                            "data": "eyJwYXltZW50SWQiOiI4NWM0MWNhNy01NzVjLTQzNGUtODIyZi0xYzZlOTE0ZDAzODYiLCJyZW1haW5pbmdBbW91bnQiOjB9"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/transactions/authorization": {
      "post": {
        "tags": [
          "Transactions"
        ],
        "summary": "authorization",
        "description": "Used to request processor approval for an authorization. If the invoice  number already exists, the amount requested will be compared to the approved amount on file, and Shift4 Payments will request approval for the additional amount only. If approved, an updated transaction will be displayed in  [Lighthouse Transaction Manager](https://ltm.shift4test.com/).  This step does NOT close and capture the funds, only authorizes the payment request.\n\n<i>Please note that if you are tokenzing your credit card information outside of Shift4, authorizing and capturing a payment is not available unless you  store the tokenized value from Shift4 from an authorized payment request and  use this token in the subsequent capture request.</i>\n\n<b>Test URL:</b> [https://utgapi.shift4test.com/api/rest/v1/transactions/authorization](https://utgapi.shift4test.com/api/rest/v1/transactions/authorization)\n\n<b>Production URL:</b> [https://utg.shift4api.net/api/rest/v1/transactions/authorization](https://utg.shift4api.net/api/rest/v1/transactions/authorization)\n\n<b>Locally Installed UTG URL:</b> [https://[UTG_LISTENING_IP_ADDRESS]:[UTG_PORT]/api/rest/v1/transactions/authorization](https://[UTG_LISTENING_IP_ADDRESS]:[UTG_PORT]/api/rest/v1/transactions/authorization)\n\nFor example, if the IP address of the UTG you are connecting to is 192.168.1.10,  and the port of the REST interface is 277, then the URL would be:  [https://192.168.1.10:277/api/rest/v1/transactions/authorization](https://192.168.1.10:277/api/rest/v1/transactions/authorization)\n\nThere are a few different request body schemas available to your integration  depending on what you are trying to accomplish. In each of the explanations  bulleted below, when following the link, be sure to choose the appropriate  Request Body Schema item and matching item in the Request Samples Example  Drop Down on the right side of the screen. This will show you the required  and optional parameters for your request as well as an example payload.\n\n- <b>Token:</b> Used when a credit card has been tokenized by Shift4. This  allows you to simply pass the tokenized card value for payment.\n\n- <b>Card Number Unencrypted:</b> Used when the credit card has been tokenized  by a 3rd party or yourself securely and you need to charge the card by passing  the raw credit card information.\n",
        "operationId": "authorization",
        "parameters": [
          {
            "name": "InterfaceVersion",
            "in": "header",
            "description": "Refers to the version of the program or application that is sending requests to Shift4 Payments. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 11,
              "type": "string",
              "example": "2.1"
            }
          },
          {
            "name": "InterfaceName",
            "in": "header",
            "description": "Refers to the name of the program or application that is sending requests to Shift4 Payments. This should be the name of the program that you purchased or created. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 25,
              "type": "string",
              "example": "ForwardPOS"
            }
          },
          {
            "name": "CompanyName",
            "in": "header",
            "description": "Refers to the vendor or partner that designed and certified the interface. The information you use in this field should match what Shift Payments has on file or what was agreed upon in your Integration Plan. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 26,
              "type": "string",
              "example": "PAWS"
            }
          },
          {
            "name": "AccessToken",
            "in": "header",
            "description": "A security credential used to authenticate API requests and all [i4Go®](https://myportal.shift4.com/index.cfm?action=support.doc) authorizeClient/preauthorizeClient requests. An Access Token is the alias for the merchant account and interface being used. The Access Token is required in all requests except an [Access Token Exchange](#operation/accesstokenexchange) request, which generates an Access Token using an <samp>authToken</samp> and <samp>clientGuid</samp>.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "EA79FB05-3AA7-4500-AF9A-73F986FF2C1D"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Transaction was processed",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsAuthorizationResponse"
                },
                "examples": {
                  "Device": {
                    "summary": "Using UTG-controlled device",
                    "value": {
                      "result": [
                        {
                          "dateTime": "2021-04-15T09:18:23.283-07:00",
                          "amount": {
                            "surcharge": 5,
                            "tax": 15,
                            "total": 140
                          },
                          "card": {
                            "entryMode": "1",
                            "number": "XXXXXXXXXX4509",
                            "present": "Y",
                            "token": {
                              "value": "6011013928534509"
                            },
                            "type": "NS"
                          },
                          "clerk": {
                            "numericId": 1576
                          },
                          "customer": {
                            "firstName": "DC\\/TRACK1",
                            "lastName": "ONLY"
                          },
                          "device": {
                            "terminalId": "350"
                          },
                          "receipt": [
                            {
                              "key": "CardEntryMode",
                              "printName": "ENTRY METHOD",
                              "printValue": "SWIPED"
                            },
                            {
                              "key": "SignatureRequired",
                              "printValue": "Y"
                            },
                            {
                              "key": "TransactionResponse",
                              "printName": "Response",
                              "printValue": "APPROVED"
                            }
                          ],
                          "server": {
                            "name": "DEFAULT"
                          },
                          "transaction": {
                            "authorizationCode": "OK892Z",
                            "authSource": "E",
                            "hostResponse": {
                              "reasonCode": "04",
                              "reasonDescription": "PickUpCard_NoFraud",
                              "reattemptPermission": "Reattempt not permitted"
                            },
                            "invoice": "0000176029",
                            "responseCode": "A",
                            "retrievalReference": "402F9H0230S0",
                            "saleFlag": "S"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse1"
                }
              }
            }
          },
          "504": {
            "description": "Timeout",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeoutResponse1"
                },
                "examples": {
                  "Error": {
                    "summary": "Timeout Error",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "Timeout waiting for response across the internet",
                            "primaryCode": 9951,
                            "secondaryCode": 0,
                            "shortText": "RESPONSE TIMEOUT"
                          },
                          "lighthouse": {
                            "data": "eyJwYXltZW50SWQiOiI4NWM0MWNhNy01NzVjLTQzNGUtODIyZi0xYzZlOTE0ZDAzODYiLCJyZW1haW5pbmdBbW91bnQiOjB9"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/transactions/manualsale": {
      "post": {
        "tags": [
          "Transactions"
        ],
        "summary": "manualsale",
        "description": "This function is used to request authorization and a sale in an offline scenario, which means that Shift4 Payments will not seek processor approval. An authorization code should be included in this request if the amount being submitted in the request is greater than the authorization amount currently on file.\n\nFor Restaurant industry, review [Restaurant Authorization and Settlement Flow](#tag/Restaurant-Authorization-and-Settlement-Flow)\n\nTest URL&colon; https://utgapi.shift4test.com/api/rest/v1/transactions/manualsale\n\nProduction URL&colon; https://utg.shift4api.net/api/rest/v1/transactions/manualsale\n\nLocally Installed UTG URL&colon; https://[UTG_LISTENING_IP_ADDRESS]:[UTG_PORT]/api/rest/v1/transactions/manualsale\n\nFor example, if the IP address of the UTG you are connecting to is 192.168.1.10, and the port of the REST interface is 277, then the URL would be&colon; https://192.168.1.10:277/api/rest/v1/transactions/manualsale\n",
        "operationId": "manualsale",
        "parameters": [
          {
            "name": "InterfaceVersion",
            "in": "header",
            "description": "Refers to the version of the program or application that is sending requests to Shift4 Payments. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 11,
              "type": "string",
              "example": "2.1"
            }
          },
          {
            "name": "InterfaceName",
            "in": "header",
            "description": "Refers to the name of the program or application that is sending requests to Shift4 Payments. This should be the name of the program that you purchased or created. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 25,
              "type": "string",
              "example": "ForwardPOS"
            }
          },
          {
            "name": "CompanyName",
            "in": "header",
            "description": "Refers to the vendor or partner that designed and certified the interface. The information you use in this field should match what Shift Payments has on file or what was agreed upon in your Integration Plan. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 26,
              "type": "string",
              "example": "PAWS"
            }
          },
          {
            "name": "AccessToken",
            "in": "header",
            "description": "A security credential used to authenticate API requests and all [i4Go®](https://myportal.shift4.com/index.cfm?action=support.doc) authorizeClient/preauthorizeClient requests. An Access Token is the alias for the merchant account and interface being used. The Access Token is required in all requests except an [Access Token Exchange](#operation/accesstokenexchange) request, which generates an Access Token using an <samp>authToken</samp> and <samp>clientGuid</samp>.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "EA79FB05-3AA7-4500-AF9A-73F986FF2C1D"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/UTGControlledDevice4"
                  },
                  {
                    "$ref": "#/components/schemas/Token6"
                  },
                  {
                    "$ref": "#/components/schemas/P2PEviaIDTechDevice4"
                  },
                  {
                    "$ref": "#/components/schemas/P2PEMagstripeMSR4"
                  },
                  {
                    "$ref": "#/components/schemas/P2PEEMV4"
                  },
                  {
                    "$ref": "#/components/schemas/CardNumberUnencrypted4"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Transaction was processed",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsManualsaleResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse1"
                }
              }
            }
          },
          "504": {
            "description": "Timeout",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeoutResponse1"
                },
                "examples": {
                  "Error": {
                    "summary": "Timeout Error",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "Timeout waiting for response across the internet",
                            "primaryCode": 9951,
                            "secondaryCode": 0,
                            "shortText": "RESPONSE TIMEOUT"
                          },
                          "lighthouse": {
                            "data": "eyJwYXltZW50SWQiOiI4NWM0MWNhNy01NzVjLTQzNGUtODIyZi0xYzZlOTE0ZDAzODYiLCJyZW1haW5pbmdBbW91bnQiOjB9"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/transactions/invoice": {
      "delete": {
        "tags": [
          "Transactions"
        ],
        "summary": "void",
        "description": "Used to void and reverse an invoice. This will attempt to reverse the transaction with the processor and will mark the transaction as voided in Shift4 Payments' Gateway. \n\nTest URL&colon; https://utgapi.shift4test.com/api/rest/v1/transactions/invoice\n\nProduction URL&colon; https://utg.shift4api.net/api/rest/v1/transactions/invoice\n\nLocally Installed UTG URL&colon; https://[UTG_LISTENING_IP_ADDRESS]:[UTG_PORT]/api/rest/v1/transactions/invoice\n\nFor example, if the IP address of the UTG you are connecting to is 192.168.1.10, and the port of the REST interface is 277, then the URL would be&colon; https://192.168.1.10:277/api/rest/v1/transactions/invoice\n",
        "operationId": "void",
        "parameters": [
          {
            "name": "Invoice",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 10,
              "type": "string",
              "example": "192029"
            }
          },
          {
            "name": "InterfaceVersion",
            "in": "header",
            "description": "Refers to the version of the program or application that is sending requests to Shift4 Payments. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 11,
              "type": "string",
              "example": "2.1"
            }
          },
          {
            "name": "InterfaceName",
            "in": "header",
            "description": "Refers to the name of the program or application that is sending requests to Shift4 Payments. This should be the name of the program that you purchased or created. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 25,
              "type": "string",
              "example": "ForwardPOS"
            }
          },
          {
            "name": "CompanyName",
            "in": "header",
            "description": "Refers to the vendor or partner that designed and certified the interface. The information you use in this field should match what Shift Payments has on file or what was agreed upon in your Integration Plan. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 26,
              "type": "string",
              "example": "PAWS"
            }
          },
          {
            "name": "AccessToken",
            "in": "header",
            "description": "A security credential used to authenticate API requests and all [i4Go®](https://myportal.shift4.com/index.cfm?action=support.doc) authorizeClient/preauthorizeClient requests. An Access Token is the alias for the merchant account and interface being used. The Access Token is required in all requests except an [Access Token Exchange](#operation/accesstokenexchange) request, which generates an Access Token using an <samp>authToken</samp> and <samp>clientGuid</samp>.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "EA79FB05-3AA7-4500-AF9A-73F986FF2C1D"
            }
          },
          {
            "name": "ReceiptColumns",
            "in": "header",
            "description": "Send this field if you want Shift4 to format the receipt text instead of returning individual fields. The value sent will correlate to the column width of the formatted receipt that we return. (This also allows the receipt text to wrap to fit the paper size of the printed receipt.) See the [Printing Receipts](#tag/Printing-Receipts) section of this document for more information on formatted receipts.",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 40
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction was processed",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsInvoiceResponse1"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsInvoice400Error1"
                },
                "examples": {
                  "Error": {
                    "summary": "Invoice Not Found",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "Invoice Not Found 192029 0000057984  ENGINE02CE",
                            "primaryCode": 9815,
                            "secondaryCode": 0,
                            "shortText": "NO INV"
                          },
                          "lighthouse": {
                            "data": "eyJwYXltZW50SWQiOiI4NWM0MWNhNy01NzVjLTQzNGUtODIyZi0xYzZlOTE0ZDAzODYiLCJyZW1haW5pbmdBbW91bnQiOjB9"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "504": {
            "description": "Timeout",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeoutResponse1"
                },
                "examples": {
                  "Error": {
                    "summary": "Timeout Error",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "Timeout waiting for response across the internet",
                            "primaryCode": 9951,
                            "secondaryCode": 0,
                            "shortText": "RESPONSE TIMEOUT"
                          },
                          "lighthouse": {
                            "data": "eyJwYXltZW50SWQiOiI4NWM0MWNhNy01NzVjLTQzNGUtODIyZi0xYzZlOTE0ZDAzODYiLCJyZW1haW5pbmdBbW91bnQiOjB9"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "getinvoice",
        "description": "Used to request the status (e.g., approved, declined, error, referral, etc.) for a specific invoice; it is primarily used after a timeout or error has occurred. Voided or batched and settled invoices will return an “Invoice Not Found” error. For more information, see the [Timeouts and Communication Failures](#tag/Timeouts-and-Communication-Failures) section.\n\nTest URL&colon; https://utgapi.shift4test.com/api/rest/v1/transactions/invoice\n\nProduction URL&colon; https://utg.shift4api.net/api/rest/v1/transactions/invoice\n\nLocally Installed UTG URL&colon; https://[UTG_LISTENING_IP_ADDRESS]:[UTG_PORT]/api/rest/v1/transactions/invoice\n\nFor example, if the IP address of the UTG you are connecting to is 192.168.1.10, and the port of the REST interface is 277, then the URL would be&colon; https://192.168.1.10:277/api/rest/v1/transactions/invoice\n",
        "operationId": "getinvoice",
        "parameters": [
          {
            "name": "Invoice",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 10,
              "type": "string",
              "example": "192029"
            }
          },
          {
            "name": "InterfaceVersion",
            "in": "header",
            "description": "Refers to the version of the program or application that is sending requests to Shift4 Payments. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 11,
              "type": "string",
              "example": "2.1"
            }
          },
          {
            "name": "InterfaceName",
            "in": "header",
            "description": "Refers to the name of the program or application that is sending requests to Shift4 Payments. This should be the name of the program that you purchased or created. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 25,
              "type": "string",
              "example": "ForwardPOS"
            }
          },
          {
            "name": "CompanyName",
            "in": "header",
            "description": "Refers to the vendor or partner that designed and certified the interface. The information you use in this field should match what Shift Payments has on file or what was agreed upon in your Integration Plan. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 26,
              "type": "string",
              "example": "PAWS"
            }
          },
          {
            "name": "AccessToken",
            "in": "header",
            "description": "A security credential used to authenticate API requests and all [i4Go®](https://myportal.shift4.com/index.cfm?action=support.doc) authorizeClient/preauthorizeClient requests. An Access Token is the alias for the merchant account and interface being used. The Access Token is required in all requests except an [Access Token Exchange](#operation/accesstokenexchange) request, which generates an Access Token using an <samp>authToken</samp> and <samp>clientGuid</samp>.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "EA79FB05-3AA7-4500-AF9A-73F986FF2C1D"
            }
          },
          {
            "name": "ApiOptions",
            "in": "header",
            "description": "API Options modify the request being made. Multiple API Options can be sent in a comma separated list with no spaces. See the [API Options](#tag/API-Options) section for more information.",
            "style": "simple",
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          },
          {
            "name": "ReceiptColumns",
            "in": "header",
            "description": "Send this field if you want Shift4 to format the receipt text instead of returning individual fields. The value sent will correlate to the column width of the formatted receipt that we return. (This also allows the receipt text to wrap to fit the paper size of the printed receipt.) See the [Printing Receipts](#tag/Printing-Receipts) section of this document for more information on formatted receipts.",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 40
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was processed",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsInvoiceResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsInvoice400Error1"
                },
                "examples": {
                  "Error": {
                    "summary": "Invoice Not Found",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "Invoice Not Found 192029 0000057984  ENGINE02CE",
                            "primaryCode": 9815,
                            "secondaryCode": 0,
                            "shortText": "NO INV"
                          },
                          "lighthouse": {
                            "data": "eyJwYXltZW50SWQiOiI4NWM0MWNhNy01NzVjLTQzNGUtODIyZi0xYzZlOTE0ZDAzODYiLCJyZW1haW5pbmdBbW91bnQiOjB9"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "504": {
            "description": "Timeout",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeoutResponse1"
                },
                "examples": {
                  "Error": {
                    "summary": "Timeout Error",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "Timeout waiting for response across the internet",
                            "primaryCode": 9951,
                            "secondaryCode": 0,
                            "shortText": "RESPONSE TIMEOUT"
                          },
                          "lighthouse": {
                            "data": "eyJwYXltZW50SWQiOiI4NWM0MWNhNy01NzVjLTQzNGUtODIyZi0xYzZlOTE0ZDAzODYiLCJyZW1haW5pbmdBbW91bnQiOjB9"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/transactions/sale": {
      "post": {
        "tags": [
          "Transactions"
        ],
        "summary": "sale",
        "description": "Used to request processor approval for an authorization and capture in one  request. If the invoice number already exists, the amount requested will be  compared to the approved amount on file, and Shift4 Payments will request  approval for the additional amount only. If approved, a new sale transaction  will be displayed in Lighthouse Transaction Manager and be ready to be batched.\n\n<b>Test URL:</b> [https://utgapi.shift4test.com/api/rest/v1/transactions/sale](https://utgapi.shift4test.com/api/rest/v1/transactions/sale)\n\n<b>Production URL:</b> [https://utg.shift4api.net/api/rest/v1/transactions/sale](https://utg.shift4api.net/api/rest/v1/transactions/sale)\n\n<b>Locally Installed UTG URL:</b> [https://[UTG_LISTENING_IP_ADDRESS]:[UTG_PORT]/api/rest/v1/transactions/sale](https://[UTG_LISTENING_IP_ADDRESS]:[UTG_PORT]/api/rest/v1/transactions/sale)\n\nFor example, if the IP address of the UTG you are connecting to is 192.168.1.10,  and the port of the REST interface is 277, then the URL would be:  [https://192.168.1.10:277/api/rest/v1/transactions/sale](https://192.168.1.10:277/api/rest/v1/transactions/sale)\n\nThere are a few different request body schemas available to your integration  depending on what you are trying to accomplish. In each of the explanations  bulleted below, when following the link, be sure to choose the appropriate  Request Body Schema item and matching item in the Request Samples Example Drop  Down on the right side of the screen. This will show you the required and  optional parameters for your request as well as an example payload.\n\n- <b>Token:</b> Used when a credit card has been tokenized by Shift4. This  allows you to simply pass the tokenized card value for payment.\n\n- <b>Card Number Unencrypted:</b> Used when the credit card has been tokenized  by a 3rd party or yourself securely and you need to charge the card by passing  the raw credit card information.\n",
        "operationId": "sale",
        "parameters": [
          {
            "name": "InterfaceVersion",
            "in": "header",
            "description": "Refers to the version of the program or application that is sending requests to Shift4 Payments. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 11,
              "type": "string",
              "example": "2.1"
            }
          },
          {
            "name": "InterfaceName",
            "in": "header",
            "description": "Refers to the name of the program or application that is sending requests to Shift4 Payments. This should be the name of the program that you purchased or created. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 25,
              "type": "string",
              "example": "ForwardPOS"
            }
          },
          {
            "name": "CompanyName",
            "in": "header",
            "description": "Refers to the vendor or partner that designed and certified the interface. The information you use in this field should match what Shift Payments has on file or what was agreed upon in your Integration Plan. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 26,
              "type": "string",
              "example": "PAWS"
            }
          },
          {
            "name": "AccessToken",
            "in": "header",
            "description": "A security credential used to authenticate API requests and all [i4Go®](https://myportal.shift4.com/index.cfm?action=support.doc) authorizeClient/preauthorizeClient requests. An Access Token is the alias for the merchant account and interface being used. The Access Token is required in all requests except an [Access Token Exchange](#operation/accesstokenexchange) request, which generates an Access Token using an <samp>authToken</samp> and <samp>clientGuid</samp>.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "EA79FB05-3AA7-4500-AF9A-73F986FF2C1D"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/UTGControlledDevice1"
                  },
                  {
                    "$ref": "#/components/schemas/Token1"
                  },
                  {
                    "$ref": "#/components/schemas/P2PEviaIDTechDevice1"
                  },
                  {
                    "$ref": "#/components/schemas/P2PEMagstripeMSR1"
                  },
                  {
                    "$ref": "#/components/schemas/P2PEEMV1"
                  },
                  {
                    "$ref": "#/components/schemas/CardNumberUnencrypted1"
                  },
                  {
                    "$ref": "#/components/schemas/Wallet3DSecureUsingi4Go1"
                  },
                  {
                    "$ref": "#/components/schemas/Wallet3DSecureUsingCardNumber1"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Transaction was processed",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsSaleResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse1"
                }
              }
            }
          },
          "504": {
            "description": "Timeout",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeoutResponse1"
                },
                "examples": {
                  "Error": {
                    "summary": "Timeout Error",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "Timeout waiting for response across the internet",
                            "primaryCode": 9951,
                            "secondaryCode": 0,
                            "shortText": "RESPONSE TIMEOUT"
                          },
                          "lighthouse": {
                            "data": "eyJwYXltZW50SWQiOiI4NWM0MWNhNy01NzVjLTQzNGUtODIyZi0xYzZlOTE0ZDAzODYiLCJyZW1haW5pbmdBbW91bnQiOjB9"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/transactions/signature": {
      "post": {
        "tags": [
          "Transactions"
        ],
        "summary": "postsignature",
        "description": "This function is used to upload the captured signature to an existing invoice in Shift4 Payments' Gateway.\n\nTest URL&colon; https://utgapi.shift4test.com/api/rest/v1/transactions/signature\n\nProduction URL&colon; https://utg.shift4api.net/api/rest/v1/transactions/signature\n\nLocally Installed UTG URL&colon; https://[UTG_LISTENING_IP_ADDRESS]:[UTG_PORT]/api/rest/v1/transactions/signature\n\nFor example, if the IP address of the UTG you are connecting to is 192.168.1.10, and the port of the REST interface is 277, then the URL would be&colon; https://192.168.1.10:277/api/rest/v1/transactions/signature\n",
        "operationId": "postsignature",
        "parameters": [
          {
            "name": "InterfaceVersion",
            "in": "header",
            "description": "Refers to the version of the program or application that is sending requests to Shift4 Payments. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 11,
              "type": "string",
              "example": "2.1"
            }
          },
          {
            "name": "InterfaceName",
            "in": "header",
            "description": "Refers to the name of the program or application that is sending requests to Shift4 Payments. This should be the name of the program that you purchased or created. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 25,
              "type": "string",
              "example": "ForwardPOS"
            }
          },
          {
            "name": "CompanyName",
            "in": "header",
            "description": "Refers to the vendor or partner that designed and certified the interface. The information you use in this field should match what Shift Payments has on file or what was agreed upon in your Integration Plan. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 26,
              "type": "string",
              "example": "PAWS"
            }
          },
          {
            "name": "AccessToken",
            "in": "header",
            "description": "A security credential used to authenticate API requests and all [i4Go®](https://myportal.shift4.com/index.cfm?action=support.doc) authorizeClient/preauthorizeClient requests. An Access Token is the alias for the merchant account and interface being used. The Access Token is required in all requests except an [Access Token Exchange](#operation/accesstokenexchange) request, which generates an Access Token using an <samp>authToken</samp> and <samp>clientGuid</samp>.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "EA79FB05-3AA7-4500-AF9A-73F986FF2C1D"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionsSignatureRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Request was processed",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsSignatureResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsSignature400Error1"
                },
                "examples": {
                  "Error": {
                    "summary": "Invoice Not Found",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "Invoice Not Found 192029 0000057984  ENGINE02CE",
                            "primaryCode": 9815,
                            "secondaryCode": 0,
                            "shortText": "NO INV"
                          },
                          "lighthouse": {
                            "data": "eyJwYXltZW50SWQiOiI4NWM0MWNhNy01NzVjLTQzNGUtODIyZi0xYzZlOTE0ZDAzODYiLCJyZW1haW5pbmdBbW91bnQiOjB9"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "504": {
            "description": "Timeout",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeoutResponse1"
                },
                "examples": {
                  "Error": {
                    "summary": "Timeout Error",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "Timeout waiting for response across the internet",
                            "primaryCode": 9951,
                            "secondaryCode": 0,
                            "shortText": "RESPONSE TIMEOUT"
                          },
                          "lighthouse": {
                            "data": "eyJwYXltZW50SWQiOiI4NWM0MWNhNy01NzVjLTQzNGUtODIyZi0xYzZlOTE0ZDAzODYiLCJyZW1haW5pbmdBbW91bnQiOjB9"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/transactions/capture": {
      "post": {
        "tags": [
          "Transactions"
        ],
        "summary": "capture",
        "description": "Used to close out an existing authorization request. If the invoice number  already exists, the amount requested will be compared to the approved amount  on file, and Shift4 Payments will request approval for the additional amount only. If approved, the authorization will be converted to a sale transaction  and be ready to be batched.\n\nFor Restaurant industry, review [Restaurant Authorization and Settlement Flow](#tag/Restaurant-Authorization-and-Settlement-Flow)\n\n<b>Test URL:</b> [https://utgapi.shift4test.com/api/rest/v1/transactions/capture](https://utgapi.shift4test.com/api/rest/v1/transactions/capture)\n\n<b>Production URL:</b> [https://utg.shift4api.net/api/rest/v1/transactions/capture](https://utg.shift4api.net/api/rest/v1/transactions/capture)\n\n<b>Locally Installed UTG URL:</b> [https://[UTG_LISTENING_IP_ADDRESS]:[UTG_PORT]/api/rest/v1/transactions/capture](https://[UTG_LISTENING_IP_ADDRESS]:[UTG_PORT]/api/rest/v1/transactions/capture)\n\nFor example, if the IP address of the UTG you are connecting to is 192.168.1.10,  and the port of the REST interface is 277, then the URL would be:  [https://192.168.1.10:277/api/rest/v1/transactions/capture](https://192.168.1.10:277/api/rest/v1/transactions/capture)\n\nPlease note that if you are tokenzing your credit card information outside of  Shift4, authorizing and capturing a payment is not available unless you store  the tokenized value from Shift4 from an authorized payment request and use this  token in the subsequent capture request.\n",
        "operationId": "capture",
        "parameters": [
          {
            "name": "InterfaceVersion",
            "in": "header",
            "description": "Refers to the version of the program or application that is sending requests to Shift4 Payments. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 11,
              "type": "string",
              "example": "2.1"
            }
          },
          {
            "name": "InterfaceName",
            "in": "header",
            "description": "Refers to the name of the program or application that is sending requests to Shift4 Payments. This should be the name of the program that you purchased or created. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 25,
              "type": "string",
              "example": "ForwardPOS"
            }
          },
          {
            "name": "CompanyName",
            "in": "header",
            "description": "Refers to the vendor or partner that designed and certified the interface. The information you use in this field should match what Shift Payments has on file or what was agreed upon in your Integration Plan. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 26,
              "type": "string",
              "example": "PAWS"
            }
          },
          {
            "name": "AccessToken",
            "in": "header",
            "description": "A security credential used to authenticate API requests and all [i4Go®](https://myportal.shift4.com/index.cfm?action=support.doc) authorizeClient/preauthorizeClient requests. An Access Token is the alias for the merchant account and interface being used. The Access Token is required in all requests except an [Access Token Exchange](#operation/accesstokenexchange) request, which generates an Access Token using an <samp>authToken</samp> and <samp>clientGuid</samp>.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "EA79FB05-3AA7-4500-AF9A-73F986FF2C1D"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionsCaptureRequest"
              },
              "example": {
                "dateTime": "2021-04-15T09:18:23.283-07:00",
                "amount": {
                  "tip": 20,
                  "total": 160
                },
                "apiOptions": [
                  "ALLOWPARTIALAUTH"
                ],
                "card": {
                  "token": {
                    "value": "8048471746471119"
                  }
                },
                "clerk": {
                  "numericId": 1576
                },
                "transaction": {
                  "hotel": {
                    "additionalCharges": {
                      "giftShop": "Y",
                      "laundry": "N",
                      "miniBar": "Y",
                      "other": "Y",
                      "restaurant": "Y",
                      "telephone": "N"
                    },
                    "arrivalDateTime": "2021-04-12T15:39:01.594-07:00",
                    "departureDateTime": "2021-04-15T09:18:23.283-07:00",
                    "primaryChargeType": 1,
                    "roomRates": [
                      {
                        "nights": 2,
                        "rate": 159.95
                      },
                      {
                        "nights": 3,
                        "rate": 125.38
                      }
                    ],
                    "specialCode": 1
                  },
                  "invoice": "192029",
                  "notes": "Transaction notes are added here"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Transaction was processed",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsCaptureResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse1"
                }
              }
            }
          },
          "504": {
            "description": "Timeout",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeoutResponse1"
                },
                "examples": {
                  "Error": {
                    "summary": "Timeout Error",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "Timeout waiting for response across the internet",
                            "primaryCode": 9951,
                            "secondaryCode": 0,
                            "shortText": "RESPONSE TIMEOUT"
                          },
                          "lighthouse": {
                            "data": "eyJwYXltZW50SWQiOiI4NWM0MWNhNy01NzVjLTQzNGUtODIyZi0xYzZlOTE0ZDAzODYiLCJyZW1haW5pbmdBbW91bnQiOjB9"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/transactions/manualauthorization": {
      "post": {
        "tags": [
          "Transactions"
        ],
        "summary": "manualauthorization",
        "description": "This function is used to request authorization in an offline scenario, which means that Shift4 Payments will not seek processor approval. An authorization code should be included in this request if the amount being submitted in the request is greater than the authorization amount currently on file.\n\nTest URL&colon; https://utgapi.shift4test.com/api/rest/v1/transactions/manualauthorization\n\nProduction URL&colon; https://utg.shift4api.net/api/rest/v1/transactions/manualauthorization\n\nLocally Installed UTG URL&colon; https://[UTG_LISTENING_IP_ADDRESS]:[UTG_PORT]/api/rest/v1/transactions/manualauthorization\n\nFor example, if the IP address of the UTG you are connecting to is 192.168.1.10, and the port of the REST interface is 277, then the URL would be&colon; https://192.168.1.10:277/api/rest/v1/transactions/manualauthorization\n",
        "operationId": "manualauthorization",
        "parameters": [
          {
            "name": "InterfaceVersion",
            "in": "header",
            "description": "Refers to the version of the program or application that is sending requests to Shift4 Payments. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 11,
              "type": "string",
              "example": "2.1"
            }
          },
          {
            "name": "InterfaceName",
            "in": "header",
            "description": "Refers to the name of the program or application that is sending requests to Shift4 Payments. This should be the name of the program that you purchased or created. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 25,
              "type": "string",
              "example": "ForwardPOS"
            }
          },
          {
            "name": "CompanyName",
            "in": "header",
            "description": "Refers to the vendor or partner that designed and certified the interface. The information you use in this field should match what Shift Payments has on file or what was agreed upon in your Integration Plan. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 26,
              "type": "string",
              "example": "PAWS"
            }
          },
          {
            "name": "AccessToken",
            "in": "header",
            "description": "A security credential used to authenticate API requests and all [i4Go®](https://myportal.shift4.com/index.cfm?action=support.doc) authorizeClient/preauthorizeClient requests. An Access Token is the alias for the merchant account and interface being used. The Access Token is required in all requests except an [Access Token Exchange](#operation/accesstokenexchange) request, which generates an Access Token using an <samp>authToken</samp> and <samp>clientGuid</samp>.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "EA79FB05-3AA7-4500-AF9A-73F986FF2C1D"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/UTGControlledDevice3"
                  },
                  {
                    "$ref": "#/components/schemas/Token5"
                  },
                  {
                    "$ref": "#/components/schemas/P2PEviaIDTechDevice3"
                  },
                  {
                    "$ref": "#/components/schemas/P2PEMagstripeMSR3"
                  },
                  {
                    "$ref": "#/components/schemas/P2PEEMV3"
                  },
                  {
                    "$ref": "#/components/schemas/CardNumberUnencrypted3"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Transaction was processed",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsManualauthorizationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse1"
                }
              }
            }
          },
          "504": {
            "description": "Timeout",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeoutResponse1"
                },
                "examples": {
                  "Error": {
                    "summary": "Timeout Error",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "Timeout waiting for response across the internet",
                            "primaryCode": 9951,
                            "secondaryCode": 0,
                            "shortText": "RESPONSE TIMEOUT"
                          },
                          "lighthouse": {
                            "data": "eyJwYXltZW50SWQiOiI4NWM0MWNhNy01NzVjLTQzNGUtODIyZi0xYzZlOTE0ZDAzODYiLCJyZW1haW5pbmdBbW91bnQiOjB9"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/transactions/refund": {
      "post": {
        "tags": [
          "Transactions"
        ],
        "summary": "refund",
        "description": "This function can be used to refund a transaction for either the full or  a partial amount.\n\n<b>Test URL:</b> [https://utgapi.shift4test.com/api/rest/v1/transactions/refund](https://utgapi.shift4test.com/api/rest/v1/transactions/refund)\n\n<b>Production URL:</b> [https://utg.shift4api.net/api/rest/v1/transactions/refund](https://utg.shift4api.net/api/rest/v1/transactions/refund)\n\n<b>Locally Installed UTG URL:</b> [https://[UTG_LISTENING_IP_ADDRESS]:[UTG_PORT]/api/rest/v1/transactions/refund](https://[UTG_LISTENING_IP_ADDRESS]:[UTG_PORT]/api/rest/v1/transactions/refund)\n\nFor example, if the IP address of the UTG you are connecting to is 192.168.1.10,  and the port of the REST interface is 277, then the URL would be:  [https://192.168.1.10:277/api/rest/v1/transactions/refund](https://192.168.1.10:277/api/rest/v1/transactions/refund)\n\nThere are a few different request body schemas available to your integration  depending on what you are trying to accomplish. In each of the explanations  bulleted below, when following the link, be sure to choose the appropriate  Request Body Schema item and matching item in the Request Samples Example Drop  Down on the right side of the screen. This will show you the required and  optional parameters for your request as well as an example payload.\n\n- <b>Token:</b> Used when a credit card has been tokenized by Shift4. This  allows you to simply pass the tokenized card value for payment.\n\n- <b>Card Number Unencrypted:</b> Used when the credit card has been tokenized  by a 3rd party or yourself securely and you need to charge the card by passing  the raw credit card information.\n",
        "operationId": "refund",
        "parameters": [
          {
            "name": "InterfaceVersion",
            "in": "header",
            "description": "Refers to the version of the program or application that is sending requests to Shift4 Payments. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 11,
              "type": "string",
              "example": "2.1"
            }
          },
          {
            "name": "InterfaceName",
            "in": "header",
            "description": "Refers to the name of the program or application that is sending requests to Shift4 Payments. This should be the name of the program that you purchased or created. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 25,
              "type": "string",
              "example": "ForwardPOS"
            }
          },
          {
            "name": "CompanyName",
            "in": "header",
            "description": "Refers to the vendor or partner that designed and certified the interface. The information you use in this field should match what Shift Payments has on file or what was agreed upon in your Integration Plan. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 26,
              "type": "string",
              "example": "PAWS"
            }
          },
          {
            "name": "AccessToken",
            "in": "header",
            "description": "A security credential used to authenticate API requests and all [i4Go®](https://myportal.shift4.com/index.cfm?action=support.doc) authorizeClient/preauthorizeClient requests. An Access Token is the alias for the merchant account and interface being used. The Access Token is required in all requests except an [Access Token Exchange](#operation/accesstokenexchange) request, which generates an Access Token using an <samp>authToken</samp> and <samp>clientGuid</samp>.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "EA79FB05-3AA7-4500-AF9A-73F986FF2C1D"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/UTGControlledDevice2"
                  },
                  {
                    "$ref": "#/components/schemas/Token3"
                  },
                  {
                    "$ref": "#/components/schemas/P2PEviaIDTechDevice2"
                  },
                  {
                    "$ref": "#/components/schemas/P2PEMagstripeMSR2"
                  },
                  {
                    "$ref": "#/components/schemas/P2PEEMV2"
                  },
                  {
                    "$ref": "#/components/schemas/CardNumberUnencrypted2"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Refund was processed",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsRefundResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse1"
                }
              }
            }
          },
          "504": {
            "description": "Timeout",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeoutResponse1"
                },
                "examples": {
                  "Error": {
                    "summary": "Timeout Error",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "Timeout waiting for response across the internet",
                            "primaryCode": 9951,
                            "secondaryCode": 0,
                            "shortText": "RESPONSE TIMEOUT"
                          },
                          "lighthouse": {
                            "data": "eyJwYXltZW50SWQiOiI4NWM0MWNhNy01NzVjLTQzNGUtODIyZi0xYzZlOTE0ZDAzODYiLCJyZW1haW5pbmdBbW91bnQiOjB9"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/giftcards/deactivate": {
      "post": {
        "tags": [
          "Gift Cards"
        ],
        "summary": "deactivate",
        "description": "This function requests that an active gift card be deactivated so that it can’t be used to process transactions.  A balance will remain on the gift card (if supported by the processor).  If you want to return the card's current balance back to the customer, use the [Cashout](#operation/cashout) endpoint instead.\n\nTest URL&colon; https://utgapi.shift4test.com/api/rest/v1/giftcards/deactivate\n\nProduction URL&colon; https://utg.shift4api.net/api/rest/v1/giftcards/deactivate\n\nLocally Installed UTG URL&colon; https://[UTG_LISTENING_IP_ADDRESS]:[UTG_PORT]/api/rest/v1/giftcards/deactivate\n\nFor example, if the IP address of the UTG you are connecting to is 192.168.1.10, and the port of the REST interface is 277, then the URL would be&colon; https://192.168.1.10:277/api/rest/v1/giftcards/deactivate\n",
        "operationId": "deactivate",
        "parameters": [
          {
            "name": "InterfaceVersion",
            "in": "header",
            "description": "Refers to the version of the program or application that is sending requests to Shift4 Payments. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 11,
              "type": "string",
              "example": "2.1"
            }
          },
          {
            "name": "InterfaceName",
            "in": "header",
            "description": "Refers to the name of the program or application that is sending requests to Shift4 Payments. This should be the name of the program that you purchased or created. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 25,
              "type": "string",
              "example": "ForwardPOS"
            }
          },
          {
            "name": "CompanyName",
            "in": "header",
            "description": "Refers to the vendor or partner that designed and certified the interface. The information you use in this field should match what Shift Payments has on file or what was agreed upon in your Integration Plan. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 26,
              "type": "string",
              "example": "PAWS"
            }
          },
          {
            "name": "AccessToken",
            "in": "header",
            "description": "A security credential used to authenticate API requests and all [i4Go®](https://myportal.shift4.com/index.cfm?action=support.doc) authorizeClient/preauthorizeClient requests. An Access Token is the alias for the merchant account and interface being used. The Access Token is required in all requests except an [Access Token Exchange](#operation/accesstokenexchange) request, which generates an Access Token using an <samp>authToken</samp> and <samp>clientGuid</samp>.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "EA79FB05-3AA7-4500-AF9A-73F986FF2C1D"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/UTGControlledDevice7"
                  },
                  {
                    "$ref": "#/components/schemas/Token10"
                  },
                  {
                    "$ref": "#/components/schemas/P2PEviaIDTechDevice7"
                  },
                  {
                    "$ref": "#/components/schemas/P2PEMagstripeMSR7"
                  },
                  {
                    "$ref": "#/components/schemas/CardNumberUnencrypted7"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Transaction was processed",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GiftcardsDeactivateResponse"
                },
                "example": {
                  "result": [
                    {
                      "dateTime": "2021-04-15T09:18:23.283-07:00",
                      "card": {
                        "entryMode": "1",
                        "number": "XXXXXXXXXXXX1333",
                        "present": "Y",
                        "deactivationReason": "lost or stolen",
                        "balance": {
                          "amount": 20
                        },
                        "token": {
                          "value": "0009hfqbt8b396x1"
                        },
                        "type": "YC"
                      },
                      "device": {
                        "terminalId": "1742"
                      },
                      "server": {
                        "name": "UTGAPI01CE"
                      },
                      "transaction": {
                        "authSource": "E",
                        "invoice": "192032",
                        "responseCode": "A"
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardTokenErrorResponse1"
                },
                "examples": {
                  "Error": {
                    "summary": "Terminal ID Error",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "Unique Identifier(8048471746471119) not found for Merchant 0000057984 ENGINE01CE",
                            "primaryCode": 9846,
                            "secondaryCode": 0,
                            "shortText": "BAD UNIQUE ID"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "504": {
            "description": "Timeout",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeoutResponse1"
                },
                "examples": {
                  "Error": {
                    "summary": "Timeout Error",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "Timeout waiting for response across the internet",
                            "primaryCode": 9951,
                            "secondaryCode": 0,
                            "shortText": "RESPONSE TIMEOUT"
                          },
                          "lighthouse": {
                            "data": "eyJwYXltZW50SWQiOiI4NWM0MWNhNy01NzVjLTQzNGUtODIyZi0xYzZlOTE0ZDAzODYiLCJyZW1haW5pbmdBbW91bnQiOjB9"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/giftcards/reactivate": {
      "post": {
        "tags": [
          "Gift Cards"
        ],
        "summary": "reactivate",
        "description": "This function requests that a previously deactivated gift card be reactivated. If there was a balance remaining on the gift card at the time of deactivation, the balance will again become available for use. Funds cannot be added to a gift card during a [Reactivate](#operation/reactivate) request.\n\nTest URL&colon; https://utgapi.shift4test.com/api/rest/v1/giftcards/reactivate\n\nProduction URL&colon; https://utg.shift4api.net/api/rest/v1/giftcards/reactivate\n\nLocally Installed UTG URL&colon; https://[UTG_LISTENING_IP_ADDRESS]:[UTG_PORT]/api/rest/v1/giftcards/reactivate\n\nFor example, if the IP address of the UTG you are connecting to is 192.168.1.10, and the port of the REST interface is 277, then the URL would be&colon; https://192.168.1.10:277/api/rest/v1/giftcards/reactivate\n",
        "operationId": "reactivate",
        "parameters": [
          {
            "name": "InterfaceVersion",
            "in": "header",
            "description": "Refers to the version of the program or application that is sending requests to Shift4 Payments. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 11,
              "type": "string",
              "example": "2.1"
            }
          },
          {
            "name": "InterfaceName",
            "in": "header",
            "description": "Refers to the name of the program or application that is sending requests to Shift4 Payments. This should be the name of the program that you purchased or created. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 25,
              "type": "string",
              "example": "ForwardPOS"
            }
          },
          {
            "name": "CompanyName",
            "in": "header",
            "description": "Refers to the vendor or partner that designed and certified the interface. The information you use in this field should match what Shift Payments has on file or what was agreed upon in your Integration Plan. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 26,
              "type": "string",
              "example": "PAWS"
            }
          },
          {
            "name": "AccessToken",
            "in": "header",
            "description": "A security credential used to authenticate API requests and all [i4Go®](https://myportal.shift4.com/index.cfm?action=support.doc) authorizeClient/preauthorizeClient requests. An Access Token is the alias for the merchant account and interface being used. The Access Token is required in all requests except an [Access Token Exchange](#operation/accesstokenexchange) request, which generates an Access Token using an <samp>authToken</samp> and <samp>clientGuid</samp>.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "EA79FB05-3AA7-4500-AF9A-73F986FF2C1D"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/UTGControlledDevice9"
                  },
                  {
                    "$ref": "#/components/schemas/Token14"
                  },
                  {
                    "$ref": "#/components/schemas/P2PEviaIDTechDevice9"
                  },
                  {
                    "$ref": "#/components/schemas/P2PEMagstripeMSR9"
                  },
                  {
                    "$ref": "#/components/schemas/CardNumberUnencrypted9"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Transaction was processed",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GiftcardsReactivateResponse"
                },
                "example": {
                  "result": [
                    {
                      "dateTime": "2021-04-15T09:18:23.283-07:00",
                      "card": {
                        "number": "XXXXXXXXXXXX1333",
                        "balance": {
                          "amount": 30
                        },
                        "token": {
                          "value": "0009hfqbt8b396x1"
                        },
                        "type": "YC"
                      },
                      "device": {
                        "terminalId": "1742"
                      },
                      "server": {
                        "name": "UTGAPI01CE"
                      },
                      "transaction": {
                        "authSource": "E",
                        "invoice": "192033",
                        "responseCode": "A"
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardTokenErrorResponse1"
                },
                "examples": {
                  "Error": {
                    "summary": "Terminal ID Error",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "Unique Identifier(8048471746471119) not found for Merchant 0000057984 ENGINE01CE",
                            "primaryCode": 9846,
                            "secondaryCode": 0,
                            "shortText": "BAD UNIQUE ID"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "504": {
            "description": "Timeout",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeoutResponse1"
                },
                "examples": {
                  "Error": {
                    "summary": "Timeout Error",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "Timeout waiting for response across the internet",
                            "primaryCode": 9951,
                            "secondaryCode": 0,
                            "shortText": "RESPONSE TIMEOUT"
                          },
                          "lighthouse": {
                            "data": "eyJwYXltZW50SWQiOiI4NWM0MWNhNy01NzVjLTQzNGUtODIyZi0xYzZlOTE0ZDAzODYiLCJyZW1haW5pbmdBbW91bnQiOjB9"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/giftcards/activate": {
      "post": {
        "tags": [
          "Gift Cards"
        ],
        "summary": "activate",
        "description": "This function requests that a new gift card be activated for use or that a new gift card be loaded with funds.\n\nTest URL&colon; https://utgapi.shift4test.com/api/rest/v1/giftcards/activate\n\nProduction URL&colon; https://utg.shift4api.net/api/rest/v1/giftcards/activate\n\nLocally Installed UTG URL&colon; https://[UTG_LISTENING_IP_ADDRESS]:[UTG_PORT]/api/rest/v1/giftcards/activate\n\nFor example, if the IP address of the UTG you are connecting to is 192.168.1.10, and the port of the REST interface is 277, then the URL would be&colon; https://192.168.1.10:277/api/rest/v1/giftcards/activate\n",
        "operationId": "activate",
        "parameters": [
          {
            "name": "InterfaceVersion",
            "in": "header",
            "description": "Refers to the version of the program or application that is sending requests to Shift4 Payments. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 11,
              "type": "string",
              "example": "2.1"
            }
          },
          {
            "name": "InterfaceName",
            "in": "header",
            "description": "Refers to the name of the program or application that is sending requests to Shift4 Payments. This should be the name of the program that you purchased or created. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 25,
              "type": "string",
              "example": "ForwardPOS"
            }
          },
          {
            "name": "CompanyName",
            "in": "header",
            "description": "Refers to the vendor or partner that designed and certified the interface. The information you use in this field should match what Shift Payments has on file or what was agreed upon in your Integration Plan. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 26,
              "type": "string",
              "example": "PAWS"
            }
          },
          {
            "name": "AccessToken",
            "in": "header",
            "description": "A security credential used to authenticate API requests and all [i4Go®](https://myportal.shift4.com/index.cfm?action=support.doc) authorizeClient/preauthorizeClient requests. An Access Token is the alias for the merchant account and interface being used. The Access Token is required in all requests except an [Access Token Exchange](#operation/accesstokenexchange) request, which generates an Access Token using an <samp>authToken</samp> and <samp>clientGuid</samp>.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "EA79FB05-3AA7-4500-AF9A-73F986FF2C1D"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/UTGControlledDevice6"
                  },
                  {
                    "$ref": "#/components/schemas/Token8"
                  },
                  {
                    "$ref": "#/components/schemas/P2PEviaIDTechDevice6"
                  },
                  {
                    "$ref": "#/components/schemas/P2PEMagstripeMSR6"
                  },
                  {
                    "$ref": "#/components/schemas/CardNumberUnencrypted6"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Transaction was processed",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GiftcardsActivateResponse"
                },
                "example": {
                  "result": [
                    {
                      "dateTime": "2021-04-15T09:18:23.283-07:00",
                      "amount": {
                        "total": 20
                      },
                      "card": {
                        "number": "XXXXXXXXXXXX1333",
                        "balance": {
                          "amount": 20
                        },
                        "token": {
                          "value": "8058471748050009"
                        },
                        "type": "YC"
                      },
                      "device": {
                        "terminalId": "1742"
                      },
                      "server": {
                        "name": "UTGAPI01CE"
                      },
                      "transaction": {
                        "authSource": "E",
                        "invoice": "192030",
                        "responseCode": "A"
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GiftcardsActivate400Error1"
                },
                "examples": {
                  "Error": {
                    "summary": "Gift Card Activate Failed",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "ACTIVATE FAILED iyc_activateCard: Invalid card or serial number 222 Mid(444444) Invoice(6200007001) ENGINE01CE",
                            "primaryCode": 9101,
                            "secondaryCode": 0,
                            "shortText": "ACTIVATE FAILED"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "504": {
            "description": "Timeout",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeoutResponse1"
                },
                "examples": {
                  "Error": {
                    "summary": "Timeout Error",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "Timeout waiting for response across the internet",
                            "primaryCode": 9951,
                            "secondaryCode": 0,
                            "shortText": "RESPONSE TIMEOUT"
                          },
                          "lighthouse": {
                            "data": "eyJwYXltZW50SWQiOiI4NWM0MWNhNy01NzVjLTQzNGUtODIyZi0xYzZlOTE0ZDAzODYiLCJyZW1haW5pbmdBbW91bnQiOjB9"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/giftcards/reload": {
      "post": {
        "tags": [
          "Gift Cards"
        ],
        "summary": "reload",
        "description": "This function requests that an active gift card be loaded with additional funds.\n\nTest URL&colon; https://utgapi.shift4test.com/api/rest/v1/giftcards/reload\n\nProduction URL&colon; https://utg.shift4api.net/api/rest/v1/giftcards/reload\n\nLocally Installed UTG URL&colon; https://[UTG_LISTENING_IP_ADDRESS]:[UTG_PORT]/api/rest/v1/giftcards/reload\n\nFor example, if the IP address of the UTG you are connecting to is 192.168.1.10, and the port of the REST interface is 277, then the URL would be&colon; https://192.168.1.10:277/api/rest/v1/giftcards/reload\n",
        "operationId": "reload",
        "parameters": [
          {
            "name": "InterfaceVersion",
            "in": "header",
            "description": "Refers to the version of the program or application that is sending requests to Shift4 Payments. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 11,
              "type": "string",
              "example": "2.1"
            }
          },
          {
            "name": "InterfaceName",
            "in": "header",
            "description": "Refers to the name of the program or application that is sending requests to Shift4 Payments. This should be the name of the program that you purchased or created. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 25,
              "type": "string",
              "example": "ForwardPOS"
            }
          },
          {
            "name": "CompanyName",
            "in": "header",
            "description": "Refers to the vendor or partner that designed and certified the interface. The information you use in this field should match what Shift Payments has on file or what was agreed upon in your Integration Plan. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 26,
              "type": "string",
              "example": "PAWS"
            }
          },
          {
            "name": "AccessToken",
            "in": "header",
            "description": "A security credential used to authenticate API requests and all [i4Go®](https://myportal.shift4.com/index.cfm?action=support.doc) authorizeClient/preauthorizeClient requests. An Access Token is the alias for the merchant account and interface being used. The Access Token is required in all requests except an [Access Token Exchange](#operation/accesstokenexchange) request, which generates an Access Token using an <samp>authToken</samp> and <samp>clientGuid</samp>.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "EA79FB05-3AA7-4500-AF9A-73F986FF2C1D"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/UTGControlledDevice6"
                  },
                  {
                    "$ref": "#/components/schemas/Token8"
                  },
                  {
                    "$ref": "#/components/schemas/P2PEviaIDTechDevice6"
                  },
                  {
                    "$ref": "#/components/schemas/P2PEMagstripeMSR6"
                  },
                  {
                    "$ref": "#/components/schemas/CardNumberUnencrypted6"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Transaction was processed",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GiftcardsReloadResponse"
                },
                "example": {
                  "result": [
                    {
                      "dateTime": "2021-04-15T09:18:23.283-07:00",
                      "amount": {
                        "total": 20
                      },
                      "card": {
                        "number": "XXXXXXXXXXXX1333",
                        "balance": {
                          "amount": 30
                        },
                        "token": {
                          "value": "0009hfqbt8b396x1"
                        },
                        "type": "YC"
                      },
                      "device": {
                        "terminalId": "1742"
                      },
                      "server": {
                        "name": "UTGAPI01CE"
                      },
                      "transaction": {
                        "authSource": "E",
                        "invoice": "192031",
                        "responseCode": "A"
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardTokenErrorResponse1"
                },
                "examples": {
                  "Error": {
                    "summary": "Terminal ID Error",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "Unique Identifier(8048471746471119) not found for Merchant 0000057984 ENGINE01CE",
                            "primaryCode": 9846,
                            "secondaryCode": 0,
                            "shortText": "BAD UNIQUE ID"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "504": {
            "description": "Timeout",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeoutResponse1"
                },
                "examples": {
                  "Error": {
                    "summary": "Timeout Error",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "Timeout waiting for response across the internet",
                            "primaryCode": 9951,
                            "secondaryCode": 0,
                            "shortText": "RESPONSE TIMEOUT"
                          },
                          "lighthouse": {
                            "data": "eyJwYXltZW50SWQiOiI4NWM0MWNhNy01NzVjLTQzNGUtODIyZi0xYzZlOTE0ZDAzODYiLCJyZW1haW5pbmdBbW91bnQiOjB9"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/giftcards/cashout": {
      "post": {
        "tags": [
          "Gift Cards"
        ],
        "summary": "cashout",
        "description": "This function requests that an active gift card be deactivated so that it can’t be used to process transactions.  Any current balance is removed from the card so that the funds can be returned to the consumer as cash.\n\nTest URL&colon; https://utgapi.shift4test.com/api/rest/v1/giftcards/cashout\n\nProduction URL&colon; https://utg.shift4api.net/api/rest/v1/giftcards/cashout\n\nLocally Installed UTG URL&colon; https://[UTG_LISTENING_IP_ADDRESS]:[UTG_PORT]/api/rest/v1/giftcards/cashout\n\nFor example, if the IP address of the UTG you are connecting to is 192.168.1.10, and the port of the REST interface is 277, then the URL would be&colon; https://192.168.1.10:277/api/rest/v1/giftcards/cashout\n",
        "operationId": "cashout",
        "parameters": [
          {
            "name": "InterfaceVersion",
            "in": "header",
            "description": "Refers to the version of the program or application that is sending requests to Shift4 Payments. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 11,
              "type": "string",
              "example": "2.1"
            }
          },
          {
            "name": "InterfaceName",
            "in": "header",
            "description": "Refers to the name of the program or application that is sending requests to Shift4 Payments. This should be the name of the program that you purchased or created. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 25,
              "type": "string",
              "example": "ForwardPOS"
            }
          },
          {
            "name": "CompanyName",
            "in": "header",
            "description": "Refers to the vendor or partner that designed and certified the interface. The information you use in this field should match what Shift Payments has on file or what was agreed upon in your Integration Plan. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 26,
              "type": "string",
              "example": "PAWS"
            }
          },
          {
            "name": "AccessToken",
            "in": "header",
            "description": "A security credential used to authenticate API requests and all [i4Go®](https://myportal.shift4.com/index.cfm?action=support.doc) authorizeClient/preauthorizeClient requests. An Access Token is the alias for the merchant account and interface being used. The Access Token is required in all requests except an [Access Token Exchange](#operation/accesstokenexchange) request, which generates an Access Token using an <samp>authToken</samp> and <samp>clientGuid</samp>.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "EA79FB05-3AA7-4500-AF9A-73F986FF2C1D"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/UTGControlledDevice7"
                  },
                  {
                    "$ref": "#/components/schemas/Token10"
                  },
                  {
                    "$ref": "#/components/schemas/P2PEviaIDTechDevice7"
                  },
                  {
                    "$ref": "#/components/schemas/P2PEMagstripeMSR7"
                  },
                  {
                    "$ref": "#/components/schemas/CardNumberUnencrypted7"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Transaction was processed",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GiftcardsCashoutResponse"
                },
                "example": {
                  "result": [
                    {
                      "dateTime": "2021-04-15T09:18:23.283-07:00",
                      "amount": {
                        "total": 20
                      },
                      "card": {
                        "entryMode": "1",
                        "number": "XXXXXXXXXXXX1333",
                        "present": "Y",
                        "deactivationReason": "lost or stolen",
                        "token": {
                          "value": "0009hfqbt8b396x1"
                        },
                        "type": "YC"
                      },
                      "device": {
                        "terminalId": "1742"
                      },
                      "server": {
                        "name": "UTGAPI01CE"
                      },
                      "transaction": {
                        "authSource": "E",
                        "invoice": "192034",
                        "responseCode": "A"
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardTokenErrorResponse1"
                },
                "examples": {
                  "Error": {
                    "summary": "Terminal ID Error",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "Unique Identifier(8048471746471119) not found for Merchant 0000057984 ENGINE01CE",
                            "primaryCode": 9846,
                            "secondaryCode": 0,
                            "shortText": "BAD UNIQUE ID"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "504": {
            "description": "Timeout",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeoutResponse1"
                },
                "examples": {
                  "Error": {
                    "summary": "Timeout Error",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "Timeout waiting for response across the internet",
                            "primaryCode": 9951,
                            "secondaryCode": 0,
                            "shortText": "RESPONSE TIMEOUT"
                          },
                          "lighthouse": {
                            "data": "eyJwYXltZW50SWQiOiI4NWM0MWNhNy01NzVjLTQzNGUtODIyZi0xYzZlOTE0ZDAzODYiLCJyZW1haW5pbmdBbW91bnQiOjB9"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/giftcards/allocate": {
      "post": {
        "tags": [
          "Gift Cards"
        ],
        "summary": "allocate",
        "description": "This function requests that a new gift card be allocated for use under a specific Program ID. The new card will be generated during the request and activated with the requested amount.\n\nTest URL&colon; https://utgapi.shift4test.com/api/rest/v1/giftcards/allocate\n\nProduction URL&colon; https://utg.shift4api.net/api/rest/v1/giftcards/allocate\n\nLocally Installed UTG URL&colon; https://[UTG_LISTENING_IP_ADDRESS]:[UTG_PORT]/api/rest/v1/giftcards/allocate\n\nFor example, if the IP address of the UTG you are connecting to is 192.168.1.10, and the port of the REST interface is 277, then the URL would be&colon; https://192.168.1.10:277/api/rest/v1/giftcards/allocate\n",
        "operationId": "allocate",
        "parameters": [
          {
            "name": "InterfaceVersion",
            "in": "header",
            "description": "Refers to the version of the program or application that is sending requests to Shift4 Payments. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 11,
              "type": "string",
              "example": "2.1"
            }
          },
          {
            "name": "InterfaceName",
            "in": "header",
            "description": "Refers to the name of the program or application that is sending requests to Shift4 Payments. This should be the name of the program that you purchased or created. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 25,
              "type": "string",
              "example": "ForwardPOS"
            }
          },
          {
            "name": "CompanyName",
            "in": "header",
            "description": "Refers to the vendor or partner that designed and certified the interface. The information you use in this field should match what Shift Payments has on file or what was agreed upon in your Integration Plan. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 26,
              "type": "string",
              "example": "PAWS"
            }
          },
          {
            "name": "AccessToken",
            "in": "header",
            "description": "A security credential used to authenticate API requests and all [i4Go®](https://myportal.shift4.com/index.cfm?action=support.doc) authorizeClient/preauthorizeClient requests. An Access Token is the alias for the merchant account and interface being used. The Access Token is required in all requests except an [Access Token Exchange](#operation/accesstokenexchange) request, which generates an Access Token using an <samp>authToken</samp> and <samp>clientGuid</samp>.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "EA79FB05-3AA7-4500-AF9A-73F986FF2C1D"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GiftcardsAllocateRequest"
              },
              "example": {
                "dateTime": "2021-04-15T09:18:23.283-07:00",
                "amount": {
                  "total": 25
                },
                "programId": "95",
                "transaction": {
                  "invoice": "192029"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Transaction was processed",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GiftcardsAllocateResponse"
                },
                "example": {
                  "result": [
                    {
                      "dateTime": "2021-04-15T09:18:23.283-07:00",
                      "amount": {
                        "total": 20
                      },
                      "card": {
                        "number": "1000083000004141494",
                        "type": "GC",
                        "balance": {
                          "amount": 20
                        }
                      },
                      "programId": "95",
                      "server": {
                        "name": "UTGAPI01CE"
                      },
                      "transaction": {
                        "invoice": "192029",
                        "responseCode": "A"
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GiftcardsAllocate400Error1"
                },
                "example": {
                  "result": [
                    {
                      "error": {
                        "longText": "ALLOCATE Failed: Need sample error",
                        "primaryCode": 9101,
                        "secondaryCode": 0,
                        "shortText": "ALLOCATE FAILED"
                      },
                      "server": {
                        "name": "U2API01CE"
                      }
                    }
                  ]
                }
              }
            }
          },
          "504": {
            "description": "Timeout",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeoutResponse1"
                },
                "examples": {
                  "Error": {
                    "summary": "Timeout Error",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "Timeout waiting for response across the internet",
                            "primaryCode": 9951,
                            "secondaryCode": 0,
                            "shortText": "RESPONSE TIMEOUT"
                          },
                          "lighthouse": {
                            "data": "eyJwYXltZW50SWQiOiI4NWM0MWNhNy01NzVjLTQzNGUtODIyZi0xYzZlOTE0ZDAzODYiLCJyZW1haW5pbmdBbW91bnQiOjB9"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/giftcards/balance": {
      "post": {
        "tags": [
          "Gift Cards"
        ],
        "summary": "balance",
        "description": "This function requests that a gift card’s balance, masked card number, expiration date, and discount percentage be returned. Merchants may be required to pay a fee for an inquiry request depending on their processor agreement.\n\nTest URL&colon; https://utgapi.shift4test.com/api/rest/v1/giftcards/balance\n\nProduction URL&colon; https://utg.shift4api.net/api/rest/v1/giftcards/balance\n\nLocally Installed UTG URL&colon; https://[UTG_LISTENING_IP_ADDRESS]:[UTG_PORT]/api/rest/v1/giftcards/balance\n\nFor example, if the IP address of the UTG you are connecting to is 192.168.1.10, and the port of the REST interface is 277, then the URL would be&colon; https://192.168.1.10:277/api/rest/v1/giftcards/balance\n",
        "operationId": "balance",
        "parameters": [
          {
            "name": "InterfaceVersion",
            "in": "header",
            "description": "Refers to the version of the program or application that is sending requests to Shift4 Payments. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 11,
              "type": "string",
              "example": "2.1"
            }
          },
          {
            "name": "InterfaceName",
            "in": "header",
            "description": "Refers to the name of the program or application that is sending requests to Shift4 Payments. This should be the name of the program that you purchased or created. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 25,
              "type": "string",
              "example": "ForwardPOS"
            }
          },
          {
            "name": "CompanyName",
            "in": "header",
            "description": "Refers to the vendor or partner that designed and certified the interface. The information you use in this field should match what Shift Payments has on file or what was agreed upon in your Integration Plan. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 26,
              "type": "string",
              "example": "PAWS"
            }
          },
          {
            "name": "AccessToken",
            "in": "header",
            "description": "A security credential used to authenticate API requests and all [i4Go®](https://myportal.shift4.com/index.cfm?action=support.doc) authorizeClient/preauthorizeClient requests. An Access Token is the alias for the merchant account and interface being used. The Access Token is required in all requests except an [Access Token Exchange](#operation/accesstokenexchange) request, which generates an Access Token using an <samp>authToken</samp> and <samp>clientGuid</samp>.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "EA79FB05-3AA7-4500-AF9A-73F986FF2C1D"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/UTGControlledDevice9"
                  },
                  {
                    "$ref": "#/components/schemas/Token14"
                  },
                  {
                    "$ref": "#/components/schemas/P2PEviaIDTechDevice9"
                  },
                  {
                    "$ref": "#/components/schemas/P2PEMagstripeMSR9"
                  },
                  {
                    "$ref": "#/components/schemas/CardNumberUnencrypted9"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Transaction was processed",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GiftcardsBalanceResponse"
                },
                "examples": {
                  "Active": {
                    "summary": "Active Card",
                    "value": {
                      "result": [
                        {
                          "dateTime": "2019-04-15T16:10:44.000-07:00",
                          "card": {
                            "balance": {
                              "amount": 20
                            },
                            "entryMode": "M",
                            "number": "XXXXXXXXXXXX1333",
                            "token": {
                              "value": "1333jd4nmj9p787m"
                            },
                            "type": "YC"
                          },
                          "server": {
                            "name": "U2API01CE"
                          },
                          "transaction": {
                            "authSource": "E",
                            "invoice": "6241932450",
                            "responseCode": "A"
                          }
                        }
                      ]
                    }
                  },
                  "Inactive": {
                    "summary": "Inactive Card",
                    "value": {
                      "result": [
                        {
                          "dateTime": "2021-04-15T09:18:23.283-07:00",
                          "card": {
                            "balance": {
                              "amount": 24.33
                            },
                            "deactivationReason": "Lost or Stolen",
                            "entryMode": "M",
                            "number": "XXXXXXXXXXXX8774",
                            "present": "Y",
                            "token": {
                              "value": "87743q5p3ffhv67y"
                            },
                            "type": "YC"
                          },
                          "server": {
                            "name": "U2API01CE"
                          },
                          "transaction": {
                            "authSource": "E",
                            "invoice": "192029",
                            "responseCode": "A"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardTokenErrorResponse1"
                },
                "examples": {
                  "Error": {
                    "summary": "Terminal ID Error",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "Unique Identifier(8048471746471119) not found for Merchant 0000057984 ENGINE01CE",
                            "primaryCode": 9846,
                            "secondaryCode": 0,
                            "shortText": "BAD UNIQUE ID"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "504": {
            "description": "Timeout",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeoutResponse1"
                },
                "examples": {
                  "Error": {
                    "summary": "Timeout Error",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "Timeout waiting for response across the internet",
                            "primaryCode": 9951,
                            "secondaryCode": 0,
                            "shortText": "RESPONSE TIMEOUT"
                          },
                          "lighthouse": {
                            "data": "eyJwYXltZW50SWQiOiI4NWM0MWNhNy01NzVjLTQzNGUtODIyZi0xYzZlOTE0ZDAzODYiLCJyZW1haW5pbmdBbW91bnQiOjB9"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/giftcards/cancel": {
      "post": {
        "tags": [
          "Gift Cards"
        ],
        "summary": "cancel",
        "description": "This function attempts to undo the last /giftcards/* request that was made against a gift card or private label card.  For example, an Activate or Reload request may eligible for cancellation.  Some processors do not support this functionality.  This endpoint cannot be used to cancel a sale or authorization against a gift card - the Void request should be used for that scenario.\n\n\nTest URL&colon; https://utgapi.shift4test.com/api/rest/v1/giftcards/cancel\n\nProduction URL&colon; https://utg.shift4api.net/api/rest/v1/giftcards/cancel\n\nLocally Installed UTG URL&colon; https://[UTG_LISTENING_IP_ADDRESS]:[UTG_PORT]/api/rest/v1/giftcards/cancel\n\nFor example, if the IP address of the UTG you are connecting to is 192.168.1.10, and the port of the REST interface is 277, then the URL would be&colon; https://192.168.1.10:277/api/rest/v1/giftcards/cancel\n",
        "operationId": "cancel",
        "parameters": [
          {
            "name": "InterfaceVersion",
            "in": "header",
            "description": "Refers to the version of the program or application that is sending requests to Shift4 Payments. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 11,
              "type": "string",
              "example": "2.1"
            }
          },
          {
            "name": "InterfaceName",
            "in": "header",
            "description": "Refers to the name of the program or application that is sending requests to Shift4 Payments. This should be the name of the program that you purchased or created. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 25,
              "type": "string",
              "example": "ForwardPOS"
            }
          },
          {
            "name": "CompanyName",
            "in": "header",
            "description": "Refers to the vendor or partner that designed and certified the interface. The information you use in this field should match what Shift Payments has on file or what was agreed upon in your Integration Plan. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 26,
              "type": "string",
              "example": "PAWS"
            }
          },
          {
            "name": "AccessToken",
            "in": "header",
            "description": "A security credential used to authenticate API requests and all [i4Go®](https://myportal.shift4.com/index.cfm?action=support.doc) authorizeClient/preauthorizeClient requests. An Access Token is the alias for the merchant account and interface being used. The Access Token is required in all requests except an [Access Token Exchange](#operation/accesstokenexchange) request, which generates an Access Token using an <samp>authToken</samp> and <samp>clientGuid</samp>.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "EA79FB05-3AA7-4500-AF9A-73F986FF2C1D"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GiftcardsCancelRequest"
              },
              "example": {
                "dateTime": "2021-04-15T09:18:23.283-07:00",
                "card": {
                  "token": {
                    "value": "87743q5p3ffhv67y"
                  }
                },
                "transaction": {
                  "invoice": "192029"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Transaction was processed",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GiftcardsCancelResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardTokenErrorResponse1"
                },
                "examples": {
                  "Error": {
                    "summary": "Terminal ID Error",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "Unique Identifier(8048471746471119) not found for Merchant 0000057984 ENGINE01CE",
                            "primaryCode": 9846,
                            "secondaryCode": 0,
                            "shortText": "BAD UNIQUE ID"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "504": {
            "description": "Timeout",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeoutResponse1"
                },
                "examples": {
                  "Error": {
                    "summary": "Timeout Error",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "Timeout waiting for response across the internet",
                            "primaryCode": 9951,
                            "secondaryCode": 0,
                            "shortText": "RESPONSE TIMEOUT"
                          },
                          "lighthouse": {
                            "data": "eyJwYXltZW50SWQiOiI4NWM0MWNhNy01NzVjLTQzNGUtODIyZi0xYzZlOTE0ZDAzODYiLCJyZW1haW5pbmdBbW91bnQiOjB9"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/tokens/duplicate": {
      "post": {
        "tags": [
          "Tokens"
        ],
        "summary": "tokensduplicate",
        "description": "This function requests that a new card token be generated using an existing card token. This request can be used to deposit a card token into a Global TokenStore or as a means to continue using a token that is about to expire. The card’s short-term data (if sent by the interface) will be stored until it is used or for the period configured in the merchant’s [Lighthouse Transaction Manager](https://ltm.shift4test.com/) account.\n\n<b>Note: This request only works for TrueToken style tokens. It will not work for Global Token Vault style tokens.</b>\n\nTest URL&colon; https://utgapi.shift4test.com/api/rest/v1/tokens/duplicate\n\nProduction URL&colon; https://utg.shift4api.net/api/rest/v1/tokens/duplicate\n\nLocally Installed UTG URL&colon; https://[UTG_LISTENING_IP_ADDRESS]:[UTG_PORT]/api/rest/v1/tokens/duplicate\n\nFor example, if the IP address of the UTG you are connecting to is 192.168.1.10, and the port of the REST interface is 277, then the URL would be&colon; https://192.168.1.10:277/api/rest/v1/tokens/duplicate\n",
        "operationId": "tokensduplicate",
        "parameters": [
          {
            "name": "InterfaceVersion",
            "in": "header",
            "description": "Refers to the version of the program or application that is sending requests to Shift4 Payments. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 11,
              "type": "string",
              "example": "2.1"
            }
          },
          {
            "name": "InterfaceName",
            "in": "header",
            "description": "Refers to the name of the program or application that is sending requests to Shift4 Payments. This should be the name of the program that you purchased or created. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 25,
              "type": "string",
              "example": "ForwardPOS"
            }
          },
          {
            "name": "CompanyName",
            "in": "header",
            "description": "Refers to the vendor or partner that designed and certified the interface. The information you use in this field should match what Shift Payments has on file or what was agreed upon in your Integration Plan. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 26,
              "type": "string",
              "example": "PAWS"
            }
          },
          {
            "name": "AccessToken",
            "in": "header",
            "description": "A security credential used to authenticate API requests and all [i4Go®](https://myportal.shift4.com/index.cfm?action=support.doc) authorizeClient/preauthorizeClient requests. An Access Token is the alias for the merchant account and interface being used. The Access Token is required in all requests except an [Access Token Exchange](#operation/accesstokenexchange) request, which generates an Access Token using an <samp>authToken</samp> and <samp>clientGuid</samp>.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "EA79FB05-3AA7-4500-AF9A-73F986FF2C1D"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokensDuplicateRequest"
              },
              "examples": {
                "Basic": {
                  "value": {
                    "dateTime": "2021-04-15T09:18:23.283-07:00",
                    "card": {
                      "token": {
                        "serialNumber": "266",
                        "value": "8048471746471119"
                      }
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Request was processed",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokensDuplicateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardTokenErrorResponse1"
                },
                "examples": {
                  "Error": {
                    "summary": "Terminal ID Error",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "Unique Identifier(8048471746471119) not found for Merchant 0000057984 ENGINE01CE",
                            "primaryCode": 9846,
                            "secondaryCode": 0,
                            "shortText": "BAD UNIQUE ID"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "504": {
            "description": "Timeout",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeoutResponse1"
                },
                "examples": {
                  "Error": {
                    "summary": "Timeout Error",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "Timeout waiting for response across the internet",
                            "primaryCode": 9951,
                            "secondaryCode": 0,
                            "shortText": "RESPONSE TIMEOUT"
                          },
                          "lighthouse": {
                            "data": "eyJwYXltZW50SWQiOiI4NWM0MWNhNy01NzVjLTQzNGUtODIyZi0xYzZlOTE0ZDAzODYiLCJyZW1haW5pbmdBbW91bnQiOjB9"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/tokens/universaltoken": {
      "get": {
        "tags": [
          "Tokens"
        ],
        "summary": "tokensuniversaltoken",
        "description": "This function requests that the existing universal token for a card be returned.\n\nTest URL&colon; https://utgapi.shift4test.com/api/rest/v1/tokens/universaltoken\n\nProduction URL&colon; https://utg.shift4api.net/api/rest/v1/tokens/universaltoken\n\nLocally Installed UTG URL&colon; https://[UTG_LISTENING_IP_ADDRESS]:[UTG_PORT]/api/rest/v1/tokens/universaltoken\n\nFor example, if the IP address of the UTG you are connecting to is 192.168.1.10, and the port of the REST interface is 277, then the URL would be&colon; https://192.168.1.10:277/api/rest/v1/tokens/universaltoken\n",
        "operationId": "tokensuniversaltoken",
        "parameters": [
          {
            "name": "InterfaceVersion",
            "in": "header",
            "description": "Refers to the version of the program or application that is sending requests to Shift4 Payments. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 11,
              "type": "string",
              "example": "2.1"
            }
          },
          {
            "name": "InterfaceName",
            "in": "header",
            "description": "Refers to the name of the program or application that is sending requests to Shift4 Payments. This should be the name of the program that you purchased or created. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 25,
              "type": "string",
              "example": "ForwardPOS"
            }
          },
          {
            "name": "CompanyName",
            "in": "header",
            "description": "Refers to the vendor or partner that designed and certified the interface. The information you use in this field should match what Shift Payments has on file or what was agreed upon in your Integration Plan. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 26,
              "type": "string",
              "example": "PAWS"
            }
          },
          {
            "name": "AccessToken",
            "in": "header",
            "description": "A security credential used to authenticate API requests and all [i4Go®](https://myportal.shift4.com/index.cfm?action=support.doc) authorizeClient/preauthorizeClient requests. An Access Token is the alias for the merchant account and interface being used. The Access Token is required in all requests except an [Access Token Exchange](#operation/accesstokenexchange) request, which generates an Access Token using an <samp>authToken</samp> and <samp>clientGuid</samp>.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "EA79FB05-3AA7-4500-AF9A-73F986FF2C1D"
            }
          },
          {
            "name": "CardNumber",
            "in": "header",
            "description": "##### Conditional: Send only when card data is manually entered. This field should not be specified when using an encrypted device.\n\nThe payment card number. This field will always be masked when returned in a response.",
            "style": "simple",
            "schema": {
              "maxLength": 32,
              "type": "string",
              "example": "4321000000001119"
            }
          },
          {
            "name": "P2PEData",
            "in": "header",
            "description": "The full output of a P2PE keypad/magnetic swipe reader (MSR).",
            "style": "simple",
            "schema": {
              "maxLength": 2048,
              "type": "string"
            }
          },
          {
            "name": "P2PEFormat",
            "in": "header",
            "description": "Classifies the type of payment device being used for P2PE.\n\nValue|Description\n-----|-----------\n01   | IDTech Enhanced Encryption format, USB KB mode\n02   | IDTech Enhanced Encryption format, USB HID mode\n03   | Ingenico format\n04   | VeriFone format\n05   | Shift4 Payments 3DES DUKPT format",
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/P2PEFormat1"
            }
          },
          {
            "name": "P2PEKsn",
            "in": "header",
            "description": "##### Conditional: Required when <samp>p2pe.format</samp> == \"05\"\n\nThe key serial number which was used to encrypt the P2PE data.",
            "style": "simple",
            "schema": {
              "maxLength": 20,
              "type": "string",
              "example": "6299495001100E200041"
            }
          },
          {
            "name": "SerialNumber",
            "in": "header",
            "description": "In requests that require the use of a shared card token that is held by another merchant account, such as in TokenStore or TokenShare®, this field is used to specify the serial number for the account where the card token is stored.",
            "style": "simple",
            "schema": {
              "maxLength": 10,
              "type": "string",
              "example": "266"
            }
          },
          {
            "name": "Token",
            "in": "header",
            "description": "This field is used to specify the token for the payment method.",
            "style": "simple",
            "schema": {
              "maxLength": 16,
              "type": "string",
              "example": "8048471746471119"
            }
          },
          {
            "name": "TrackData",
            "in": "header",
            "description": "##### Conditional: Send in the initial authorization/sale request when processing a swiped MSR transaction. This field is not specified when using True P2PE® (point-to-point encryption) or a UTG-controlled PIN pad.\n\nCard swipe data exactly as read by an MSR.",
            "style": "simple",
            "schema": {
              "maxLength": 128,
              "type": "string",
              "example": ";4321000000001119=2212201999999?"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was processed",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokensUniversaltokenResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse1"
                }
              }
            }
          },
          "504": {
            "description": "Timeout",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeoutResponse1"
                },
                "examples": {
                  "Error": {
                    "summary": "Timeout Error",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "Timeout waiting for response across the internet",
                            "primaryCode": 9951,
                            "secondaryCode": 0,
                            "shortText": "RESPONSE TIMEOUT"
                          },
                          "lighthouse": {
                            "data": "eyJwYXltZW50SWQiOiI4NWM0MWNhNy01NzVjLTQzNGUtODIyZi0xYzZlOTE0ZDAzODYiLCJyZW1haW5pbmdBbW91bnQiOjB9"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/tokens/add": {
      "post": {
        "tags": [
          "Tokens"
        ],
        "summary": "tokensadd",
        "description": "This function requests that CHD be added to the Global Token Vault and  that a card token be returned for future use. This function cannot be  used for EMV processing.\n\nTest URL&colon; https://utgapi.shift4test.com/api/rest/v1/tokens/add\n\nProduction URL&colon; https://utg.shift4api.net/api/rest/v1/tokens/add\n\nLocally Installed UTG URL&colon; https://[UTG_LISTENING_IP_ADDRESS]:[UTG_PORT]/api/rest/v1/tokens/add\n\nFor example, if the IP address of the UTG you are connecting to is 192.168.1.10, and the port of the REST interface is 277, then the URL would be&colon; https://192.168.1.10:277/api/rest/v1/tokens/add\n",
        "operationId": "tokensadd",
        "parameters": [
          {
            "name": "InterfaceVersion",
            "in": "header",
            "description": "Refers to the version of the program or application that is sending requests to Shift4 Payments. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 11,
              "type": "string",
              "example": "2.1"
            }
          },
          {
            "name": "InterfaceName",
            "in": "header",
            "description": "Refers to the name of the program or application that is sending requests to Shift4 Payments. This should be the name of the program that you purchased or created. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 25,
              "type": "string",
              "example": "ForwardPOS"
            }
          },
          {
            "name": "CompanyName",
            "in": "header",
            "description": "Refers to the vendor or partner that designed and certified the interface. The information you use in this field should match what Shift Payments has on file or what was agreed upon in your Integration Plan. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 26,
              "type": "string",
              "example": "PAWS"
            }
          },
          {
            "name": "AccessToken",
            "in": "header",
            "description": "A security credential used to authenticate API requests and all [i4Go®](https://myportal.shift4.com/index.cfm?action=support.doc) authorizeClient/preauthorizeClient requests. An Access Token is the alias for the merchant account and interface being used. The Access Token is required in all requests except an [Access Token Exchange](#operation/accesstokenexchange) request, which generates an Access Token using an <samp>authToken</samp> and <samp>clientGuid</samp>.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "EA79FB05-3AA7-4500-AF9A-73F986FF2C1D"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/UTGControlledDevice5"
                  },
                  {
                    "$ref": "#/components/schemas/P2PEviaIDTechDevice5"
                  },
                  {
                    "$ref": "#/components/schemas/P2PEMagstripeMSR5"
                  },
                  {
                    "$ref": "#/components/schemas/CardNumberUnencrypted5"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Request was processed",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokensAddResponse"
                },
                "example": {
                  "result": [
                    {
                      "dateTime": "2021-04-15T09:18:23.283-07:00",
                      "card": {
                        "entryMode": "2",
                        "number": "XXXXXXXXXXX2221",
                        "token": {
                          "value": "8038471748812221"
                        },
                        "type": "AX"
                      },
                      "device": {
                        "terminalId": "1742"
                      },
                      "server": {
                        "name": "U2API01CE"
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse1"
                }
              }
            }
          },
          "504": {
            "description": "Timeout",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeoutResponse1"
                },
                "examples": {
                  "Error": {
                    "summary": "Timeout Error",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "Timeout waiting for response across the internet",
                            "primaryCode": 9951,
                            "secondaryCode": 0,
                            "shortText": "RESPONSE TIMEOUT"
                          },
                          "lighthouse": {
                            "data": "eyJwYXltZW50SWQiOiI4NWM0MWNhNy01NzVjLTQzNGUtODIyZi0xYzZlOTE0ZDAzODYiLCJyZW1haW5pbmdBbW91bnQiOjB9"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/tokens/4words": {
      "post": {
        "tags": [
          "Tokens"
        ],
        "summary": "tokens4words",
        "description": "This function is used to generate a unique combination of four words that can be used to reference cardholder data (CHD).\n\nTest URL&colon; https://utgapi.shift4test.com/api/rest/v1/tokens/4words\n\nProduction URL&colon; https://utg.shift4api.net/api/rest/v1/tokens/4words\n\nLocally Installed UTG URL&colon; https://[UTG_LISTENING_IP_ADDRESS]:[UTG_PORT]/api/rest/v1/tokens/4words\n\nFor example, if the IP address of the UTG you are connecting to is 192.168.1.10, and the port of the REST interface is 277, then the URL would be&colon; https://192.168.1.10:277/api/rest/v1/tokens/4words\n",
        "operationId": "tokens4words",
        "parameters": [
          {
            "name": "InterfaceVersion",
            "in": "header",
            "description": "Refers to the version of the program or application that is sending requests to Shift4 Payments. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 11,
              "type": "string",
              "example": "2.1"
            }
          },
          {
            "name": "InterfaceName",
            "in": "header",
            "description": "Refers to the name of the program or application that is sending requests to Shift4 Payments. This should be the name of the program that you purchased or created. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 25,
              "type": "string",
              "example": "ForwardPOS"
            }
          },
          {
            "name": "CompanyName",
            "in": "header",
            "description": "Refers to the vendor or partner that designed and certified the interface. The information you use in this field should match what Shift Payments has on file or what was agreed upon in your Integration Plan. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 26,
              "type": "string",
              "example": "PAWS"
            }
          },
          {
            "name": "AccessToken",
            "in": "header",
            "description": "A security credential used to authenticate API requests and all [i4Go®](https://myportal.shift4.com/index.cfm?action=support.doc) authorizeClient/preauthorizeClient requests. An Access Token is the alias for the merchant account and interface being used. The Access Token is required in all requests except an [Access Token Exchange](#operation/accesstokenexchange) request, which generates an Access Token using an <samp>authToken</samp> and <samp>clientGuid</samp>.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "EA79FB05-3AA7-4500-AF9A-73F986FF2C1D"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Tokens4wordsRequest"
              },
              "examples": {
                "Token": {
                  "summary": "Using token",
                  "value": {
                    "dateTime": "2021-04-15T09:18:23.283-07:00",
                    "card": {
                      "token": {
                        "value": "8048471746471119"
                      }
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Request was processed",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tokens4wordsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardTokenErrorResponse1"
                },
                "examples": {
                  "Error": {
                    "summary": "Terminal ID Error",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "Unique Identifier(8048471746471119) not found for Merchant 0000057984 ENGINE01CE",
                            "primaryCode": 9846,
                            "secondaryCode": 0,
                            "shortText": "BAD UNIQUE ID"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "504": {
            "description": "Timeout",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeoutResponse1"
                },
                "examples": {
                  "Error": {
                    "summary": "Timeout Error",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "Timeout waiting for response across the internet",
                            "primaryCode": 9951,
                            "secondaryCode": 0,
                            "shortText": "RESPONSE TIMEOUT"
                          },
                          "lighthouse": {
                            "data": "eyJwYXltZW50SWQiOiI4NWM0MWNhNy01NzVjLTQzNGUtODIyZi0xYzZlOTE0ZDAzODYiLCJyZW1haW5pbmdBbW91bnQiOjB9"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/merchants/merchant": {
      "get": {
        "tags": [
          "Merchants"
        ],
        "summary": "merchantsmerchant",
        "description": "Used to request information about the merchant.\n\nTest URL&colon; https://utgapi.shift4test.com/api/rest/v1/merchants/merchant\n\nProduction URL&colon; https://utg.shift4api.net/api/rest/v1/merchants/merchant\n\nLocally Installed UTG URL&colon; https://[UTG_LISTENING_IP_ADDRESS]:[UTG_PORT]/api/rest/v1/merchants/merchant\n\nFor example, if the IP address of the UTG you are connecting to is 192.168.1.10, and the port of the REST interface is 277, then the URL would be&colon; https://192.168.1.10:277/api/rest/v1/merchants/merchant\n",
        "operationId": "merchantsmerchant",
        "parameters": [
          {
            "name": "InterfaceVersion",
            "in": "header",
            "description": "Refers to the version of the program or application that is sending requests to Shift4 Payments. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 11,
              "type": "string",
              "example": "2.1"
            }
          },
          {
            "name": "InterfaceName",
            "in": "header",
            "description": "Refers to the name of the program or application that is sending requests to Shift4 Payments. This should be the name of the program that you purchased or created. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 25,
              "type": "string",
              "example": "ForwardPOS"
            }
          },
          {
            "name": "CompanyName",
            "in": "header",
            "description": "Refers to the vendor or partner that designed and certified the interface. The information you use in this field should match what Shift Payments has on file or what was agreed upon in your Integration Plan. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 26,
              "type": "string",
              "example": "PAWS"
            }
          },
          {
            "name": "AccessToken",
            "in": "header",
            "description": "A security credential used to authenticate API requests and all [i4Go®](https://myportal.shift4.com/index.cfm?action=support.doc) authorizeClient/preauthorizeClient requests. An Access Token is the alias for the merchant account and interface being used. The Access Token is required in all requests except an [Access Token Exchange](#operation/accesstokenexchange) request, which generates an Access Token using an <samp>authToken</samp> and <samp>clientGuid</samp>.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "EA79FB05-3AA7-4500-AF9A-73F986FF2C1D"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was processed",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MerchantsMerchantResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MerchantsMerchant400Error1"
                },
                "examples": {
                  "Error": {
                    "summary": "AccessToken Not Found",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "AccessToken not found ENGINE01CE",
                            "primaryCode": 9862,
                            "secondaryCode": 0,
                            "shortText": "AccessToken"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "504": {
            "description": "Timeout",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeoutResponse1"
                },
                "examples": {
                  "Error": {
                    "summary": "Timeout Error",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "Timeout waiting for response across the internet",
                            "primaryCode": 9951,
                            "secondaryCode": 0,
                            "shortText": "RESPONSE TIMEOUT"
                          },
                          "lighthouse": {
                            "data": "eyJwYXltZW50SWQiOiI4NWM0MWNhNy01NzVjLTQzNGUtODIyZi0xYzZlOTE0ZDAzODYiLCJyZW1haW5pbmdBbW91bnQiOjB9"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/cards/identify": {
      "post": {
        "tags": [
          "Cards"
        ],
        "summary": "cardsidentify",
        "description": "This function is used to request and return the card type.\n\nTest URL&colon; https://utgapi.shift4test.com/api/rest/v1/cards/identify\n\nProduction URL&colon; https://utg.shift4api.net/api/rest/v1/cards/identify\n\nLocally Installed UTG URL&colon; https://[UTG_LISTENING_IP_ADDRESS]:[UTG_PORT]/api/rest/v1/cards/identify\n\nFor example, if the IP address of the UTG you are connecting to is 192.168.1.10, and the port of the REST interface is 277, then the URL would be&colon; https://192.168.1.10:277/api/rest/v1/cards/identify\n",
        "operationId": "cardsidentify",
        "parameters": [
          {
            "name": "InterfaceVersion",
            "in": "header",
            "description": "Refers to the version of the program or application that is sending requests to Shift4 Payments. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 11,
              "type": "string",
              "example": "2.1"
            }
          },
          {
            "name": "InterfaceName",
            "in": "header",
            "description": "Refers to the name of the program or application that is sending requests to Shift4 Payments. This should be the name of the program that you purchased or created. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 25,
              "type": "string",
              "example": "ForwardPOS"
            }
          },
          {
            "name": "CompanyName",
            "in": "header",
            "description": "Refers to the vendor or partner that designed and certified the interface. The information you use in this field should match what Shift Payments has on file or what was agreed upon in your Integration Plan. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 26,
              "type": "string",
              "example": "PAWS"
            }
          },
          {
            "name": "AccessToken",
            "in": "header",
            "description": "A security credential used to authenticate API requests and all [i4Go®](https://myportal.shift4.com/index.cfm?action=support.doc) authorizeClient/preauthorizeClient requests. An Access Token is the alias for the merchant account and interface being used. The Access Token is required in all requests except an [Access Token Exchange](#operation/accesstokenexchange) request, which generates an Access Token using an <samp>authToken</samp> and <samp>clientGuid</samp>.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "EA79FB05-3AA7-4500-AF9A-73F986FF2C1D"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/UTGControlledDevice13"
                  },
                  {
                    "$ref": "#/components/schemas/Token21"
                  },
                  {
                    "$ref": "#/components/schemas/P2PEviaIDTechDevice13"
                  },
                  {
                    "$ref": "#/components/schemas/P2PEMagstripeMSR13"
                  },
                  {
                    "$ref": "#/components/schemas/P2PEEMV6"
                  },
                  {
                    "$ref": "#/components/schemas/CardNumberUnencrypted13"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Request was processed",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardsIdentifyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse1"
                }
              }
            }
          },
          "504": {
            "description": "Timeout",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeoutResponse1"
                },
                "examples": {
                  "Error": {
                    "summary": "Timeout Error",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "Timeout waiting for response across the internet",
                            "primaryCode": 9951,
                            "secondaryCode": 0,
                            "shortText": "RESPONSE TIMEOUT"
                          },
                          "lighthouse": {
                            "data": "eyJwYXltZW50SWQiOiI4NWM0MWNhNy01NzVjLTQzNGUtODIyZi0xYzZlOTE0ZDAzODYiLCJyZW1haW5pbmdBbW91bnQiOjB9"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/cards/verify": {
      "post": {
        "tags": [
          "Cards"
        ],
        "summary": "cardsverify",
        "description": "This function is used to request card validation by going online to verify the card information with the processor. If Address Verification System (AVS) and/or Card Security Code (CSC) data are sent in the request, that information will also be validated.\n\nTest URL&colon; https://utgapi.shift4test.com/api/rest/v1/cards/verify\n\nProduction URL&colon; https://utg.shift4api.net/api/rest/v1/cards/verify\n\nLocally Installed UTG URL&colon; https://[UTG_LISTENING_IP_ADDRESS]:[UTG_PORT]/api/rest/v1/cards/verify\n\nFor example, if the IP address of the UTG you are connecting to is 192.168.1.10, and the port of the REST interface is 277, then the URL would be&colon; https://192.168.1.10:277/api/rest/v1/cards/verify\n",
        "operationId": "cardsverify",
        "parameters": [
          {
            "name": "InterfaceVersion",
            "in": "header",
            "description": "Refers to the version of the program or application that is sending requests to Shift4 Payments. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 11,
              "type": "string",
              "example": "2.1"
            }
          },
          {
            "name": "InterfaceName",
            "in": "header",
            "description": "Refers to the name of the program or application that is sending requests to Shift4 Payments. This should be the name of the program that you purchased or created. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 25,
              "type": "string",
              "example": "ForwardPOS"
            }
          },
          {
            "name": "CompanyName",
            "in": "header",
            "description": "Refers to the vendor or partner that designed and certified the interface. The information you use in this field should match what Shift Payments has on file or what was agreed upon in your Integration Plan. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 26,
              "type": "string",
              "example": "PAWS"
            }
          },
          {
            "name": "AccessToken",
            "in": "header",
            "description": "A security credential used to authenticate API requests and all [i4Go®](https://myportal.shift4.com/index.cfm?action=support.doc) authorizeClient/preauthorizeClient requests. An Access Token is the alias for the merchant account and interface being used. The Access Token is required in all requests except an [Access Token Exchange](#operation/accesstokenexchange) request, which generates an Access Token using an <samp>authToken</samp> and <samp>clientGuid</samp>.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "EA79FB05-3AA7-4500-AF9A-73F986FF2C1D"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/UTGControlledDevice12"
                  },
                  {
                    "$ref": "#/components/schemas/Token20"
                  },
                  {
                    "$ref": "#/components/schemas/P2PEviaIDTechDevice12"
                  },
                  {
                    "$ref": "#/components/schemas/P2PEMagstripeMSR12"
                  },
                  {
                    "$ref": "#/components/schemas/P2PEEMV5"
                  },
                  {
                    "$ref": "#/components/schemas/CardNumberUnencrypted12"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Request was processed",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardsVerifyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse1"
                }
              }
            }
          },
          "504": {
            "description": "Timeout",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeoutResponse1"
                },
                "examples": {
                  "Error": {
                    "summary": "Timeout Error",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "Timeout waiting for response across the internet",
                            "primaryCode": 9951,
                            "secondaryCode": 0,
                            "shortText": "RESPONSE TIMEOUT"
                          },
                          "lighthouse": {
                            "data": "eyJwYXltZW50SWQiOiI4NWM0MWNhNy01NzVjLTQzNGUtODIyZi0xYzZlOTE0ZDAzODYiLCJyZW1haW5pbmdBbW91bnQiOjB9"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/devices/reset": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "devicesreset",
        "description": "This function is used to reset a UTG-controlled PIN pad to idle. When there is pending consumer input (e.g., waiting for the consumer to confirm the amount, swipe their card, select credit or debit, etc.), sending this request will cancel the request.\n\nLocally Installed UTG URL&colon; https://[UTG_LISTENING_IP_ADDRESS]:[UTG_PORT]/api/rest/v1/devices/reset\n\nFor example, if the IP address of the UTG you are connecting to is 192.168.1.10, and the port of the REST interface is 277, then the URL would be&colon; https://192.168.1.10:277/api/rest/v1/devices/reset\n",
        "operationId": "devicesreset",
        "parameters": [
          {
            "name": "InterfaceVersion",
            "in": "header",
            "description": "Refers to the version of the program or application that is sending requests to Shift4 Payments. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 11,
              "type": "string",
              "example": "2.1"
            }
          },
          {
            "name": "InterfaceName",
            "in": "header",
            "description": "Refers to the name of the program or application that is sending requests to Shift4 Payments. This should be the name of the program that you purchased or created. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 25,
              "type": "string",
              "example": "ForwardPOS"
            }
          },
          {
            "name": "CompanyName",
            "in": "header",
            "description": "Refers to the vendor or partner that designed and certified the interface. The information you use in this field should match what Shift Payments has on file or what was agreed upon in your Integration Plan. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 26,
              "type": "string",
              "example": "PAWS"
            }
          },
          {
            "name": "AccessToken",
            "in": "header",
            "description": "A security credential used to authenticate API requests and all [i4Go®](https://myportal.shift4.com/index.cfm?action=support.doc) authorizeClient/preauthorizeClient requests. An Access Token is the alias for the merchant account and interface being used. The Access Token is required in all requests except an [Access Token Exchange](#operation/accesstokenexchange) request, which generates an Access Token using an <samp>authToken</samp> and <samp>clientGuid</samp>.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "EA79FB05-3AA7-4500-AF9A-73F986FF2C1D"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DevicesResetRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Request was processed",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DevicesResetResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TerminalIDErrorResponse1"
                },
                "examples": {
                  "Error": {
                    "summary": "Terminal ID Error",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "Terminal(100) is not configured for any PinPad DEFAULT",
                            "primaryCode": 9956,
                            "secondaryCode": 0,
                            "shortText": "TID NO PINPAD"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "504": {
            "description": "Timeout",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeoutResponse1"
                },
                "examples": {
                  "Error": {
                    "summary": "Timeout Error",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "Timeout waiting for response across the internet",
                            "primaryCode": 9951,
                            "secondaryCode": 0,
                            "shortText": "RESPONSE TIMEOUT"
                          },
                          "lighthouse": {
                            "data": "eyJwYXltZW50SWQiOiI4NWM0MWNhNy01NzVjLTQzNGUtODIyZi0xYzZlOTE0ZDAzODYiLCJyZW1haW5pbmdBbW91bnQiOjB9"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/devices/initializereaders": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "devicesinitializereaders",
        "description": "This function is used to request a card swipe, insert, tap (if applicable), etc. on a UTG-controlled PIN pad before an [Authorization](#operation/authorization) or [Sale](#operation/sale) request.\n\nLocally Installed UTG URL&colon; https://[UTG_LISTENING_IP_ADDRESS]:[UTG_PORT]/api/rest/v1/devices/initializereaders\n\nFor example, if the IP address of the UTG you are connecting to is 192.168.1.10, and the port of the REST interface is 277, then the URL would be&colon; https://192.168.1.10:277/api/rest/v1/devices/initializereaders\n",
        "operationId": "devicesinitializereaders",
        "parameters": [
          {
            "name": "InterfaceVersion",
            "in": "header",
            "description": "Refers to the version of the program or application that is sending requests to Shift4 Payments. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 11,
              "type": "string",
              "example": "2.1"
            }
          },
          {
            "name": "InterfaceName",
            "in": "header",
            "description": "Refers to the name of the program or application that is sending requests to Shift4 Payments. This should be the name of the program that you purchased or created. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 25,
              "type": "string",
              "example": "ForwardPOS"
            }
          },
          {
            "name": "CompanyName",
            "in": "header",
            "description": "Refers to the vendor or partner that designed and certified the interface. The information you use in this field should match what Shift Payments has on file or what was agreed upon in your Integration Plan. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 26,
              "type": "string",
              "example": "PAWS"
            }
          },
          {
            "name": "AccessToken",
            "in": "header",
            "description": "A security credential used to authenticate API requests and all [i4Go®](https://myportal.shift4.com/index.cfm?action=support.doc) authorizeClient/preauthorizeClient requests. An Access Token is the alias for the merchant account and interface being used. The Access Token is required in all requests except an [Access Token Exchange](#operation/accesstokenexchange) request, which generates an Access Token using an <samp>authToken</samp> and <samp>clientGuid</samp>.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "EA79FB05-3AA7-4500-AF9A-73F986FF2C1D"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DevicesInitializereadersRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Request was processed",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DevicesInitializereadersResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TerminalIDErrorResponse1"
                },
                "examples": {
                  "Error": {
                    "summary": "Terminal ID Error",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "Terminal(100) is not configured for any PinPad DEFAULT",
                            "primaryCode": 9956,
                            "secondaryCode": 0,
                            "shortText": "TID NO PINPAD"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "504": {
            "description": "Timeout",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeoutResponse1"
                },
                "examples": {
                  "Error": {
                    "summary": "Timeout Error",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "Timeout waiting for response across the internet",
                            "primaryCode": 9951,
                            "secondaryCode": 0,
                            "shortText": "RESPONSE TIMEOUT"
                          },
                          "lighthouse": {
                            "data": "eyJwYXltZW50SWQiOiI4NWM0MWNhNy01NzVjLTQzNGUtODIyZi0xYzZlOTE0ZDAzODYiLCJyZW1haW5pbmdBbW91bnQiOjB9"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/devices/info": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "devicesinfo",
        "description": "This function is used to request information regarding the status of a specific UTG-controlled PIN pad. Depending on the type of device in use, this request may return a variety of device information in the response, including the types of encryption keys injected on the device.\n\nLocally Installed UTG URL&colon; https://[UTG_LISTENING_IP_ADDRESS]:[UTG_PORT]/api/rest/v1/devices/info\n\nFor example, if the IP address of the UTG you are connecting to is 192.168.1.10, and the port of the REST interface is 277, then the URL would be&colon; https://192.168.1.10:277/api/rest/v1/devices/info\n",
        "operationId": "devicesinfo",
        "parameters": [
          {
            "name": "TerminalId",
            "in": "header",
            "description": "The API Terminal ID configured in UTG TuneUp must be specified in this field.",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 32,
              "type": "string",
              "example": "1742"
            }
          },
          {
            "name": "InterfaceVersion",
            "in": "header",
            "description": "Refers to the version of the program or application that is sending requests to Shift4 Payments. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 11,
              "type": "string",
              "example": "2.1"
            }
          },
          {
            "name": "InterfaceName",
            "in": "header",
            "description": "Refers to the name of the program or application that is sending requests to Shift4 Payments. This should be the name of the program that you purchased or created. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 25,
              "type": "string",
              "example": "ForwardPOS"
            }
          },
          {
            "name": "CompanyName",
            "in": "header",
            "description": "Refers to the vendor or partner that designed and certified the interface. The information you use in this field should match what Shift Payments has on file or what was agreed upon in your Integration Plan. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 26,
              "type": "string",
              "example": "PAWS"
            }
          },
          {
            "name": "AccessToken",
            "in": "header",
            "description": "A security credential used to authenticate API requests and all [i4Go®](https://myportal.shift4.com/index.cfm?action=support.doc) authorizeClient/preauthorizeClient requests. An Access Token is the alias for the merchant account and interface being used. The Access Token is required in all requests except an [Access Token Exchange](#operation/accesstokenexchange) request, which generates an Access Token using an <samp>authToken</samp> and <samp>clientGuid</samp>.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "EA79FB05-3AA7-4500-AF9A-73F986FF2C1D"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was processed",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DevicesInfoResponse"
                },
                "examples": {
                  "Ingenico": {
                    "summary": "Ingenico Device",
                    "value": {
                      "result": [
                        {
                          "dateTime": "2021-04-15T09:18:23.283-07:00",
                          "device": {
                            "info": [
                              "NUMBER_MSR_SWIPES=1634",
                              "NUMBER_BAD_TRACK1_READS=85",
                              "NUMBER_BAD_TRACK2_READS=395",
                              "NUMBER_BAD_TRACK3_READS=337",
                              "NUMBER_SIGNATURE_TOTALS=0000",
                              "NUMBER_REBOOTS=0760",
                              "TERMINAL_NAME=iPP350",
                              "UNIT_SERIAL_NUMBER=2013016PT012622",
                              "OS_VERSION=5220",
                              "APPLICATION_VERSION=2156",
                              "SECURITY_LIBRARY_VERSION=0415",
                              "TDA_VERSION=1603",
                              "EFTL_VERSION=0000",
                              "EFTP_VERSION=0000",
                              "RAM_SIZE=8628",
                              "FLASH_SIZE=111064",
                              "MANUFACTURE_DATE=2013-01-16",
                              "CPEM_TYPE=1",
                              "PEN_STATUS=UNSUPPORTED_DEVICE",
                              "APPLICATION_NAME=Retail Base",
                              "MANUFACTURE_ID=INGNAR",
                              "DIGITIZER_VERSION=0000",
                              "MANUFACTURER_SERIAL_NUMBER=71429877",
                              "DUKPT0=F876543210016F8000F7",
                              "DUKPT4=FFFF49003614954000B9"
                            ],
                            "terminalId": "1742"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  },
                  "Verifone": {
                    "summary": "VeriFone Device",
                    "value": {
                      "result": [
                        {
                          "dateTime": "2021-04-15T09:18:23.283-07:00",
                          "device": {
                            "info": [
                              "APPLICATION_VERSION=4.9.2-20170530",
                              "XPI_VERSION=0052.00v-20170530",
                              "XPI_KERNEL_VERSION=000270000",
                              "OS_VERSION=MX200001/RFS30250600/",
                              "PACKAGES_INSTALLED=alsa-lib:1.0.0; busybox:1.2.6.2",
                              "GUI_MANAGER_VERSION=3.25",
                              "UNIT_ID=288-728-276/12000000",
                              "UNIT_MODEL=MX915",
                              "RFIDFW_VERSION=VOS-CTLS-4.02.04A",
                              "DEVICE_TIME=20210416180022",
                              "SECURE_PACKETS=AES128",
                              "DUKPT0=FFFF5B0999000220024F",
                              "ADE0=FFFF4950720008800875"
                            ],
                            "terminalId": "1742"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TerminalIDErrorResponse1"
                },
                "examples": {
                  "Error": {
                    "summary": "Terminal ID Error",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "Terminal(100) is not configured for any PinPad DEFAULT",
                            "primaryCode": 9956,
                            "secondaryCode": 0,
                            "shortText": "TID NO PINPAD"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "504": {
            "description": "Timeout",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeoutResponse1"
                },
                "examples": {
                  "Error": {
                    "summary": "Timeout Error",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "Timeout waiting for response across the internet",
                            "primaryCode": 9951,
                            "secondaryCode": 0,
                            "shortText": "RESPONSE TIMEOUT"
                          },
                          "lighthouse": {
                            "data": "eyJwYXltZW50SWQiOiI4NWM0MWNhNy01NzVjLTQzNGUtODIyZi0xYzZlOTE0ZDAzODYiLCJyZW1haW5pbmdBbW91bnQiOjB9"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/devices/lineitems": {
      "delete": {
        "tags": [
          "Devices"
        ],
        "summary": "devicesdeletelineitems",
        "description": "This function is used to clear the line items displayed on a UTG-controlled PIN pad.\n\nLocally Installed UTG URL&colon; https://[UTG_LISTENING_IP_ADDRESS]:[UTG_PORT]/api/rest/v1/devices/lineitems\n\nFor example, if the IP address of the UTG you are connecting to is 192.168.1.10, and the port of the REST interface is 277, then the URL would be&colon; https://192.168.1.10:277/api/rest/v1/devices/lineitems\n",
        "operationId": "devicesdeletelineitems",
        "parameters": [
          {
            "name": "TerminalId",
            "in": "header",
            "description": "The API Terminal ID configured in UTG TuneUp must be specified in this field.",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 32,
              "type": "string",
              "example": "1742"
            }
          },
          {
            "name": "InterfaceVersion",
            "in": "header",
            "description": "Refers to the version of the program or application that is sending requests to Shift4 Payments. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 11,
              "type": "string",
              "example": "2.1"
            }
          },
          {
            "name": "InterfaceName",
            "in": "header",
            "description": "Refers to the name of the program or application that is sending requests to Shift4 Payments. This should be the name of the program that you purchased or created. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 25,
              "type": "string",
              "example": "ForwardPOS"
            }
          },
          {
            "name": "CompanyName",
            "in": "header",
            "description": "Refers to the vendor or partner that designed and certified the interface. The information you use in this field should match what Shift Payments has on file or what was agreed upon in your Integration Plan. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 26,
              "type": "string",
              "example": "PAWS"
            }
          },
          {
            "name": "AccessToken",
            "in": "header",
            "description": "A security credential used to authenticate API requests and all [i4Go®](https://myportal.shift4.com/index.cfm?action=support.doc) authorizeClient/preauthorizeClient requests. An Access Token is the alias for the merchant account and interface being used. The Access Token is required in all requests except an [Access Token Exchange](#operation/accesstokenexchange) request, which generates an Access Token using an <samp>authToken</samp> and <samp>clientGuid</samp>.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "EA79FB05-3AA7-4500-AF9A-73F986FF2C1D"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was processed",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DevicesLineitemsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TerminalIDErrorResponse1"
                },
                "examples": {
                  "Error": {
                    "summary": "Terminal ID Error",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "Terminal(100) is not configured for any PinPad DEFAULT",
                            "primaryCode": 9956,
                            "secondaryCode": 0,
                            "shortText": "TID NO PINPAD"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "504": {
            "description": "Timeout",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeoutResponse1"
                },
                "examples": {
                  "Error": {
                    "summary": "Timeout Error",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "Timeout waiting for response across the internet",
                            "primaryCode": 9951,
                            "secondaryCode": 0,
                            "shortText": "RESPONSE TIMEOUT"
                          },
                          "lighthouse": {
                            "data": "eyJwYXltZW50SWQiOiI4NWM0MWNhNy01NzVjLTQzNGUtODIyZi0xYzZlOTE0ZDAzODYiLCJyZW1haW5pbmdBbW91bnQiOjB9"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "deviceslineitems",
        "description": "This function is used to display up to 10 line items on a UTG-controlled PIN pad. In additional Display Line Items requests, if the API Option APPENDLINEITEM is sent, the UTG will append the new line item(s) to the existing line item(s) displayed.\n\nLocally Installed UTG URL&colon; https://[UTG_LISTENING_IP_ADDRESS]:[UTG_PORT]/api/rest/v1/devices/lineitems\n\nFor example, if the IP address of the UTG you are connecting to is 192.168.1.10, and the port of the REST interface is 277, then the URL would be&colon; https://192.168.1.10:277/api/rest/v1/devices/lineitems\n",
        "operationId": "deviceslineitems",
        "parameters": [
          {
            "name": "InterfaceVersion",
            "in": "header",
            "description": "Refers to the version of the program or application that is sending requests to Shift4 Payments. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 11,
              "type": "string",
              "example": "2.1"
            }
          },
          {
            "name": "InterfaceName",
            "in": "header",
            "description": "Refers to the name of the program or application that is sending requests to Shift4 Payments. This should be the name of the program that you purchased or created. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 25,
              "type": "string",
              "example": "ForwardPOS"
            }
          },
          {
            "name": "CompanyName",
            "in": "header",
            "description": "Refers to the vendor or partner that designed and certified the interface. The information you use in this field should match what Shift Payments has on file or what was agreed upon in your Integration Plan. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 26,
              "type": "string",
              "example": "PAWS"
            }
          },
          {
            "name": "AccessToken",
            "in": "header",
            "description": "A security credential used to authenticate API requests and all [i4Go®](https://myportal.shift4.com/index.cfm?action=support.doc) authorizeClient/preauthorizeClient requests. An Access Token is the alias for the merchant account and interface being used. The Access Token is required in all requests except an [Access Token Exchange](#operation/accesstokenexchange) request, which generates an Access Token using an <samp>authToken</samp> and <samp>clientGuid</samp>.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "EA79FB05-3AA7-4500-AF9A-73F986FF2C1D"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DevicesLineitemsRequest"
              },
              "examples": {
                "standard": {
                  "summary": "Standard",
                  "value": {
                    "dateTime": "2021-04-15T09:18:23.283-07:00",
                    "device": {
                      "lineItems": [
                        "Hamburger",
                        "Fries",
                        "Soda",
                        "Cookie"
                      ],
                      "terminalId": "1742"
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Request was processed",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DevicesLineitemsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TerminalIDErrorResponse1"
                },
                "examples": {
                  "Error": {
                    "summary": "Terminal ID Error",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "Terminal(100) is not configured for any PinPad DEFAULT",
                            "primaryCode": 9956,
                            "secondaryCode": 0,
                            "shortText": "TID NO PINPAD"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "504": {
            "description": "Timeout",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeoutResponse1"
                },
                "examples": {
                  "Error": {
                    "summary": "Timeout Error",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "Timeout waiting for response across the internet",
                            "primaryCode": 9951,
                            "secondaryCode": 0,
                            "shortText": "RESPONSE TIMEOUT"
                          },
                          "lighthouse": {
                            "data": "eyJwYXltZW50SWQiOiI4NWM0MWNhNy01NzVjLTQzNGUtODIyZi0xYzZlOTE0ZDAzODYiLCJyZW1haW5pbmdBbW91bnQiOjB9"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/devices/promptcardread": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "devicespromptcardread",
        "description": "This function is used to prompt a P2PE-enabled, UTG-controlled PIN pad to request a pass-through card swipe, causing the output of the swipe to be returned directly to the interface without any action or validation by Shift4 Payments or the processor.\n\nLocally Installed UTG URL&colon; https://[UTG_LISTENING_IP_ADDRESS]:[UTG_PORT]/api/rest/v1/devices/promptcardread\n\nFor example, if the IP address of the UTG you are connecting to is 192.168.1.10, and the port of the REST interface is 277, then the URL would be&colon; https://192.168.1.10:277/api/rest/v1/devices/promptcardread\n",
        "operationId": "devicespromptcardread",
        "parameters": [
          {
            "name": "InterfaceVersion",
            "in": "header",
            "description": "Refers to the version of the program or application that is sending requests to Shift4 Payments. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 11,
              "type": "string",
              "example": "2.1"
            }
          },
          {
            "name": "InterfaceName",
            "in": "header",
            "description": "Refers to the name of the program or application that is sending requests to Shift4 Payments. This should be the name of the program that you purchased or created. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 25,
              "type": "string",
              "example": "ForwardPOS"
            }
          },
          {
            "name": "CompanyName",
            "in": "header",
            "description": "Refers to the vendor or partner that designed and certified the interface. The information you use in this field should match what Shift Payments has on file or what was agreed upon in your Integration Plan. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 26,
              "type": "string",
              "example": "PAWS"
            }
          },
          {
            "name": "AccessToken",
            "in": "header",
            "description": "A security credential used to authenticate API requests and all [i4Go®](https://myportal.shift4.com/index.cfm?action=support.doc) authorizeClient/preauthorizeClient requests. An Access Token is the alias for the merchant account and interface being used. The Access Token is required in all requests except an [Access Token Exchange](#operation/accesstokenexchange) request, which generates an Access Token using an <samp>authToken</samp> and <samp>clientGuid</samp>.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "EA79FB05-3AA7-4500-AF9A-73F986FF2C1D"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DevicesPromptcardreadRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Request was processed",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DevicesPromptcardreadResponse"
                },
                "examples": {
                  "ingenico": {
                    "summary": "Ingenico",
                    "value": {
                      "result": [
                        {
                          "dateTime": "2021-04-15T09:18:23.283-07:00",
                          "card": {
                            "entryMode": "1",
                            "number": "XXXXXXXXXXXX6186",
                            "type": "NS"
                          },
                          "p2pe": {
                            "data": "a%B369989****6186^DC/TRACK1 ONLY^2212101**************************??b?c;FFFF49003614954000BB:1:0072:8B997BF3896636D43593897B86C58A4C7B684B69C5DC150FF53882A15C34C3FCBCEBCFEA0FA68FAC3F0148431B3C6470514A20A5104AF853BDF4D1BD8EBD0E9FAB493176BD2614DC",
                            "format": "03"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TerminalIDErrorResponse1"
                },
                "examples": {
                  "Error": {
                    "summary": "Terminal ID Error",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "Terminal(100) is not configured for any PinPad DEFAULT",
                            "primaryCode": 9956,
                            "secondaryCode": 0,
                            "shortText": "TID NO PINPAD"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "504": {
            "description": "Timeout",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeoutResponse1"
                },
                "examples": {
                  "Error": {
                    "summary": "Timeout Error",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "Timeout waiting for response across the internet",
                            "primaryCode": 9951,
                            "secondaryCode": 0,
                            "shortText": "RESPONSE TIMEOUT"
                          },
                          "lighthouse": {
                            "data": "eyJwYXltZW50SWQiOiI4NWM0MWNhNy01NzVjLTQzNGUtODIyZi0xYzZlOTE0ZDAzODYiLCJyZW1haW5pbmdBbW91bnQiOjB9"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/devices/promptconfirmation": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "devicespromptconfirmation",
        "description": "This function is used to display text for a consumer’s confirmation on a UTG-controlled PIN pad.\n\nLocally Installed UTG URL&colon; https://[UTG_LISTENING_IP_ADDRESS]:[UTG_PORT]/api/rest/v1/devices/promptconfirmation\n\nFor example, if the IP address of the UTG you are connecting to is 192.168.1.10, and the port of the REST interface is 277, then the URL would be&colon; https://192.168.1.10:277/api/rest/v1/devices/promptconfirmation\n",
        "operationId": "devicespromptconfirmation",
        "parameters": [
          {
            "name": "InterfaceVersion",
            "in": "header",
            "description": "Refers to the version of the program or application that is sending requests to Shift4 Payments. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 11,
              "type": "string",
              "example": "2.1"
            }
          },
          {
            "name": "InterfaceName",
            "in": "header",
            "description": "Refers to the name of the program or application that is sending requests to Shift4 Payments. This should be the name of the program that you purchased or created. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 25,
              "type": "string",
              "example": "ForwardPOS"
            }
          },
          {
            "name": "CompanyName",
            "in": "header",
            "description": "Refers to the vendor or partner that designed and certified the interface. The information you use in this field should match what Shift Payments has on file or what was agreed upon in your Integration Plan. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 26,
              "type": "string",
              "example": "PAWS"
            }
          },
          {
            "name": "AccessToken",
            "in": "header",
            "description": "A security credential used to authenticate API requests and all [i4Go®](https://myportal.shift4.com/index.cfm?action=support.doc) authorizeClient/preauthorizeClient requests. An Access Token is the alias for the merchant account and interface being used. The Access Token is required in all requests except an [Access Token Exchange](#operation/accesstokenexchange) request, which generates an Access Token using an <samp>authToken</samp> and <samp>clientGuid</samp>.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "EA79FB05-3AA7-4500-AF9A-73F986FF2C1D"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DevicesPromptconfirmationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Request was processed",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DevicesPromptconfirmationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TerminalIDErrorResponse1"
                },
                "examples": {
                  "Error": {
                    "summary": "Terminal ID Error",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "Terminal(100) is not configured for any PinPad DEFAULT",
                            "primaryCode": 9956,
                            "secondaryCode": 0,
                            "shortText": "TID NO PINPAD"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "504": {
            "description": "Timeout",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeoutResponse1"
                },
                "examples": {
                  "Error": {
                    "summary": "Timeout Error",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "Timeout waiting for response across the internet",
                            "primaryCode": 9951,
                            "secondaryCode": 0,
                            "shortText": "RESPONSE TIMEOUT"
                          },
                          "lighthouse": {
                            "data": "eyJwYXltZW50SWQiOiI4NWM0MWNhNy01NzVjLTQzNGUtODIyZi0xYzZlOTE0ZDAzODYiLCJyZW1haW5pbmdBbW91bnQiOjB9"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/devices/promptinput": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "devicespromptinput",
        "description": "This function is used to prompt a UTG-controlled PIN pad to collect a specified value from a consumer. The interface will specify the value based on the <samp>device.promptInput.index</samp> field. Each request will collect one specified value; when multiple values need to be collected, separate requests must be sent.\n\nLocally Installed UTG URL&colon; https://[UTG_LISTENING_IP_ADDRESS]:[UTG_PORT]/api/rest/v1/devices/promptinput\n\nFor example, if the IP address of the UTG you are connecting to is 192.168.1.10, and the port of the REST interface is 277, then the URL would be&colon; https://192.168.1.10:277/api/rest/v1/devices/promptinput\n",
        "operationId": "devicespromptinput",
        "parameters": [
          {
            "name": "InterfaceVersion",
            "in": "header",
            "description": "Refers to the version of the program or application that is sending requests to Shift4 Payments. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 11,
              "type": "string",
              "example": "2.1"
            }
          },
          {
            "name": "InterfaceName",
            "in": "header",
            "description": "Refers to the name of the program or application that is sending requests to Shift4 Payments. This should be the name of the program that you purchased or created. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 25,
              "type": "string",
              "example": "ForwardPOS"
            }
          },
          {
            "name": "CompanyName",
            "in": "header",
            "description": "Refers to the vendor or partner that designed and certified the interface. The information you use in this field should match what Shift Payments has on file or what was agreed upon in your Integration Plan. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 26,
              "type": "string",
              "example": "PAWS"
            }
          },
          {
            "name": "AccessToken",
            "in": "header",
            "description": "A security credential used to authenticate API requests and all [i4Go®](https://myportal.shift4.com/index.cfm?action=support.doc) authorizeClient/preauthorizeClient requests. An Access Token is the alias for the merchant account and interface being used. The Access Token is required in all requests except an [Access Token Exchange](#operation/accesstokenexchange) request, which generates an Access Token using an <samp>authToken</samp> and <samp>clientGuid</samp>.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "EA79FB05-3AA7-4500-AF9A-73F986FF2C1D"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DevicesPromptinputRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Request was processed",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DevicesPromptinputResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TerminalIDErrorResponse1"
                },
                "examples": {
                  "Error": {
                    "summary": "Terminal ID Error",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "Terminal(100) is not configured for any PinPad DEFAULT",
                            "primaryCode": 9956,
                            "secondaryCode": 0,
                            "shortText": "TID NO PINPAD"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "504": {
            "description": "Timeout",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeoutResponse1"
                },
                "examples": {
                  "Error": {
                    "summary": "Timeout Error",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "Timeout waiting for response across the internet",
                            "primaryCode": 9951,
                            "secondaryCode": 0,
                            "shortText": "RESPONSE TIMEOUT"
                          },
                          "lighthouse": {
                            "data": "eyJwYXltZW50SWQiOiI4NWM0MWNhNy01NzVjLTQzNGUtODIyZi0xYzZlOTE0ZDAzODYiLCJyZW1haW5pbmdBbW91bnQiOjB9"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/devices/processform": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "devicesprocessform",
        "description": "This function is used to display a custom form and text for a consumer’s input on a UTG-controlled PIN pad.\n\nLocally Installed UTG URL&colon; https://[UTG_LISTENING_IP_ADDRESS]:[UTG_PORT]/api/rest/v1/devices/processform\n\nFor example, if the IP address of the UTG you are connecting to is 192.168.1.10, and the port of the REST interface is 277, then the URL would be&colon; https://192.168.1.10:277/api/rest/v1/devices/processform\n",
        "operationId": "devicesprocessform",
        "parameters": [
          {
            "name": "InterfaceVersion",
            "in": "header",
            "description": "Refers to the version of the program or application that is sending requests to Shift4 Payments. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 11,
              "type": "string",
              "example": "2.1"
            }
          },
          {
            "name": "InterfaceName",
            "in": "header",
            "description": "Refers to the name of the program or application that is sending requests to Shift4 Payments. This should be the name of the program that you purchased or created. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 25,
              "type": "string",
              "example": "ForwardPOS"
            }
          },
          {
            "name": "CompanyName",
            "in": "header",
            "description": "Refers to the vendor or partner that designed and certified the interface. The information you use in this field should match what Shift Payments has on file or what was agreed upon in your Integration Plan. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 26,
              "type": "string",
              "example": "PAWS"
            }
          },
          {
            "name": "AccessToken",
            "in": "header",
            "description": "A security credential used to authenticate API requests and all [i4Go®](https://myportal.shift4.com/index.cfm?action=support.doc) authorizeClient/preauthorizeClient requests. An Access Token is the alias for the merchant account and interface being used. The Access Token is required in all requests except an [Access Token Exchange](#operation/accesstokenexchange) request, which generates an Access Token using an <samp>authToken</samp> and <samp>clientGuid</samp>.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "EA79FB05-3AA7-4500-AF9A-73F986FF2C1D"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DevicesProcessformRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Request was processed",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DevicesProcessformResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TerminalIDErrorResponse1"
                },
                "examples": {
                  "Error": {
                    "summary": "Terminal ID Error",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "Terminal(100) is not configured for any PinPad DEFAULT",
                            "primaryCode": 9956,
                            "secondaryCode": 0,
                            "shortText": "TID NO PINPAD"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "504": {
            "description": "Timeout",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeoutResponse1"
                },
                "examples": {
                  "Error": {
                    "summary": "Timeout Error",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "Timeout waiting for response across the internet",
                            "primaryCode": 9951,
                            "secondaryCode": 0,
                            "shortText": "RESPONSE TIMEOUT"
                          },
                          "lighthouse": {
                            "data": "eyJwYXltZW50SWQiOiI4NWM0MWNhNy01NzVjLTQzNGUtODIyZi0xYzZlOTE0ZDAzODYiLCJyZW1haW5pbmdBbW91bnQiOjB9"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/devices/promptsignature": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "devicessignatures",
        "description": "This function is used to request a prompt for signature on a UTG-controlled PIN pad and returns the signature.\n\nLocally Installed UTG URL&colon; https://[UTG_LISTENING_IP_ADDRESS]:[UTG_PORT]/api/rest/v1/devices/promptsignature\n\nFor example, if the IP address of the UTG you are connecting to is 192.168.1.10, and the port of the REST interface is 277, then the URL would be&colon; https://192.168.1.10:277/api/rest/v1/devices/promptsignature\n",
        "operationId": "devicessignatures",
        "parameters": [
          {
            "name": "InterfaceVersion",
            "in": "header",
            "description": "Refers to the version of the program or application that is sending requests to Shift4 Payments. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 11,
              "type": "string",
              "example": "2.1"
            }
          },
          {
            "name": "InterfaceName",
            "in": "header",
            "description": "Refers to the name of the program or application that is sending requests to Shift4 Payments. This should be the name of the program that you purchased or created. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 25,
              "type": "string",
              "example": "ForwardPOS"
            }
          },
          {
            "name": "CompanyName",
            "in": "header",
            "description": "Refers to the vendor or partner that designed and certified the interface. The information you use in this field should match what Shift Payments has on file or what was agreed upon in your Integration Plan. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 26,
              "type": "string",
              "example": "PAWS"
            }
          },
          {
            "name": "AccessToken",
            "in": "header",
            "description": "A security credential used to authenticate API requests and all [i4Go®](https://myportal.shift4.com/index.cfm?action=support.doc) authorizeClient/preauthorizeClient requests. An Access Token is the alias for the merchant account and interface being used. The Access Token is required in all requests except an [Access Token Exchange](#operation/accesstokenexchange) request, which generates an Access Token using an <samp>authToken</samp> and <samp>clientGuid</samp>.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "EA79FB05-3AA7-4500-AF9A-73F986FF2C1D"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DevicesPromptsignatureRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Request was processed",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DevicesPromptsignatureResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TerminalIDErrorResponse1"
                },
                "examples": {
                  "Error": {
                    "summary": "Terminal ID Error",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "Terminal(100) is not configured for any PinPad DEFAULT",
                            "primaryCode": 9956,
                            "secondaryCode": 0,
                            "shortText": "TID NO PINPAD"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "504": {
            "description": "Timeout",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeoutResponse1"
                },
                "examples": {
                  "Error": {
                    "summary": "Timeout Error",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "Timeout waiting for response across the internet",
                            "primaryCode": 9951,
                            "secondaryCode": 0,
                            "shortText": "RESPONSE TIMEOUT"
                          },
                          "lighthouse": {
                            "data": "eyJwYXltZW50SWQiOiI4NWM0MWNhNy01NzVjLTQzNGUtODIyZi0xYzZlOTE0ZDAzODYiLCJyZW1haW5pbmdBbW91bnQiOjB9"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/devices/termsandconditions": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "devicestermsandconditions",
        "description": "This function is used to display terms and conditions for a consumer to accept or decline on a UTG-controlled PIN pad.\n\nLocally Installed UTG URL&colon; https://[UTG_LISTENING_IP_ADDRESS]:[UTG_PORT]/api/rest/v1/devices/termsandconditions\n\nFor example, if the IP address of the UTG you are connecting to is 192.168.1.10, and the port of the REST interface is 277, then the URL would be&colon; https://192.168.1.10:277/api/rest/v1/devices/termsandconditions\n",
        "operationId": "devicestermsandconditions",
        "parameters": [
          {
            "name": "InterfaceVersion",
            "in": "header",
            "description": "Refers to the version of the program or application that is sending requests to Shift4 Payments. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 11,
              "type": "string",
              "example": "2.1"
            }
          },
          {
            "name": "InterfaceName",
            "in": "header",
            "description": "Refers to the name of the program or application that is sending requests to Shift4 Payments. This should be the name of the program that you purchased or created. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 25,
              "type": "string",
              "example": "ForwardPOS"
            }
          },
          {
            "name": "CompanyName",
            "in": "header",
            "description": "Refers to the vendor or partner that designed and certified the interface. The information you use in this field should match what Shift Payments has on file or what was agreed upon in your Integration Plan. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 26,
              "type": "string",
              "example": "PAWS"
            }
          },
          {
            "name": "AccessToken",
            "in": "header",
            "description": "A security credential used to authenticate API requests and all [i4Go®](https://myportal.shift4.com/index.cfm?action=support.doc) authorizeClient/preauthorizeClient requests. An Access Token is the alias for the merchant account and interface being used. The Access Token is required in all requests except an [Access Token Exchange](#operation/accesstokenexchange) request, which generates an Access Token using an <samp>authToken</samp> and <samp>clientGuid</samp>.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "EA79FB05-3AA7-4500-AF9A-73F986FF2C1D"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DevicesTermsandconditionsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Request was processed",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DevicesTermsandconditionsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TerminalIDErrorResponse1"
                },
                "examples": {
                  "Error": {
                    "summary": "Terminal ID Error",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "Terminal(100) is not configured for any PinPad DEFAULT",
                            "primaryCode": 9956,
                            "secondaryCode": 0,
                            "shortText": "TID NO PINPAD"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "504": {
            "description": "Timeout",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeoutResponse1"
                },
                "examples": {
                  "Error": {
                    "summary": "Timeout Error",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "Timeout waiting for response across the internet",
                            "primaryCode": 9951,
                            "secondaryCode": 0,
                            "shortText": "RESPONSE TIMEOUT"
                          },
                          "lighthouse": {
                            "data": "eyJwYXltZW50SWQiOiI4NWM0MWNhNy01NzVjLTQzNGUtODIyZi0xYzZlOTE0ZDAzODYiLCJyZW1haW5pbmdBbW91bnQiOjB9"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/devices/print": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "devicesprint",
        "description": "This function is used to print a receipt using a device’s built-in printer. The receipt may include a scannable bar code.\n\nLocally Installed UTG URL&colon; https://[UTG_LISTENING_IP_ADDRESS]:[UTG_PORT]/api/rest/v1/devices/print\n\nFor example, if the IP address of the UTG you are connecting to is 192.168.1.10, and the port of the REST interface is 277, then the URL would be&colon; https://192.168.1.10:277/api/rest/v1/devices/print\n",
        "operationId": "devicesprint",
        "parameters": [
          {
            "name": "InterfaceVersion",
            "in": "header",
            "description": "Refers to the version of the program or application that is sending requests to Shift4 Payments. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 11,
              "type": "string",
              "example": "2.1"
            }
          },
          {
            "name": "InterfaceName",
            "in": "header",
            "description": "Refers to the name of the program or application that is sending requests to Shift4 Payments. This should be the name of the program that you purchased or created. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 25,
              "type": "string",
              "example": "ForwardPOS"
            }
          },
          {
            "name": "CompanyName",
            "in": "header",
            "description": "Refers to the vendor or partner that designed and certified the interface. The information you use in this field should match what Shift Payments has on file or what was agreed upon in your Integration Plan. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 26,
              "type": "string",
              "example": "PAWS"
            }
          },
          {
            "name": "AccessToken",
            "in": "header",
            "description": "A security credential used to authenticate API requests and all [i4Go®](https://myportal.shift4.com/index.cfm?action=support.doc) authorizeClient/preauthorizeClient requests. An Access Token is the alias for the merchant account and interface being used. The Access Token is required in all requests except an [Access Token Exchange](#operation/accesstokenexchange) request, which generates an Access Token using an <samp>authToken</samp> and <samp>clientGuid</samp>.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "EA79FB05-3AA7-4500-AF9A-73F986FF2C1D"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DevicesPrintRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Request was processed",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DevicesPrintResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TerminalIDErrorResponse1"
                },
                "examples": {
                  "Error": {
                    "summary": "Terminal ID Error",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "Terminal(100) is not configured for any PinPad DEFAULT",
                            "primaryCode": 9956,
                            "secondaryCode": 0,
                            "shortText": "TID NO PINPAD"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "504": {
            "description": "Timeout",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeoutResponse1"
                },
                "examples": {
                  "Error": {
                    "summary": "Timeout Error",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "Timeout waiting for response across the internet",
                            "primaryCode": 9951,
                            "secondaryCode": 0,
                            "shortText": "RESPONSE TIMEOUT"
                          },
                          "lighthouse": {
                            "data": "eyJwYXltZW50SWQiOiI4NWM0MWNhNy01NzVjLTQzNGUtODIyZi0xYzZlOTE0ZDAzODYiLCJyZW1haW5pbmdBbW91bnQiOjB9"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/reports/batchtotals": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "reportsbatchtotals",
        "description": "This function is used to request a simple totals report for automated analysis. It does not supersede the standard auditing and reporting tools that are included with Shift4 Payments’ products.\n\nThis functionality can only be utilized via the hosted REST servers.  It will not be supported via UTG deployed at a merchant site.\n\nTest URL&colon; https://utgapi.shift4test.com/api/rest/v1/reports/batchtotals\n\nProduction URL&colon; https://utg.shift4api.net/api/rest/v1/reports/batchtotals\n",
        "operationId": "reportsbatchtotals",
        "parameters": [
          {
            "name": "InterfaceVersion",
            "in": "header",
            "description": "Refers to the version of the program or application that is sending requests to Shift4 Payments. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 11,
              "type": "string",
              "example": "2.1"
            }
          },
          {
            "name": "InterfaceName",
            "in": "header",
            "description": "Refers to the name of the program or application that is sending requests to Shift4 Payments. This should be the name of the program that you purchased or created. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 25,
              "type": "string",
              "example": "ForwardPOS"
            }
          },
          {
            "name": "CompanyName",
            "in": "header",
            "description": "Refers to the vendor or partner that designed and certified the interface. The information you use in this field should match what Shift Payments has on file or what was agreed upon in your Integration Plan. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 26,
              "type": "string",
              "example": "PAWS"
            }
          },
          {
            "name": "BusinessDate",
            "in": "header",
            "description": "The business date you want to obtain the totals report for.",
            "required": true,
            "style": "simple",
            "schema": {
              "minLength": 10,
              "type": "string",
              "example": "2021-04-15T09:18:23.283-07:00"
            }
          },
          {
            "name": "AccessToken",
            "in": "header",
            "description": "A security credential used to authenticate API requests and all [i4Go®](https://myportal.shift4.com/index.cfm?action=support.doc) authorizeClient/preauthorizeClient requests. An Access Token is the alias for the merchant account and interface being used. The Access Token is required in all requests except an [Access Token Exchange](#operation/accesstokenexchange) request, which generates an Access Token using an <samp>authToken</samp> and <samp>clientGuid</samp>.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "EA79FB05-3AA7-4500-AF9A-73F986FF2C1D"
            }
          },
          {
            "name": "Inclusive",
            "in": "header",
            "description": "Indicates whether or not you want the batch to include transactions for every day leading up to the <samp>BusinessDate</samp>.  If this parameter is not sent, the assumed value will be 'Y'.",
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/AutoAdditionalChargesGasoline"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was processed",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportsBatchtotalsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportsBatchtotals400Error1"
                },
                "examples": {
                  "Error": {
                    "summary": "AccessToken Not Found",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "AccessToken not found ENGINE01CE",
                            "primaryCode": 9862,
                            "secondaryCode": 0,
                            "shortText": "AccessToken"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "504": {
            "description": "Timeout",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeoutResponse1"
                },
                "examples": {
                  "Error": {
                    "summary": "Timeout Error",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "Timeout waiting for response across the internet",
                            "primaryCode": 9951,
                            "secondaryCode": 0,
                            "shortText": "RESPONSE TIMEOUT"
                          },
                          "lighthouse": {
                            "data": "eyJwYXltZW50SWQiOiI4NWM0MWNhNy01NzVjLTQzNGUtODIyZi0xYzZlOTE0ZDAzODYiLCJyZW1haW5pbmdBbW91bnQiOjB9"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/batches/submit": {
      "post": {
        "tags": [
          "Batches"
        ],
        "summary": "batchessubmit",
        "description": "This function is used to close a batch.\n\nThis functionality can only be utilized via the hosted REST servers.  It will not be supported via UTG deployed at a merchant site.\n\nTest URL&colon; https://utgapi.shift4test.com/api/rest/v1/batches/submit\n\nProduction URL&colon; https://utg.shift4api.net/api/rest/v1/batches/submit\n",
        "operationId": "batchessubmit",
        "parameters": [
          {
            "name": "InterfaceVersion",
            "in": "header",
            "description": "Refers to the version of the program or application that is sending requests to Shift4 Payments. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 11,
              "type": "string",
              "example": "2.1"
            }
          },
          {
            "name": "InterfaceName",
            "in": "header",
            "description": "Refers to the name of the program or application that is sending requests to Shift4 Payments. This should be the name of the program that you purchased or created. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 25,
              "type": "string",
              "example": "ForwardPOS"
            }
          },
          {
            "name": "CompanyName",
            "in": "header",
            "description": "Refers to the vendor or partner that designed and certified the interface. The information you use in this field should match what Shift Payments has on file or what was agreed upon in your Integration Plan. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 26,
              "type": "string",
              "example": "PAWS"
            }
          },
          {
            "name": "AccessToken",
            "in": "header",
            "description": "A security credential used to authenticate API requests and all [i4Go®](https://myportal.shift4.com/index.cfm?action=support.doc) authorizeClient/preauthorizeClient requests. An Access Token is the alias for the merchant account and interface being used. The Access Token is required in all requests except an [Access Token Exchange](#operation/accesstokenexchange) request, which generates an Access Token using an <samp>authToken</samp> and <samp>clientGuid</samp>.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "EA79FB05-3AA7-4500-AF9A-73F986FF2C1D"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchesSubmitRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Request was processed",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchesSubmitResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchesSubmit400Error1"
                },
                "examples": {
                  "Error": {
                    "summary": "Batch Error",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "Received Net Amount 1124.49 doesn't match existing Net Amount 1356.27. Batch submission process failed.",
                            "primaryCode": 9300,
                            "secondaryCode": 2,
                            "shortText": "BATCH FAILED"
                          },
                          "server": {
                            "name": "U2API02CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "504": {
            "description": "Timeout",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeoutResponse1"
                },
                "examples": {
                  "Error": {
                    "summary": "Timeout Error",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "Timeout waiting for response across the internet",
                            "primaryCode": 9951,
                            "secondaryCode": 0,
                            "shortText": "RESPONSE TIMEOUT"
                          },
                          "lighthouse": {
                            "data": "eyJwYXltZW50SWQiOiI4NWM0MWNhNy01NzVjLTQzNGUtODIyZi0xYzZlOTE0ZDAzODYiLCJyZW1haW5pbmdBbW91bnQiOjB9"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/qrpayments/getqrdetails": {
      "post": {
        "tags": [
          "QR Payments"
        ],
        "summary": "getqrdetails",
        "description": "This endpoint is used to get detailed information for a transaction based QR code.\n\nTest URL&colon; https://utgapi.shift4test.com/api/rest/v1/qrpayments/getqrdetails\n\nProduction URL&colon; https://utg.shift4api.net/api/rest/v1/qrpayments/getqrdetails\n\nLocally Installed UTG URL&colon; https://[UTG_LISTENING_IP_ADDRESS]:[UTG_PORT]/api/rest/v1/qrpayments/getqrdetails\nFor example, if the IP address of the UTG you are connecting to is 192.168.1.10, and the port of the REST interface is 277, then the URL would be&colon; https://192.168.1.10:277/api/rest/v1/qrpayments/getqrdetails\n",
        "operationId": "getqrdetails",
        "parameters": [
          {
            "name": "InterfaceVersion",
            "in": "header",
            "description": "Refers to the version of the program or application that is sending requests to Shift4 Payments. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 11,
              "type": "string",
              "example": "2.1"
            }
          },
          {
            "name": "InterfaceName",
            "in": "header",
            "description": "Refers to the name of the program or application that is sending requests to Shift4 Payments. This should be the name of the program that you purchased or created. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 25,
              "type": "string",
              "example": "ForwardPOS"
            }
          },
          {
            "name": "CompanyName",
            "in": "header",
            "description": "Refers to the vendor or partner that designed and certified the interface. The information you use in this field should match what Shift Payments has on file or what was agreed upon in your Integration Plan. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 26,
              "type": "string",
              "example": "PAWS"
            }
          },
          {
            "name": "AccessToken",
            "in": "header",
            "description": "A security credential used to authenticate API requests and all [i4Go®](https://myportal.shift4.com/index.cfm?action=support.doc) authorizeClient/preauthorizeClient requests. An Access Token is the alias for the merchant account and interface being used. The Access Token is required in all requests except an [Access Token Exchange](#operation/accesstokenexchange) request, which generates an Access Token using an <samp>authToken</samp> and <samp>clientGuid</samp>.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "EA79FB05-3AA7-4500-AF9A-73F986FF2C1D"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QrpaymentsGetqrdetailsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Request was processed",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QrpaymentsGetqrdetailsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QrpaymentsGetqrdetails400Error1"
                },
                "example": {
                  "result": [
                    {
                      "error": {
                        "longText": "Invalid QR Code - not found",
                        "primaryCode": 9870,
                        "secondaryCode": 1,
                        "shortText": "QR PAY ERROR"
                      },
                      "server": {
                        "name": "U2API01CE"
                      }
                    }
                  ]
                }
              }
            }
          },
          "504": {
            "description": "Timeout",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeoutResponse1"
                },
                "examples": {
                  "Error": {
                    "summary": "Timeout Error",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "Timeout waiting for response across the internet",
                            "primaryCode": 9951,
                            "secondaryCode": 0,
                            "shortText": "RESPONSE TIMEOUT"
                          },
                          "lighthouse": {
                            "data": "eyJwYXltZW50SWQiOiI4NWM0MWNhNy01NzVjLTQzNGUtODIyZi0xYzZlOTE0ZDAzODYiLCJyZW1haW5pbmdBbW91bnQiOjB9"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/qrpayments/cancelqrpayment": {
      "post": {
        "tags": [
          "QR Payments"
        ],
        "summary": "cancelqrpayment",
        "description": "This endpoint is used to cancel a QR code payment. If the payment was already processed the transaction will be reversed. If the payment has not yet processed it will prevent the QR code from being used to process a payment.\n\nTest URL&colon; https://utgapi.shift4test.com/api/rest/v1/qrpayments/cancelqrpayment\n\nProduction URL&colon; https://utg.shift4api.net/api/rest/v1/qrpayments/cancelqrpayment\n\nLocally Installed UTG URL&colon; https://[UTG_LISTENING_IP_ADDRESS]:[UTG_PORT]/api/rest/v1/qrpayments/cancelqrpayment\nFor example, if the IP address of the UTG you are connecting to is 192.168.1.10, and the port of the REST interface is 277, then the URL would be&colon; https://192.168.1.10:277/api/rest/v1/qrpayments/cancelqrpayment\n",
        "operationId": "cancelqrpayment",
        "parameters": [
          {
            "name": "InterfaceVersion",
            "in": "header",
            "description": "Refers to the version of the program or application that is sending requests to Shift4 Payments. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 11,
              "type": "string",
              "example": "2.1"
            }
          },
          {
            "name": "InterfaceName",
            "in": "header",
            "description": "Refers to the name of the program or application that is sending requests to Shift4 Payments. This should be the name of the program that you purchased or created. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 25,
              "type": "string",
              "example": "ForwardPOS"
            }
          },
          {
            "name": "CompanyName",
            "in": "header",
            "description": "Refers to the vendor or partner that designed and certified the interface. The information you use in this field should match what Shift Payments has on file or what was agreed upon in your Integration Plan. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 26,
              "type": "string",
              "example": "PAWS"
            }
          },
          {
            "name": "AccessToken",
            "in": "header",
            "description": "A security credential used to authenticate API requests and all [i4Go®](https://myportal.shift4.com/index.cfm?action=support.doc) authorizeClient/preauthorizeClient requests. An Access Token is the alias for the merchant account and interface being used. The Access Token is required in all requests except an [Access Token Exchange](#operation/accesstokenexchange) request, which generates an Access Token using an <samp>authToken</samp> and <samp>clientGuid</samp>.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "EA79FB05-3AA7-4500-AF9A-73F986FF2C1D"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QrpaymentsCancelqrpaymentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Request was processed",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QrpaymentsCancelqrpaymentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QrpaymentsCancelqrpayment400Error1"
                },
                "example": {
                  "result": [
                    {
                      "error": {
                        "longText": "Invalid QR Code - not found",
                        "primaryCode": 9870,
                        "secondaryCode": 1,
                        "shortText": "QR PAY ERROR"
                      },
                      "server": {
                        "name": "U2API01CE"
                      }
                    }
                  ]
                }
              }
            }
          },
          "504": {
            "description": "Timeout",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeoutResponse1"
                },
                "examples": {
                  "Error": {
                    "summary": "Timeout Error",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "Timeout waiting for response across the internet",
                            "primaryCode": 9951,
                            "secondaryCode": 0,
                            "shortText": "RESPONSE TIMEOUT"
                          },
                          "lighthouse": {
                            "data": "eyJwYXltZW50SWQiOiI4NWM0MWNhNy01NzVjLTQzNGUtODIyZi0xYzZlOTE0ZDAzODYiLCJyZW1haW5pbmdBbW91bnQiOjB9"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/qrpayments/getqrcode": {
      "post": {
        "tags": [
          "QR Payments"
        ],
        "summary": "getqrcode",
        "description": "This endpoint is used to obtain a transaction based QR code.\n\nTest URL&colon; https://utgapi.shift4test.com/api/rest/v1/qrpayments/getqrcode\n\nProduction URL&colon; https://utg.shift4api.net/api/rest/v1/qrpayments/getqrcode\n\nLocally Installed UTG URL&colon; https://[UTG_LISTENING_IP_ADDRESS]:[UTG_PORT]/api/rest/v1/qrpayments/getqrcode\nFor example, if the IP address of the UTG you are connecting to is 192.168.1.10, and the port of the REST interface is 277, then the URL would be&colon; https://192.168.1.10:277/api/rest/v1/qrpayments/getqrcode\n",
        "operationId": "getqrcode",
        "parameters": [
          {
            "name": "InterfaceVersion",
            "in": "header",
            "description": "Refers to the version of the program or application that is sending requests to Shift4 Payments. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 11,
              "type": "string",
              "example": "2.1"
            }
          },
          {
            "name": "InterfaceName",
            "in": "header",
            "description": "Refers to the name of the program or application that is sending requests to Shift4 Payments. This should be the name of the program that you purchased or created. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 25,
              "type": "string",
              "example": "ForwardPOS"
            }
          },
          {
            "name": "CompanyName",
            "in": "header",
            "description": "Refers to the vendor or partner that designed and certified the interface. The information you use in this field should match what Shift Payments has on file or what was agreed upon in your Integration Plan. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 26,
              "type": "string",
              "example": "PAWS"
            }
          },
          {
            "name": "AccessToken",
            "in": "header",
            "description": "A security credential used to authenticate API requests and all [i4Go®](https://myportal.shift4.com/index.cfm?action=support.doc) authorizeClient/preauthorizeClient requests. An Access Token is the alias for the merchant account and interface being used. The Access Token is required in all requests except an [Access Token Exchange](#operation/accesstokenexchange) request, which generates an Access Token using an <samp>authToken</samp> and <samp>clientGuid</samp>.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "EA79FB05-3AA7-4500-AF9A-73F986FF2C1D"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QrpaymentsGetqrcodeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Request was processed",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QrpaymentsGetqrcodeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QrpaymentsGetqrcode400Error1"
                },
                "example": {
                  "result": [
                    {
                      "error": {
                        "longText": "Fail to post QR Pay record",
                        "primaryCode": 9870,
                        "secondaryCode": 4,
                        "shortText": "QR PAY ERROR"
                      },
                      "server": {
                        "name": "U2API02CE"
                      }
                    }
                  ]
                }
              }
            }
          },
          "504": {
            "description": "Timeout",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeoutResponse1"
                },
                "examples": {
                  "Error": {
                    "summary": "Timeout Error",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "Timeout waiting for response across the internet",
                            "primaryCode": 9951,
                            "secondaryCode": 0,
                            "shortText": "RESPONSE TIMEOUT"
                          },
                          "lighthouse": {
                            "data": "eyJwYXltZW50SWQiOiI4NWM0MWNhNy01NzVjLTQzNGUtODIyZi0xYzZlOTE0ZDAzODYiLCJyZW1haW5pbmdBbW91bnQiOjB9"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/qrpayments/getqrpaymentstatus": {
      "post": {
        "tags": [
          "QR Payments"
        ],
        "summary": "getqrpaymentstatus",
        "description": "This endpoint is used to poll for the status of the QR code payment.\n\nTest URL&colon; https://utgapi.shift4test.com/api/rest/v1/qrpayments/getqrpaymentstatus\n\nProduction URL&colon; https://utg.shift4api.net/api/rest/v1/qrpayments/getqrpaymentstatus\n\nLocally Installed UTG URL&colon; https://[UTG_LISTENING_IP_ADDRESS]:[UTG_PORT]/api/rest/v1/qrpayments/getqrpaymentstatus\nFor example, if the IP address of the UTG you are connecting to is 192.168.1.10, and the port of the REST interface is 277, then the URL would be&colon; https://192.168.1.10:277/api/rest/v1/qrpayments/getqrpaymentstatus\n",
        "operationId": "getqrpaymentstatus",
        "parameters": [
          {
            "name": "InterfaceVersion",
            "in": "header",
            "description": "Refers to the version of the program or application that is sending requests to Shift4 Payments. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 11,
              "type": "string",
              "example": "2.1"
            }
          },
          {
            "name": "InterfaceName",
            "in": "header",
            "description": "Refers to the name of the program or application that is sending requests to Shift4 Payments. This should be the name of the program that you purchased or created. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 25,
              "type": "string",
              "example": "ForwardPOS"
            }
          },
          {
            "name": "CompanyName",
            "in": "header",
            "description": "Refers to the vendor or partner that designed and certified the interface. The information you use in this field should match what Shift Payments has on file or what was agreed upon in your Integration Plan. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 26,
              "type": "string",
              "example": "PAWS"
            }
          },
          {
            "name": "AccessToken",
            "in": "header",
            "description": "A security credential used to authenticate API requests and all [i4Go®](https://myportal.shift4.com/index.cfm?action=support.doc) authorizeClient/preauthorizeClient requests. An Access Token is the alias for the merchant account and interface being used. The Access Token is required in all requests except an [Access Token Exchange](#operation/accesstokenexchange) request, which generates an Access Token using an <samp>authToken</samp> and <samp>clientGuid</samp>.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "EA79FB05-3AA7-4500-AF9A-73F986FF2C1D"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QrpaymentsGetqrpaymentstatusRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Request was processed",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QrpaymentsGetqrpaymentstatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QrpaymentsGetqrpaymentstatus400Error1"
                },
                "example": {
                  "result": [
                    {
                      "error": {
                        "longText": "QR Pay is Cancelled - unable to process request",
                        "primaryCode": 9870,
                        "secondaryCode": 6,
                        "shortText": "QR PAY ERROR"
                      },
                      "server": {
                        "name": "U2API01CE"
                      }
                    }
                  ]
                }
              }
            }
          },
          "504": {
            "description": "Timeout",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeoutResponse1"
                },
                "examples": {
                  "Error": {
                    "summary": "Timeout Error",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "Timeout waiting for response across the internet",
                            "primaryCode": 9951,
                            "secondaryCode": 0,
                            "shortText": "RESPONSE TIMEOUT"
                          },
                          "lighthouse": {
                            "data": "eyJwYXltZW50SWQiOiI4NWM0MWNhNy01NzVjLTQzNGUtODIyZi0xYzZlOTE0ZDAzODYiLCJyZW1haW5pbmdBbW91bnQiOjB9"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/mode/offline": {
      "post": {
        "tags": [
          "Mode"
        ],
        "summary": "modeoffline",
        "description": "This function is used to put UTG into offline mode. UTG can be configured to disable this feature, which will prevent the API request from putting UTG into offline mode. If this feature is enabled, UTG will also be configured to set a maximum duration for how long it will stay in offline mode in order to prevent UTG from staying offline indefinitely if the Interface Vendor does not send the go online request. To utilize this feature you must be running UTG version 3080 or later.\n\nLocally Installed UTG URL&colon; https://[UTG_LISTENING_IP_ADDRESS]:[UTG_PORT]/api/rest/v1/mode/offline\n\n\nFor example, if the IP address of the UTG you are connecting to is 192.168.1.10, and the REST port of UTG API interface is 277, then the URL would be&colon; https://192.168.1.10:277/api/rest/v1/mode/offline\n",
        "operationId": "modeoffline",
        "parameters": [
          {
            "name": "InterfaceVersion",
            "in": "header",
            "description": "Refers to the version of the program or application that is sending requests to Shift4 Payments. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 11,
              "type": "string",
              "example": "2.1"
            }
          },
          {
            "name": "InterfaceName",
            "in": "header",
            "description": "Refers to the name of the program or application that is sending requests to Shift4 Payments. This should be the name of the program that you purchased or created. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 25,
              "type": "string",
              "example": "ForwardPOS"
            }
          },
          {
            "name": "CompanyName",
            "in": "header",
            "description": "Refers to the vendor or partner that designed and certified the interface. The information you use in this field should match what Shift Payments has on file or what was agreed upon in your Integration Plan. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 26,
              "type": "string",
              "example": "PAWS"
            }
          },
          {
            "name": "AccessToken",
            "in": "header",
            "description": "A security credential used to authenticate API requests and all [i4Go®](https://myportal.shift4.com/index.cfm?action=support.doc) authorizeClient/preauthorizeClient requests. An Access Token is the alias for the merchant account and interface being used. The Access Token is required in all requests except an [Access Token Exchange](#operation/accesstokenexchange) request, which generates an Access Token using an <samp>authToken</samp> and <samp>clientGuid</samp>.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "EA79FB05-3AA7-4500-AF9A-73F986FF2C1D"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModeOfflineRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Go Offline request was processed",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModeOfflineResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModeOffline400Error1"
                },
                "examples": {
                  "Error": {
                    "summary": "AuthToken Not Valid",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "AuthToken not valid ENGINE01CE",
                            "primaryCode": 9862,
                            "secondaryCode": 0,
                            "shortText": "AuthToken"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "504": {
            "description": "Timeout",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeoutResponse1"
                },
                "examples": {
                  "Error": {
                    "summary": "Timeout Error",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "Timeout waiting for response across the internet",
                            "primaryCode": 9951,
                            "secondaryCode": 0,
                            "shortText": "RESPONSE TIMEOUT"
                          },
                          "lighthouse": {
                            "data": "eyJwYXltZW50SWQiOiI4NWM0MWNhNy01NzVjLTQzNGUtODIyZi0xYzZlOTE0ZDAzODYiLCJyZW1haW5pbmdBbW91bnQiOjB9"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/mode/online": {
      "post": {
        "tags": [
          "Mode"
        ],
        "summary": "modeonline",
        "description": "This function is used to bring UTG out of offline mode after putting UTG into offline mode via the [Go Online](#operation/modeoffline) request. To utilize this feature you must be running UTG version 3080 or later.\n\nLocally Installed UTG URL&colon; https://[UTG_LISTENING_IP_ADDRESS]:[UTG_PORT]/api/rest/v1/mode/online\n\n\nFor example, if the IP address of the UTG you are connecting to is 192.168.1.10, and the REST port of UTG API interface is 277, then the URL would be&colon; https://192.168.1.10:277/api/rest/v1/mode/online\n",
        "operationId": "modeonline",
        "parameters": [
          {
            "name": "InterfaceVersion",
            "in": "header",
            "description": "Refers to the version of the program or application that is sending requests to Shift4 Payments. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 11,
              "type": "string",
              "example": "2.1"
            }
          },
          {
            "name": "InterfaceName",
            "in": "header",
            "description": "Refers to the name of the program or application that is sending requests to Shift4 Payments. This should be the name of the program that you purchased or created. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 25,
              "type": "string",
              "example": "ForwardPOS"
            }
          },
          {
            "name": "CompanyName",
            "in": "header",
            "description": "Refers to the vendor or partner that designed and certified the interface. The information you use in this field should match what Shift Payments has on file or what was agreed upon in your Integration Plan. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 26,
              "type": "string",
              "example": "PAWS"
            }
          },
          {
            "name": "AccessToken",
            "in": "header",
            "description": "A security credential used to authenticate API requests and all [i4Go®](https://myportal.shift4.com/index.cfm?action=support.doc) authorizeClient/preauthorizeClient requests. An Access Token is the alias for the merchant account and interface being used. The Access Token is required in all requests except an [Access Token Exchange](#operation/accesstokenexchange) request, which generates an Access Token using an <samp>authToken</samp> and <samp>clientGuid</samp>.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "EA79FB05-3AA7-4500-AF9A-73F986FF2C1D"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModeOnlineRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Go Online request was processed",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModeOnlineResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModeOnline400Error1"
                },
                "examples": {
                  "Error": {
                    "summary": "AuthToken Not Valid",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "AuthToken not valid ENGINE01CE",
                            "primaryCode": 9862,
                            "secondaryCode": 0,
                            "shortText": "AuthToken"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "504": {
            "description": "Timeout",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeoutResponse1"
                },
                "examples": {
                  "Error": {
                    "summary": "Timeout Error",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "Timeout waiting for response across the internet",
                            "primaryCode": 9951,
                            "secondaryCode": 0,
                            "shortText": "RESPONSE TIMEOUT"
                          },
                          "lighthouse": {
                            "data": "eyJwYXltZW50SWQiOiI4NWM0MWNhNy01NzVjLTQzNGUtODIyZi0xYzZlOTE0ZDAzODYiLCJyZW1haW5pbmdBbW91bnQiOjB9"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/trustly/refund": {
      "post": {
        "tags": [
          "Trustly"
        ],
        "summary": "trustlyrefund",
        "description": "Used to request a refund for a previous Trustly capture request.  The refund can be processed for up to the amount of the original capture. Any refunds that exceed the amount of the original capture will result in an error.\n\nTest URL&colon; https://utgapi.shift4test.com/api/rest/v1/trustly/refund\n\nProduction URL&colon; https://utg.shift4api.net/api/rest/v1/trustly/refund\n\n#### Trustly Refund Process Flow Diagram\n\n<img src=\"/downloads/documentation/api/resources/trustly_refund_flow.png\" />\n",
        "operationId": "trustlyrefund",
        "parameters": [
          {
            "name": "InterfaceVersion",
            "in": "header",
            "description": "Refers to the version of the program or application that is sending requests to Shift4 Payments. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 11,
              "type": "string",
              "example": "2.1"
            }
          },
          {
            "name": "InterfaceName",
            "in": "header",
            "description": "Refers to the name of the program or application that is sending requests to Shift4 Payments. This should be the name of the program that you purchased or created. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 25,
              "type": "string",
              "example": "ForwardPOS"
            }
          },
          {
            "name": "CompanyName",
            "in": "header",
            "description": "Refers to the vendor or partner that designed and certified the interface. The information you use in this field should match what Shift Payments has on file or what was agreed upon in your Integration Plan. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 26,
              "type": "string",
              "example": "PAWS"
            }
          },
          {
            "name": "AccessToken",
            "in": "header",
            "description": "A security credential used to authenticate API requests and all [i4Go®](https://myportal.shift4.com/index.cfm?action=support.doc) authorizeClient/preauthorizeClient requests. An Access Token is the alias for the merchant account and interface being used. The Access Token is required in all requests except an [Access Token Exchange](#operation/accesstokenexchange) request, which generates an Access Token using an <samp>authToken</samp> and <samp>clientGuid</samp>.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "EA79FB05-3AA7-4500-AF9A-73F986FF2C1D"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrustlyRefundRequest"
              },
              "example": {
                "dateTime": "2021-04-15T09:18:23.283-07:00",
                "amount": {
                  "total": 160
                },
                "sourceIp": "63.57.84.101",
                "transaction": {
                  "invoice": "295792",
                  "originalInvoice": "193001",
                  "originalDate": "2021-03-27T12:43:57.875-07:00",
                  "notes": "Transaction notes are added here"
                },
                "paymentAccountId": "BF06A6AB-A91D-4145-8704-13B8C48A7A95",
                "trustly": {
                  "transactionId": "1002633191"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Transaction was processed",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrustlyRefundResponse"
                },
                "example": {
                  "result": [
                    {
                      "dateTime": "2021-04-15T09:18:23.283-07:00",
                      "amount": {
                        "total": 160
                      },
                      "transaction": {
                        "authSource": "A",
                        "responseCode": "A",
                        "invoice": "193058",
                        "notes": "Transaction notes are added here"
                      },
                      "server": {
                        "name": "TM01CE"
                      },
                      "sourceIp": "63.57.84.101",
                      "paymentAccountId": "BF06A6AB-A91D-4145-8704-13B8C48A7A95",
                      "currencyCode": "USD",
                      "trustly": {
                        "originalTransactionId": "1002633190",
                        "transactionId": "1002633191",
                        "payment": {
                          "id": "1587954687",
                          "type": 2
                        },
                        "transaction": {
                          "type": "3",
                          "status": "1",
                          "statusMessage": "Pending"
                        },
                        "account": {
                          "name": "Business Demo Account",
                          "type": 1,
                          "profile": 2,
                          "accountNumber": "9174",
                          "routingNumber": "121000248"
                        },
                        "paymentProvider": {
                          "id": "200005501",
                          "type": 1,
                          "name": "Demo Bank"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseAPM1"
                }
              }
            }
          },
          "504": {
            "description": "Timeout",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeoutResponseAPM1"
                },
                "example": {
                  "result": [
                    {
                      "error": {
                        "longText": "Timeout waiting for response across the internet",
                        "primaryCode": 9951,
                        "secondaryCode": 0,
                        "shortText": "RESPONSE TIMEOUT"
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/trustly/capture": {
      "post": {
        "tags": [
          "Trustly"
        ],
        "summary": "trustlycapture",
        "description": "Used to request the transfer of funds from the user's bank account to the merchant's bank account. \n\nTest URL&colon; https://utgapi.shift4test.com/api/rest/v1/trustly/capture\n\nProduction URL&colon; https://utg.shift4api.net/api/rest/v1/trustly/capture\n\n#### Trustly Initial Capture Process Flow Diagram\n\n<img src=\"/downloads/documentation/api/resources/trustly_capture_initial.png\" />\n\n#### Trustly Subsequent Capture Process Flow Diagram\n\n<img src=\"/downloads/documentation/api/resources/trustly_capture_subsequent.png\" />\n",
        "operationId": "trustlycapture",
        "parameters": [
          {
            "name": "InterfaceVersion",
            "in": "header",
            "description": "Refers to the version of the program or application that is sending requests to Shift4 Payments. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 11,
              "type": "string",
              "example": "2.1"
            }
          },
          {
            "name": "InterfaceName",
            "in": "header",
            "description": "Refers to the name of the program or application that is sending requests to Shift4 Payments. This should be the name of the program that you purchased or created. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 25,
              "type": "string",
              "example": "ForwardPOS"
            }
          },
          {
            "name": "CompanyName",
            "in": "header",
            "description": "Refers to the vendor or partner that designed and certified the interface. The information you use in this field should match what Shift Payments has on file or what was agreed upon in your Integration Plan. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 26,
              "type": "string",
              "example": "PAWS"
            }
          },
          {
            "name": "AccessToken",
            "in": "header",
            "description": "A security credential used to authenticate API requests and all [i4Go®](https://myportal.shift4.com/index.cfm?action=support.doc) authorizeClient/preauthorizeClient requests. An Access Token is the alias for the merchant account and interface being used. The Access Token is required in all requests except an [Access Token Exchange](#operation/accesstokenexchange) request, which generates an Access Token using an <samp>authToken</samp> and <samp>clientGuid</samp>.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "EA79FB05-3AA7-4500-AF9A-73F986FF2C1D"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/InitialCapture2"
                  },
                  {
                    "$ref": "#/components/schemas/SubsequentCapture2"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Transaction was processed",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/InitialCapture"
                    },
                    {
                      "$ref": "#/components/schemas/SubsequentCapture"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseAPM1"
                }
              }
            }
          },
          "504": {
            "description": "Timeout",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeoutResponseAPM1"
                },
                "example": {
                  "result": [
                    {
                      "error": {
                        "longText": "Timeout waiting for response across the internet",
                        "primaryCode": 9951,
                        "secondaryCode": 0,
                        "shortText": "RESPONSE TIMEOUT"
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/trustly/deposit": {
      "post": {
        "tags": [
          "Trustly"
        ],
        "summary": "trustlydeposit",
        "description": "Used to request the transfer of funds from the merchant's bank account to the user's bank account.\n\nTest URL&colon; https://utgapi.shift4test.com/api/rest/v1/trustly/deposit\n\nProduction URL&colon; https://utg.shift4api.net/api/rest/v1/trustly/deposit\n#### Trustly Initial Deposit Process Flow Diagram\n\n<img src=\"/downloads/documentation/api/resources/trustly_deposit_initial.png\" />\n\n#### Trustly Subsequent Deposit Process Flow Diagram\n\n<img src=\"/downloads/documentation/api/resources/trustly_deposit_subsequent.png\" />\n",
        "operationId": "trustlydeposit",
        "parameters": [
          {
            "name": "InterfaceVersion",
            "in": "header",
            "description": "Refers to the version of the program or application that is sending requests to Shift4 Payments. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 11,
              "type": "string",
              "example": "2.1"
            }
          },
          {
            "name": "InterfaceName",
            "in": "header",
            "description": "Refers to the name of the program or application that is sending requests to Shift4 Payments. This should be the name of the program that you purchased or created. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 25,
              "type": "string",
              "example": "ForwardPOS"
            }
          },
          {
            "name": "CompanyName",
            "in": "header",
            "description": "Refers to the vendor or partner that designed and certified the interface. The information you use in this field should match what Shift Payments has on file or what was agreed upon in your Integration Plan. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 26,
              "type": "string",
              "example": "PAWS"
            }
          },
          {
            "name": "AccessToken",
            "in": "header",
            "description": "A security credential used to authenticate API requests and all [i4Go®](https://myportal.shift4.com/index.cfm?action=support.doc) authorizeClient/preauthorizeClient requests. An Access Token is the alias for the merchant account and interface being used. The Access Token is required in all requests except an [Access Token Exchange](#operation/accesstokenexchange) request, which generates an Access Token using an <samp>authToken</samp> and <samp>clientGuid</samp>.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "EA79FB05-3AA7-4500-AF9A-73F986FF2C1D"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/InitialDeposit2"
                  },
                  {
                    "$ref": "#/components/schemas/SubsequentDeposit2"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Transaction was processed",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/InitialDeposit"
                    },
                    {
                      "$ref": "#/components/schemas/SubsequentDeposit"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseAPM1"
                }
              }
            }
          },
          "504": {
            "description": "Timeout",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeoutResponseAPM1"
                },
                "example": {
                  "result": [
                    {
                      "error": {
                        "longText": "Timeout waiting for response across the internet",
                        "primaryCode": 9951,
                        "secondaryCode": 0,
                        "shortText": "RESPONSE TIMEOUT"
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/trustly/statusinquiry": {
      "post": {
        "tags": [
          "Trustly"
        ],
        "summary": "trustlystatusinquiry",
        "description": "Used to cancel a previous Trustly capture request.  The trustly capture can only be canceled within a certain time period.\n\nTest URL&colon; https://utgapi.shift4test.com/api/rest/v1/trustly/statusinquiry\n\nProduction URL&colon; https://utg.shift4api.net/api/rest/v1/trustly/statusinquiry\n",
        "operationId": "trustlystatusinquiry",
        "parameters": [
          {
            "name": "InterfaceVersion",
            "in": "header",
            "description": "Refers to the version of the program or application that is sending requests to Shift4 Payments. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 11,
              "type": "string",
              "example": "2.1"
            }
          },
          {
            "name": "InterfaceName",
            "in": "header",
            "description": "Refers to the name of the program or application that is sending requests to Shift4 Payments. This should be the name of the program that you purchased or created. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 25,
              "type": "string",
              "example": "ForwardPOS"
            }
          },
          {
            "name": "CompanyName",
            "in": "header",
            "description": "Refers to the vendor or partner that designed and certified the interface. The information you use in this field should match what Shift Payments has on file or what was agreed upon in your Integration Plan. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 26,
              "type": "string",
              "example": "PAWS"
            }
          },
          {
            "name": "AccessToken",
            "in": "header",
            "description": "A security credential used to authenticate API requests and all [i4Go®](https://myportal.shift4.com/index.cfm?action=support.doc) authorizeClient/preauthorizeClient requests. An Access Token is the alias for the merchant account and interface being used. The Access Token is required in all requests except an [Access Token Exchange](#operation/accesstokenexchange) request, which generates an Access Token using an <samp>authToken</samp> and <samp>clientGuid</samp>.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "EA79FB05-3AA7-4500-AF9A-73F986FF2C1D"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrustlyStatusinquiryRequest"
              },
              "example": {
                "dateTime": "2021-04-15T09:18:23.283-07:00",
                "sourceIp": "63.57.84.101",
                "transaction": {
                  "invoice": "193002",
                  "notes": "Transaction notes are added here"
                },
                "paymentAccountId": "BF06A6AB-A91D-4145-8704-13B8C48A7A95",
                "trustly": {
                  "transactionId": "1002633191"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Transaction was processed",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrustlyStatusinquiryResponse"
                },
                "example": {
                  "result": [
                    {
                      "dateTime": "2021-04-15T09:18:23.283-07:00",
                      "amount": {
                        "total": 160
                      },
                      "transaction": {
                        "authSource": "A",
                        "responseCode": "A",
                        "invoice": "193002",
                        "notes": "Transaction notes are added here"
                      },
                      "server": {
                        "name": "TM01CE"
                      },
                      "sourceIp": "63.57.84.101",
                      "paymentAccountId": "BF06A6AB-A91D-4145-8704-13B8C48A7A95",
                      "currencyCode": "USD",
                      "trustly": {
                        "transactionId": "1002633191",
                        "payment": {
                          "id": "1587954687",
                          "type": 2
                        },
                        "transaction": {
                          "type": "3",
                          "status": "1",
                          "statusMessage": "Pending"
                        },
                        "account": {
                          "name": "Business Demo Account",
                          "type": 1,
                          "profile": 2,
                          "accountNumber": "9174",
                          "routingNumber": "121000248"
                        },
                        "paymentProvider": {
                          "id": "200005501",
                          "type": 1,
                          "name": "Demo Bank"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseAPM1"
                }
              }
            }
          },
          "504": {
            "description": "Timeout",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeoutResponseAPM1"
                },
                "example": {
                  "result": [
                    {
                      "error": {
                        "longText": "Timeout waiting for response across the internet",
                        "primaryCode": 9951,
                        "secondaryCode": 0,
                        "shortText": "RESPONSE TIMEOUT"
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/trustly/notification": {
      "post": {
        "tags": [
          "Trustly"
        ],
        "summary": "trustlynotification",
        "description": "This is an outbound message from the Shift4 gateway to the merchant's environment that provides the final status of the capture request. \n\n#### The test and production URLs specified in the dropdown are not utilized. This notification request will be sent from Shift4 to the URL provided in the merchant's boarding configuration. This requires the interface vendor to establish a service to receive these requests.\n",
        "operationId": "trustlynotification",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrustlyNotificationRequest"
              },
              "example": {
                "amount": {
                  "total": 15
                },
                "currencyCode": "USD",
                "dateTime": "2021-09-28T04:02:56.620844'",
                "paymentAccountId": "ED20D5FD-4D7A-4868-8815-A93D1E78D100",
                "server": {
                  "name": "TM01CE"
                },
                "transaction": {
                  "authSource": "A",
                  "responseCode": "A",
                  "invoice": "0928070246"
                },
                "trustly": {
                  "account": {
                    "accountNumber": "6576",
                    "name": "Demo Checking Account",
                    "profile": 1,
                    "routingNumber": "124003116",
                    "type": 1
                  },
                  "originalTransactionId": "1017597830",
                  "payment": {
                    "id": "1017597827",
                    "type": 2
                  },
                  "paymentProvider": {
                    "id": "200005501",
                    "name": "Demo Bank",
                    "type": 1
                  },
                  "paymentProviderTransaction": {
                    "id": "ptx-VXGXlx-AcES_WjNWp8_bMnJI-sbx",
                    "status": "10,",
                    "statusMessage": "Established"
                  },
                  "transaction": {
                    "status": "4",
                    "statusMessage": "Completed",
                    "type": "3"
                  },
                  "transactionId": "1017616827"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Notification was received",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/trustly/cancel": {
      "post": {
        "tags": [
          "Trustly"
        ],
        "summary": "trustlycancel",
        "description": "Used to cancel a previous Trustly capture request.  The trustly capture can only be canceled within a certain time period.\n\nTest URL&colon; https://utgapi.shift4test.com/api/rest/v1/trustly/cancel\n\nProduction URL&colon; https://utg.shift4api.net/api/rest/v1/trustly/cancel\n\n#### Trustly Cancel Process Flow Diagram\n\n<img src=\"/downloads/documentation/api/resources/trustly_cancel_flow.png\" />\n",
        "operationId": "trustlycancel",
        "parameters": [
          {
            "name": "InterfaceVersion",
            "in": "header",
            "description": "Refers to the version of the program or application that is sending requests to Shift4 Payments. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 11,
              "type": "string",
              "example": "2.1"
            }
          },
          {
            "name": "InterfaceName",
            "in": "header",
            "description": "Refers to the name of the program or application that is sending requests to Shift4 Payments. This should be the name of the program that you purchased or created. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 25,
              "type": "string",
              "example": "ForwardPOS"
            }
          },
          {
            "name": "CompanyName",
            "in": "header",
            "description": "Refers to the vendor or partner that designed and certified the interface. The information you use in this field should match what Shift Payments has on file or what was agreed upon in your Integration Plan. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 26,
              "type": "string",
              "example": "PAWS"
            }
          },
          {
            "name": "AccessToken",
            "in": "header",
            "description": "A security credential used to authenticate API requests and all [i4Go®](https://myportal.shift4.com/index.cfm?action=support.doc) authorizeClient/preauthorizeClient requests. An Access Token is the alias for the merchant account and interface being used. The Access Token is required in all requests except an [Access Token Exchange](#operation/accesstokenexchange) request, which generates an Access Token using an <samp>authToken</samp> and <samp>clientGuid</samp>.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "EA79FB05-3AA7-4500-AF9A-73F986FF2C1D"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrustlyCancelRequest"
              },
              "example": {
                "dateTime": "2021-04-15T09:18:23.283-07:00",
                "sourceIp": "63.57.84.101",
                "transaction": {
                  "invoice": "193002",
                  "notes": "Transaction notes are added here"
                },
                "paymentAccountId": "BF06A6AB-A91D-4145-8704-13B8C48A7A95",
                "trustly": {
                  "transactionId": "1002633191"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Transaction was processed",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrustlyCancelResponse"
                },
                "example": {
                  "result": [
                    {
                      "dateTime": "2021-04-15T09:18:23.283-07:00",
                      "amount": {
                        "total": 160
                      },
                      "transaction": {
                        "authSource": "A",
                        "responseCode": "A",
                        "invoice": "193002",
                        "notes": "Transaction notes are added here"
                      },
                      "server": {
                        "name": "TM01CE"
                      },
                      "sourceIp": "63.57.84.101",
                      "paymentAccountId": "BF06A6AB-A91D-4145-8704-13B8C48A7A95",
                      "currencyCode": "USD",
                      "trustly": {
                        "transactionId": "1002633191",
                        "payment": {
                          "id": "1587954687",
                          "type": 2
                        },
                        "transaction": {
                          "type": "3",
                          "status": "1",
                          "statusMessage": "Pending"
                        },
                        "account": {
                          "name": "Business Demo Account",
                          "type": 1,
                          "profile": 2,
                          "accountNumber": "9174",
                          "routingNumber": "121000248"
                        },
                        "paymentProvider": {
                          "id": "200005501",
                          "type": 1,
                          "name": "Demo Bank"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseAPM1"
                }
              }
            }
          },
          "504": {
            "description": "Timeout",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeoutResponseAPM1"
                },
                "example": {
                  "result": [
                    {
                      "error": {
                        "longText": "Timeout waiting for response across the internet",
                        "primaryCode": 9951,
                        "secondaryCode": 0,
                        "shortText": "RESPONSE TIMEOUT"
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/tappp/cancel": {
      "post": {
        "tags": [
          "TAPPP"
        ],
        "summary": "tapppcancel",
        "description": "Request to acknowledge the TAPPP prepaid card transaction as canceled.\n\nTest URL&colon; https://utgapi.shift4test.com/api/rest/v1/tappp/cancel\n\nProduction URL&colon; https://utg.shift4api.net/api/rest/v1/tappp/cancel\n",
        "operationId": "tapppcancel",
        "parameters": [
          {
            "name": "InterfaceVersion",
            "in": "header",
            "description": "Refers to the version of the program or application that is sending requests to Shift4 Payments. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 11,
              "type": "string",
              "example": "2.1"
            }
          },
          {
            "name": "InterfaceName",
            "in": "header",
            "description": "Refers to the name of the program or application that is sending requests to Shift4 Payments. This should be the name of the program that you purchased or created. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 25,
              "type": "string",
              "example": "ForwardPOS"
            }
          },
          {
            "name": "CompanyName",
            "in": "header",
            "description": "Refers to the vendor or partner that designed and certified the interface. The information you use in this field should match what Shift Payments has on file or what was agreed upon in your Integration Plan. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 26,
              "type": "string",
              "example": "PAWS"
            }
          },
          {
            "name": "AccessToken",
            "in": "header",
            "description": "A security credential used to authenticate API requests and all [i4Go®](https://myportal.shift4.com/index.cfm?action=support.doc) authorizeClient/preauthorizeClient requests. An Access Token is the alias for the merchant account and interface being used. The Access Token is required in all requests except an [Access Token Exchange](#operation/accesstokenexchange) request, which generates an Access Token using an <samp>authToken</samp> and <samp>clientGuid</samp>.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "EA79FB05-3AA7-4500-AF9A-73F986FF2C1D"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TapppCancelRequest"
              },
              "example": {
                "dateTime": "2021-04-15T09:18:23.283-07:00",
                "sourceIp": "63.57.84.101",
                "transaction": {
                  "invoice": "295792"
                },
                "customer": {
                  "externalId": "OD-123"
                },
                "tappp": {
                  "token": "GkmNK9g9LV5zVkl1GwKlYJXd1a3Clr3G2XHuwBR7mkXZUeNWbsuRH/OVeb57o8B1N2ZKqF1xoxPPkSvHiGQbtDv+d4vEg5vpn9DdGrYbdZN7/h1R/Wv5heXC7B04vtK9NtTVQYSYrTRByMGvHHlnds81TLDovirmmvUXYFlKmC0="
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Transaction was canceled",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TapppCancelResponse"
                },
                "example": {
                  "result": [
                    {
                      "dateTime": "2021-04-15T09:18:23.283-07:00",
                      "sourceIp": "63.57.84.101",
                      "transaction": {
                        "authSource": "A",
                        "responseCode": "A",
                        "invoice": "295792"
                      },
                      "tappp": {
                        "status": "SUCCESS",
                        "code": "200",
                        "message": "Transaction canceled successfully"
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TapppCancel400Error1"
                }
              }
            }
          },
          "504": {
            "description": "Timeout",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeoutResponseAPM1"
                },
                "example": {
                  "result": [
                    {
                      "error": {
                        "longText": "Timeout waiting for response across the internet",
                        "primaryCode": 9951,
                        "secondaryCode": 0,
                        "shortText": "RESPONSE TIMEOUT"
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/tappp/initiatepayment": {
      "post": {
        "tags": [
          "TAPPP"
        ],
        "summary": "tapppinitiatepayment",
        "description": "Request to initiate a TAPPP prepaid card capture.\n\nTest URL&colon; https://utgapi.shift4test.com/api/rest/v1/tappp/initiatepayment\n\nProduction URL&colon; https://utg.shift4api.net/api/rest/v1/tappp/initiatepayment\n",
        "operationId": "tapppinitiatepayment",
        "parameters": [
          {
            "name": "InterfaceVersion",
            "in": "header",
            "description": "Refers to the version of the program or application that is sending requests to Shift4 Payments. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 11,
              "type": "string",
              "example": "2.1"
            }
          },
          {
            "name": "InterfaceName",
            "in": "header",
            "description": "Refers to the name of the program or application that is sending requests to Shift4 Payments. This should be the name of the program that you purchased or created. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 25,
              "type": "string",
              "example": "ForwardPOS"
            }
          },
          {
            "name": "CompanyName",
            "in": "header",
            "description": "Refers to the vendor or partner that designed and certified the interface. The information you use in this field should match what Shift Payments has on file or what was agreed upon in your Integration Plan. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 26,
              "type": "string",
              "example": "PAWS"
            }
          },
          {
            "name": "AccessToken",
            "in": "header",
            "description": "A security credential used to authenticate API requests and all [i4Go®](https://myportal.shift4.com/index.cfm?action=support.doc) authorizeClient/preauthorizeClient requests. An Access Token is the alias for the merchant account and interface being used. The Access Token is required in all requests except an [Access Token Exchange](#operation/accesstokenexchange) request, which generates an Access Token using an <samp>authToken</samp> and <samp>clientGuid</samp>.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "EA79FB05-3AA7-4500-AF9A-73F986FF2C1D"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TapppInitiatepaymentRequest"
              },
              "example": {
                "dateTime": "2021-04-15T09:18:23.283-07:00",
                "sourceIp": "63.57.84.101",
                "successUrl": "https://merchant.com/tappp/success",
                "cancelUrl": "https://merchant.com/tappp/cancel",
                "transaction": {
                  "invoice": "295792",
                  "notes": "Transaction notes are added here"
                },
                "customer": {
                  "postalCode": "89134",
                  "externalId": "323f98u23i",
                  "enrollDate": "2019-03-14T11:16:42.896-07:00"
                },
                "tappp": {
                  "taxAmount": "0.29",
                  "taxPercentage": "6"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Transaction was processed",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TapppInitiatepaymentResponse"
                },
                "example": {
                  "result": [
                    {
                      "dateTime": "2021-04-15T09:18:23.283-07:00",
                      "sourceIp": "63.57.84.101",
                      "redirectUrl": "https://betmgm.tappp.tv?tp-partner-id=PT_QR9I7IQICMQUFVHN7&tp-partner-gateway-id=1628473483&payload=eyJhbGciOiAiUlMyNTYiLCAidHlwZSI6ICJKU09OIn0=.R0JrbHZXSDBSZVRIVVBCN3BHa2hDVVdlNlVYQ2d2MlpFWTVwMTc1WnpCU0RoTTBSVFp4WnNTZmxmMzRCNkJTV0daNmJLZ2hXbFNIcys4ZXVHTTl2V0YzSmFlMnhBdDJKeTRPbzl1NDdaRDRRaW9GT3RPY1FSdTZsMGl6dExvajlvTys3TnArVFZqSTNQZk4wS3pvZ1FNWEJVQVR0SmxUeldKQjhCcDVZemNRMjlzclE4R2lnNzFWUWxzWW0rWFFtcFozUkkvZnpYVGlpZWlGQkZCWFJ1RDVNMUprT1JIUjRKY0xiZS9QbnNPTW1saXhoWHFNYXF0MmRmOFFjSXdxdGc4amJlKy9nK1hqKy9KVmh2MXd4blJzVWd5SWh6K2cybFN6eU5rZW8rV1U1WnFzOGVmNEhzQnA1L3gzdmpkVG9SMEZsY3drWWVhRHZwQllCbTNQa2NtNUxNcDRHR25YNzYxRVduOVlPVEhhNDBzMTZ2Um5oaW94SVBvWlZBd1Avb21WS0dGMmx1eW9FRmVIeW9zRWI2RUE1MEwzZ2hrTXY5SzFHZHZLWHY1NFdvS0ZmblNZakhFZitqd29wUks0bWtVQVZIYmhWc1gyR0FOQ1l0VDY3Qk9XS1kydi9GUlQ1OFlNUEZkcDlLOUNYM1pWVTA1a1dzcTRBMnFQVVEzbkhyRUUwV3p3U3Qyb3E2djZwcnY3Z3BRVFlWUHZnV29MN3ZYeXNnMlRlc3cxZmVLcVZwS1hqU0lhQ2ZZb051VEpWcDZZUnlVWVZqRzBCSDNBL1lqS0EreFFIVTc4RTJCMGE4USthNHNsYjN0d3JxdkJhZ3NtQyt2cWQ2bE5LeG94Z2xXRUZqaTkzQlkvbjdwNlJpSFNxMlpDL0hUTWwxaFMvRHpwaEo5eENUeHc9.TUtZbU5Vb2ZNaHJGYWMxdS9EWFR5WFc3enpIZTJEZDRRSUpteFY1ekZlQ2pHT2x0LzBPZE9qeEpCajRTUlNscjNjclk1R0FOQUJweTZZRXhqdDVtU2ROVnl6T2pqY21yR0szWHVwV0hrZFJRVXRBS1VoSjRJV29weG5oQk80enFZTUJpY2dJRis3RjNHaHBTU3k1OU96V0RRNldIaDgvelRhTVFBSk1BR0t3bTZyZU5BRDE5RGxCZ05UYVdnOUlPQlRMNEF6QnBieXBiL3RXTXNydzFqSUxsNWdKMEFxS3c4cE12R1g0NDRONTA0bjM5VEsxaURvSjdoOGF1SVF5SGJ5MEt1YWR5Wkc0M2lFNW9QOXh0VHAvU2ZNQmF3WXNVSG1hVHFLV2hyNmtHZW02bUhtbXZhWXlUYWNsSVlVcCtDVlFsUGV2TEVIYWd4bHZZQ01BMVJaNURsdC9zTkNRRnlZRlQvSmdhcHQxRjljcXZ1M3JKdjVvOVJBZDlVQm5iNkRaL0xmdlpLWHdDRzhYOS9yQS9YWEVxZ29ENEdtVVo0OUpjOWhDWm83OE1vV0tSM09PR2huQ2FpZkxkY0Ewd0RtY3lyV3czMU9sZFdKSXU1azNETFR1aVdML25qNDF2ZXJCUk9Lb3lSaVlzTmtkZWZBMysxK0QveG1uS3Z2VVU4T1RLT1hHKzVXOFllb0dpYm5RVXFsS0lNNmVNUVhjN0NEKzc3SGZMVmtjVWFYWXdhNU1zQ2NhcmtEckNoL3NrZy9TWnBBaWJodzdjM0l5REwyb1JPSXY3end2OUhtN3kwRDZzeStxUlBhcjFNNFZmWStaS05yMWZGSVBqRnFGQ2RqMmVKNldYQ1lRdk1kTzZvQU1PdUNvVE9SendSUTUzbnVKeTIzVW1VT2s9",
                      "transaction": {
                        "authSource": "A",
                        "responseCode": "A",
                        "invoice": "295792",
                        "notes": "Transaction notes are added here"
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TapppInitiatepayment400Error1"
                }
              }
            }
          },
          "504": {
            "description": "Timeout",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeoutResponseAPM1"
                },
                "example": {
                  "result": [
                    {
                      "error": {
                        "longText": "Timeout waiting for response across the internet",
                        "primaryCode": 9951,
                        "secondaryCode": 0,
                        "shortText": "RESPONSE TIMEOUT"
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/tappp/decryptpayload": {
      "post": {
        "tags": [
          "TAPPP"
        ],
        "summary": "tapppdecryptpayload",
        "description": "Request to decrypt payload received from TAPPP redirect.\n\nTest URL&colon; https://utgapi.shift4test.com/api/rest/v1/tappp/decryptpayload\n\nProduction URL&colon; https://utg.shift4api.net/api/rest/v1/tappp/decryptpayload\n",
        "operationId": "tapppdecryptpayload",
        "parameters": [
          {
            "name": "InterfaceVersion",
            "in": "header",
            "description": "Refers to the version of the program or application that is sending requests to Shift4 Payments. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 11,
              "type": "string",
              "example": "2.1"
            }
          },
          {
            "name": "InterfaceName",
            "in": "header",
            "description": "Refers to the name of the program or application that is sending requests to Shift4 Payments. This should be the name of the program that you purchased or created. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 25,
              "type": "string",
              "example": "ForwardPOS"
            }
          },
          {
            "name": "CompanyName",
            "in": "header",
            "description": "Refers to the vendor or partner that designed and certified the interface. The information you use in this field should match what Shift Payments has on file or what was agreed upon in your Integration Plan. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 26,
              "type": "string",
              "example": "PAWS"
            }
          },
          {
            "name": "AccessToken",
            "in": "header",
            "description": "A security credential used to authenticate API requests and all [i4Go®](https://myportal.shift4.com/index.cfm?action=support.doc) authorizeClient/preauthorizeClient requests. An Access Token is the alias for the merchant account and interface being used. The Access Token is required in all requests except an [Access Token Exchange](#operation/accesstokenexchange) request, which generates an Access Token using an <samp>authToken</samp> and <samp>clientGuid</samp>.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "EA79FB05-3AA7-4500-AF9A-73F986FF2C1D"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TapppDecryptpayloadRequest"
              },
              "example": {
                "dateTime": "2021-04-15T09:18:23.283-07:00",
                "sourceIp": "63.57.84.101",
                "transaction": {
                  "invoice": "295792"
                },
                "customer": {
                  "externalId": "OD-123"
                },
                "tappp": {
                  "payload": "eyJhbGciOiAiUlMyNTYiLCAidHlwZSI6ICJKU09OIn0=.Zmtwd2l4a05CVmlpTU9lNFl5eHdRSkgzVWZxT3FNNUNucXl6dUVVTlRhTlJiS2FMZmV5QlZ4ZDk0a0xzRklDYUdGSkhLQkZjeEFSdmp2c0M0VW85Mmdpa3BFWDhhOUloc3gxM3BqakVWQ0xZU285T0QzVGh3ZHpvc25oZ2ZWdE9zNkx0OUVuZkwvMUtFbDVRYlE1Ym9CdCtpOE93N3JzcnBWMjVieklvbjRhbGMrV1p1d0pzNHBFcXdMMVNUb1pIY01EcGhvZlJ5MFFwbnp0YlZoWDJVQ1dRRlBRaUQ4V05HT0llaDc5VERIMmJNSGV2ZzBQZzJLcVBWd1RhNHRJdmpycDNNcHpsUkVZZ2FmaXduUVR3RGZvUHlFR29zZERpdEQvVTVGdW5lNnhlNk8wQlJtZmZFbytvZnBxRG1KdXgzTEFyU1ZPYWZKWjZMTXFSNGlUMk9LSGRIblRhMVdNM05qOXE4ZkpJWnp0TVBXV2gvVEkxR2Q4dnRUMklIZVdySTBHN2s2Q3AyZXBmQ3ZPcEJtNDg1eWxnYVBQRnVWQUxUTm03WUVhOWRQamFrekdpRkxJRnVGUmFRUStsZ1pRci84bTNYb3pOTGd0aXZQSENyV1pUeXhYVXRMZWh2MHIxbG5YWW1IMFJsZldpYVpkNGJuVVp6NkQvZzZiNlFFTklCRmg2Q3lJVzNOVUphMktVTk1ySXlOZDJZc0Vsc1ZvaEdJVjhhL0FER2Z2SFd6VXIxNjE2emRrK2ZDeGdSeHdJODFhQVJ5MERjbEFRTi9RSU9VQVo5Z2ppQTMvb0JQMXZ3NEVZRXpRYmZZcEpjcFgzVGVGVTk3Z0hXRGY3TW56TFliR1dDWDVIeXdjS09uTHljSWZYZlFXRmRhTDFhODFjRjRWZHYrZHJubW89.Vm43TG5odVZiTzc3VmlEVkU4UzVuWUYxZmUyUUpPMmx0MzJlNlp5TFIycUVzWThGeWx3d2JrL2FRMHpiZ3U0c0FXc3kzdWlKd1dSRmYyc0o5ZlltZmgvaUhTODR1dFlXSDl0NVZNcWpIdnVWbFI5eTFwanQ2aWNwekFDZjc3dFpBSmNkN29nSWdkSWhqaUIvbDRXSk1yU0hndmtuVmJSMEVCU3FHMHhVU2VJY2RaT2pQaGp6TEtkcGprdDlwSlZDSEc4RHZTV2FRTnVNUVNQRnFyWDVCRjc2alYveUNTRVRqVDVyNEgzSTZtaVpwOHR2Mzh2NzVHRTBhUkJQSmZGbTFMN2dVNVVxemNkUHhyRjN6ZU5ERy9lNzI4YWxBT2Q4ajJXUko1QUQzRTFxUGcvR1BSbkEyMFgzeEtzckM1V1FOMHdDQTFDOTZhNGZXREgvRGhVMVIybTBlWUNHSWxnTjlSbjdzZFNaVWZCdUhibFFvVFNtb1FUUDA1NlZYNWpDbkRZSnBQeFo3UzMwb0hXSFpVMk0xaDdidHZaZTQxRjBPMmhlT1l2NHNnNUZSODJQandKMEh5YmY4dlBmUEpVYkhJbjNQNG9vRWFVZ0d0VTFFSjBtM1YycVJmOXZZU1dlQUM4RWtTRXhqdzlKeDRTMDRUNnprMkVPZ29IQnVGZWl6UHQ3RUwwbkMreFJkelkvek5wMnZtejNlTlpyM005TmExNFlCSmJkbzFBS2o4a2p3dGJUZUNTaDV5QmhMQzVRZmxvdHVjNXloa29CY1FQSC9PMVVRQjhTODFUb2cvTWlJODMyK3I2Zk5xMUNFaGptWFgrejlFRHNVMzkzMmZ1Q203L0VvMkdZVHYxcHMzb0lxRkprVjdrUmUxa3hYZjIrQUpTVUdMTHRGTkk9"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Transaction was processed",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TapppDecryptpayloadResponse"
                },
                "example": {
                  "result": [
                    {
                      "dateTime": "2021-04-15T09:18:23.283-07:00",
                      "currencyCode": "USD",
                      "sourceIp": "63.57.84.101",
                      "transaction": {
                        "authSource": "A",
                        "responseCode": "A",
                        "invoice": "295792"
                      },
                      "amount": {
                        "total": 50
                      },
                      "customer": {
                        "externalId": "OD-123"
                      },
                      "tappp": {
                        "token": "GkmNK9g9LV5zVkl1GwKlYJXd1a3Clr3G2XHuwBR7mkXZUeNWbsuRH/OVeb57o8B1N2ZKqF1xoxPPkSvHiGQbtDv+d4vEg5vpn9DdGrYbdZN7/h1R/Wv5heXC7B04vtK9NtTVQYSYrTRByMGvHHlnds81TLDovirmmvUXYFlKmC0=",
                        "transactionId": "RD-TX-41830974392803140",
                        "transactionTimestamp": "1633539671471"
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TapppDecryptpayload400Error1"
                }
              }
            }
          },
          "504": {
            "description": "Timeout",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeoutResponseAPM1"
                },
                "example": {
                  "result": [
                    {
                      "error": {
                        "longText": "Timeout waiting for response across the internet",
                        "primaryCode": 9951,
                        "secondaryCode": 0,
                        "shortText": "RESPONSE TIMEOUT"
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/tappp/tokenstatus": {
      "post": {
        "tags": [
          "TAPPP"
        ],
        "summary": "tappptokenstatus",
        "description": "Request to check token validity.\n\nTest URL&colon; https://utgapi.shift4test.com/api/rest/v1/tappp/tokenstatus\n\nProduction URL&colon; https://utg.shift4api.net/api/rest/v1/tappp/tokenstatus\n",
        "operationId": "tappptokenstatus",
        "parameters": [
          {
            "name": "InterfaceVersion",
            "in": "header",
            "description": "Refers to the version of the program or application that is sending requests to Shift4 Payments. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 11,
              "type": "string",
              "example": "2.1"
            }
          },
          {
            "name": "InterfaceName",
            "in": "header",
            "description": "Refers to the name of the program or application that is sending requests to Shift4 Payments. This should be the name of the program that you purchased or created. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 25,
              "type": "string",
              "example": "ForwardPOS"
            }
          },
          {
            "name": "CompanyName",
            "in": "header",
            "description": "Refers to the vendor or partner that designed and certified the interface. The information you use in this field should match what Shift Payments has on file or what was agreed upon in your Integration Plan. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 26,
              "type": "string",
              "example": "PAWS"
            }
          },
          {
            "name": "AccessToken",
            "in": "header",
            "description": "A security credential used to authenticate API requests and all [i4Go®](https://myportal.shift4.com/index.cfm?action=support.doc) authorizeClient/preauthorizeClient requests. An Access Token is the alias for the merchant account and interface being used. The Access Token is required in all requests except an [Access Token Exchange](#operation/accesstokenexchange) request, which generates an Access Token using an <samp>authToken</samp> and <samp>clientGuid</samp>.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "EA79FB05-3AA7-4500-AF9A-73F986FF2C1D"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TapppTokenstatusRequest"
              },
              "example": {
                "dateTime": "2021-04-15T09:18:23.283-07:00",
                "sourceIp": "63.57.84.101",
                "transaction": {
                  "invoice": "295792"
                },
                "tappp": {
                  "token": "GkmNK9g9LV5zVkl1GwKlYJXd1a3Clr3G2XHuwBR7mkXZUeNWbsuRH/OVeb57o8B1N2ZKqF1xoxPPkSvHiGQbtDv+d4vEg5vpn9DdGrYbdZN7/h1R/Wv5heXC7B04vtK9NtTVQYSYrTRByMGvHHlnds81TLDovirmmvUXYFlKmC0="
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Transaction was processed",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TapppTokenstatusResponse"
                },
                "example": {
                  "result": [
                    {
                      "dateTime": "2021-04-15T09:18:23.283-07:00",
                      "sourceIp": "63.57.84.101",
                      "transaction": {
                        "authSource": "A",
                        "responseCode": "A",
                        "invoice": "295792"
                      },
                      "tappp": {
                        "status": "SUCCESS",
                        "code": "200",
                        "message": "Valid Token"
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TapppTokenstatus400Error1"
                }
              }
            }
          },
          "504": {
            "description": "Timeout",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeoutResponseAPM1"
                },
                "example": {
                  "result": [
                    {
                      "error": {
                        "longText": "Timeout waiting for response across the internet",
                        "primaryCode": 9951,
                        "secondaryCode": 0,
                        "shortText": "RESPONSE TIMEOUT"
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/tappp/capture": {
      "post": {
        "tags": [
          "TAPPP"
        ],
        "summary": "tapppcapture",
        "description": "Request to acknowledge the TAPPP prepaid card transaction as successful.\n\nTest URL&colon; https://utgapi.shift4test.com/api/rest/v1/tappp/capture\n\nProduction URL&colon; https://utg.shift4api.net/api/rest/v1/tappp/capture\n",
        "operationId": "tapppcapture",
        "parameters": [
          {
            "name": "InterfaceVersion",
            "in": "header",
            "description": "Refers to the version of the program or application that is sending requests to Shift4 Payments. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 11,
              "type": "string",
              "example": "2.1"
            }
          },
          {
            "name": "InterfaceName",
            "in": "header",
            "description": "Refers to the name of the program or application that is sending requests to Shift4 Payments. This should be the name of the program that you purchased or created. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 25,
              "type": "string",
              "example": "ForwardPOS"
            }
          },
          {
            "name": "CompanyName",
            "in": "header",
            "description": "Refers to the vendor or partner that designed and certified the interface. The information you use in this field should match what Shift Payments has on file or what was agreed upon in your Integration Plan. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 26,
              "type": "string",
              "example": "PAWS"
            }
          },
          {
            "name": "AccessToken",
            "in": "header",
            "description": "A security credential used to authenticate API requests and all [i4Go®](https://myportal.shift4.com/index.cfm?action=support.doc) authorizeClient/preauthorizeClient requests. An Access Token is the alias for the merchant account and interface being used. The Access Token is required in all requests except an [Access Token Exchange](#operation/accesstokenexchange) request, which generates an Access Token using an <samp>authToken</samp> and <samp>clientGuid</samp>.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "EA79FB05-3AA7-4500-AF9A-73F986FF2C1D"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TapppCaptureRequest"
              },
              "example": {
                "dateTime": "2021-04-15T09:18:23.283-07:00",
                "sourceIp": "63.57.84.101",
                "transaction": {
                  "invoice": "295792"
                },
                "customer": {
                  "externalId": "OD-123",
                  "enrollDate": "2019-03-14T11:16:42.896-07:00"
                },
                "tappp": {
                  "token": "GkmNK9g9LV5zVkl1GwKlYJXd1a3Clr3G2XHuwBR7mkXZUeNWbsuRH/OVeb57o8B1N2ZKqF1xoxPPkSvHiGQbtDv+d4vEg5vpn9DdGrYbdZN7/h1R/Wv5heXC7B04vtK9NtTVQYSYrTRByMGvHHlnds81TLDovirmmvUXYFlKmC0="
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Transaction was processed",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TapppCaptureResponse"
                },
                "example": {
                  "result": [
                    {
                      "dateTime": "2021-04-15T09:18:23.283-07:00",
                      "sourceIp": "63.57.84.101",
                      "transaction": {
                        "authSource": "A",
                        "responseCode": "A",
                        "invoice": "295792"
                      },
                      "tappp": {
                        "status": "SUCCESS",
                        "code": "200",
                        "message": "Transaction acknowledged successfully"
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TapppCapture400Error1"
                }
              }
            }
          },
          "504": {
            "description": "Timeout",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeoutResponseAPM1"
                },
                "example": {
                  "result": [
                    {
                      "error": {
                        "longText": "Timeout waiting for response across the internet",
                        "primaryCode": 9951,
                        "secondaryCode": 0,
                        "shortText": "RESPONSE TIMEOUT"
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/risk/assess": {
      "post": {
        "tags": [
          "Risk"
        ],
        "summary": "riskassess",
        "description": "Used to check the level of risk before processing a transaction. Risk assessment  returns four possible values: approve, deny, escalate and review. If the risk  transaction is approved or review, you will be able to make a payment call with the risk  assessment, risk id and transaction id you get in response.\n\nTest URL&colon; https://utgapi.shift4test.com/api/rest/v1/risk/assess\n\nProduction URL&colon; https://api.shift4api.net/api/rest/v1/risk/assess\n",
        "operationId": "riskassess",
        "parameters": [
          {
            "name": "InterfaceVersion",
            "in": "header",
            "description": "Refers to the version of the program or application that is sending requests to Shift4 Payments. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 11,
              "type": "string",
              "example": "2.1"
            }
          },
          {
            "name": "InterfaceName",
            "in": "header",
            "description": "Refers to the name of the program or application that is sending requests to Shift4 Payments. This should be the name of the program that you purchased or created. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 25,
              "type": "string",
              "example": "ForwardPOS"
            }
          },
          {
            "name": "CompanyName",
            "in": "header",
            "description": "Refers to the vendor or partner that designed and certified the interface. The information you use in this field should match what Shift Payments has on file or what was agreed upon in your Integration Plan. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 26,
              "type": "string",
              "example": "PAWS"
            }
          },
          {
            "name": "AccessToken",
            "in": "header",
            "description": "A security credential used to authenticate API requests and all [i4Go®](https://myportal.shift4.com/index.cfm?action=support.doc) authorizeClient/preauthorizeClient requests. An Access Token is the alias for the merchant account and interface being used. The Access Token is required in all requests except an [Access Token Exchange](#operation/accesstokenexchange) request, which generates an Access Token using an <samp>authToken</samp> and <samp>clientGuid</samp>.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "EA79FB05-3AA7-4500-AF9A-73F986FF2C1D"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/CardNumberUnencrypted14"
                  },
                  {
                    "$ref": "#/components/schemas/Token22"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Risk assessment was processed",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RiskAssessResponse"
                },
                "example": {
                  "result": [
                    {
                      "dateTime": "2021-04-15T09:18:23.283-07:00",
                      "amount": {
                        "total": 76001.99
                      },
                      "risk": {
                        "tranId": "DDWT0P3LG6LL",
                        "assessment": "A"
                      },
                      "transaction": {
                        "s4RiskId": "EC52377F-5A8E-4534-BE7A-CF779A35BE45",
                        "invoice": "0207123502",
                        "orderId": "orderId"
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RiskAssess400Error1"
                }
              }
            }
          },
          "504": {
            "description": "Timeout",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RiskAssess504Error1"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/reports/batchdetails": {
      "get": {
        "summary": "reportsbatchdetails",
        "description": "This function returns a detailed report of transactions that would be included in the batch if it were to be submitted.\n\nThis functionality can only be utilized via the hosted REST servers.  It will not be supported via UTG deployed at a merchant site.\n\nTest URL&colon; https://utgapi.shift4test.com/api/rest/v1/reports/batchdetails\n\nProduction URL&colon; https://utg.shift4api.net/api/rest/v1/reports/batchdetails\n",
        "operationId": "reportsbatchdetails",
        "parameters": [
          {
            "name": "InterfaceVersion",
            "in": "header",
            "description": "Refers to the version of the program or application that is sending requests to Shift4 Payments. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 11,
              "type": "string",
              "example": "2.1"
            }
          },
          {
            "name": "InterfaceName",
            "in": "header",
            "description": "Refers to the name of the program or application that is sending requests to Shift4 Payments. This should be the name of the program that you purchased or created. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 25,
              "type": "string",
              "example": "ForwardPOS"
            }
          },
          {
            "name": "CompanyName",
            "in": "header",
            "description": "Refers to the vendor or partner that designed and certified the interface. The information you use in this field should match what Shift Payments has on file or what was agreed upon in your Integration Plan. The following special characters are not allowed&colon;  $ % &colon; ^ - ~ ` < > , ? “ ” ‘ ’ { } [ ] \\ + =",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 26,
              "type": "string",
              "example": "PAWS"
            }
          },
          {
            "name": "AccessToken",
            "in": "header",
            "description": "A security credential used to authenticate API requests and all [i4Go®](https://myportal.shift4.com/index.cfm?action=support.doc) authorizeClient/preauthorizeClient requests. An Access Token is the alias for the merchant account and interface being used. The Access Token is required in all requests except an [Access Token Exchange](#operation/accesstokenexchange) request, which generates an Access Token using an <samp>authToken</samp> and <samp>clientGuid</samp>.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "EA79FB05-3AA7-4500-AF9A-73F986FF2C1D"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was processed",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportsBatchdetailsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportsBatchdetails400Error1"
                },
                "examples": {
                  "Error": {
                    "summary": "AccessToken Not Found",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "AccessToken not found ENGINE01CE",
                            "primaryCode": 9862,
                            "secondaryCode": 0,
                            "shortText": "AccessToken"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "504": {
            "description": "Timeout",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeoutResponse1"
                },
                "examples": {
                  "Error": {
                    "summary": "Timeout Error",
                    "value": {
                      "result": [
                        {
                          "error": {
                            "longText": "Timeout waiting for response across the internet",
                            "primaryCode": 9951,
                            "secondaryCode": 0,
                            "shortText": "RESPONSE TIMEOUT"
                          },
                          "lighthouse": {
                            "data": "eyJwYXltZW50SWQiOiI4NWM0MWNhNy01NzVjLTQzNGUtODIyZi0xYzZlOTE0ZDAzODYiLCJyZW1haW5pbmdBbW91bnQiOjB9"
                          },
                          "server": {
                            "name": "U2API01CE"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    }
  },
  "components": {
    "schemas": {
      "ObjectHotelCheckIn": {
        "title": "ObjectHotelCheckIn",
        "type": "object",
        "properties": {
          "estimatedDays": {
            "type": "integer",
            "description": "Used to communicate the estimated number of days of a guest’s stay. This value is included in an [Authorization](#operation/authorization) request for a consumer’s hotel stay.",
            "format": "int32",
            "example": 5
          }
        },
        "description": "##### Conditional: Utilize this object for Hotel transactions"
      },
      "ObjectCredential": {
        "title": "ObjectCredential",
        "required": [
          "authToken",
          "clientGuid"
        ],
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "description": "A security credential used to authenticate API requests and all [i4Go®](https://myportal.shift4.com/index.cfm?action=support.doc) authorizeClient/preauthorizeClient requests. An Access Token is the alias for the merchant account and interface being used. The Access Token is required in all requests except an [Access Token Exchange](#operation/accesstokenexchange) request, which generates an Access Token using an <samp>authToken</samp> and <samp>clientGuid</samp>.",
            "format": "uuid",
            "example": "EA79FB05-3AA7-4500-AF9A-73F986FF2C1D"
          },
          "authToken": {
            "type": "string",
            "description": "A unique encrypted identifier that refers to a specific merchant account. It is required when making an [Access Token Exchange](#operation/accesstokenexchange) request. For detailed information about the AuthToken, please see [Authentication](#section/Authentication)",
            "format": "uuid"
          },
          "clientGuid": {
            "type": "string",
            "description": "The Client GUID is a unique identifier that is used to identify an interface across all of the merchant accounts that use it. The same Client GUID can be used for all versions of the same interface. If a completely new interface is certified, then you will receive a new Client GUID, which must be hard coded into the application and must not be a configurable field. The Client GUID is required when making an [Access Token Exchange](#operation/accesstokenexchange). For detailed information about the Client GUID, please see [Authentication](#section/Authentication).\n\n<b>Requirement: The Client GUID supplied by your API Analyst must be hard coded into your application because it will permanently identify your interface across all merchant accounts.</b>",
            "format": "uuid"
          },
          "apiSerialNumber": {
            "maxLength": 10,
            "type": "string",
            "description": "The serial number for the merchant account. This field is only used for backwards compatibility with older interfaces and has been replaced by the Access Token.\n\nExamples to set the `user_parameters` :\n ```json\n{ \n  runtime_filters: [{\"column_name\": \"Color\", \"operator\": \"EQ\", \"values\": [\"red\"], \"persist\": false}],\n  runtime_sorts: [{\"column_name\": \"Color\", \"order\": \"ASC\", \"persist\": false}],\n  parameters: [{\"name\": \"Color\", \"values\": [\"ASC\"], \"persist\": false}],\n}\n```",
            "example": "266"
          },
          "apiPassword": {
            "maxLength": 32,
            "type": "string",
            "description": "A credential used to authenticate the API Serial Number when processing a request. This field is only used for backwards compatibility with older interfaces and has been replaced by the Access Token.\n\nExamples to set the `user_parameters` :\n ```json\n{ \n  runtime_filters: [{\"column_name\": \"Color\", \"operator\": \"EQ\", \"values\": [\"red\"], \"persist\": false}],\n  runtime_sorts: [{\"column_name\": \"Color\", \"order\": \"ASC\", \"persist\": false}],\n  parameters: [{\"name\": \"Color\", \"values\": [\"ASC\"], \"persist\": false}],\n}\n```",
            "example": "9YCR23G7%BY#9+"
          }
        }
      },
      "AirlineElectronicTicketIndicator": {
        "title": "AirlineElectronicTicketIndicator",
        "enum": [
          "Y",
          "N"
        ],
        "type": "string",
        "description": "Indicates if an electronic ticket was issued.\n\nValue  | Description       \n-------|-------------------\nY      | Yes\nN      | No",
        "example": "Y"
      },
      "ObjectIIASAmounts": {
        "title": "ObjectIIASAmounts",
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "description": "The subtotal for this type of healthcare expenses.",
            "example": 34
          },
          "type": {
            "$ref": "#/components/schemas/IIASType"
          }
        }
      },
      "AirlineConjunctionTicketIndicator": {
        "title": "AirlineConjunctionTicketIndicator",
        "enum": [
          "Y",
          "N"
        ],
        "type": "string",
        "description": "Indicates whether the itinerary contains more than four segments of travel.\n\nValue  | Description       \n-------|-------------------\nY      | Yes\nN      | No",
        "example": "N"
      },
      "ObjectError": {
        "title": "ObjectError",
        "type": "object",
        "properties": {
          "longText": {
            "maxLength": 255,
            "type": "string",
            "description": "Extended error message that is returned if an error condition exists.",
            "example": "Card type not recognized"
          },
          "primaryCode": {
            "type": "integer",
            "description": "Code indicating the type of error that occurred. Refer to the [Error Codes](#tag/Error-Codes) section of this document for more details.",
            "format": "int32",
            "example": 9842
          },
          "secondaryCode": {
            "type": "integer",
            "description": "This code supplements the code specified in the <samp>error.primaryCode</samp> field to provide additional information about the error that occurred.",
            "format": "int32",
            "example": 0
          },
          "shortText": {
            "maxLength": 16,
            "type": "string",
            "description": "Abbreviated error message that is always returned if an error condition exists",
            "example": "NOT IN CARDRANGE"
          }
        }
      },
      "ObjectServer": {
        "title": "ObjectServer",
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 50,
            "type": "string",
            "description": "The name of the server that processed the request.",
            "example": "U2API01CE"
          }
        }
      },
      "DeviceCapabilityMagstripe": {
        "title": "DeviceCapabilityMagstripe",
        "enum": [
          "Y",
          "N"
        ],
        "type": "string",
        "description": "Specifies whether or not the device supports magstripe.  If this input method can be supported by the device, but the input method is currently disabled for all transactions on the device, then the value 'N' should be sent.",
        "example": "Y"
      },
      "AirlineTypeIndicator": {
        "title": "AirlineTypeIndicator",
        "enum": [
          "R",
          "O",
          "M"
        ],
        "type": "string",
        "description": "Indicates if this ticket is a round trip, multi-city, or one-way ticket. \n\nValue  | Description \n-------|---------------\nR      | Round-Trip\nO      | One Way\nM      | Multi-City",
        "example": "M"
      },
      "ObjectTransactionAmex": {
        "title": "ObjectTransactionAmex",
        "type": "object",
        "properties": {
          "propertyCode": {
            "maxLength": 15,
            "type": "string",
            "description": "The code that contains a Merchant-assigned store or location number (or name) that uniquely identifies where the transaction took place.",
            "example": "21546782948"
          }
        }
      },
      "CardOnFileUsageIndicator": {
        "title": "CardOnFileUsageIndicator",
        "enum": [
          "01",
          "02"
        ],
        "type": "string",
        "description": "This field specifies whether the transaction is an initial or subsequent COF transaction.\n\nValue| Description\n-----|------------\n01   | Identifies a transaction as an Initial COF transaction. It is sent in requests where card credentials are being stored. Store the resulting  cardonfile.transactionid to be sent on any subsequent transactions.\n02   | Identifies a transaction as a Subsequent COF transaction. It is sent in requests where card credentials that were previously stored are in use. If used,  must include the cardonfile.transactionid value stored on the initial sale event  where the token was stored.",
        "example": "01"
      },
      "CSCResult": {
        "title": "CSCResult",
        "enum": [
          "M",
          "N",
          "P",
          "S",
          "U"
        ],
        "type": "string",
        "description": "##### Conditional: Returned if <samp>card.securityCode.indicator</samp> and <samp>card.securityCode.value</samp> are sent in the request.\n\nThe result of a CSC check. This field will be used by Shift4 Payments to determine the value sent in the <samp>card.securityCode.valid</samp> field (based on the merchant’s list of accepted verification results as configured with Shift4 Payments).\n\nValue|Description\n-----|------------\nM    | CSC matched.\nN    | CSC did not match.\nP    | CSC not processed.\nS    | CSC should have been present.\nU    | Issuer unable to process.",
        "example": "M"
      },
      "RiskAssessmentRequest": {
        "title": "RiskAssessmentRequest",
        "enum": [
          "A",
          "D",
          "R",
          "E"
        ],
        "type": "string",
        "description": "The risk assessment value received in the [Risk Assessment](#operation/riskassess) response.\n\n##### Conditional: must be sent if [Risk Assessment](#operation/riskassess)  was completed prior to processing the transaction.",
        "example": "A"
      },
      "ObjectCardSecurityCode": {
        "title": "ObjectCardSecurityCode",
        "required": [
          "indicator",
          "value"
        ],
        "type": "object",
        "properties": {
          "indicator": {
            "$ref": "#/components/schemas/CSCIndicator"
          },
          "result": {
            "$ref": "#/components/schemas/CSCResult"
          },
          "valid": {
            "maxLength": 1,
            "minLength": 1,
            "type": "string",
            "description": "##### Conditional: Returned if <samp>card.securityCode.indicator</samp> and <samp>card.securityCode.value</samp> are sent in the request.\n\nA simplified CSC check result based on the value in the <samp>card.securityCode.result</samp> field and the merchant’s accepted verification results as configured with Shift4 Payments. The value returned will be ‘Y’ if CSC verification passed or ‘N’ if CSC verification did not pass.",
            "example": "Y"
          },
          "value": {
            "maxLength": 4,
            "type": "string",
            "description": "##### Conditional: Send only when card data is manually entered. This field should not be specified when using an encrypted device.\n\nThe three- or four-digit Card Security Code found on a payment card. This value should only be sent in an initial sale/authorization request. It should not be stored by the interface. When sending <samp>card.securityCode.value</samp>, <samp>card.securityCode.indicator</samp> must also be sent.",
            "example": "333"
          }
        },
        "description": "##### Conditional: Send only when card data is manually entered. This object should not be specified when using an encrypted device."
      },
      "AirlineInternetIndicator": {
        "title": "AirlineInternetIndicator",
        "enum": [
          "Y",
          "N"
        ],
        "type": "string",
        "description": "Indicates if this is an internet transaction.\n\nValue  | Description       \n-------|-------------------\nY      | Yes\nN      | No",
        "example": "Y"
      },
      "AirlineRestrictedTicketIndicator": {
        "title": "AirlineRestrictedTicketIndicator",
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "description": "Indicates whether this ticket is non-refundable.\n\nValue  | Description       \n-------|-------------------\n0      | No restriction\n1      | Restricted (non-refundable) ticket",
        "example": 1
      },
      "ObjectPin": {
        "title": "ObjectPin",
        "type": "object",
        "properties": {
          "block": {
            "maxLength": 16,
            "type": "string",
            "description": "Encrypted PIN data received from a POS-controlled PIN pad (not controlled by the UTG).",
            "example": "1234567890123456"
          },
          "ksn": {
            "maxLength": 20,
            "type": "string",
            "description": "Key serial number (KSN) received from a POS-controlled PIN pad (not controlled by the UTG). This field is a hexadecimal field that should be padded with leading ‘F’s.",
            "example": "FFFF4950010293927772"
          }
        },
        "description": "##### Conditional: Include in the request for PIN debit and EMV Online PIN transactions.   This object does not apply to UTG-controlled devices."
      },
      "AncillaryServicesServiceCode": {
        "title": "AncillaryServicesServiceCode",
        "enum": [
          "BF",
          "BG",
          "CF",
          "CG",
          "CO",
          "FF",
          "GF",
          "GT",
          "IE",
          "LG",
          "MD",
          "ML",
          "OT",
          "PA",
          "PT",
          "SA",
          "SB",
          "SF",
          "ST",
          "TS",
          "UN",
          "UP",
          "WI"
        ],
        "type": "string",
        "description": "This field describes the type of service that has been provided.\n\nValue  | Description \n-------|---------------\nBF\t    | Bundled Service\nBG\t    | Baggage Fee\nCF\t    | Change Fee\nCG\t    | Cargo\nCO\t    | Carbon Offset\nFF\t    | Frequent Flyer\nGF\t    | Gift Card\nGT\t    | Ground Transport\nIE\t    | In-Flight Entertainment\nLG\t    | Lounge\nMD\t    | Medical\nML\t    | Meal/Beverage\nOT\t    | Other\nPA     | Passenger Assist Fee\nPT\t    | Pets\nSA\t    | Seat Fees\nSB\t    | Standby\nSF\t    | Service Fee\nST\t    | Store\nTS\t    | Travel Service\nUN\t    | Unaccompanied Travel\nUP\t    | Upgrades\nWI\t    | Wi-Fi",
        "example": "BF"
      },
      "ObjectPurchaseCard": {
        "title": "ObjectPurchaseCard",
        "required": [
          "customerReference",
          "destinationPostalCode",
          "productDescriptors"
        ],
        "type": "object",
        "properties": {
          "customerReference": {
            "maxLength": 25,
            "type": "string",
            "description": "A unique value used to identify the consumer or transaction. If a merchant has a significant amount of revenue from purchasing card customers, the interface would use this field to collect the consumer’s purchase order or employee identification number. In lodging transactions, this may be unique transaction details, such as a reservation code or third-party booking source.  This field is part of Level 2 card data.",
            "example": "D019D09309F2"
          },
          "destinationPostalCode": {
            "maxLength": 9,
            "type": "string",
            "description": "When items are shipped, the ZIP/postal code to which merchandise will be shipped; otherwise, the ZIP/postal code where the goods or services are rendered.  This field is part of Level 2 card data.",
            "example": "94719"
          },
          "productDescriptors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A text description of the items purchased or services sold. This can be a generic text description of what the merchant sells (such as “Groceries”) or specific transaction data (such as the name of the item sold). At least one product descriptor field is required in a sale or authorization request.",
            "example": [
              "Hamburger",
              "Fries",
              "Soda",
              "Cookie"
            ]
          }
        }
      },
      "P2PEviaIDTechDevice": {
        "title": "P2PEviaIDTechDevice",
        "required": [
          "dateTime",
          "amount",
          "clerk",
          "p2pe",
          "transaction"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "apiOptions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "API Options modify the request being made. See the [API Options](#tag/API-Options) section for more information.",
            "example": [
              "RETURNEXPDATE",
              "ALLOWPARTIALAUTH"
            ]
          },
          "amount": {
            "$ref": "#/components/schemas/ObjectAmount"
          },
          "clerk": {
            "$ref": "#/components/schemas/ObjectClerk"
          },
          "receiptColumns": {
            "type": "integer",
            "description": "Send this field if you want Shift4 to format the receipt text instead of returning individual fields. The value sent will correlate to the column width of the formatted receipt that we return. (This also allows the receipt text to wrap to fit the paper size of the printed receipt.) See the [Printing Receipts](#tag/Printing-Receipts) section of this document for more information on formatted receipts.",
            "format": "int32",
            "example": 40
          },
          "p2pe": {
            "$ref": "#/components/schemas/P2pe"
          },
          "card": {
            "$ref": "#/components/schemas/Card"
          },
          "customer": {
            "$ref": "#/components/schemas/ObjectCustomer"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction"
          }
        }
      },
      "ObjectCustomer": {
        "title": "ObjectCustomer",
        "type": "object",
        "properties": {
          "addressLine1": {
            "maxLength": 30,
            "type": "string",
            "description": "Cardholder’s street address exactly as it appears on their billing statement. This field is used in AVS.",
            "example": "65 Easy St"
          },
          "firstName": {
            "maxLength": 30,
            "type": "string",
            "description": "##### Conditional: Send only when card data is manually entered. This field should not be specified when using an encrypted device.\n\nSpecifies a consumer’s first name. This field is used in AVS. If the interface sends this field, the value specified by the interface will be returned in the response, unless the API Option USECARDNAME is included in the request and a UTG-controlled PIN pad is in use. If the interface does not send the <samp>customer</samp> object, the consumer's name will be returned in the <samp>customer</samp> object if the name is present in the card's track data.",
            "example": "John"
          },
          "lastName": {
            "maxLength": 30,
            "type": "string",
            "description": "##### Conditional: Send only when card data is manually entered. This field should not be specified when using an encrypted device.\n\nSpecifies a consumer’s last name. This field is used in AVS. If the interface sends this field, the value specified by the interface will be returned in the response, unless the API Option USECARDNAME is included in the request and a UTG-controlled PIN pad is in use. If the interface does not send the <samp>customer</samp> object, the consumer's name will be returned in the <samp>customer</samp> object if the name is present in the card's track data.",
            "example": "Smith"
          },
          "postalCode": {
            "maxLength": 9,
            "minLength": 5,
            "type": "string",
            "description": "Cardholder’s ZIP/postal code from their billing statement. This field is used in AVS. Do not include special characters.",
            "example": "65144"
          },
          "emailAddress": {
            "maxLength": 80,
            "type": "string",
            "description": "Customer email address.",
            "example": "firstname.lastname@email.com"
          },
          "ipAddress": {
            "maxLength": 20,
            "type": "string",
            "description": "Public source IP Address where the request originates,\nnot the IP Address of the web server.",
            "example": "63.57.84.101"
          }
        }
      },
      "EntryMode": {
        "title": "EntryMode",
        "enum": [
          "1",
          "2",
          "C",
          "E",
          "M",
          "Q",
          "R"
        ],
        "type": "string",
        "description": "##### Conditional: The Card Entry Mode should be sent in an initial request; in subsequent requests, it should be left blank or not sent. When using a Universal Transaction Gateway® (UTG®)-controlled PIN pad, this field should be left blank or not sent in a request; the UTG will capture the card entry mode and return it in the response. When P2PE data is being sent from a non-UTG controlled device, this field is not needed \n\nThe method used to capture a payment card in an authorization/sale request. \n\nValue|Description\n-----|-----------\n1    | Track 1 Only or Dual Track (Track 1 & 2)\n2    | Track 2 Only\nC    | EMV Contactless\nE    | EMV Chip\nM    | Manual Entry\nQ    | QR Code\nR    | Contactless MSD via card or mobile wallet",
        "example": "M"
      },
      "ObjectTickets": {
        "title": "ObjectTickets",
        "required": [
          "ticketNumber",
          "passengerName"
        ],
        "type": "object",
        "properties": {
          "ticketNumber": {
            "maxLength": 15,
            "type": "string",
            "description": "The ticket number provided by the Carrier for the passenger.",
            "example": "344567890234567"
          },
          "passengerName": {
            "maxLength": 40,
            "type": "string",
            "description": "Name of the passenger to whom the ticket was issued.  This field contains the Passenger Name in format:\n\nSURNAME-FIRSTNAME-MIDDLEINITIAL-TITLE\n\n(Note: - = space character)\n\nExample: \"Doe Jane M Mrs\"",
            "example": "Doe Jane M Mrs"
          }
        }
      },
      "DeviceCapabilityContactlessMSR": {
        "title": "DeviceCapabilityContactlessMSR",
        "enum": [
          "Y",
          "N"
        ],
        "type": "string",
        "description": "Specifies whether or not the device supports contactless magstripe.  If this input method can be supported by the device, but the input method is currently disabled for all transactions on the device, then the value 'N' should be sent.",
        "example": "Y"
      },
      "ObjectAmount": {
        "title": "ObjectAmount",
        "required": [
          "tax",
          "total"
        ],
        "type": "object",
        "properties": {
          "cashback": {
            "$ref": "#/components/schemas/ObjectAmount"
          },
          "iiasAmounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectAmount"
            },
            "description": "##### Conditional: Send in the request if processing for a health care merchant.\n\nThe first entry in the array should have an amount representing the total of all healthcare costs, and a type of '4S'.  Any subsequent entries should contain the subtotal for each of the other expense types involved in this transaction."
          },
          "surcharge": {
            "type": "number",
            "description": "##### Conditional: Send in the request if charging a surcharge for the transaction\n\nIn a sale or authorization transaction, the <samp>surcharge</samp> field specifies a fee amount that a consumer is charged in addition to the transaction amount. Using the <samp>surcharge</samp> field is required by the processors to identify any fee amount being charged when a consumer pays for a transaction with a credit or debit card.",
            "example": 5
          },
          "tax": {
            "type": "number",
            "description": "The amount of sales tax charged for a transaction. The tax amount is used by businesses to track tax expenses for accounting purposes. Identifying the tax amount also helps consumers understand the total amount that they were billed.  This field is part of Level 2 card data.",
            "example": 15
          },
          "tip": {
            "type": "number",
            "description": "##### Conditional: Send in the request if a tip is included.\n\nThe tip amount of the transaction.",
            "example": 20
          },
          "total": {
            "type": "number",
            "description": "The amount being charged for a particular transaction. If other amount fields are sent, they must be included in the total amount.",
            "example": 160
          }
        },
        "description": "Object containing information regarding the amount being requested. The <samp>total</samp> field within the object is required and specifies the amount being requested. All other fields are for informational purposes and must also be included in the <samp>total</samp> field. For example, a purchase of $100 with a $20 tip and $8 tax would be “128.00” in the <samp>total</samp> field, “20.00” in the <samp>tip</samp> field and \"8.00\" in the <samp>tax</samp> field."
      },
      "P2PEFormatIDTech": {
        "title": "P2PEFormatIDTech",
        "enum": [
          "01",
          "02"
        ],
        "type": "string",
        "description": "Classifies the type of payment device being used for P2PE.\n\nValue|Description\n-----|-----------\n01   | IDTech Enhanced Encryption format (Keyboard Mode)\n02   | IDTech Enhanced Encryption format (USB HID Mode)",
        "example": "01"
      },
      "DeviceCapabilityPIN": {
        "title": "DeviceCapabilityPIN",
        "enum": [
          "Y",
          "N"
        ],
        "type": "string",
        "description": "Specifies whether or not the device supports PIN entry (for debit or EMV).  If this input method can be supported by the device, but the input method is currently disabled for all transactions on the device, then the value 'N' should be sent.",
        "example": "Y"
      },
      "ObjectP2PEType05": {
        "title": "ObjectP2PEType05",
        "required": [
          "data",
          "format",
          "ksn"
        ],
        "type": "object",
        "properties": {
          "data": {
            "maxLength": 2048,
            "type": "string",
            "description": "The full output of a P2PE keypad/magnetic swipe reader (MSR).",
            "example": "027101801F2D1E00939B%*432100******1119^VS/DUAL TRACK^2212******?*;432100******1119=2212******?*CECE3FCE7781142BEC8D0E267AE89F5D3C7E235BF1A70E637951E8D93003E5A2586C336CA4A3B31F6639B04005BB12A716D8BC4D3AB125C27AB11A9DDC02816569D42A20B036EE5E2C71CB70565FB43B000000000000000000000000000000000000000000000000000000000000000000000000000000003434345434363138343962994950010038200415953903"
          },
          "format": {
            "enum": [
              5
            ],
            "type": "integer",
            "description": "Classifies the type of payment device being used for P2PE.\n\nValue|Description\n-----|-----------\n05   | [Shift4 Payments 3DES DUKPT format](#tag/P2PE-format)",
            "format": "int32",
            "example": 5
          },
          "ksn": {
            "maxLength": 20,
            "type": "string",
            "description": "The key serial number which was used to encrypt the P2PE data.",
            "example": "6299495001100E200041"
          }
        },
        "description": "See [P2PE Format](#tag/P2PE-format) for more information."
      },
      "Token": {
        "title": "Token",
        "required": [
          "dateTime",
          "amount",
          "clerk",
          "card",
          "transaction"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "apiOptions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "API Options modify the request being made. See the [API Options](#tag/API-Options) section for more information.",
            "example": [
              "RETURNEXPDATE",
              "ALLOWPARTIALAUTH"
            ]
          },
          "amount": {
            "$ref": "#/components/schemas/ObjectAmount"
          },
          "clerk": {
            "$ref": "#/components/schemas/ObjectClerk"
          },
          "receiptColumns": {
            "type": "integer",
            "description": "Send this field if you want Shift4 to format the receipt text instead of returning individual fields. The value sent will correlate to the column width of the formatted receipt that we return. (This also allows the receipt text to wrap to fit the paper size of the printed receipt.) See the [Printing Receipts](#tag/Printing-Receipts) section of this document for more information on formatted receipts.",
            "format": "int32",
            "example": 40
          },
          "card": {
            "$ref": "#/components/schemas/Card1"
          },
          "customer": {
            "$ref": "#/components/schemas/ObjectCustomer"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction1"
          },
          "risk": {
            "$ref": "#/components/schemas/ObjectRiskTransactionRequest"
          }
        }
      },
      "DeviceCapabilitySignature": {
        "title": "DeviceCapabilitySignature",
        "enum": [
          "Y",
          "N"
        ],
        "type": "string",
        "description": "Specifies whether or not the device supports signature capture.  If this input method can be supported by the device, but the input method is currently disabled for all transactions on the device, then the value 'N' should be sent.",
        "example": "Y"
      },
      "DeviceCapabilityManualEntry": {
        "title": "DeviceCapabilityManualEntry",
        "enum": [
          "Y",
          "N"
        ],
        "type": "string",
        "description": "Specifies whether or not the device supports manual entry.  If this input method can be supported by the device, but the input method is currently disabled for all transactions on the device, then the value 'N' should be sent.",
        "example": "Y"
      },
      "IIASType": {
        "title": "IIASType",
        "enum": [
          "4O",
          "4S",
          "4T",
          "4U",
          "4V",
          "4W",
          "4X"
        ],
        "type": "string",
        "description": "This code classifies eligible healthcare expenses.\n\nValue|Description\n-----|-----------\n4O   | Cash Disbursement (Discover Only) – Amount of Cash Back Being Requested\n4S   | Healthcare (Visa/MC Only) – Qualified Medical Expenses or Over-the-Counter\n4T   | Transit (Visa Only) – Transit Fare Media (e.g., Commuter and Parking Passes, Mass Transit Vouchers, and Tickets)\n4U   | RX (Visa/MC Only)\n4V   | Vision (Visa Only)\n4W   | Clinical (Visa Only)\n4X   | Dental (Visa Only)",
        "example": "4T"
      },
      "P2PEFormatType05": {
        "title": "P2PEFormatType05",
        "enum": [
          "05"
        ],
        "type": "string",
        "description": "Classifies the type of payment device being used for P2PE.\n\nValue|Description\n-----|-----------\n05   | [Shift4 Payments 3DES DUKPT format](#tag/P2PE-format)",
        "example": "05"
      },
      "DevicePromptCardSecurityCode": {
        "title": "DevicePromptCardSecurityCode",
        "enum": [
          "Y",
          "N"
        ],
        "type": "string",
        "description": "When using a UTG-controlled PIN pad:\n\nValue|Description\n-----|-----------\nY    | Force the PIN pad to prompt the consumer for a CSC.\nN    | Do not force the PIN pad to prompt the consumer for a CSC.",
        "example": "Y"
      },
      "CSCIndicator": {
        "title": "CSCIndicator",
        "enum": [
          0,
          1,
          2,
          9
        ],
        "type": "integer",
        "description": "##### Conditional: Send only when card data is manually entered. This field should not be specified when using an encrypted device.\n\nThis field indicates the presence of a CSC.\n\nValue|Description\n-----|-----------\n0    | CSC not provided by user.\n1    | CSC provided.\n2    | CSC illegible.\n9    | CSC not on card, or card did not have a CSC.",
        "example": 1
      },
      "AirlineTicketTranType": {
        "title": "AirlineTicketTranType",
        "enum": [
          "TKT",
          "REF",
          "EXC",
          "MSC"
        ],
        "type": "string",
        "description": "This field contains the ticket transaction type code assigned to this transaction.\n\nValue  | Description \n-------|---------------\nTKT    | Ticket Purchase\nREF    | Refund\nEXC    | Exchange Ticket\nMSC    | Miscellaneous (non-Ticket Purchase- and non-Exchange Ticket-related transactions only)",
        "example": "TKT"
      },
      "ObjectAutoCheckIn": {
        "title": "ObjectAutoCheckIn",
        "type": "object",
        "properties": {
          "estimatedDays": {
            "type": "integer",
            "description": "Estimated contract length of car rental.",
            "format": "int32",
            "example": 5
          }
        },
        "description": "##### Conditional: Utilize this object for Auto Rental transactions"
      },
      "ObjectCardOnFile": {
        "title": "ObjectCardOnFile",
        "type": "object",
        "properties": {
          "indicator": {
            "$ref": "#/components/schemas/CardOnFileIndicator"
          },
          "usageIndicator": {
            "$ref": "#/components/schemas/CardOnFileUsageIndicator"
          },
          "scheduledIndicator": {
            "$ref": "#/components/schemas/CardOnFileScheduledIndicator"
          },
          "transactionId": {
            "maxLength": 15,
            "type": "string",
            "description": "This field is returned in the initial COF response, and ties subsequent COF  transactions to the original authorization. Must be included in the request  if cardOnFile.usageIndicator = 02.\n\nFor example, if a merchant runs a Sale on a card for the first time, they will receive a transactionId back in the response.  A month later, when the merchant wants to perform an additional Sale with the card on file, they would send a Sale request including the transactionId they received from the first sale.  The response to this second Sale request may return a new  transactionId. If a new transactionId is returned, all subsequent card on file requests must use the newest transactionId.",
            "example": "Z62537846172646"
          }
        },
        "description": "##### Conditional: Send this object when the transaction being performed is using a card on file or when the request will result in storing a card on file."
      },
      "AirlineTicketChangeIndicator": {
        "title": "AirlineTicketChangeIndicator",
        "enum": [
          "C",
          "N"
        ],
        "type": "string",
        "description": "Indicates why a ticket was changed.  This field should contain spaces or one of the below codes.\n\nValue  | Description \n-------|---------------\nC      | Change to existing ticket\nN      | New ticket",
        "example": "C"
      },
      "ObjectAncillaryServices": {
        "title": "ObjectAncillaryServices",
        "required": [
          "serviceCode",
          "serviceFee"
        ],
        "type": "object",
        "properties": {
          "serviceCode": {
            "$ref": "#/components/schemas/AncillaryServicesServiceCode"
          },
          "serviceFee": {
            "type": "number",
            "description": "This field contains the amount associated with the value provided in ancillary Service Code.",
            "example": 2
          }
        }
      },
      "ObjectFlightLegs": {
        "title": "ObjectFlightLegs",
        "required": [
          "carrierCode",
          "destAirportCode",
          "fare",
          "fareBasis",
          "flightNumber",
          "legArrivalDateTime",
          "legDepartureDateTime",
          "originAirportCode",
          "serviceClass",
          "stopOverCode",
          "tripLegInfo"
        ],
        "type": "object",
        "properties": {
          "carrierCode": {
            "maxLength": 2,
            "type": "string",
            "description": "Code indicating name of carrier (United Airlines, Jet Blue, etc.) for the leg.",
            "example": "DL"
          },
          "couponNumber": {
            "type": "number",
            "description": "Number of coupons in the ticket for the leg.",
            "example": 1
          },
          "destAirportCode": {
            "maxLength": 5,
            "type": "string",
            "description": "Indicates destination city's airport code for the leg.",
            "example": "YXX"
          },
          "fare": {
            "type": "number",
            "description": "This field contains the total Fare for this trip segment. This is not the total amount billed to the customer.",
            "example": 300
          },
          "fareBasis": {
            "maxLength": 24,
            "type": "string",
            "description": "This field contains primary and secondary discount codes that indicate the class of service and fare level associated with the ticket for the leg. Truncate at 24 bytes, if necessary.",
            "example": "YE3MAU"
          },
          "flightNumber": {
            "maxLength": 5,
            "type": "string",
            "description": "Number of the airline flight to be taken on Leg of the trip.",
            "example": "2490"
          },
          "legArrivalDateTime": {
            "type": "string",
            "description": "The date and time the flight is scheduled to arrive for the leg. The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "legDepartureDateTime": {
            "type": "string",
            "description": "The date and time the flight is scheduled to depart for the leg. The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).",
            "example": "2021-04-12T15:39:01.594-07:00"
          },
          "originAirportCode": {
            "maxLength": 5,
            "type": "string",
            "description": "Indicates origination city's airport code for the leg.",
            "example": "AUH"
          },
          "serviceClass": {
            "maxLength": 2,
            "type": "string",
            "description": "Indicates service class for leg.\n\nValue  | Description \n-------|---------------\nFC      | First Class\nBC      | Business Class\nEC      | Economy/Coach Class",
            "example": "FC"
          },
          "stopOverCode": {
            "maxLength": 1,
            "type": "string",
            "description": "Indicates whether a stopover is allowed on this ticket for leg. The entry must be a D, O, or X.\n\nValue  | Description \n-------|---------------\nO      | Stopover allowed\nX      | Stopover not allowed\nD      | Destination point",
            "example": "X"
          },
          "tripLegInfo": {
            "maxLength": 35,
            "type": "string",
            "description": "Description of leg or stage of trip.",
            "example": "Trip Leg Info 1"
          }
        }
      },
      "CardType": {
        "title": "CardType",
        "enum": [
          "CC",
          "DB",
          "GC",
          "HF",
          "PL",
          "YC"
        ],
        "type": "string",
        "description": "An abbreviation used to specify the type of card that will be used when processing a transaction.  If an interface sends a value that is not listed here, that value will be ignored.\n\nValue| Description\n-----|------------\nCC   | When using a UTG-controlled device, this value will force a card to process as credit.\nDB   | When using a UTG-controlled device, this value will force a card to process as debit.  When using a non-UTG-controlled PIN pad, this value must be sent when processing a debit transaction.\nGC   | Gift Card\nHF   | HSA/FSA Card\nPL   | Private Label\nYC   | IT’S YOUR CARD"
      },
      "DeviceCapabilityQuickChip": {
        "title": "DeviceCapabilityQuickChip",
        "enum": [
          "Y",
          "N"
        ],
        "type": "string",
        "description": "Specifies whether or not the device supports quick chip.  If this input method can be supported by the device, but the input method is currently disabled for all transactions on the device, then the value 'N' should be sent.",
        "example": "Y"
      },
      "DeviceManufacturer": {
        "title": "DeviceManufacturer",
        "enum": [
          "Ingenico",
          "Innowi",
          "PAX",
          "Verifone"
        ],
        "type": "string",
        "description": "##### Conditional: Required when using a non-UTG-controlled device.\n\nSpecifies the company which manufactured the device.",
        "example": "PAX"
      },
      "ObjectDeviceCapability": {
        "title": "ObjectDeviceCapability",
        "type": "object",
        "properties": {
          "contactlessEMV": {
            "$ref": "#/components/schemas/DeviceCapabilityContactlessEMV"
          },
          "contactlessMSR": {
            "$ref": "#/components/schemas/DeviceCapabilityContactlessMSR"
          },
          "EMV": {
            "$ref": "#/components/schemas/DeviceCapabilityEMV"
          },
          "manualEntry": {
            "$ref": "#/components/schemas/DeviceCapabilityManualEntry"
          },
          "magstripe": {
            "$ref": "#/components/schemas/DeviceCapabilityMagstripe"
          },
          "PIN": {
            "$ref": "#/components/schemas/DeviceCapabilityPIN"
          },
          "quickChip": {
            "$ref": "#/components/schemas/DeviceCapabilityQuickChip"
          },
          "signature": {
            "$ref": "#/components/schemas/DeviceCapabilitySignature"
          }
        },
        "description": "##### Conditional: Required when using a non-UTG-controlled device."
      },
      "DeviceCapabilityEMV": {
        "title": "DeviceCapabilityEMV",
        "enum": [
          "Y",
          "N"
        ],
        "type": "string",
        "description": "Specifies whether or not the device supports EMV.  If this input method can be supported by the device, but the input method is currently disabled for all transactions on the device, then the value 'N' should be sent.",
        "example": "Y"
      },
      "UTGControlledDevice": {
        "title": "UTGControlledDevice",
        "required": [
          "dateTime",
          "amount",
          "clerk",
          "device",
          "transaction"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "apiOptions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "API Options modify the request being made. See the [API Options](#tag/API-Options) section for more information.",
            "example": [
              "RETURNEXPDATE",
              "ALLOWPARTIALAUTH"
            ]
          },
          "amount": {
            "$ref": "#/components/schemas/ObjectAmount"
          },
          "clerk": {
            "$ref": "#/components/schemas/ObjectClerk"
          },
          "receiptColumns": {
            "type": "integer",
            "description": "Send this field if you want Shift4 to format the receipt text instead of returning individual fields. The value sent will correlate to the column width of the formatted receipt that we return. (This also allows the receipt text to wrap to fit the paper size of the printed receipt.) See the [Printing Receipts](#tag/Printing-Receipts) section of this document for more information on formatted receipts.",
            "format": "int32",
            "example": 40
          },
          "customer": {
            "$ref": "#/components/schemas/ObjectCustomer"
          },
          "card": {
            "$ref": "#/components/schemas/Card"
          },
          "device": {
            "$ref": "#/components/schemas/Device"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction"
          }
        },
        "example": {
          "dateTime": "2021-04-15T09:18:23.283-07:00",
          "amount": {
            "surcharge": 5,
            "tax": 15,
            "total": 140
          },
          "apiOptions": [
            "ALLOWPARTIALAUTH"
          ],
          "card": {
            "present": "Y"
          },
          "clerk": {
            "numericId": 1576
          },
          "device": {
            "terminalId": "1742"
          },
          "transaction": {
            "hotel": {
              "estimatedDays": 5
            },
            "invoice": "192029",
            "notes": "Transaction notes are added here",
            "purchaseCard": {
              "customerReference": "D019D09309F2",
              "destinationPostalCode": "94719",
              "productDescriptors": [
                "Hamburger",
                "Fries",
                "Soda",
                "Cookie"
              ]
            }
          }
        }
      },
      "CardOnFileScheduledIndicator": {
        "title": "CardOnFileScheduledIndicator",
        "enum": [
          "01",
          "02"
        ],
        "type": "string",
        "description": "This field specifies whether the transaction is a recurring charge. Initial storage events are generally 'Unscheduled', while subsequent request are often 'Scheduled' i.e. subscriptions.\n\nValue| Description\n-----|------------\n01   | Identifies a transaction as a Scheduled (Recurring) COF transaction.\n02   | Identifies a transaction as an Unscheduled (Non-Recurring) COF transaction.",
        "example": "02"
      },
      "DeviceCapabilityContactlessEMV": {
        "title": "DeviceCapabilityContactlessEMV",
        "enum": [
          "Y",
          "N"
        ],
        "type": "string",
        "description": "Specifies whether or not the device supports contactless EMV.  If this input method can be supported by the device, but the input method is currently disabled for all transactions on the device, then the value 'N' should be sent.",
        "example": "Y"
      },
      "standard": {
        "title": "standard",
        "required": [
          "dateTime",
          "amount",
          "clerk"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "apiOptions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "API Options modify the request being made. See the [API Options](#tag/API-Options) section for more information.",
            "example": [
              "RETURNEXPDATE",
              "ALLOWPARTIALAUTH"
            ]
          },
          "amount": {
            "$ref": "#/components/schemas/ObjectAmount"
          },
          "clerk": {
            "$ref": "#/components/schemas/ObjectClerk"
          },
          "receiptColumns": {
            "type": "integer",
            "description": "Send this field if you want Shift4 to format the receipt text instead of returning individual fields. The value sent will correlate to the column width of the formatted receipt that we return. (This also allows the receipt text to wrap to fit the paper size of the printed receipt.) See the [Printing Receipts](#tag/Printing-Receipts) section of this document for more information on formatted receipts.",
            "format": "int32",
            "example": 40
          }
        }
      },
      "DevicePromptStreetNumber": {
        "title": "DevicePromptStreetNumber",
        "enum": [
          "Y",
          "N"
        ],
        "type": "string",
        "description": "When using a UTG-controlled PIN pad:\n\nValue|Description\n-----|-----------\nY    | Force the PIN pad to prompt the consumer for the street number of their billing address.\nN    | Do not force the PIN pad to prompt the consumer for the street number of their billing address.",
        "example": "Y"
      },
      "ObjectClerk": {
        "title": "ObjectClerk",
        "required": [
          "numericId"
        ],
        "type": "object",
        "properties": {
          "numericId": {
            "type": "integer",
            "description": "A number used to identify the point-of-sale (POS) or property management system (PMS) clerk or user. The value cannot be 0. An interface must be able to dynamically populate this field (not use a hardcoded value), unless the interface will be used exclusively for e-commerce.",
            "format": "int32",
            "example": 1576
          }
        }
      },
      "AirlineDocumentType": {
        "title": "AirlineDocumentType",
        "enum": [
          "01",
          "02",
          "03",
          "04",
          "05",
          "06",
          "07",
          "08",
          "09",
          "10",
          "11",
          "12",
          "13",
          "14",
          "15",
          "16",
          "17",
          "18",
          "19",
          "20",
          "21",
          "22",
          "23",
          "24",
          "25",
          "26",
          "27",
          "28",
          "29",
          "30",
          "31",
          "32",
          "33",
          "34",
          "35",
          "36",
          "37",
          "38",
          "39",
          "41",
          "42",
          "43",
          "44",
          "45",
          "46",
          "47",
          "48",
          "49",
          "50",
          "51",
          "52",
          "60",
          "64",
          "65",
          "66",
          "67",
          "68",
          "69",
          "70",
          "71",
          "72",
          "73",
          "74",
          "75",
          "76",
          "77",
          "78",
          "79",
          "80",
          "81",
          "82",
          "83",
          "84",
          "85",
          "86",
          "87",
          "88",
          "89",
          "90",
          "91",
          "92",
          "93"
        ],
        "type": "string",
        "description": "This field contains the airline Document Type code, which indicates the purpose of this transaction.  This information may appear on the descriptive bill on the Cardmember's statement, or be used to resolve billing inquiries and disputes. The codes entered in the Transaction Type and Document Type fields are used together to describe the purpose of this transaction.\n\nValue  | Description \n-------|---------------\n01     | Passenger Ticket\n02\t    | Additional Collection\n03\t    | Excess Baggage\n04\t    | Misc. Charge Order (MCO) / Prepaid Ticket Auth\n05\t    | Special Service Ticket\n06\t    | Supported Refund\n07\t    | Unsupported Refund\n08\t    | Lost Ticket Application\n09\t    | Tour Order Voucher\n10\t    | Ticket by Mail\n11\t    | Undercharge Adjustment\n12\t    | Group Ticket\n13\t    | Exchange Adjustment\n14\t    | SPD/Air Freight\n15\t    | In-flight Adjustment\n16\t    | Agency Passenger Ticket\n17\t    | Agency Tour Order/Voucher\n18\t    | Agency Misc. Charge Order (MCO)\n19\t    | Agency Exchange Order\n20\t    | Agency Group Ticket\n21\t    | Debit Adjustment Duplicate Refund/Use\n22\t    | In-flight Merchandise Ordered\n23\t    | Catalogue Merchandise Ordered\n24\t    | In-flight Phone Charges\n25\t    | Frequent Flyer Fee/Purchase\n26\t    | Kennel Charge\n27\t    | Animal Transportation Charge\n28\t    | Firearms Case\n29\t    | Upgrade Charge\n30\t    | Credit Unused Transportation\n31\t    | Credit Class of Service Adjustment\n32\t    | Credit Denied Boarding\n33\t    | Credit Misc. Refund\n34\t    | Credit Lost Ticket Refund\n35\t    | Credit Exchange Refund\n36\t    | Credit Overcharge Adjustment\n37\t    | Credit Multiple Unused Tickets\n38\t    | Exchange Order\n39\t    | Self-Service Ticket(s)\n41\t    | In-flight Duty Free Purchase\n42\t    | Senior Citizen Discount Booklets\n43\t    | Club Membership Fee\n44\t    | Coupon Book\n45\t    | In-flight Charges\n46\t    | Tour Deposit\n47\t    | Frequent Flyer Overnight Delivery Charge\n48\t    | Frequent Flyer Fulfillment\n49\t    | Small Package Delivery\n50\t    | Vendor Sale\n51\t    | Miscellaneous Tax(es) Fee(s)\n52\t    | Travel Agency Fee\n60\t    | Vendor Refund Credit\n64\t    | Duty Free Sale\n65\t    | Preferred Seat Upgrade\n66\t    | Cabin Upgrade\n67\t    | Lounge/Club Access or Day Pass\n68\t    | Agent Assisted Reservation. Ticketing Fee\n69\t    | Ticket Change or Cancel Fee\n70\t    | Trip Insurance\n71\t    | Unaccompanied Minor\n72\t    | Standby Fee\n73\t    | Curbside Baggage\n74\t    | Inflight Medical Equipment\n75\t    | Ticket or Pass Print Fee\n76\t    | Checked Sporting/Special Equipment\n77\t    | Dry Ice Fee\n78\t    | Mail/Postage Fee\n79\t    | Club Membership Fee - Temporary/Trial\n80\t    | Frequent Flyer Activation/Reinstatement\n81\t    | Gift Certificate\n82\t    | Onboard/Inflight Prepaid Voucher\n83\t    | Optional Services Fee\n84\t    | Advanced Purchase - Excess Baggage\n85\t    | Advanced Purchase - Preferred Seat Upgrade\n86\t    | Advanced Purchase - Cabin Upgrade\n87\t    | Advanced Purchase - Optional Services\n88\t    | WiFi\n89\t    | Packages\n90\t    | Inflight Entertainment/Internet Access\n91\t    | Overweight Bag Fee\n92\t    | Sleep Sets\n93\t    | Special Purchase Fee",
        "example": "93"
      },
      "ObjectRiskTransactionRequest": {
        "title": "ObjectRiskTransactionRequest",
        "type": "object",
        "properties": {
          "tranId": {
            "type": "string",
            "description": "The risk tranId value received in the [Risk Assessment](#operation/riskassess) response.\n\n##### Conditional: must be sent if [Risk Assessment](#operation/riskassess)  was completed prior to processing the transaction.",
            "example": "DDWT0P3LG6LL"
          },
          "assessment": {
            "$ref": "#/components/schemas/RiskAssessmentRequest"
          }
        },
        "description": "##### Conditional: must be sent if [Risk Assessment](#operation/riskassess)  was completed prior to processing the transaction."
      },
      "ObjectCardTokenRequired": {
        "title": "ObjectCardTokenRequired",
        "required": [
          "value"
        ],
        "type": "object",
        "properties": {
          "value": {
            "maxLength": 16,
            "type": "string",
            "description": "This field is used to specify a card token. Whenever CHD is sent in a request, a card token will be returned in this field. Your interface should be designed to store this card token for future use. The latest card token received should be used in any subsequent request that references the same card data.",
            "example": "8048471746471119"
          }
        }
      },
      "DevicePromptPostalCode": {
        "title": "DevicePromptPostalCode",
        "enum": [
          "Y",
          "N"
        ],
        "type": "string",
        "description": "When using a UTG-controlled PIN pad:\n\nValue|Description\n-----|-----------\nY    | Force the PIN pad to prompt the consumer for a ZIP/Postal Code.\nN    | Do not force the PIN pad to prompt the consumer for a ZIP/Postal Code.",
        "example": "Y"
      },
      "CardOnFileIndicator": {
        "title": "CardOnFileIndicator",
        "enum": [
          "01",
          "02",
          "03",
          "04",
          "05",
          "06",
          "07"
        ],
        "type": "string",
        "description": "This field specifies the category of the card-on-file transaction.\n\nValue| Description\n-----|------------\n01   | Identifies a transaction as a COF transaction.\n02   | Identifies a transaction as a Reauthorization COF transaction.\n03   | Identifies a transaction as a Resubmission COF transaction.  Only certain merchant categories are able to send a resubmission, and it can only be done if the original authorization attempt was declined due to insufficient funds.\n04   | Identifies a transaction as an Estimated Authorization COF transaction.\n05   | Identifies a transaction as a Delayed Charges COF transaction.  For example, a hotel might charge a customer for room damages after the guest has already checked out.\n06   | Identifies a transaction as an Incremental COF transaction.  For example, a hotel which authorized a customer’s card for one night at check-in might increase the authorization amount to cover two nights when the customer decides to extend their stay.  Shift4 Payments automatically detects this scenario and sends the appropriate value to the processor.\n07   | Identifies a transaction as a No Show COF transaction.  For example, a hotel might charge a customer who does not show up for a booked stay.",
        "example": "02"
      },
      "Present": {
        "title": "Present",
        "enum": [
          "Y",
          "N"
        ],
        "type": "string",
        "description": "##### Conditional: Send in the initial authorization/sale request\n\nIndicates whether a card was present (‘Y’) or not (‘N’) at the time a transaction took place. This should be set appropriately in the initial authorization/sale request.  In subsequent requests, this field should be left blank or should not be sent.",
        "example": "Y"
      },
      "ObjectAirlineRequest": {
        "title": "ObjectAirlineRequest",
        "required": [
          "carrierCode",
          "carrierName",
          "conjunctionTicketIndicator",
          "documentType",
          "electronicTicketIndicator",
          "internetIndicator",
          "issueDate",
          "numberOfCities",
          "numberOfCarriers",
          "numberOfPassengers",
          "passengerArrivalDate",
          "passengerDepartureDate",
          "passengerNameRecord",
          "restrictedTicketIndicator",
          "ticketChangeIndicator",
          "ticketTranType",
          "travelAgencyCode",
          "travelAgencyName",
          "typeIndicator",
          "tickets",
          "flightLegs"
        ],
        "type": "object",
        "properties": {
          "carrierCode": {
            "maxLength": 4,
            "type": "string",
            "description": "The code of the airline carrier issuing the ticket.",
            "example": "5472"
          },
          "carrierName": {
            "maxLength": 19,
            "type": "string",
            "description": "The name of the airline carrier issuing the ticket.",
            "example": "American Airlines"
          },
          "conjunctionTicketIndicator": {
            "$ref": "#/components/schemas/AirlineConjunctionTicketIndicator"
          },
          "documentType": {
            "$ref": "#/components/schemas/AirlineDocumentType"
          },
          "electronicTicketIndicator": {
            "$ref": "#/components/schemas/AirlineElectronicTicketIndicator"
          },
          "exchangeTicketNumber": {
            "maxLength": 15,
            "type": "string",
            "description": "The original ticket number that was replaced by a new ticket number.",
            "example": "507212345678768"
          },
          "internetIndicator": {
            "$ref": "#/components/schemas/AirlineInternetIndicator"
          },
          "issueDate": {
            "type": "string",
            "description": "The date the ticket was issued to the customer. The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).",
            "example": "2021-04-12T15:39:01.594-07:00"
          },
          "numberOfCities": {
            "type": "number",
            "description": "The number of airports or cities for each leg on the ticket (including origination and destination cities).",
            "example": 5
          },
          "numberOfCarriers": {
            "type": "number",
            "description": "This field contains the number of airline carriers.",
            "example": 5
          },
          "numberOfPassengers": {
            "type": "number",
            "description": "The number of passengers in the transaction.",
            "example": 5
          },
          "passengerArrivalDate": {
            "type": "string",
            "description": "Date that the ticket holder is scheduled to arrive at their destination at the time of issuance of the original ticket. The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).",
            "example": "2021-04-14T15:39:01.594-07:00"
          },
          "passengerDepartureDate": {
            "type": "string",
            "description": "Date that the ticket holder is scheduled to depart at the time of issuance of the original ticket. The date may be a future one.  The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).",
            "example": "2021-04-13T15:39:01.594-07:00"
          },
          "passengerNameRecord": {
            "maxLength": 6,
            "type": "string",
            "description": "A passenger name record (PNR) is a record in the database of a computer reservation system (CRS) that contains the itinerary for a passenger or a group of passengers travelling together",
            "example": "MXCTIF"
          },
          "restrictedTicketIndicator": {
            "$ref": "#/components/schemas/AirlineRestrictedTicketIndicator"
          },
          "ticketChangeIndicator": {
            "$ref": "#/components/schemas/AirlineTicketChangeIndicator"
          },
          "ticketTranType": {
            "$ref": "#/components/schemas/AirlineTicketTranType"
          },
          "travelAgencyCode": {
            "maxLength": 8,
            "type": "string",
            "description": "Code identifying travel agency if the ticket was issued by a travel agency.",
            "example": "05172343"
          },
          "travelAgencyName": {
            "maxLength": 25,
            "type": "string",
            "description": "Name of travel agency if the ticket was issued by a travel agency.",
            "example": "State Travel"
          },
          "typeIndicator": {
            "$ref": "#/components/schemas/AirlineTypeIndicator"
          },
          "tickets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectTickets"
            },
            "description": "Array of ticket number and passenger name. Note: At least one instance of ticket number and passenger name info should be provided.",
            "example": [
              {
                "ticketNumber": "412345678901234",
                "passengerName": "Jane Doe"
              },
              {
                "ticketNumber": "412345678901236",
                "passengerName": "PASSENGER NAME 2"
              }
            ]
          },
          "ancillaryServices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectAncillaryServices"
            },
            "description": "Array of ancillary service code and fees.\n\n##### Conditional: Send if any ancillary services were charged.",
            "example": [
              {
                "serviceCode": "BF",
                "serviceFee": 2
              },
              {
                "serviceCode": "BG",
                "serviceFee": 3
              }
            ]
          },
          "flightLegs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectFlightLegs"
            },
            "description": "Array of flight trip leg info. Maximun 4 legs to a trip allowed. Note: At least one instance of flight trip leg info should be provided."
          }
        },
        "description": "##### Conditional: Utilize this object for Airline transactions"
      },
      "AutoAdditionalChargesMileage": {
        "title": "AutoAdditionalChargesMileage",
        "enum": [
          "Y",
          "N"
        ],
        "type": "string",
        "example": "Y"
      },
      "P2PEMagstripeMSR": {
        "title": "P2PEMagstripeMSR",
        "required": [
          "dateTime",
          "amount",
          "clerk",
          "device",
          "p2pe",
          "transaction"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "apiOptions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "API Options modify the request being made. See the [API Options](#tag/API-Options) section for more information.",
            "example": [
              "RETURNEXPDATE",
              "ALLOWPARTIALAUTH"
            ]
          },
          "amount": {
            "$ref": "#/components/schemas/ObjectAmount"
          },
          "clerk": {
            "$ref": "#/components/schemas/ObjectClerk"
          },
          "receiptColumns": {
            "type": "integer",
            "description": "Send this field if you want Shift4 to format the receipt text instead of returning individual fields. The value sent will correlate to the column width of the formatted receipt that we return. (This also allows the receipt text to wrap to fit the paper size of the printed receipt.) See the [Printing Receipts](#tag/Printing-Receipts) section of this document for more information on formatted receipts.",
            "format": "int32",
            "example": 40
          },
          "card": {
            "$ref": "#/components/schemas/Card3"
          },
          "customer": {
            "$ref": "#/components/schemas/ObjectCustomer"
          },
          "device": {
            "$ref": "#/components/schemas/Device1"
          },
          "p2pe": {
            "$ref": "#/components/schemas/ObjectP2PEType05"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction3"
          }
        }
      },
      "UTGControlledDevice3": {
        "title": "UTGControlledDevice3",
        "required": [
          "dateTime",
          "amount",
          "clerk",
          "device",
          "transaction"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "apiOptions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "API Options modify the request being made. See the [API Options](#tag/API-Options) section for more information.",
            "example": [
              "RETURNEXPDATE",
              "ALLOWPARTIALAUTH"
            ]
          },
          "amount": {
            "$ref": "#/components/schemas/ObjectAmount"
          },
          "clerk": {
            "$ref": "#/components/schemas/ObjectClerk"
          },
          "receiptColumns": {
            "type": "integer",
            "description": "Send this field if you want Shift4 to format the receipt text instead of returning individual fields. The value sent will correlate to the column width of the formatted receipt that we return. (This also allows the receipt text to wrap to fit the paper size of the printed receipt.) See the [Printing Receipts](#tag/Printing-Receipts) section of this document for more information on formatted receipts.",
            "format": "int32",
            "example": 40
          },
          "customer": {
            "$ref": "#/components/schemas/ObjectCustomer"
          },
          "card": {
            "$ref": "#/components/schemas/Card"
          },
          "device": {
            "$ref": "#/components/schemas/Device"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction22"
          }
        },
        "example": {
          "dateTime": "2021-04-15T09:18:23.283-07:00",
          "amount": {
            "surcharge": 5,
            "tax": 15,
            "total": 140
          },
          "apiOptions": [
            "ALLOWPARTIALAUTH"
          ],
          "card": {
            "present": "Y"
          },
          "clerk": {
            "numericId": 1576
          },
          "device": {
            "terminalId": "1742"
          },
          "transaction": {
            "hotel": {
              "estimatedDays": 5
            },
            "invoice": "192029",
            "authorizationCode": "189746",
            "notes": "Transaction notes are added here",
            "purchaseCard": {
              "customerReference": "D019D09309F2",
              "destinationPostalCode": "94719",
              "productDescriptors": [
                "Hamburger",
                "Fries",
                "Soda",
                "Cookie"
              ]
            }
          }
        }
      },
      "CardNumberUnencrypted2": {
        "title": "CardNumberUnencrypted2",
        "required": [
          "dateTime",
          "amount",
          "clerk",
          "card",
          "transaction"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "apiOptions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "API Options modify the request being made. See the [API Options](#tag/API-Options) section for more information.",
            "example": [
              "RETURNEXPDATE",
              "ALLOWPARTIALAUTH"
            ]
          },
          "amount": {
            "$ref": "#/components/schemas/Amount"
          },
          "clerk": {
            "$ref": "#/components/schemas/ObjectClerk"
          },
          "receiptColumns": {
            "type": "integer",
            "description": "Send this field if you want Shift4 to format the receipt text instead of returning individual fields. The value sent will correlate to the column width of the formatted receipt that we return. (This also allows the receipt text to wrap to fit the paper size of the printed receipt.) See the [Printing Receipts](#tag/Printing-Receipts) section of this document for more information on formatted receipts.",
            "format": "int32",
            "example": 40
          },
          "customer": {
            "$ref": "#/components/schemas/Customer2"
          },
          "card": {
            "$ref": "#/components/schemas/Card21"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction16"
          }
        },
        "example": {
          "dateTime": "2021-04-15T09:18:23.283-07:00",
          "amount": {
            "tax": 10.05,
            "total": 121.83
          },
          "card": {
            "entryMode": "M",
            "expirationDate": 1230,
            "number": "4321000000001119",
            "present": "N",
            "type": "VS"
          },
          "clerk": {
            "numericId": 1576
          },
          "customer": {
            "addressLine1": "65 Easy St",
            "firstName": "John",
            "lastName": "Smith",
            "postalCode": "65144"
          },
          "transaction": {
            "invoice": "192029",
            "notes": "Transaction notes are added here"
          }
        }
      },
      "ObjectCardResponse": {
        "title": "ObjectCardResponse",
        "type": "object",
        "properties": {
          "entryMode": {
            "$ref": "#/components/schemas/EntryMode"
          },
          "expirationDate": {
            "type": "integer",
            "description": "##### Conditional: Requires API Option \"RETURNEXPDATE\". \n\nCard expiration date in MMYY format. This value will only be populated if \"RETURNEXPDATE\" is included in the <samp>apiOptions</samp> array.",
            "format": "int32",
            "example": 1230
          },
          "levelResult": {
            "maxLength": 2,
            "minLength": 2,
            "type": "string",
            "description": "Classifies the type of card used in an authorization/sale request. This field is returned in a response if the data is provided by the processor. See [Card Level Results](#tag/Card-Level-Results) for a complete list of values.",
            "example": "2C"
          },
          "number": {
            "maxLength": 32,
            "type": "string",
            "description": "The card number field will always be masked when returned in a response.",
            "example": "XXXXXXXXXXXX1119"
          },
          "present": {
            "$ref": "#/components/schemas/Present"
          },
          "type": {
            "$ref": "#/components/schemas/CardTypeResp"
          },
          "balance": {
            "$ref": "#/components/schemas/ObjectCardBalance"
          },
          "securityCode": {
            "$ref": "#/components/schemas/ObjectCardSecurityCodeResponse"
          },
          "token": {
            "$ref": "#/components/schemas/ObjectCardTokenResponse"
          }
        }
      },
      "ObjectAirlineRequestRefund": {
        "title": "ObjectAirlineRequestRefund",
        "required": [
          "carrierCode",
          "carrierName",
          "conjunctionTicketIndicator",
          "creditReasonIndicator",
          "documentType",
          "electronicTicketIndicator",
          "internetIndicator",
          "issueDate",
          "numberOfCities",
          "numberOfCarriers",
          "numberOfPassengers",
          "passengerArrivalDate",
          "passengerDepartureDate",
          "passengerNameRecord",
          "restrictedTicketIndicator",
          "ticketChangeIndicator",
          "ticketTranType",
          "travelAgencyCode",
          "travelAgencyName",
          "typeIndicator",
          "tickets",
          "flightLegs"
        ],
        "type": "object",
        "properties": {
          "carrierCode": {
            "maxLength": 4,
            "type": "string",
            "description": "The code of the airline carrier issuing the ticket.",
            "example": "5472"
          },
          "carrierName": {
            "maxLength": 19,
            "type": "string",
            "description": "The name of the airline carrier issuing the ticket.",
            "example": "American Airlines"
          },
          "conjunctionTicketIndicator": {
            "$ref": "#/components/schemas/AirlineConjunctionTicketIndicator"
          },
          "creditReasonIndicator": {
            "$ref": "#/components/schemas/AirlineCreditReasonIndicator"
          },
          "documentType": {
            "$ref": "#/components/schemas/AirlineDocumentType"
          },
          "electronicTicketIndicator": {
            "$ref": "#/components/schemas/AirlineElectronicTicketIndicator"
          },
          "exchangeTicketNumber": {
            "maxLength": 15,
            "type": "string",
            "description": "The original ticket number that was replaced by a new ticket number.",
            "example": "507212345678768"
          },
          "internetIndicator": {
            "$ref": "#/components/schemas/AirlineInternetIndicator"
          },
          "issueDate": {
            "type": "string",
            "description": "The date the ticket was issued to the customer. The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).",
            "example": "2021-04-12T15:39:01.594-07:00"
          },
          "numberOfCities": {
            "type": "number",
            "description": "The number of airports or cities for each leg on the ticket (including origination and destination cities).",
            "example": 5
          },
          "numberOfCarriers": {
            "type": "number",
            "description": "This field contains the number of airline carriers.",
            "example": 5
          },
          "numberOfPassengers": {
            "type": "number",
            "description": "The number of passengers in the transaction.",
            "example": 5
          },
          "passengerArrivalDate": {
            "type": "string",
            "description": "Date that the ticket holder is scheduled to arrive at their destination at the time of issuance of the original ticket. The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).",
            "example": "2021-04-14T15:39:01.594-07:00"
          },
          "passengerDepartureDate": {
            "type": "string",
            "description": "Date that the ticket holder is scheduled to depart at the time of issuance of the original ticket. The date may be a future one.  The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).",
            "example": "2021-04-13T15:39:01.594-07:00"
          },
          "passengerNameRecord": {
            "maxLength": 6,
            "type": "string",
            "description": "A passenger name record (PNR) is a record in the database of a computer reservation system (CRS) that contains the itinerary for a passenger or a group of passengers travelling together",
            "example": "MXCTIF"
          },
          "restrictedTicketIndicator": {
            "$ref": "#/components/schemas/AirlineRestrictedTicketIndicator"
          },
          "ticketChangeIndicator": {
            "$ref": "#/components/schemas/AirlineTicketChangeIndicator"
          },
          "ticketTranType": {
            "$ref": "#/components/schemas/AirlineTicketTranType"
          },
          "travelAgencyCode": {
            "maxLength": 8,
            "type": "string",
            "description": "Code identifying travel agency if the ticket was issued by a travel agency.",
            "example": "05172343"
          },
          "travelAgencyName": {
            "maxLength": 25,
            "type": "string",
            "description": "Name of travel agency if the ticket was issued by a travel agency.",
            "example": "State Travel"
          },
          "typeIndicator": {
            "$ref": "#/components/schemas/AirlineTypeIndicator"
          },
          "tickets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectTickets"
            },
            "description": "Array of ticket number and passenger name. Note: At least one instance of ticket number and passenger name info should be provided.",
            "example": [
              {
                "ticketNumber": "412345678901234",
                "passengerName": "Jane Doe"
              },
              {
                "ticketNumber": "412345678901236",
                "passengerName": "PASSENGER NAME 2"
              }
            ]
          },
          "ancillaryServices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectAncillaryServices"
            },
            "description": "Array of ancillary service code and fees.\n\n##### Conditional: Send if any ancillary services were charged.",
            "example": [
              {
                "serviceCode": "BF",
                "serviceFee": 2
              },
              {
                "serviceCode": "BG",
                "serviceFee": 3
              }
            ]
          },
          "flightLegs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectFlightLegs"
            },
            "description": "Array of flight trip leg info. Maximun 4 legs to a trip allowed. Note: At least one instance of flight trip leg info should be provided."
          }
        },
        "description": "##### Conditional: Utilize this object for Airline transactions"
      },
      "DebitCapable": {
        "title": "DebitCapable",
        "enum": [
          "Y",
          "N"
        ],
        "type": "string",
        "description": "In BIN management, specifies whether a card can be processed as debit (‘Y’) or not (‘N’).",
        "example": "Y"
      },
      "P2PEviaIDTechDevice3": {
        "title": "P2PEviaIDTechDevice3",
        "required": [
          "dateTime",
          "amount",
          "clerk",
          "p2pe",
          "transaction"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "apiOptions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "API Options modify the request being made. See the [API Options](#tag/API-Options) section for more information.",
            "example": [
              "RETURNEXPDATE",
              "ALLOWPARTIALAUTH"
            ]
          },
          "amount": {
            "$ref": "#/components/schemas/ObjectAmount"
          },
          "clerk": {
            "$ref": "#/components/schemas/ObjectClerk"
          },
          "receiptColumns": {
            "type": "integer",
            "description": "Send this field if you want Shift4 to format the receipt text instead of returning individual fields. The value sent will correlate to the column width of the formatted receipt that we return. (This also allows the receipt text to wrap to fit the paper size of the printed receipt.) See the [Printing Receipts](#tag/Printing-Receipts) section of this document for more information on formatted receipts.",
            "format": "int32",
            "example": 40
          },
          "p2pe": {
            "$ref": "#/components/schemas/P2pe"
          },
          "card": {
            "$ref": "#/components/schemas/Card"
          },
          "customer": {
            "$ref": "#/components/schemas/ObjectCustomer"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction22"
          }
        }
      },
      "AVSPostalCodeVerified": {
        "title": "AVSPostalCodeVerified",
        "enum": [
          "Y",
          "N"
        ],
        "type": "string",
        "description": "Identifies whether the ZIP/postal code was verified (‘Y’) or not (‘N’) in an AVS check with a processor.",
        "example": "Y"
      },
      "ObjectAmountTaxNotRequired": {
        "title": "ObjectAmountTaxNotRequired",
        "required": [
          "total"
        ],
        "type": "object",
        "properties": {
          "cashback": {
            "type": "number",
            "description": "Specifies the cashback amount in a transaction. When using a UTG-controlled PIN pad with the ALLOWCASHBACK API Option, this field will return the cashback amount requested by the consumer. The interface can also send the desired cashback amount in a request by adding it to the <samp>amount.total</samp> and including it in the <samp>amount.cashback</samp> field. This will bypass prompting the consumer for a cashback amount.",
            "example": 20
          },
          "iiasAmounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectIIASAmounts"
            },
            "description": "##### Conditional: Send in the request if processing for a health care merchant.\n\nThe first entry in the array should have an amount representing the total of all healthcare costs, and a type of '4S'.  Any subsequent entries should contain the subtotal for each of the other expense types involved in this transaction.",
            "example": [
              {
                "type": "4S",
                "amount": 75
              },
              {
                "type": "4W",
                "amount": 25
              }
            ]
          },
          "surcharge": {
            "type": "number",
            "description": "##### Conditional: Send in the request if charging a surcharge for the transaction\n\nIn a sale or authorization transaction, the <samp>surcharge</samp> field specifies a fee amount that a consumer is charged in addition to the transaction amount. Using the <samp>surcharge</samp> field is required by the processors to identify any fee amount being charged when a consumer pays for a transaction with a credit or debit card.",
            "example": 5
          },
          "tax": {
            "type": "number",
            "description": "The amount of sales tax charged for a transaction. The tax amount is used by businesses to track tax expenses for accounting purposes. Identifying the tax amount also helps consumers understand the total amount that they were billed.  This field is part of Level 2 card data.",
            "example": 15
          },
          "tip": {
            "type": "number",
            "description": "##### Conditional: Send in the request if a tip is included.\n\nThe tip amount of the transaction.",
            "example": 20
          },
          "total": {
            "type": "number",
            "description": "The amount being charged for a particular transaction. If other amount fields are sent, they must be included in the total amount.",
            "example": 160
          }
        },
        "description": "Object containing information regarding the amount being requested. The <samp>total</samp> field within the object is required and specifies the amount being requested. All other fields are for informational purposes and must also be included in the <samp>total</samp> field. For example, a purchase of $100 with a $20 tip and $8 tax would be “128.00” in the <samp>total</samp> field, “20.00” in the <samp>tip</samp> field and \"8.00\" in the <samp>tax</samp> field."
      },
      "AutoAdditionalChargesOneWayServiceFee": {
        "title": "AutoAdditionalChargesOneWayServiceFee",
        "enum": [
          "Y",
          "N"
        ],
        "type": "string",
        "example": "Y"
      },
      "ObjectAutoRental": {
        "title": "ObjectAutoRental",
        "type": "object",
        "properties": {
          "agreement": {
            "maxLength": 9,
            "type": "string",
            "description": "Contract number for an auto rental agreement.",
            "example": "123203592"
          },
          "city": {
            "maxLength": 18,
            "type": "string",
            "description": "City where rental car was picked up.",
            "example": "Las Vegas"
          },
          "countryCode": {
            "maxLength": 3,
            "type": "string",
            "description": "Country where rental card was picked up.",
            "example": "840"
          },
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "postalCode": {
            "maxLength": 9,
            "type": "string",
            "description": "Postal Code where rental car was picked up in U.S. postal abbreviation format.",
            "example": "83145"
          },
          "region": {
            "maxLength": 2,
            "type": "string",
            "description": "Region (State) where rental car was picked up in U.S. postal abbreviation format.",
            "example": "NV"
          }
        },
        "description": "Information relating to where the rental card was picked up."
      },
      "Wallet3DSecureUsingi4Go1": {
        "title": "Wallet3DSecureUsingi4Go1",
        "required": [
          "dateTime",
          "amount",
          "clerk",
          "card",
          "extendedCardData",
          "transaction"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "apiOptions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "API Options modify the request being made. See the [API Options](#tag/API-Options) section for more information.",
            "example": [
              "RETURNEXPDATE",
              "ALLOWPARTIALAUTH"
            ]
          },
          "amount": {
            "$ref": "#/components/schemas/ObjectAmount"
          },
          "clerk": {
            "$ref": "#/components/schemas/ObjectClerk"
          },
          "receiptColumns": {
            "type": "integer",
            "description": "Send this field if you want Shift4 to format the receipt text instead of returning individual fields. The value sent will correlate to the column width of the formatted receipt that we return. (This also allows the receipt text to wrap to fit the paper size of the printed receipt.) See the [Printing Receipts](#tag/Printing-Receipts) section of this document for more information on formatted receipts.",
            "format": "int32",
            "example": 40
          },
          "customer": {
            "$ref": "#/components/schemas/ObjectCustomer"
          },
          "card": {
            "$ref": "#/components/schemas/Card6"
          },
          "extendedCardData": {
            "maxLength": 4096,
            "type": "string",
            "description": "Base64 encoded string received from the i4Go call. This is used to pass extended card information for processing 3D Secure, Apple Pay and Google Pay requests via i4Go.",
            "example": "eyJ0aHJlZURTZWN1cmUiOnsiY3J5cHRvZ3JhbSIgOiAiRUhYRjhoZmpBaVhOQUtJQUFBQldYQUFERWhFUiIsInNlY3VyaXR5TGV2ZWxJbmRpY2F0b3IiIDogIjI0MSJ9LCJjYXJkQnJhbmRUb2tlbiI6eyJyZXF1ZXN0b3JJZCIgOiAiMDEyMzQ1Njc4OTAxIn19"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction9"
          },
          "risk": {
            "$ref": "#/components/schemas/ObjectRiskTransactionRequest"
          }
        }
      },
      "P2PEviaIDTechDevice4": {
        "title": "P2PEviaIDTechDevice4",
        "required": [
          "dateTime",
          "amount",
          "clerk",
          "p2pe",
          "transaction"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "apiOptions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "API Options modify the request being made. See the [API Options](#tag/API-Options) section for more information.",
            "example": [
              "RETURNEXPDATE",
              "ALLOWPARTIALAUTH"
            ]
          },
          "amount": {
            "$ref": "#/components/schemas/ObjectAmount"
          },
          "clerk": {
            "$ref": "#/components/schemas/ObjectClerk"
          },
          "receiptColumns": {
            "type": "integer",
            "description": "Send this field if you want Shift4 to format the receipt text instead of returning individual fields. The value sent will correlate to the column width of the formatted receipt that we return. (This also allows the receipt text to wrap to fit the paper size of the printed receipt.) See the [Printing Receipts](#tag/Printing-Receipts) section of this document for more information on formatted receipts.",
            "format": "int32",
            "example": 40
          },
          "p2pe": {
            "$ref": "#/components/schemas/P2pe"
          },
          "customer": {
            "$ref": "#/components/schemas/ObjectCustomer"
          },
          "card": {
            "$ref": "#/components/schemas/Card"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction28"
          }
        }
      },
      "AVSValid": {
        "title": "AVSValid",
        "enum": [
          "Y",
          "N"
        ],
        "type": "string",
        "description": "Simplified AVS result based on the merchant’s list of accepted responses as configured with Shift4 Payments: (‘Y’) if accepted or (‘N’) if not accepted.",
        "example": "Y"
      },
      "P2PEMagstripeMSR4": {
        "title": "P2PEMagstripeMSR4",
        "required": [
          "dateTime",
          "amount",
          "clerk",
          "device",
          "p2pe",
          "transaction"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "apiOptions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "API Options modify the request being made. See the [API Options](#tag/API-Options) section for more information.",
            "example": [
              "RETURNEXPDATE",
              "ALLOWPARTIALAUTH"
            ]
          },
          "amount": {
            "$ref": "#/components/schemas/ObjectAmount"
          },
          "clerk": {
            "$ref": "#/components/schemas/ObjectClerk"
          },
          "receiptColumns": {
            "type": "integer",
            "description": "Send this field if you want Shift4 to format the receipt text instead of returning individual fields. The value sent will correlate to the column width of the formatted receipt that we return. (This also allows the receipt text to wrap to fit the paper size of the printed receipt.) See the [Printing Receipts](#tag/Printing-Receipts) section of this document for more information on formatted receipts.",
            "format": "int32",
            "example": 40
          },
          "card": {
            "$ref": "#/components/schemas/Card3"
          },
          "customer": {
            "$ref": "#/components/schemas/ObjectCustomer"
          },
          "device": {
            "$ref": "#/components/schemas/Device1"
          },
          "p2pe": {
            "$ref": "#/components/schemas/ObjectP2PEType05"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction31"
          }
        }
      },
      "HotelAdditionalChargesOther": {
        "title": "HotelAdditionalChargesOther",
        "enum": [
          "Y",
          "N"
        ],
        "type": "string",
        "example": "Y"
      },
      "P2PEEMV3": {
        "title": "P2PEEMV3",
        "required": [
          "dateTime",
          "amount",
          "clerk",
          "device",
          "emv",
          "p2pe",
          "transaction"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "apiOptions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "API Options modify the request being made. See the [API Options](#tag/API-Options) section for more information.",
            "example": [
              "RETURNEXPDATE",
              "ALLOWPARTIALAUTH"
            ]
          },
          "amount": {
            "$ref": "#/components/schemas/ObjectAmount"
          },
          "clerk": {
            "$ref": "#/components/schemas/ObjectClerk"
          },
          "receiptColumns": {
            "type": "integer",
            "description": "Send this field if you want Shift4 to format the receipt text instead of returning individual fields. The value sent will correlate to the column width of the formatted receipt that we return. (This also allows the receipt text to wrap to fit the paper size of the printed receipt.) See the [Printing Receipts](#tag/Printing-Receipts) section of this document for more information on formatted receipts.",
            "format": "int32",
            "example": 40
          },
          "card": {
            "$ref": "#/components/schemas/Card3"
          },
          "customer": {
            "$ref": "#/components/schemas/ObjectCustomer"
          },
          "device": {
            "$ref": "#/components/schemas/Device1"
          },
          "emv": {
            "$ref": "#/components/schemas/ObjectEMV"
          },
          "p2pe": {
            "$ref": "#/components/schemas/P2pe1"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction25"
          }
        }
      },
      "ObjectCardResponseIdentify": {
        "title": "ObjectCardResponseIdentify",
        "type": "object",
        "properties": {
          "bin": {
            "maxLength": 10,
            "type": "string",
            "description": "In BIN management, specifies the first 10 digits of the card.",
            "example": "3528000000"
          },
          "dccCapable": {
            "$ref": "#/components/schemas/DccCapable"
          },
          "debitCapable": {
            "$ref": "#/components/schemas/DebitCapable"
          },
          "levelResult": {
            "type": "string",
            "description": "In BIN management, specifies the detailed card type. For a complete list of potential values, see the [Card Level Results](#tag/Card-Level-Results) section in this document's appendix.",
            "example": "1P"
          },
          "type": {
            "$ref": "#/components/schemas/CardTypeResp"
          }
        }
      },
      "EmptyCandidateList": {
        "title": "EmptyCandidateList",
        "enum": [
          "Y",
          "N"
        ],
        "type": "string",
        "description": "When EMV is attempted but fallback occurs due to an empty candidate list, this field should be sent as 'Y' and <samp>emv.fallback</samp> should also be sent as 'Y'.  If this field is not sent, a value of 'N' is assumed.",
        "example": "Y"
      },
      "UTGControlledDevice1": {
        "title": "UTGControlledDevice1",
        "required": [
          "dateTime",
          "amount",
          "clerk",
          "device",
          "transaction"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "apiOptions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "API Options modify the request being made. See the [API Options](#tag/API-Options) section for more information.",
            "example": [
              "RETURNEXPDATE",
              "ALLOWPARTIALAUTH"
            ]
          },
          "amount": {
            "$ref": "#/components/schemas/ObjectAmount"
          },
          "clerk": {
            "$ref": "#/components/schemas/ObjectClerk"
          },
          "receiptColumns": {
            "type": "integer",
            "description": "Send this field if you want Shift4 to format the receipt text instead of returning individual fields. The value sent will correlate to the column width of the formatted receipt that we return. (This also allows the receipt text to wrap to fit the paper size of the printed receipt.) See the [Printing Receipts](#tag/Printing-Receipts) section of this document for more information on formatted receipts.",
            "format": "int32",
            "example": 40
          },
          "card": {
            "$ref": "#/components/schemas/Card"
          },
          "customer": {
            "$ref": "#/components/schemas/ObjectCustomer"
          },
          "device": {
            "$ref": "#/components/schemas/Device"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction8"
          }
        },
        "example": {
          "dateTime": "2021-04-15T09:18:23.283-07:00",
          "amount": {
            "surcharge": 5,
            "tax": 15,
            "total": 140
          },
          "apiOptions": [
            "ALLOWPARTIALAUTH"
          ],
          "card": {
            "present": "Y"
          },
          "clerk": {
            "numericId": 1576
          },
          "device": {
            "terminalId": "1742"
          },
          "transaction": {
            "hotel": {
              "additionalCharges": {
                "giftShop": "Y",
                "laundry": "Y",
                "miniBar": "Y",
                "other": "Y",
                "restaurant": "Y",
                "telephone": "Y"
              },
              "arrivalDateTime": "2021-04-12T15:39:01.594-07:00",
              "departureDateTime": "2021-04-15T09:18:23.283-07:00",
              "primaryChargeType": 1,
              "roomRates": [
                {
                  "nights": 2,
                  "rate": 159.95
                },
                {
                  "nights": 3,
                  "rate": 125.38
                }
              ],
              "specialCode": 1
            },
            "invoice": "192029",
            "notes": "Transaction notes are added here",
            "purchaseCard": {
              "customerReference": "D019D09309F2",
              "destinationPostalCode": "94719",
              "productDescriptors": [
                "Hamburger",
                "Fries",
                "Soda",
                "Cookie"
              ]
            }
          }
        }
      },
      "ObjectEMV": {
        "title": "ObjectEMV",
        "required": [
          "tlvData"
        ],
        "type": "object",
        "properties": {
          "emptyCandidateList": {
            "$ref": "#/components/schemas/EmptyCandidateList"
          },
          "fallback": {
            "$ref": "#/components/schemas/Fallback"
          },
          "tlvData": {
            "maxLength": 500,
            "type": "string",
            "description": "This field will contain all EMV tags in standard TLV format including the P2PE encrypted tags (5A and 57).  The P2PE encrypted tags (5A and 57) will have the entire TLV string encrypted and the encrypted data will be in a TLV format using the same tag. For example, tag 5A would look like the following:\n\n  Encrypted: 5A103737DA95D8062F647A0FF747CC496570\n  \n  Decrypted: 5A084761739001010010",
            "example": "4F07A0000000041010500A4D61737465724361726457203CCEB572BE7DD0A38E62E6BD70E3DAACE9B46BD3BF65E188E7D8D68D2178DE1A5A10B1794BAC083B08F0A1444F189A5493255F201A546573742F4361726420303920202020202020202020202020205F24032512315F25031511015F2D02656E5F3401018407A0000000041010950508200000009B02C8009F02060000000004449F03060000000000009F34031E03009F3704C5BF918D9F390105"
          }
        },
        "description": "##### Conditional: Required when processing an EMV transaction without using a UTG."
      },
      "ObjectThreeDSecure": {
        "title": "ObjectThreeDSecure",
        "type": "object",
        "properties": {
          "cryptogram": {
            "maxLength": 80,
            "type": "string",
            "description": "Ecommerce Cryptogram information",
            "example": "AAAAAAAA/COBt84dnIEcwAA3gAAGhgEDoLABAAhAgAABAAAALnNCLw=="
          },
          "ecommIndicator": {
            "$ref": "#/components/schemas/ThreeDSecureEcommIndicator"
          },
          "securityLevelIndicator": {
            "maxLength": 3,
            "type": "string",
            "description": "This field contains the electronic commerce indicators representing the security level and cardholder authentication associated with the transaction. This field must be present in all Auth Request messages for electronic commerce transactions.\nFor MC if this information is not present Shift4 sends 241 when cryptogram information is present.\n\nFirst 2 positions:\n\nValue| Description\n-----|------------\n21   | Channel encryption; cardholder certificate not used (preferred value for Mastercard SecureCode, Identity Check, and all eCommerce)\n22   | Masterpass-generated transaction\n24   | Digital Secure Remote Payment (DSRP) with UCAF Data\n91   | No security protocol; cardholder certificate not used\n\nThird position:\n\nValue| Description\n-----|------------\n0    | UCAF Data collection is not supported by the merchant; or the merchant supports SecureCode or Identity Check but has chosen not to undertake it on this transaction; or authentication failed and merchant desires to proceed with the transaction.\n1    | UCAF data collection is supported by the merchant and UCAF data must be present \n2    | UCAF data collection is supported by the merchant and UCAF data must be present \n3    | UCAF data collection is supported by the merchant and UCAF (Mastercard assigned Static Accountholder Authentication Value) data must be present. Note that the UCAF Data is required for Static AAV transactions. This value identifies participation in one of the following programs: Maestro Recurring Payments Program, Mastercard Utility Payment Program, Maestro Static AAV for Masterpass\n4    | Merchant has chosen to share authentication data within authorization; UCAF data collection not supported",
            "example": "241"
          },
          "xid": {
            "maxLength": 80,
            "type": "string",
            "description": "Unique tracking number set by the merchant and sent to the Issuer Authentication/Service in the Authentication Request message.\n\nThis is \"transactionIdentifier\" in the Apple Pay request.",
            "example": "hq0BA9EAAAGXIJcAGAAAABKU0+s="
          },
          "programProtocol": {
            "$ref": "#/components/schemas/ThreeDSecureProgramProtocol"
          },
          "authenticationSource": {
            "$ref": "#/components/schemas/ThreeDSecureAuthenticationSource"
          },
          "cavvResult": {
            "maxLength": 1,
            "type": "string",
            "description": "This is a response field that contains 3–D Secure Electronic Commerce Transaction Response Code that contains the Visa Cardholder Authentication Verification Value (CAVV) or the American Express Verification Value (AEVV) results code.\n\nValue | Description\n------|------------\nBlank | CAVV not present or CAVV not verified, issuer has not selected CAVV verification option\n0     | CAVV could not be verified or CAVV data was not provided when expected\n1     | CAVV failed verification-cardholder authentication\n2     | CAVV passed verification-cardholder authentication\n3     | CAVV passed verification-attempted authentication. A 3-D Secure Authentication Results Code value of 07 from the Issuer Attempts Server indicates that authentication was attempted. Issuer attempts CAVV key was used to generate the CAVV.\n4     | CAVV failed verification-attempted authentication. A 3-D Secure Authentication Results Code value of 07 from the Issuer Attempts Server indicates authentication was attempted. Issuer attempts CAVV key was used to generate the CAVV.\n5     | Reserved for future use\n6     | Reserved for future use\n7     | CAVV failed verification-attempted authentication. A 3-D Secure Authentication Results Code value of 07 from Visa Attempts Service indicates that an authentication attempt was performed. Visa attempts CAVV key was used to generate the CAVV. Note that Results Code value of 7 is also valid for American Express SafeKey responses, including those for non-U.S. cards.\n8     | CAVV passed verification-attempted authentication. A 3-D Secure Authentication Results Code value of 07 from Visa Attempts Service indicates that an authentication attempt was performed. Visa attempts CAVV key was used to generate the CAVV. Note that Results Code value of 8 is also valid for American Express SafeKey responses, including those for non-U.S. cards.\n9     | CAVV failed verification-attempted authentication. A 3-D Secure Authentication Results Code value of 08 from Visa Attempts Service indicates that an authentication attempt was performed when the Issuer ACS was not available. Visa attempts CAVV key was used to generate the CAVV. Note that Results Code value of 9 is also for American Express SafeKey responses, including those for non-U.S. cards.\nA     | CAVV passed verification-attempted authentication. A 3-D Secure Authentication Results Code value of 08 from Visa Attempts Service indicates that an authentication attempt was performed when the Issuer ACS was not available. Visa attempts CAVV key was used to generate the CAVV. Note that Results Code value of A is also for American Express SafeKey responses, including those for non-U.S. cards.\nB     | CAVV passed verification-attempted authentication, no liability shift. Only Visa generates this code; issuers do not.\nC     | CAVV was not verified-attempted authentication (for Visa use only). If 3-D Secure Authentication Results Code value is 07 in the CAVV and the issuer did not return a CAVV results code in the authorization response, or CAVV results code = 0 in the response message and the CAVV encryption keys do not exist in V.I.P., V.I.P. sets the value to C in CAVV results code.\nD     | CAVV was not verified-cardholder authentication (for Visa use only). If 3-D Secure Authentication Results Code value is 00 in the CAVV and the issuer did not return a CAVV results code in the authorization response, or CAVV results code = 0 in the response message and the CAVV encryption keys do not exist in V.I.P., V.I.P. sets the value to D in CAVV results code.\nU     | CAVV Unchecked [AX]",
            "example": "2"
          },
          "authenticationValue": {
            "maxLength": 80,
            "type": "string",
            "description": "Used only if both CAVV/UCAF and TAVV present in the transactions token contains the Visa token authentication verification value (TAVV) to support 3-D Secure (3DS) validation for token-based card-on-file, e-commerce, and application-based e-commerce transactions. Visa will allow two separate cryptograms in the authorization; one for token validation (TAVV) and one for cardholder authentication (Cardholder Authentication Verification Value).",
            "example": "<Cavv>Y2FyZGluYWxjb21tZXJjZWF1dGg=</Cavv>"
          },
          "tavvResult": {
            "maxLength": 1,
            "type": "string",
            "description": "TAVVResult (Visa token authentication verification value).\n\nValue| Description\n-----|------------\n1    | TAVV cryptogram failed validation\n2    | TAVV cryptogram passed validation",
            "example": "2"
          },
          "directoryServerTranId": {
            "maxLength": 36,
            "type": "string",
            "description": "The Directory Server Transaction ID is generated by the EMV 3DS Mastercard Directory Server during the authentication transaction and passed back to the merchant with the authentication results. This field allows the merchant to pass the Directory Server Transaction ID during authorization in order to link authentication and authorization data for Mastercard Identity Check.",
            "example": "07e54000-2721-4df9-aa51-04fa0e079aa8"
          },
          "walletID": {
            "maxLength": 3,
            "type": "string",
            "description": "Provides information about transactions initiated through the Masterpass Online platform or through the Mastercard Digital Enablement Service (MDES) and identifies the Wallet Provider.\n\nValue| Description\n-----|------------\n103  | Apple Pay\n216  | Google Pay\n217  | Samsung Pay\n327  | Merchant tokenization program",
            "example": "103"
          }
        }
      },
      "P2PEEMV4": {
        "title": "P2PEEMV4",
        "required": [
          "dateTime",
          "amount",
          "clerk",
          "device",
          "emv",
          "p2pe",
          "transaction"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "apiOptions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "API Options modify the request being made. See the [API Options](#tag/API-Options) section for more information.",
            "example": [
              "RETURNEXPDATE",
              "ALLOWPARTIALAUTH"
            ]
          },
          "amount": {
            "$ref": "#/components/schemas/ObjectAmount"
          },
          "clerk": {
            "$ref": "#/components/schemas/ObjectClerk"
          },
          "receiptColumns": {
            "type": "integer",
            "description": "Send this field if you want Shift4 to format the receipt text instead of returning individual fields. The value sent will correlate to the column width of the formatted receipt that we return. (This also allows the receipt text to wrap to fit the paper size of the printed receipt.) See the [Printing Receipts](#tag/Printing-Receipts) section of this document for more information on formatted receipts.",
            "format": "int32",
            "example": 40
          },
          "card": {
            "$ref": "#/components/schemas/Card3"
          },
          "customer": {
            "$ref": "#/components/schemas/ObjectCustomer"
          },
          "device": {
            "$ref": "#/components/schemas/Device1"
          },
          "emv": {
            "$ref": "#/components/schemas/ObjectEMV"
          },
          "p2pe": {
            "$ref": "#/components/schemas/P2pe1"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction31"
          }
        }
      },
      "ObjectAVS": {
        "title": "ObjectAVS",
        "type": "object",
        "properties": {
          "postalCodeVerified": {
            "$ref": "#/components/schemas/AVSPostalCodeVerified"
          },
          "result": {
            "$ref": "#/components/schemas/AVSResult"
          },
          "streetVerified": {
            "$ref": "#/components/schemas/AVSStreetVerified"
          },
          "valid": {
            "$ref": "#/components/schemas/AVSValid"
          }
        }
      },
      "ObjectCardResponseGC": {
        "title": "ObjectCardResponseGC",
        "type": "object",
        "properties": {
          "number": {
            "maxLength": 32,
            "type": "string",
            "description": "The card number field will always be masked when returned in a response.",
            "example": "XXXXXXXXXXXX8774"
          },
          "type": {
            "$ref": "#/components/schemas/CardTypeGCResp"
          },
          "balance": {
            "$ref": "#/components/schemas/ObjectCardBalance"
          },
          "token": {
            "$ref": "#/components/schemas/ObjectCardTokenGCResponse"
          }
        }
      },
      "ObjectCardTokenGCResponse": {
        "title": "ObjectCardTokenGCResponse",
        "type": "object",
        "properties": {
          "value": {
            "maxLength": 16,
            "type": "string",
            "description": "This field is used to specify a card token. Whenever CHD is sent in a request, a card token will be returned in this field. Your interface should be designed to store this card token for future use. The latest card token received should be used in any subsequent request that references the same card data.",
            "example": "87743q5p3ffhv67y"
          }
        }
      },
      "Wallet3DSecureUsingCardNumber": {
        "title": "Wallet3DSecureUsingCardNumber",
        "required": [
          "dateTime",
          "amount",
          "clerk",
          "card",
          "transaction",
          "threeDSecure",
          "cardBrandToken"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "apiOptions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "API Options modify the request being made. See the [API Options](#tag/API-Options) section for more information.",
            "example": [
              "RETURNEXPDATE",
              "ALLOWPARTIALAUTH"
            ]
          },
          "amount": {
            "$ref": "#/components/schemas/ObjectAmount"
          },
          "clerk": {
            "$ref": "#/components/schemas/ObjectClerk"
          },
          "receiptColumns": {
            "type": "integer",
            "description": "Send this field if you want Shift4 to format the receipt text instead of returning individual fields. The value sent will correlate to the column width of the formatted receipt that we return. (This also allows the receipt text to wrap to fit the paper size of the printed receipt.) See the [Printing Receipts](#tag/Printing-Receipts) section of this document for more information on formatted receipts.",
            "format": "int32",
            "example": 40
          },
          "customer": {
            "$ref": "#/components/schemas/ObjectCustomer"
          },
          "card": {
            "$ref": "#/components/schemas/Card7"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction1"
          },
          "threeDSecure": {
            "$ref": "#/components/schemas/ObjectThreeDSecure"
          },
          "cardBrandToken": {
            "$ref": "#/components/schemas/ObjectBrandToken"
          },
          "risk": {
            "$ref": "#/components/schemas/ObjectRiskTransactionRequest"
          }
        }
      },
      "ObjectCardTokenResponse": {
        "title": "ObjectCardTokenResponse",
        "type": "object",
        "properties": {
          "value": {
            "maxLength": 16,
            "type": "string",
            "description": "This field is used to specify a card token. Whenever CHD is sent in a request, a card token will be returned in this field. Your interface should be designed to store this card token for future use. The latest card token received should be used in any subsequent request that references the same card data.",
            "example": "8048471746471119"
          }
        }
      },
      "AutoNoShowIndicator": {
        "title": "AutoNoShowIndicator",
        "enum": [
          "Y",
          "N"
        ],
        "type": "string",
        "description": "Indicates whether or not the cardholder picked up a reserved rental car.\n\nValue|Description\n-----|-----------\nY    | customer did not pick up the rental car\nN    | customer did pick up the rental car",
        "example": "N"
      },
      "P2PEMagstripeMSR3": {
        "title": "P2PEMagstripeMSR3",
        "required": [
          "dateTime",
          "amount",
          "clerk",
          "device",
          "p2pe",
          "transaction"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "apiOptions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "API Options modify the request being made. See the [API Options](#tag/API-Options) section for more information.",
            "example": [
              "RETURNEXPDATE",
              "ALLOWPARTIALAUTH"
            ]
          },
          "amount": {
            "$ref": "#/components/schemas/ObjectAmount"
          },
          "clerk": {
            "$ref": "#/components/schemas/ObjectClerk"
          },
          "receiptColumns": {
            "type": "integer",
            "description": "Send this field if you want Shift4 to format the receipt text instead of returning individual fields. The value sent will correlate to the column width of the formatted receipt that we return. (This also allows the receipt text to wrap to fit the paper size of the printed receipt.) See the [Printing Receipts](#tag/Printing-Receipts) section of this document for more information on formatted receipts.",
            "format": "int32",
            "example": 40
          },
          "card": {
            "$ref": "#/components/schemas/Card3"
          },
          "customer": {
            "$ref": "#/components/schemas/ObjectCustomer"
          },
          "device": {
            "$ref": "#/components/schemas/Device1"
          },
          "p2pe": {
            "$ref": "#/components/schemas/ObjectP2PEType05"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction25"
          }
        }
      },
      "ThreeDSecureEcommIndicator": {
        "title": "ThreeDSecureEcommIndicator",
        "enum": [
          5,
          7
        ],
        "type": "integer",
        "description": "E-commerce Indicator as provided by the application generating the cryptogram.\n\nValue| Description\n-----|------------\n5    | Secure electronic commerce transaction\n7    | Non-authenticated Security Transaction",
        "example": 5
      },
      "AutoAdditionalChargesViolationFee": {
        "title": "AutoAdditionalChargesViolationFee",
        "enum": [
          "Y",
          "N"
        ],
        "type": "string",
        "example": "Y"
      },
      "ObjectAutoCheckOut": {
        "title": "ObjectAutoCheckOut",
        "type": "object",
        "properties": {
          "distanceDriven": {
            "type": "integer",
            "description": "The amount of distance the cardholder drove the vehicle.",
            "format": "int32",
            "example": 167
          },
          "distanceUnit": {
            "$ref": "#/components/schemas/AutoDistanceUnit"
          },
          "lateAdjustment": {
            "type": "number",
            "description": "A dollar amount for late adjustment fees for an auto rental, including refueling charges, a surcharge, or charges for damage incurred during use.",
            "example": 35
          },
          "noShowIndicator": {
            "$ref": "#/components/schemas/AutoNoShowIndicator"
          },
          "additionalCharges": {
            "$ref": "#/components/schemas/ObjectAutoAdditionalCharges"
          },
          "driver": {
            "$ref": "#/components/schemas/ObjectAutoDriver"
          },
          "rental": {
            "$ref": "#/components/schemas/ObjectAutoRental"
          },
          "return": {
            "$ref": "#/components/schemas/ObjectAutoReturn"
          }
        },
        "description": "##### Conditional: Utilize this object for Auto Rental transactions"
      },
      "ObjectCardResponseVoid": {
        "title": "ObjectCardResponseVoid",
        "type": "object",
        "properties": {
          "entryMode": {
            "$ref": "#/components/schemas/EntryMode"
          },
          "number": {
            "maxLength": 32,
            "type": "string",
            "description": "The card number field will always be masked when returned in a response.",
            "example": "XXXXXXXXXXXX1119"
          },
          "type": {
            "$ref": "#/components/schemas/CardTypeResp"
          },
          "token": {
            "$ref": "#/components/schemas/ObjectCardTokenResponse"
          }
        }
      },
      "Token5": {
        "title": "Token5",
        "required": [
          "dateTime",
          "amount",
          "clerk",
          "card",
          "transaction"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "apiOptions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "API Options modify the request being made. See the [API Options](#tag/API-Options) section for more information.",
            "example": [
              "RETURNEXPDATE",
              "ALLOWPARTIALAUTH"
            ]
          },
          "amount": {
            "$ref": "#/components/schemas/ObjectAmount"
          },
          "clerk": {
            "$ref": "#/components/schemas/ObjectClerk"
          },
          "receiptColumns": {
            "type": "integer",
            "description": "Send this field if you want Shift4 to format the receipt text instead of returning individual fields. The value sent will correlate to the column width of the formatted receipt that we return. (This also allows the receipt text to wrap to fit the paper size of the printed receipt.) See the [Printing Receipts](#tag/Printing-Receipts) section of this document for more information on formatted receipts.",
            "format": "int32",
            "example": 40
          },
          "card": {
            "$ref": "#/components/schemas/Card1"
          },
          "customer": {
            "$ref": "#/components/schemas/ObjectCustomer"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction22"
          }
        }
      },
      "TransactionAuthSource": {
        "title": "TransactionAuthSource",
        "enum": [
          "E",
          "O",
          "A"
        ],
        "type": "string",
        "description": "In a response, a code returned by the processor to indicate which host issued the response.\n\nValue  | Description       \n-------|----------------------------\nE      | Engine (Online)\nO      | Offline\nA      | APM",
        "example": "E"
      },
      "ObjectAmountGCResponse": {
        "title": "ObjectAmountGCResponse",
        "required": [
          "total"
        ],
        "type": "object",
        "properties": {
          "total": {
            "type": "number",
            "description": "For [Activate](#operation/activate), [Allocate](#operation/allocate) or [Reload](#operation/reload) requests, this is the amount which was added to the card's balance.  For [Cashout](#operation/cashout) requests, this is the amount of cash that should be provided to the customer.",
            "example": 20
          }
        },
        "description": "Object containing information regarding the amount being added onto the card or removed from the card."
      },
      "Token6": {
        "title": "Token6",
        "required": [
          "dateTime",
          "amount",
          "clerk",
          "card",
          "transaction"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "apiOptions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "API Options modify the request being made. See the [API Options](#tag/API-Options) section for more information.",
            "example": [
              "RETURNEXPDATE",
              "ALLOWPARTIALAUTH"
            ]
          },
          "amount": {
            "$ref": "#/components/schemas/ObjectAmount"
          },
          "clerk": {
            "$ref": "#/components/schemas/ObjectClerk"
          },
          "receiptColumns": {
            "type": "integer",
            "description": "Send this field if you want Shift4 to format the receipt text instead of returning individual fields. The value sent will correlate to the column width of the formatted receipt that we return. (This also allows the receipt text to wrap to fit the paper size of the printed receipt.) See the [Printing Receipts](#tag/Printing-Receipts) section of this document for more information on formatted receipts.",
            "format": "int32",
            "example": 40
          },
          "card": {
            "$ref": "#/components/schemas/Card1"
          },
          "customer": {
            "$ref": "#/components/schemas/ObjectCustomer"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction28"
          }
        }
      },
      "P2PEEMV1": {
        "title": "P2PEEMV1",
        "required": [
          "dateTime",
          "amount",
          "clerk",
          "device",
          "emv",
          "p2pe",
          "transaction"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "apiOptions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "API Options modify the request being made. See the [API Options](#tag/API-Options) section for more information.",
            "example": [
              "RETURNEXPDATE",
              "ALLOWPARTIALAUTH"
            ]
          },
          "amount": {
            "$ref": "#/components/schemas/ObjectAmount"
          },
          "clerk": {
            "$ref": "#/components/schemas/ObjectClerk"
          },
          "receiptColumns": {
            "type": "integer",
            "description": "Send this field if you want Shift4 to format the receipt text instead of returning individual fields. The value sent will correlate to the column width of the formatted receipt that we return. (This also allows the receipt text to wrap to fit the paper size of the printed receipt.) See the [Printing Receipts](#tag/Printing-Receipts) section of this document for more information on formatted receipts.",
            "format": "int32",
            "example": 40
          },
          "card": {
            "$ref": "#/components/schemas/Card3"
          },
          "customer": {
            "$ref": "#/components/schemas/ObjectCustomer"
          },
          "device": {
            "$ref": "#/components/schemas/Device1"
          },
          "emv": {
            "$ref": "#/components/schemas/ObjectEMV"
          },
          "p2pe": {
            "$ref": "#/components/schemas/P2pe1"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction11"
          },
          "lighthouse": {
            "$ref": "#/components/schemas/ObjectLighthouseRequest"
          }
        }
      },
      "CardNumberUnencrypted": {
        "title": "CardNumberUnencrypted",
        "required": [
          "dateTime",
          "amount",
          "clerk",
          "customer",
          "card",
          "transaction"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "apiOptions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "API Options modify the request being made. See the [API Options](#tag/API-Options) section for more information.",
            "example": [
              "RETURNEXPDATE",
              "ALLOWPARTIALAUTH"
            ]
          },
          "amount": {
            "$ref": "#/components/schemas/ObjectAmount"
          },
          "clerk": {
            "$ref": "#/components/schemas/ObjectClerk"
          },
          "receiptColumns": {
            "type": "integer",
            "description": "Send this field if you want Shift4 to format the receipt text instead of returning individual fields. The value sent will correlate to the column width of the formatted receipt that we return. (This also allows the receipt text to wrap to fit the paper size of the printed receipt.) See the [Printing Receipts](#tag/Printing-Receipts) section of this document for more information on formatted receipts.",
            "format": "int32",
            "example": 40
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "card": {
            "$ref": "#/components/schemas/Card5"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction1"
          },
          "risk": {
            "$ref": "#/components/schemas/ObjectRiskTransactionRequest"
          }
        }
      },
      "AutoAdditionalChargesGasoline": {
        "title": "AutoAdditionalChargesGasoline",
        "enum": [
          "Y",
          "N"
        ],
        "type": "string",
        "example": "Y"
      },
      "UTGControlledDevice2": {
        "title": "UTGControlledDevice2",
        "required": [
          "dateTime",
          "amount",
          "clerk",
          "card",
          "device",
          "transaction"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "apiOptions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "API Options modify the request being made. See the [API Options](#tag/API-Options) section for more information.",
            "example": [
              "RETURNEXPDATE",
              "ALLOWPARTIALAUTH"
            ]
          },
          "amount": {
            "$ref": "#/components/schemas/Amount"
          },
          "clerk": {
            "$ref": "#/components/schemas/ObjectClerk"
          },
          "receiptColumns": {
            "type": "integer",
            "description": "Send this field if you want Shift4 to format the receipt text instead of returning individual fields. The value sent will correlate to the column width of the formatted receipt that we return. (This also allows the receipt text to wrap to fit the paper size of the printed receipt.) See the [Printing Receipts](#tag/Printing-Receipts) section of this document for more information on formatted receipts.",
            "format": "int32",
            "example": 40
          },
          "card": {
            "$ref": "#/components/schemas/Card16"
          },
          "customer": {
            "$ref": "#/components/schemas/ObjectCustomer"
          },
          "device": {
            "$ref": "#/components/schemas/Device6"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction16"
          }
        },
        "example": {
          "dateTime": "2021-04-15T09:18:23.283-07:00",
          "amount": {
            "tax": 10.05,
            "total": 121.83
          },
          "card": {
            "present": "Y"
          },
          "clerk": {
            "numericId": 1576
          },
          "device": {
            "terminalId": "1742"
          },
          "transaction": {
            "invoice": "192050",
            "notes": "Transaction notes are added here"
          }
        }
      },
      "ObjectLighthouseResponse": {
        "title": "ObjectLighthouseResponse",
        "type": "object",
        "properties": {
          "data": {
            "type": "string",
            "description": "Base64 encoded JSON formatted data that will be returned from Lighthouse to be passed back to SkyTab. This data will contain variable information.",
            "example": "eyJwYXltZW50SWQiOiI4NWM0MWNhNy01NzVjLTQzNGUtODIyZi0xYzZlOTE0ZDAzODYiLCJyZW1haW5pbmdBbW91bnQiOjB9"
          }
        }
      },
      "AutoAdditionalChargesLateReturn": {
        "title": "AutoAdditionalChargesLateReturn",
        "enum": [
          "Y",
          "N"
        ],
        "type": "string",
        "example": "Y"
      },
      "ObjectBrandToken": {
        "title": "ObjectBrandToken",
        "type": "object",
        "properties": {
          "requestorId": {
            "maxLength": 12,
            "type": "string",
            "description": "This field uniquely identifies the pairing of token requestor with the token domain. It is assigned by the token service provider and is unique within the token vault.\n\nThis is the deviceManufacturerIdentifier for Apple Pay requests.",
            "example": "12345678901"
          },
          "assuranceLevel": {
            "maxLength": 2,
            "type": "string",
            "description": "This is a response field defined by the token service provider. This Visa, Discover, or Mastercard value indicates the assigned confidence level of the token-to-PAN/cardholder binding.",
            "example": "01"
          },
          "panLast4": {
            "maxLength": 4,
            "type": "string",
            "description": "This is a response field that contains 4 characters that represent the last 4 digits of the actual cardholder PAN.",
            "example": "6810"
          },
          "acctRangeStatus": {
            "maxLength": 1,
            "type": "string",
            "description": "This is a response field contains a one-character value that indicates the Visa regulatory status of the actual card number for which the token represents.\n\nValue| Description\n-----|------------\nspace| Blank/no value\nR    | Regulated\nN    | Non-Regulated",
            "example": "N"
          }
        }
      },
      "ObjectHostResponse": {
        "title": "ObjectHostResponse",
        "type": "object",
        "properties": {
          "reasonCode": {
            "maxLength": 2,
            "type": "string",
            "description": "Returns a response code from the host.\n\nValue |Category|Description\n------|--------|-----------\n04    |      1 | Pick Up Card\n07    |      1 | Pick Up Card, Special Condition\n12    |      1 | Invalid Transaction\n15    |      1 | No Such Issuer\n41    |      1 | Lost Card\n43    |      1 | Stolen Card\n46    |      1 | Closed Account        \n57    |      1 | Trans. not Permitted to Cardholder\nR0    |      1 | Stop Payment Order\nR1    |      1 | Revocation of Auth Order\nR3    |      1 | Revocation of all Authorization \n03    |      2 | Invalid Merchant\n19    |      2 | Re-enter Transaction\n51    |      2 | Not sufficient funds\n59    |      2 | Suspected Fraud\n61    |      2 | Exceeds approval amount limit\n62    |      2 | Restricted Card (card invalid in region or country)\n65    |      2 | Exceeds withdrawal frequency limit\n75    |      2 | Allowable number of PIN-entry tried exceeded\n78    |      2 | Blocked, first used\n86    |      2 | Cannot Verify PIN\n91    |      2 | Issuer or switch inoperative\n93    |      2 | Transaction cannot be completed - violation of law \n96    |      2 | System malfunction\nN3    |      2 | Cash service not available\nN4    |      2 | Cash request exceeds issuer of approved limit\n14    |      3 | Invalid Account\n54    |      3 | Expired card or expiration date missing\n55    |      3 | PIN incorrect or missing\n70    |      3 | PIN data required\n82    |      3 | Negative Online CAM, dCVV, iCVV, or CVV results\n1A    |      3 | Additional customer authentication required\nN7    |      3 | Decline for CVV2 Failure\n05    |      4 | Do not honor\n06    |      4 | General error \n08    |      4 | Honor MasterCard with ID\n13    |      4 | Invalid amount \n21    |      4 | Invalid amount\n30    |      4 | Format error\n39    |      4 | No credit account\n51    |      4 | Not sufficient funds\n52    |      4 | No checking account\n53    |      4 | No savings account\n58    |      4 | Transaction not permitted-Terminal\n63    |      4 | Security violation \n66    |      4 | Card Acceptor call Acquirer’s security dept\n67    |      4 | Hard capture (requires ATM pick-up)\n68    |      4 | Response received too late\n71    |      4 | PIN Not Changed\n76    |      4 | Unsolicited reversal\n77    |      4 | Invalid Data\n79    |      4 | Already reversed at switch\n80    |      4 | No Financial impact\n81    |      4 | Cryptographic error \n92    |      4 | Unable to route transaction\n94    |      4 | Duplicate Transaction\nB1    |      4 | Surcharge amount not permitted on debit cards or EBTfoodstamps\nB2    |      4 | Surcharge amount not supported by debit network issuer \nCV    |      4 | Card Type VerificationError\nEA    |      4 | Acct Length Err\nEB    |      4 | Check Digit Err\nEC    |      4 | CID Format Error\nHV    |      4 | Hierarchy Verification Error\nN0    |      4 | Force STIP\nP5    |      4 | PIN Change/Unblock failed\nP6    |      4 | New PIN not accepted\nZ3    |      4 | Unable to go online; offline-declined\n\nAll other, generic declines may be classified as a Category 4 response code.",
            "example": "04"
          },
          "reasonDescription": {
            "maxLength": 73,
            "type": "string",
            "description": "Returns a description from the host.",
            "example": "Pick Up Card"
          },
          "reattemptPermission": {
            "maxLength": 40,
            "type": "string",
            "description": "Returns one of the following values:\n\nValue                                   |Description\n----------------------------------------|-----------\nReattempt not permitted                 | Returned when the reasonCode returned is classified as a Category 1 response code.\nReattempt permitted 15 times in 30 days | Returned when the reasonCode returned is classified as a Category 2 or Category 3 response code.\nReattempts permitted                    | Returned when the reasonCode returned is classified as a Category 4 response code.",
            "example": "Reattempt not permitted"
          }
        },
        "description": "Returns the response code detailing why the transaction was declined. \n\n<b>Note: For Visa, the response codes are categorized, detailing how  declined transactions may be re-attempted for approval. To avoid fees,  merchants are responsible for preventing additional attempts based on  the information returned.</b>"
      },
      "HotelPrimaryChargeType": {
        "title": "HotelPrimaryChargeType",
        "enum": [
          1,
          2,
          3
        ],
        "type": "integer",
        "description": "Guest’s transaction type at a hotel.\n\nValue|Description\n-----|-----------\n1    | Lodging\n2    | Restaurant\n3    | Gift Shop",
        "example": 1
      },
      "Token1": {
        "title": "Token1",
        "required": [
          "dateTime",
          "amount",
          "clerk",
          "card",
          "transaction"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "apiOptions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "API Options modify the request being made. See the [API Options](#tag/API-Options) section for more information.",
            "example": [
              "RETURNEXPDATE",
              "ALLOWPARTIALAUTH"
            ]
          },
          "amount": {
            "$ref": "#/components/schemas/ObjectAmount"
          },
          "clerk": {
            "$ref": "#/components/schemas/ObjectClerk"
          },
          "receiptColumns": {
            "type": "integer",
            "description": "Send this field if you want Shift4 to format the receipt text instead of returning individual fields. The value sent will correlate to the column width of the formatted receipt that we return. (This also allows the receipt text to wrap to fit the paper size of the printed receipt.) See the [Printing Receipts](#tag/Printing-Receipts) section of this document for more information on formatted receipts.",
            "format": "int32",
            "example": 40
          },
          "card": {
            "$ref": "#/components/schemas/Card1"
          },
          "customer": {
            "$ref": "#/components/schemas/ObjectCustomer"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction9"
          },
          "risk": {
            "$ref": "#/components/schemas/ObjectRiskTransactionRequest"
          },
          "lighthouse": {
            "$ref": "#/components/schemas/ObjectLighthouseRequest"
          }
        }
      },
      "ObjectVoiceCenter": {
        "title": "ObjectVoiceCenter",
        "type": "object",
        "properties": {
          "accountNumber": {
            "maxLength": 20,
            "type": "string",
            "description": "The merchant’s account number as configured with Shift4 Payments. This field is returned in response to a [Merchant Information](#operation/merchantsmerchant) request because the clerk is required to provide it when attempting to obtain a voice authorization code. This information must be displayed to the clerk.",
            "example": "192019202"
          },
          "phoneNumber": {
            "maxLength": 20,
            "type": "string",
            "description": "The phone number a clerk must call to obtain a voice authorization code. This field is returned in response to a [Merchant Information](#operation/merchantsmerchant) request. This information must be displayed to the clerk.",
            "example": "1-800-444-5566"
          }
        }
      },
      "HotelAdditionalChargesRestaurant": {
        "title": "HotelAdditionalChargesRestaurant",
        "enum": [
          "Y",
          "N"
        ],
        "type": "string",
        "example": "Y"
      },
      "ObjectAutoReturn": {
        "title": "ObjectAutoReturn",
        "type": "object",
        "properties": {
          "city": {
            "maxLength": 18,
            "type": "string",
            "description": "City where rental car was returned.",
            "example": "Las Vegas"
          },
          "countryCode": {
            "maxLength": 3,
            "type": "string",
            "description": "Country where rental card was returned.",
            "example": "840"
          },
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "postalCode": {
            "maxLength": 9,
            "type": "string",
            "description": "Postal Code where rental car was returned in U.S. postal abbreviation format.",
            "example": "17721"
          },
          "region": {
            "maxLength": 2,
            "type": "string",
            "description": "Region (State) where rental car was returned in U.S. postal abbreviation format.",
            "example": "NV"
          }
        },
        "description": "Information relating to where the rental car was returned"
      },
      "ObjectMerchantCardTypes": {
        "title": "ObjectMerchantCardTypes",
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CardTypeResp"
          },
          "voiceCenter": {
            "$ref": "#/components/schemas/ObjectVoiceCenter"
          }
        }
      },
      "ObjectHotelCheckOut": {
        "title": "ObjectHotelCheckOut",
        "type": "object",
        "properties": {
          "arrivalDateTime": {
            "type": "string",
            "description": "Arrival date and time of a guest’s hotel stay ISO8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm). For hotel transactions that are a straight sale (such as advanced deposit, no-show charge, and late charges), the arrival date needs to be one day before the sale date.",
            "example": "2021-04-12T15:39:01.594-07:00"
          },
          "departureDateTime": {
            "type": "string",
            "description": "Departure date and time of a guest’s hotel stay ISO8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm). For hotel transactions that are a straight sale (such as advanced deposit, no-show charge, and late charges), the departure date needs to be the day of the sale.",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "primaryChargeType": {
            "$ref": "#/components/schemas/HotelPrimaryChargeType"
          },
          "specialCode": {
            "$ref": "#/components/schemas/HotelSpecialCode"
          },
          "additionalCharges": {
            "$ref": "#/components/schemas/ObjectHotelAdditionalCharges"
          },
          "roomRates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectHotelRoomRates"
            },
            "description": "Room rates broken down by rate and number of nights.",
            "example": [
              {
                "nights": 2,
                "rate": 159.95
              },
              {
                "nights": 3,
                "rate": 125.38
              }
            ]
          }
        },
        "description": "##### Conditional: Utilize this object for Hotel transactions"
      },
      "ObjectClerkResponse": {
        "title": "ObjectClerkResponse",
        "type": "object",
        "properties": {
          "numericId": {
            "type": "integer",
            "description": "A number used to identify the point-of-sale (POS) or property management system (PMS) clerk or user. The value cannot be 0. An interface must be able to dynamically populate this field (not use a hardcoded value), unless the interface will be used exclusively for e-commerce.",
            "format": "int32",
            "example": 1576
          }
        }
      },
      "ObjectHotelRoomRates": {
        "title": "ObjectHotelRoomRates",
        "type": "object",
        "properties": {
          "nights": {
            "type": "integer",
            "description": "The number of nights being charged at this rate.",
            "format": "int32",
            "example": 2
          },
          "rate": {
            "type": "number",
            "description": "The per night room rate.",
            "example": 159.95
          }
        }
      },
      "AVSStreetVerified": {
        "title": "AVSStreetVerified",
        "enum": [
          "Y",
          "N"
        ],
        "type": "string",
        "description": "Identifies whether the street number was verified (‘Y’) or not (‘N’) in an AVS check with a processor.",
        "example": "Y"
      },
      "CardTypeResp": {
        "title": "CardTypeResp",
        "enum": [
          "AX",
          "AP",
          "BC",
          "CI",
          "DB",
          "GC",
          "JC",
          "MC",
          "NS",
          "PL",
          "SC",
          "VS",
          "WP",
          "YC"
        ],
        "type": "string",
        "description": "An abbreviation used to specify the type of card that was used when processing a transaction.\n\nValue| Description\n-----|------------\nAX   | American Express\nAP   | Alipay\nBC   | Backed Card       \nCI   | Citgo        \nDB   | Debit card\nGC   | Gift Card\nJC   | JCB\nMC   | Mastercard\nNS   | Discover/JCB/Novus\nPL   | Private Label\nSC   | Sears Canada\nVS   | Visa\nWP   | WeChat Pay\nYC   | IT’S YOUR CARD",
        "example": "VS"
      },
      "ObjectDeviceOnlyTIDResponse": {
        "title": "ObjectDeviceOnlyTIDResponse",
        "type": "object",
        "properties": {
          "terminalId": {
            "maxLength": 32,
            "type": "string",
            "description": "To prompt a specific UTG-controlled PIN pad in a request, the API Terminal ID configured in UTG TuneUp must be specified in this field.",
            "example": "1742"
          }
        }
      },
      "ObjectPurchaseCardRefund": {
        "title": "ObjectPurchaseCardRefund",
        "type": "object",
        "properties": {
          "customerReference": {
            "maxLength": 25,
            "type": "string",
            "description": "A unique value used to identify the consumer or transaction. If a merchant has a significant amount of revenue from purchasing card customers, the interface would use this field to collect the consumer’s purchase order or employee identification number. In lodging transactions, this may be unique transaction details, such as a reservation code or third-party booking source.  This field is part of Level 2 card data.",
            "example": "D019D09309F2"
          },
          "destinationPostalCode": {
            "maxLength": 9,
            "type": "string",
            "description": "When items are shipped, the ZIP/postal code to which merchandise will be shipped; otherwise, the ZIP/postal code where the goods or services are rendered.  This field is part of Level 2 card data.",
            "example": "94719"
          },
          "productDescriptors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A text description of the items purchased or services sold. This can be a generic text description of what the merchant sells (such as “Groceries”) or specific transaction data (such as the name of the item sold). At least one product descriptor field is required in a sale or authorization request.",
            "example": [
              "Hamburger",
              "Fries",
              "Soda",
              "Cookie"
            ]
          }
        }
      },
      "UTGControlledDevice4": {
        "title": "UTGControlledDevice4",
        "required": [
          "dateTime",
          "amount",
          "clerk",
          "device",
          "transaction"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "apiOptions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "API Options modify the request being made. See the [API Options](#tag/API-Options) section for more information.",
            "example": [
              "RETURNEXPDATE",
              "ALLOWPARTIALAUTH"
            ]
          },
          "amount": {
            "$ref": "#/components/schemas/ObjectAmount"
          },
          "clerk": {
            "$ref": "#/components/schemas/ObjectClerk"
          },
          "receiptColumns": {
            "type": "integer",
            "description": "Send this field if you want Shift4 to format the receipt text instead of returning individual fields. The value sent will correlate to the column width of the formatted receipt that we return. (This also allows the receipt text to wrap to fit the paper size of the printed receipt.) See the [Printing Receipts](#tag/Printing-Receipts) section of this document for more information on formatted receipts.",
            "format": "int32",
            "example": 40
          },
          "card": {
            "$ref": "#/components/schemas/Card"
          },
          "customer": {
            "$ref": "#/components/schemas/ObjectCustomer"
          },
          "device": {
            "$ref": "#/components/schemas/Device"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction28"
          }
        },
        "example": {
          "dateTime": "2021-04-15T09:18:23.283-07:00",
          "amount": {
            "surcharge": 5,
            "tax": 15,
            "total": 140
          },
          "apiOptions": [
            "ALLOWPARTIALAUTH"
          ],
          "card": {
            "present": "Y"
          },
          "clerk": {
            "numericId": 1576
          },
          "device": {
            "terminalId": "1742"
          },
          "transaction": {
            "hotel": {
              "additionalCharges": {
                "giftShop": "Y",
                "laundry": "Y",
                "miniBar": "Y",
                "other": "Y",
                "restaurant": "Y",
                "telephone": "Y"
              },
              "arrivalDateTime": "2021-04-12T15:39:01.594-07:00",
              "departureDateTime": "2021-04-15T09:18:23.283-07:00",
              "primaryChargeType": 1,
              "roomRates": [
                {
                  "nights": 2,
                  "rate": 159.95
                },
                {
                  "nights": 3,
                  "rate": 125.38
                }
              ],
              "specialCode": 1
            },
            "invoice": "192029",
            "authorizationCode": "189746",
            "notes": "Transaction notes are added here",
            "purchaseCard": {
              "customerReference": "D019D09309F2",
              "destinationPostalCode": "94719",
              "productDescriptors": [
                "Hamburger",
                "Fries",
                "Soda",
                "Cookie"
              ]
            }
          }
        }
      },
      "ObjectMerchant": {
        "title": "ObjectMerchant",
        "type": "object",
        "properties": {
          "addressLine1": {
            "maxLength": 38,
            "type": "string",
            "description": "First line in the merchant’s business address as configured with Shift4 Payments.",
            "example": "456 Fake St"
          },
          "addressLine2": {
            "maxLength": 38,
            "type": "string",
            "description": "Second line in the merchant’s business address as configured with Shift4 Payments.",
            "example": "Suite 100"
          },
          "city": {
            "maxLength": 13,
            "type": "string",
            "description": "City of the merchant’s business address as configured with Shift4 Payments.",
            "example": "Las Vegas"
          },
          "dayEndingTime": {
            "maxLength": 6,
            "type": "string",
            "description": "The time the merchant’s business day ends as configured with Shift4 Payments.",
            "example": "010000"
          },
          "industry": {
            "$ref": "#/components/schemas/MerchantIndustry"
          },
          "mid": {
            "maxLength": 10,
            "type": "string",
            "description": "The merchant ID associated with the merchant account.",
            "example": "15877"
          },
          "name": {
            "maxLength": 22,
            "type": "string",
            "description": "The merchant’s business name as configured with Shift4 Payments.",
            "example": "Merchant XYZ"
          },
          "region": {
            "maxLength": 3,
            "type": "string",
            "description": "Region (State) of the merchant’s business address as configured with Shift4 Payments.",
            "example": "NV"
          },
          "phone": {
            "maxLength": 15,
            "type": "string",
            "description": "The merchant’s business telephone number as configured with Shift4 Payments.",
            "example": "702-123-4567"
          },
          "postalCode": {
            "maxLength": 9,
            "type": "string",
            "description": "ZIP/Postal Code of the merchant’s business address as configured with Shift4 Payments.",
            "example": "78402"
          },
          "revision": {
            "maxLength": 8,
            "type": "string",
            "description": "Shift4 Payments software revision number.",
            "example": "04.05.00"
          },
          "serialNumber": {
            "maxLength": 11,
            "type": "string",
            "description": "The serial number of the merchant's account with Shift4 Payments.",
            "example": "00000044444"
          },
          "cardTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectMerchantCardTypes"
            },
            "description": "array of Mechant Card Types",
            "example": [
              {
                "type": "VS",
                "voiceCenter": {
                  "accountNumber": "2919201",
                  "phoneNumber": "1-800-444-5566"
                }
              },
              {
                "type": "MC",
                "voiceCenter": {
                  "accountNumber": "2919201",
                  "phoneNumber": "1-800-444-5566"
                }
              },
              {
                "type": "AX",
                "voiceCenter": {
                  "accountNumber": "65168416",
                  "phoneNumber": "1-800-123-1126"
                }
              },
              {
                "type": "NS",
                "voiceCenter": {
                  "accountNumber": "68406848684",
                  "phoneNumber": "1-888-320-1640"
                }
              }
            ]
          }
        }
      },
      "Fallback": {
        "title": "Fallback",
        "enum": [
          "Y",
          "N"
        ],
        "type": "string",
        "description": "When EMV is attempted but fallback occurs for any reason, this field should be sent as 'Y'.  If this field is not sent, a value of 'N' is assumed.",
        "example": "Y"
      },
      "TransactionSaleFlag": {
        "title": "TransactionSaleFlag",
        "enum": [
          "A",
          "C",
          "S"
        ],
        "type": "string",
        "description": "Specifies a transaction is a sale (‘S’) or credit (‘C’).  In an [Invoice Information](#operation/getinvoice) request, an 'A' may be returned to differentiate an authorization from a sale.",
        "example": "S"
      },
      "MerchantIndustry": {
        "title": "MerchantIndustry",
        "enum": [
          "A",
          "F",
          "H",
          "M",
          "R",
          "P"
        ],
        "type": "string",
        "description": "Classifies the merchant type for a merchant’s account with Shift4 Payments.\n\nValue|Description\n-----|-----------\nA    | Auto Rental\nF    | Food & Beferage (F&B)\nH    | Hotel\nM    | Mail order/Telephone Order (MOTO) or E-Commerce\nR    | Retail\nP    | Passenger Transport",
        "example": "F"
      },
      "Wallet3DSecureUsingCardNumber1": {
        "title": "Wallet3DSecureUsingCardNumber1",
        "required": [
          "dateTime",
          "amount",
          "clerk"
        ],
        "type": "object",
        "properties": {
          "customer": {
            "$ref": "#/components/schemas/ObjectCustomer"
          },
          "card": {
            "$ref": "#/components/schemas/Card7"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction9"
          },
          "threeDSecure": {
            "$ref": "#/components/schemas/ObjectThreeDSecure"
          },
          "cardBrandToken": {
            "$ref": "#/components/schemas/ObjectBrandToken"
          },
          "risk": {
            "$ref": "#/components/schemas/ObjectRiskTransactionRequest"
          },
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "apiOptions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "API Options modify the request being made. See the [API Options](#tag/API-Options) section for more information.",
            "example": [
              "RETURNEXPDATE",
              "ALLOWPARTIALAUTH"
            ]
          },
          "amount": {
            "$ref": "#/components/schemas/ObjectAmount"
          },
          "clerk": {
            "$ref": "#/components/schemas/ObjectClerk"
          },
          "receiptColumns": {
            "type": "integer",
            "description": "Send this field if you want Shift4 to format the receipt text instead of returning individual fields. The value sent will correlate to the column width of the formatted receipt that we return. (This also allows the receipt text to wrap to fit the paper size of the printed receipt.) See the [Printing Receipts](#tag/Printing-Receipts) section of this document for more information on formatted receipts.",
            "format": "int32",
            "example": 40
          }
        }
      },
      "P2PEviaIDTechDevice1": {
        "title": "P2PEviaIDTechDevice1",
        "required": [
          "dateTime",
          "amount",
          "clerk",
          "p2pe",
          "transaction"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "apiOptions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "API Options modify the request being made. See the [API Options](#tag/API-Options) section for more information.",
            "example": [
              "RETURNEXPDATE",
              "ALLOWPARTIALAUTH"
            ]
          },
          "amount": {
            "$ref": "#/components/schemas/ObjectAmount"
          },
          "clerk": {
            "$ref": "#/components/schemas/ObjectClerk"
          },
          "receiptColumns": {
            "type": "integer",
            "description": "Send this field if you want Shift4 to format the receipt text instead of returning individual fields. The value sent will correlate to the column width of the formatted receipt that we return. (This also allows the receipt text to wrap to fit the paper size of the printed receipt.) See the [Printing Receipts](#tag/Printing-Receipts) section of this document for more information on formatted receipts.",
            "format": "int32",
            "example": 40
          },
          "p2pe": {
            "$ref": "#/components/schemas/P2pe"
          },
          "customer": {
            "$ref": "#/components/schemas/ObjectCustomer"
          },
          "card": {
            "$ref": "#/components/schemas/Card"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction8"
          },
          "lighthouse": {
            "$ref": "#/components/schemas/ObjectLighthouseRequest"
          }
        }
      },
      "P2PEEMV2": {
        "title": "P2PEEMV2",
        "required": [
          "dateTime",
          "amount",
          "clerk",
          "card",
          "device",
          "emv",
          "p2pe",
          "transaction"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "apiOptions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "API Options modify the request being made. See the [API Options](#tag/API-Options) section for more information.",
            "example": [
              "RETURNEXPDATE",
              "ALLOWPARTIALAUTH"
            ]
          },
          "amount": {
            "$ref": "#/components/schemas/Amount"
          },
          "clerk": {
            "$ref": "#/components/schemas/ObjectClerk"
          },
          "receiptColumns": {
            "type": "integer",
            "description": "Send this field if you want Shift4 to format the receipt text instead of returning individual fields. The value sent will correlate to the column width of the formatted receipt that we return. (This also allows the receipt text to wrap to fit the paper size of the printed receipt.) See the [Printing Receipts](#tag/Printing-Receipts) section of this document for more information on formatted receipts.",
            "format": "int32",
            "example": 40
          },
          "card": {
            "$ref": "#/components/schemas/Card19"
          },
          "customer": {
            "$ref": "#/components/schemas/ObjectCustomer"
          },
          "device": {
            "$ref": "#/components/schemas/Device1"
          },
          "emv": {
            "$ref": "#/components/schemas/ObjectEMV"
          },
          "p2pe": {
            "$ref": "#/components/schemas/P2pe1"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction19"
          }
        }
      },
      "CardTypeGCResp": {
        "title": "CardTypeGCResp",
        "enum": [
          "GC",
          "YC"
        ],
        "type": "string",
        "description": "An abbreviation used to specify the type of card that was used when processing a transaction.\n\nValue| Description\n-----|------------\nGC   | Gift Card\nYC   | IT’S YOUR CARD",
        "example": "YC"
      },
      "PresentRefund": {
        "title": "PresentRefund",
        "enum": [
          "Y",
          "N"
        ],
        "type": "string",
        "description": "Indicates whether a card was present (‘Y’) or not (‘N’) at the time the refund transaction took place.",
        "example": "Y"
      },
      "ObjectHotelAdditionalCharges": {
        "title": "ObjectHotelAdditionalCharges",
        "type": "object",
        "properties": {
          "giftShop": {
            "$ref": "#/components/schemas/HotelAdditionalChargesGiftShop"
          },
          "laundry": {
            "$ref": "#/components/schemas/HotelAdditionalChargesLaundry"
          },
          "miniBar": {
            "$ref": "#/components/schemas/HotelAdditionalChargesMiniBar"
          },
          "other": {
            "$ref": "#/components/schemas/HotelAdditionalChargesOther"
          },
          "restaurant": {
            "$ref": "#/components/schemas/HotelAdditionalChargesRestaurant"
          },
          "telephone": {
            "$ref": "#/components/schemas/HotelAdditionalChargesTelephone"
          }
        },
        "description": "Reason codes for additional charges in a lodging sale request at the time a consumer checks out."
      },
      "P2PEMagstripeMSR2": {
        "title": "P2PEMagstripeMSR2",
        "required": [
          "dateTime",
          "amount",
          "clerk",
          "card",
          "device",
          "p2pe",
          "transaction"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "apiOptions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "API Options modify the request being made. See the [API Options](#tag/API-Options) section for more information.",
            "example": [
              "RETURNEXPDATE",
              "ALLOWPARTIALAUTH"
            ]
          },
          "amount": {
            "$ref": "#/components/schemas/Amount"
          },
          "clerk": {
            "$ref": "#/components/schemas/ObjectClerk"
          },
          "receiptColumns": {
            "type": "integer",
            "description": "Send this field if you want Shift4 to format the receipt text instead of returning individual fields. The value sent will correlate to the column width of the formatted receipt that we return. (This also allows the receipt text to wrap to fit the paper size of the printed receipt.) See the [Printing Receipts](#tag/Printing-Receipts) section of this document for more information on formatted receipts.",
            "format": "int32",
            "example": 40
          },
          "card": {
            "$ref": "#/components/schemas/Card19"
          },
          "customer": {
            "$ref": "#/components/schemas/ObjectCustomer"
          },
          "device": {
            "$ref": "#/components/schemas/Device1"
          },
          "p2pe": {
            "$ref": "#/components/schemas/ObjectP2PEType05"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction19"
          }
        },
        "example": {
          "dateTime": "2021-04-15T09:18:23.283-07:00",
          "amount": {
            "tax": 10.05,
            "total": 121.83
          },
          "card": {
            "entryMode": "1",
            "present": "Y"
          },
          "clerk": {
            "numericId": 1576
          },
          "device": {
            "manufacturer": "PAX",
            "model": "A930",
            "serialNumber": "1170301234",
            "capability": {
              "contactlessEMV": "N",
              "contactlessMSR": "Y",
              "EMV": "Y",
              "magstripe": "Y",
              "manualEntry": "Y",
              "quickChip": "Y"
            }
          },
          "p2pe": {
            "data": "44188C9A20DD2092254F7FEB0AABD531D86EA10DA37E5540C25B53658BA4FBB903828F835A7287481F6FB5C17A879ECC9768D4C12F99532A",
            "format": 5,
            "ksn": "FFFF49517300010000C9"
          },
          "transaction": {
            "invoice": "192029",
            "notes": "Transaction notes are added here"
          }
        }
      },
      "ThreeDSecureAuthenticationSource": {
        "title": "ThreeDSecureAuthenticationSource",
        "enum": [
          1,
          2
        ],
        "type": "integer",
        "description": "Authentication Source for the cryptogram value.\n\nValue| Description\n-----|------------\n1    | inApp\n2    | ACS",
        "example": 1
      },
      "ObjectSignature": {
        "title": "ObjectSignature",
        "type": "object",
        "properties": {
          "data": {
            "maxLength": 4194304,
            "type": "string",
            "description": "The base64-encoded data sent when a signature is captured as a Portable Network Graphics (PNG) file.",
            "example": "iVBORw0KGgoAAAANSUhEUgAAA2kAAAEhCAYAAADlHOiOAAAABHNCSVQICAgIfAhkiAAAAAFzUkdCAK7OHOkAAAAEZ0FNQQAAsY8L/GEFAAAACXBIWXMAAA7EAAAOxAGVKw4bAACN0ElEQVR4Xu2dB5hU5dn3T97yJXnVqDTBWAABC2KhiFERUDQWLKioUWNAETQqRjT2CoioUbFFrNhBNEFFLIhSrIhiAaQEEI0NgdjzJvne99tvf7fc6zNnzu7OLjs7Z2b+v+s61+zOzsyeOeV57v/dnh9VVBIJIYQQQgghhEgF/7b2UQghhBBCCCFECpBIE0IIIYQQQogUIZEmhBBCCCGEEClCIk0IIYQQQgghUoREmhBCCCGEEEKkCHV3FEIIIYQQJc2//vWv6L//+7+jf/zjH9HXX38dbbDBBtF//ud/Rj/5yU9s+/d///e1rxQiHUikCSGEEEKIkuT//t//a8Ls008/jc4///xo9uzZ0f/7f/8v+tGPfhRtttlm0XHHHRcdf/zx0frrry+hJlKFRJoQQgghhCg5iJ4hzm699dbo6aefjpYvX27RNBdp//Ef/2ERtYsuuig68cQTTajxvBBpQCJNCCGEEEKUFAi0L7/8MjrppJOimTNnRn//+9+j//3f/43iZi9CrWnTptHEiROj7t27R//n//yftX8RorCocYgQQgghhCgZEGiffPJJNGjQoGj69OnRt99+G/3P//xPlkADnv/uu++i8ePHR//85z/XPitE4ZFIE0IIIYQQJQGi65tvvokuvPDCaMaMGRZBI72xJqhb++ijj+y9QqQFiTQhhBBCCFH0kM5I1Gz06NHRlClTchJoQITNNyHSgkSaEEIIIYQoahBjiDJqy+6++25LYcxFoMG//du/VW1CpAVdjUIIIYQQoqihnuzFF1+0KBrRNKJqIXRt9C0Orfd33nlnteAXqUIiTQghhBBCFC00Cvnqq6+iM88801ruU2MWQgfH9dZbL9p+++0TuzeyqPXPf/5zexQiLUikCSGEEEKIosTr0IYMGWIdHeMdGomOsf7Z2WefHQ0ePNgEWwiRNYRbly5dsv4mRCGRSBNCCCGEEEUHjT6oQxs3blw0a9YsW6g6hBqz//qv/4r69+8fDRgwIPrss8+y0h0RcZtttpltSncUaUIiTQghhBBCFB1Ezd56663olltuyerk6AKtZ8+e0RVXXBH95Cc/iZYtW5aVCkmKI1G0H//4x4n1akIUCok0IYQQQghRVLCm2ddffx2dddZZFiGLiy9SGHffffdozJgx0QYbbGDPLVmyJGstNMRbr169TKQJkSYk0oQQQgghRNFAxIwW+9dcc40Jr3gdGgJtww03jC644IJo0003tTRGFqtmC6NtPN+0adOoW7duahoiUodEmhBCCCGEKBq83f4999xjaY7hItSkOdLJcezYsdZWnwgZ0bNFixZZF8jwtYg5omjNmjVTPZpIHRJpQgghhBCiKCCtkTb7RNHi66G5QDvwwAOtFo2aNOrMEHUzZ87MiriR6ti7d+/opz/96dpnhEgPEmlCCCGEECL1eDdHBBoNQ4iMhRA1++Uvfxlde+21JtYQbbwHcfbmm29m1K3xN69HU6qjSCMSaUIIIYQQIvX84x//iObOnRs98sgj1m4/nrpIHdoZZ5wR/exnP6sSXqQ6Lly4MPrwww8zom78nWgbQg3BJkTa0FUphBBCCCFSDWKLLo6//e1vrWlIUprjfffdF+20004m2ByiaDNmzLDHUNQhzrp27aqujiK1SKQJIYQQQojUQkdG0hyJoH3yyScZtWXUnCG4evToYaLL69AAUUb0bc6cOVnvQZxRuxYKOiHShESaEEIIIYRILdSSvfzyy9F1111naY4hpC22a9fO6tRCgQZE20h1pB4tXB+N92y55ZZR8+bNo//4j/9Y+6wQ6UIiTQghhBBCpBLE1TfffGPt9lm8OhRbtM1ff/31o9NOO83WQ4tHxWgs8sEHH5iwC9dHI4rGe5TqKNKMRJoQQgghhEglpCveeuut0dSpU7O6OZLm+Otf/zo6/PDD7ec4pDiSIhmmOlK/RsStdevWEmki1UikCSGEEEKI1OFRNEQazULCaBhRs1atWkUDBgywaFp8MWreu2rVquj111/PaL1PemOXLl2ibbfdVgtYi1QjkSaEEEIIIVIFggxh9oc//MEWrQ7THL2b42WXXWb1aEl1ZUTdnnzyyaxURyJue+21V1b9mhBpQyJNCCGEEEKkCqJfr7zySvTAAw9kNQshTZFFq/fbb7/opz/9aZbYoqsj76H1PumSDq9DpKmroygGJNKEEEIIIURqoCsj0bM//elP9hhfhLply5bRKaecYtG0pIWoeT0NQ0h1DCNwvHe77bZTV0dRFEikCSGEEEKI1ECjDyJokyZNymgWQiSMyBkCLb5odQjvnz59emKq41FHHaWGIaIokEgTQgghhBCpwKNoCDRq0sIoGuKqffv20RFHHJGY5gie6kg9WryrY7NmzaJddtlFIk0UBRJpQgghhBCi4LjAQqC98847GV0ZEWQ0+7j55pst3bG6dEXSGxcsWBC99957Ge/3VEcWsVZXR1EMSKQJIUQZgPGDRxoDhkd+F0KINMH4tHTp0ujyyy+P/v73v1eNU97wgxTHDh061BgJo1GIpzqG4xzv79u3b7UROCHShkSaEEKUMAgyUobWrFkTvfvuu9Fzzz0XzZs3L/r666+zFoYVQohCgrC6//77bW20MApG5Ktt27bRJZdcUqPIov4sKdWR9xOFO+igg9TVURQNEmlCCFGiIMK++uqr6M4774wOOOAA21j4lcfTTz89+vjjjzMMGSGEKBSMV59++mn04IMPZrTNB6JgtNwnklZTFA1hR0fHFStWZHR1RJgRRUOoKdVRFAsSaUIIUYJgrGDwnHHGGZY6RH3H559/Hq1atcoeH3vssWjQoEH2mtBjLYQQjY3Xoo0YMSKr5T61Zy1atIiOPfbYWlMVEXeTJ0/OSHXk9byPKBpiT4hiQSJNCCFKDDzIpAuNGjUqeuKJJyy1ESHmRgspQaRAzpkzJ7r66qvNoBFCiELB+EQtGunY8cWnEVj9+vWLttpqqxrXNkPYUcdGPVqYys17WrdubV0daR4iRLEgkSaEECUEhgqe6CuvvDKaOHGiGS3hOkGOe64ff/xxi64lvUYIIfKNj0XXX3+9OY/CsQiB1aZNm2jIkCG1RtEQeg8//HC0evXqjEicpzry/qSFr4VIK7pahRCiRHBj55FHHonuvvvurLShOPwNj/PChQtrfJ0QQuQLxNWyZcuiV199NatGFmF12GGHWcv9mqJgjH04pObPn5+RGYCoI8WxW7duWhtNFB0SaUIIUSJg4Lz11lvR6NGjaxVoDsbNypUr7VEIIRoTdyzdfvvtVisbjlmIMmrRBg8eXGstGe/74IMPoilTpmQ0DOEzPNWxplRJIdKIRJoQQpQApAjhSb7sssvq1AyE9J927dopDUgI0eggqJYvXx5NmzYtq6MjUTTSHDfYYINaBRYOqhdeeMEEXyj0EHc0SKKro8Y4UWzoihVCiBKAtMWXX37Zujjm2lYfwwcjZtttt1VbaiFEo+JRNOpik6Jom2yySXTcccfVGkXjcxB4M2bMyBB6jGnNmjWLunfvrlRHUZRIpAkhRJHjxg7roRFNyyV10bum0aIfL3NNBflCCNHQIMref//96KGHHkqMog0bNixaf/31a3UgEY0j1ZFutfG10RBopDvKCSWKEYk0IYQocsLC+7D1dE3gWe7QoUN0+OGH1+qpFkKIhgZhRvSfmthQXBHhpxatT58+OY1NfA5LjcQ72fLeo446ygSfnFCiGJFIE0KIIgcj5YYbbrBoWi6t9PEwt2rVKrr22mstpUgF9UKIxoRxilb511xzjbXdD0FUsXA1Qq22CJhnEdB6P4zGUX+GSNPaaKKYkUgTQogihijaZ599Fs2bNy8rZSgJBBkpRCNHjow6d+6sKJoQotEh4j9p0qToww8/tLRHxBYb4oo6smOOOcbEWm3wOQsWLLC1HsNoHJkCvXv3ts9QwxBRrOjKFUKIIoYmIdSiUdtRWxQNY2W99daLTj/99OiAAw5QLZoQotFBjJGa+OyzzybWz/bs2TPnCD/jH2tChg4qxjTGNro6ygklihmJNCGEKFLwHLMeGu2rSflJMngcbxSy//77m0hDrMnDLIRobIj+E/mfO3dulpOIMWnAgAE5iSsicIg9ImlhR1vEXceOHW0jtVuIYkUztBBCFCmk+ngULWxfnYQ3CiHNkXRH1aEJIQqBN/pwxxJCjY3aMSL8jFO51JEh9p588knr7BhvGLLXXnspU0AUPRJpQghRhGCUUHBPR8faomh4kzfddFMTdDzKuyyEKAQ4k6gfmzx5ckb0CzH1s5/9LBo4cGC08cYb5ySuGPemT5+esewIkTgyBujqqLXRRLEjkSaEEEUIXuTZs2dHr7/+ekbBfBw80hg/Y8aMMQ+1DBchRKFAmD3//PNZjT4Yp9q0aRPttttuOUXREHtE5BBpjIUO76WjY/PmzZUtIIoeiTQhhChCMFAmTJiQtTZQCO2rqT0bMWKEFePjYVb6jxCiUDBu0S6fKFgIKYo0+iBFMZdaWT7n0UcftWyCeKpj37591TBElAQSaUIIUWTggf7888+tYL66xasRYxg8/fv3t9SfXI0fIYTIB0S8GLfmz5+fEf3CmUTka++9985JXJHa+NVXX0Xjxo2LvvnmG/udjfGtadOm1npfGQOiFNCMLYQQRQbCbMqUKVkF8yEYOzvvvLM1CiGaVtuisEIIkU+Ift14441ZNbQIKhp9INRyGadIdVy4cGG0ZMmSjM/hZ9Z+zGURbCGKAYk0IYQoIjBEMHJee+21ahuG0BikVatW0R133GH1aLnUeAghRL5AWJGayLiFWHOI+JOG/atf/coec4H3L1q0KCt1m0hartE4IYoBiTQhhCgiSHUkzXHGjBkZKUNOWIdGJ0el/QghCg1jlbfLD5cL8YYh22+/fU7OJJxSNB+599577TMRamyMe5tttlm03377qXutKBkk0oQQoojAQPG20/FUR/dKH3HEEbZoda6eaSGEyCdE/elGG4/+E/UaOnRozk2NcFKtWLHCxF7opOJzDj300Jzb9wtRDEikCSFEkYAoQ5wh0sI1hhw8yO3atYvOPfdci6apUYgQotAQOVu9erXV0SY1DOnUqVPOKYqMe0TkQrHnzqk+ffoo1VGUFJrBhRCiSMDAQaCR7hhfGw2DZ/3114+GDx8etWzZUnVoQohU4NF/hFWY6ohTiU6MW265ZU4OJXdSxRfCZj207bbbztZH09poopSQSBNCiCIgbBiCoRKmDLkn+fjjj4969Oghb7IQIhUwTtHog+hXUsMQujrWJdWRxftJdQydVIx3/jnKHhClhK5mIYQoAvBAU4vBQrDxtdHwSLdv3z469dRTtR6aECI1eA0Z0f94qiMRNCJpuUb9EXk0TOLRnVSMdYizgw46SE2SRMmhmVwIIVIOaT60r3722Wejb7/9NiNlCCOF+rPLLrtMaY5CiFThNWTUpIWNjhBUCLRcnUq8l0yCeD0u6Y1du3aNtthiC6U6ipJDIk0IIVIORsnLL78cXXfddRkpQ4Cxs++++0Z77LGH0hyFEKnBUx0RVkmpjnWJfhGFI4oWb+HPmEctWq4pk0IUExJpQgiRYkgXWrlyZXT11VdHX3/9dUYtBh5oPNGDBw9WmqMQIlUwViGq3nvvvYxxyxt9sNUl1THewp/xDpF21FFHKdVRlCSa0YUQIqVgjNAk5NFHH43efvvtrFo0jJ3u3bvbQrBawFUIkSY81TGsIQNv9IFjKZfoF6mOa9asiZ566qmMujYEHlG0Fi1aKNVRlCQSaUIIkVIwbubOnWtRtKSOjhg5rA2Uq7EjhBCNAWMVUS9v9OEwTiHSjjzyyJyjXzin5s+fH61atSojIkeK49FHH600b1GySKQJIUQKwTD55JNPoiFDhkTffPNNhnECeI47duxodR2Kogkh0gR1YwsXLrQtnupIV8dmzZrlHP1C5NHVFtHn8F4+g0wCjX/1gznmq6++ij7//PPob3/7mx3fsLmLKDwSaUIIkTIwcL788svoggsuMKEWdjNzPNWnefPmSvURQqQKxixq0cIaMvAoWq7RLwQeIuKFF17ISPdm/Ovbt68JNdr5i9xhfqFLMEsjDBw4MOrSpUvUs2fPaNasWYlzjSgcEmlCCJEiMGjwbo4ZMyZ64oknrPV+HG8YghdZBfNCiLSBsf/II49kGP2MW6QoUo+Wq0jj/RMmTMiK8vA5OKmU6pg7iDPmE5ZDGDt2rAkzlnX59NNPo6VLl0Znn312RrRSFB6JNCGESBEYJW+88UZ0ww03VBXch55owIvMGkMYO7l2RxNCiMaA6Bf1Y/EFrIn4+5pmuUS/GPcYA+fMmZNR18bnNG3atE4LYZcrHEPmFBx/77//fvTAAw+YOBsxYoQ1Y3Hxy3kieyOeVi8Ki0SaEEKkBK9DYwINjRsIhRreY6JoarsvhEgbjGMTJ06scjI5RP3rsqYZgoEW/oi0UDxQg0aqI5+j8S8bRBfCjCVbEMuvvPJKdOqpp0b7779/dO6555pYC+ucEb3rr79+tOuuuyozI2Xo6hZCiBTAhEmdwMUXXxy98847GQu2hmCUNGnSxLzIKpgXQqQNxBn1aGH0y7s6HnjggTmPWwiNyZMnZ6Q68jmIM8Y/pTp+77xjruBYMX8QHVu+fHk0derUaPjw4RY169+/fzRp0iSrQUO4uQOQaCbHkvnkzDPPjK699lr7XaSHH1We4Mw8GiGEEI2KF3Jff/31luaIlxOjJD48u6Gzzz77RPfcc0+00UYb5eSRFkKIxoCxDJGAOKDhh4sr0hJ/8Ytf2JqPpCrWNm7xPmqnaDLy6quvVgkLPqdTp062ZhpNQ8opksaxZcOhx8YxYSPauHjxYlvsm8jZyy+/bAIZ4UZUM4xCAscMoUz07JBDDomOP/74aMcdd7TMDDWhShcSaUIIUUAYginmpjj+vPPOM0+nT6rh8OxGzcYbbxyNGzcu2nfffeVJFkKkCsTB/fffb2l11Dg5CIKzzjrLNn6uDQTGY489Fp122mnWHt7Hwg022CAaNmxYzp9TLPD9EKaIsPgj8wGPHM+333676vGjjz6K3nrrLRNqXk+GyPL3xuFvpDOut956Vs987LHHRrvttpv9jviVwy99SKQJIUQBIZWH1CA8xky67jEGH5598mSSbdu2rbVKLjcvshAi/SAWzjnnHGtQEaY7Ej2j2+Puu++eU7MPGl1cfvnl0W233VbVcZBxkCVHZs6cGW211VZFEfVx8RUKr/BnhJX/TodFHkl35zkcdjznoozXhhtzhX9OaMqHYotjRNSMNEbOAYt/I9CIRhI541xoHkkvEmlCCFEg8BYjzKjT+PDDD7NqOJh8wwkXz7F7kfEoCyHKAwxyxApjBIY5hjUGNgY40RHqiwptbDNekW5HquOyZctsPyF0LiGywjEtCd5H/dQBBxxgTS4QJMD3JPKD2KOOqrHATPbNBRGP/jP7688B+xu+lhb3bIiuzz77zB5JaUeA8VpEmb+HR97n4otHf84/PwneC1wDHCc2rg+EGQ7Abt26VTVtIQODc1LbeRCFRyJNCCEKAEYXnRxJ55k+fXr097//fe1fvi/oZnJmEg0nX6Jn1GLgBc3FGy2EKH6oK8LIv/rqq62Rho8NW2+9tTWFoKU9P5MKjXGOcCuEEc5+0rBiwIABlqLoIAxOPvnk6JJLLok23HDDtc9m42Mdzqs///nPNjYSRXJ+9rOf2fqRhx56aFWDC94TFy8855/ljxA+D/67P8cjnxU+Tyo6ESdEFcITkYnQQmCxDytXrrT38Df/nfOD8PL38XeeY+Nn3+LP1RXOr4t1fkbMtWzZ0urMWrRoER1xxBEm0rgmXJgVWsiLuiGRJoQQjQyTKZP3yJEjozvvvNMMAZ+kmUR9DaEw9ZGJ1huGYIw1tgEmhGh8MOJJ/Rs0aFD0/PPPmzOH57j/Mc49asKY0KVLl2jbbbe1VuubbbaZ/R3DnEfGFTfS62uoh+aiixgft3gkQnTFFVdEd911V8Yi/OwbApO2+QhIf59/RrghchBpo0aNsoWWEX7APtMoafTo0fbZpDsigmgqgnAC3kt9FRvNS/g7P8+bNy9q06aN/czrETBsPM9r2PiZz2Ef3n33XfuZZk5s/J1H32ceffPfeeS8wLoIr5rgnDM3cAz93P/85z+Pttlmm2iHHXaI9thjj2jzzTe3LAtEmZ9/UbxIpAkhRCPCBM6Ej0fYOzn65M4k7OkoPB+KNAyUm2++OTrssMPUMESIMoH0xgcffLCqEUd1hj/GOwY5hjvGOYY80bUePXrY73Tv4zWIGyJSiB7GG3f28HtoDvJ/+Jv/PxcjdGxE4DA+IYQQM4gjfkdMIqJI4WZM4z18LiKH6Bfvd9FDNIr3tW7d2gQSr/XPQqQlfVcfG32fwfcrxL8Hj/6zEz7nPyf9Hn6m/70x4bj5OeX8+Tlt3769ibI999zThDjnmHPO39h4T3h8RHEjkSaEEI0EEz9e4PHjx0fnn3++GTZE1RwMEGo3SG3CSPHhmYkaw+jNN980Q4YJXAhR+jBGeCOOMDpVGxjqbuDzyJjhjxjyRFuoceV1m2yyidWSMbbwP9j42SNQLsJ8POIxvjG2EfXivfwewv9jPxx/Pfhj+J5QIIWUovjw8xEXZKSFdujQIdp0000tWoYoQ5C5WPPXSZSVNhJpQgjRCDDUYsBQf3bCCSdYalAYKWPiZUKmuPvJJ5/MqFHD8+ztq/GCCyHKA8QRUTREGlGohgLDns0dPvwcmoP+sz9WJ5ziJJmUdRURSZ8BxSRGOK4uwHhEgLH/LqpcMDOet2vXrkqUsSHGEGa8xjfmB/8MUT5IpAkhRJ7BwKEz25w5c6wFMlEyr7UA95xSh0HtBp3NPMLGRE4nM2rR+vTpY5O1EKI8IPXv8ccfj0499dToiy++yFksFYKGEleNKdKSPpPn2Bh7/edw43k28Nf4c/47Yow6MYQVIgwxRlMPnifllEee5++8x8UYc4E/x+eI8kYiTQgh8ghDLFEx2k+ffvrp0ccff2yGl8OETOrR8OHDreaCaBm1HQ6iDHGGSEOsMXkLIcoDRBnjAWPHE088kZFO6KIAeF2hBVxdxVX4vIsSvoPX6IYwNnoUyt+Xy2Ntf2MjlZx0T34mvRMnGSmgiKnVq1fbz2wsB8BzrVq1sjGd53C+kaLOviHCGMvZ/Ny44OLv/sj/8d/5WYjqkEgTQog8wfDKJP7GG29EQ4cOjRYvXpwh0JiomdDPOOMMa1tNGuQrr7yS8RoibBdffLG1sCbtUQhRXhB1Z7kOOjyyqDG/M3bgtKGJBIb+kiVLLB2SFGqEDo9E4xE83sSjocw9Fxc8+u/8zzA7wKHOlnEr6T38jtBBeDJO7rzzztG0adPsZ2B/eR3NRehcyVIDiCTEEvV0iCN+pmsjP8+fP9/+zmdST8dzCCeanfC/EGDx9/J3fkd08Tm8Ltx8P5OeAxddPOeb/02IdUUiTQgh8gBDK53ZFi5cGB111FFVETQfcpncMQ5OPPFEqznBCKPF/po1azJes+WWW0ZPP/20GRh4ZYUQ5QdjByKMTo9//etfzXnDYs+0XEcUIMhYuwshM2nSJEuNZExB1CGU6MSIWENMMb4kmX7+HEID+Nxw8+dwLCFyiDiR0sdnvvXWW7YgP0LNX0v0i8X3EZJ0p/X38MhnIMZcGCEqGee8i6XD61gvjUiivxbijxDutz8mvS7+XPg6IdKERJoQQjQwDKsYIIsWLaoSaAg2B2MCgcbfrrzySjNyLrroomjcuHFV3miMBoycfv36RbfccosZZUKI8gWR5REyxhCvX2KscFOOv3lUy6NoLs5oVkQjEro1Et3yRiSMRWFTEj47TPtjIx2QtED+5mKIR/43ooqaOZoieTMkHExEwIiMEa3y18Y3YN9J6aSLJSLUI2m8x51UCDs5qUS5IZEmhBANiAs02uWTvpgk0PAIH3jggdFNN91knmLWDOrWrZul5YTgfX7kkUdsrSPWwhFCiPrC2FTXSJo/hj+HIABZ/JmoHkKOzwfGK3cwsZh1TfAZpCr279/fUhD5HYgAhgv4C1FufH8nCiGEWGdCgUYNWnUCrWfPntGNN95oHb94D10fqcuIg6ecVCF1dBRCrCsILCJcRKQYW+Ib44y3emfjtWxhFCwOkTNSuknHdIEGiLSuXbvm5FxijKSGDCeVCzRApNENl4wCIcoRiTQhhGgAEFsUn1fXJMQFGh7nu+66ywQahhEGyrPPPpth4ACv33vvvS0tKck4EkKIQsMYN3PmzIyxjvEKcYYzqjYHE+MmYyBZBaFDC5HIgtp77bWXnFSibJFIE0KIdQSBRSQMgUaKowu0MH0IsYVAowaN+jIMD7zGCLsZM2aYR9q91bye9B6K5akXEUKItMH4xjhH5oDXogHRNxqa0MSEn2uC99HUhC38DMbHgw46yKJojIdClCO68oUQYh1AaCHQKJoPm4TEBRpeZQTapptuWuUZprj/4YcftrV4wjQf/r7bbrtZqiPRNiGESBuMWR999JFt4fjFmOVRtNqyABB5d999d8aYyXsYMxFppDwKUa5IpAkhRD3BMKEr2oQJEyyCRpezMO0HgUaKY69evcwQCQUaBgn1a7Nnz67qZubgPfZajNqMHCGEKAREvsgeCLMGgFRHHEy11aO5g4sxMBw3SXXcbrvtbJOTSpQzEmlCCFEPaHVNO+s777wzOv/88629dbiYK2k+3sWRGjRPcXR4Py2uw7bVgIHSrFmzqHv37hmvF0KINMF4R6pjOO7hVGLc2nPPPWsVWIx7Tz75ZPTBBx9kROJwTlGLpnpcUe5IpAkhRB3BuECU3XDDDdGoUaPs51BoIdDCddDiAg0wbDBQiKKFTUN4HWk+CLXa6jmEEKJQMIbNnTs3y8lEPVrTpk1rHL+IvFGP+8ILL9hjmB6OSBs0aFBOnSGFKGUk0oQQog6QlkPdGdGzMWPGWDSNqJjjAo30x9GjR2ekODqe6vj6669npPngNcZA6d27tz0KIUQaYcz729/+Fv31r3/Nqkfbf//9a80C8EwCRFoo8nifR9EQfEKUMxJpQgiRAwgritspkqfrInVo1KOFAg2jgsWp8QJfdNFFVW324/Ce9957z9ZHi79/yy23tFRHGShCiLTCuPX0009bNC1ej0ZXx9qiYDinJk+ebFE0zyRwJxX1uGoYIoREmhBC1ApGBMYEi7YeeeSR1jKfgve4BxlRduGFF9qGWKtOaCH2PM0nTHXEsPGGIWo7LYRIK4gsImnxTAAiYUTSanIyecOQJ554IuP9vKd169bR9ttvX2skTohyQFaAEELUgBsUNPjo37+/CbUkcbXRRhvZgqwnnXRSjQLNUx1pvR8aKN6qnyiaajGEEGmGFMVnnnkmKxOAejTGr5rq0XgvUTTSHcP3Ez07+OCDrR5XTiohJNKEEKJaMCaoOXvooYesxoxUx/h6PhgWP//5z0100fCDerSaDBTSgxYsWBCtWrUqw0AhEkerftpO1+SFFkKIQoLjas2aNdGHH36YNYbtt99+NUbBGDtxcj3//PP26GMpYybiDJGmVEchvkciTQghYmA4EOVi3bPzzjvPmoR89dVXGa2mPfLVtWvX6J577om6detmLfdr8wDzub54awgpjrvuuqvaTgshUg3Oq1mzZmXVoyHOiKTVJNIQdfPnz89aeoT3MP61adNGTioh1iKRJoQQAV5/RmMP6s/Gjx9v0bTQoPAOjnRhRKAh1HIRV3ig+WwiaWGqI59Hy2pa9qsWQwiRZhBnixYtynBaeT1aly5dahRZpHoTRSOFPEwZJ3qmBfyFyEQiTQgh1oKXl46N1Esg0GiRz+9hgxAMEGrOTjzxRIuIbbbZZmZg5GJYIPR88dbQQMG4oRYNoVdTqqQQQhQaxrG33norw3FFBgFp34yH1Y1h7qRicf/QSUWaZIsWLSySltQNV4hyRSJNCFH2eHojKY3XX3+9pTiy/g9e3zCdxxuE0F7/4osvtp/rEvni82bPnp31uYg8omiqxRBCpBmcS0nrozEObrvttjZGVuewIvJGR0eiaPGGIWeccYa62goRQ3eDEKKs8fRGujYOHDjQFqj+5JNPslJ5MCDwEk+cOLHWDo5JYNCsXr06mjJlSoYHms9o3ry5RdLkRRZCpBnGsSVLlli9bpgN4E1DqhvDeC3ijPRxnFQOUTdqeYmiyUklRCYSaUI0EExCeAfZwslLpBfE0tdff23pjQg01i6j/iz08nr9GY1BWLx1l112qbWDYxJE6iiWx0CJe6A9iiYvshAizeC8ostt6GgCImhNmjSpNrOA17/22mvWNCR8L6+nFo310ZTqLUQmsgiEWEc8EkM74ueee862pFQ5kR44L3RXxNgYOXJkdNppp1kkjXMW9w4TMcOIeOSRR6xzWX26L/r/QwyGXR35HD4P4ScvshAi7SCwvLOjg3Npww03jDp37pzoaGL8Y2wl1ZG50udFXksUbe+991ZXWyESkEgTYh3B6GbSOvDAA6MBAwbYRtOJOXPmZHWwEoWHKBbnhaYgRM/uuOOOqvb6bjxgLCCaNt5442j06NHRVVddZfVn9V1kmv/Jwq1cE6EXmVRH6jgQaXVJnRRCiELA+EW6Y3wc22abbSwqliTSyEx4//33zUkVijucYKR5k+qo8U+IbCTShFgHmHw+++yz6Mwzz4yWL19uCxRTdzRv3jxb/Pipp54yz6GEWuFBgGEgIMioi0CgJXVvDNMbqT/71a9+ZdG0dakXQ8iTShmP1CH69tprLxXMCyFSD2MX4owMhHjGAVG06sZIxr/HH3/cnGPhWMu4x/iay/qSQpQjuiuEWAeYsB566KFo5cqVVS2FPbWNiYxFkImyKfWxsGBQIJZZ+4zUxnPPPdfOD+cpPC8YGT/72c+iQYMG2fpn9a0/C/HrAcHHo+PRul69etU7QieEEI0FTknmM+a9+LhJ+/0kkYYo+/zzz80xFo5/RM5IcSTVsbo6NiHKHYk0IdYBJiAaT4TeQYeoDV0CL7zwQltTJlwXRjQeGBScI+oh+vfvb4/8Hqbr4MX17o2kN9Jevy7rn9UEhg3rorGFDUkwaLbbbruoY8eOSvURQqQe5rTFixdnpCwC41eHDh0SxzGE2bRp08yRGY5/OKZYa1JZBEJUj+4MIdaBmiYnYDIjfx+jPy4MRH7x6BkNXVj3jAgaDV3i6aecO6JlvXv3tuhZQ6Q3hiDOWcA6Hk1FAB588MEqmBdCFAWILOazUGwhsKjX3XrrrbMyDnwMvvPOOzOiaJ5S3qdPHxNpQohkJNKEWAcw5KkpatasWaJR76luc+fOjS655JKsnHyRH+LRM1JS+T30ACOM8ObSlYyaQk9vpD6ioVpBc/4RZ4i0MJLqkTu6RirVUQhRDDCufvzxxxkiDScXAo2UxbizifGWKBr12qGD0tvud+rUqVoHpxBCIk2IdQJjfpNNNrEaJ9aIwfCOG/gY6ngTqUl6+OGH1fExjyRFz6hDi4tjzhFijM6K48aNM5Hm3RsbMqqFMcP/T0p1pDFJ0vUihBBpg7GVBayJpIVjaXXZJLyecRcHGWOyZxHgoGLs3WeffZRFIEQtSKQJsY6Qtka0BmOfRYmTIjFMakxYF110UVXHxzD1TawbHEu8tnRupIuYR8+SWuvjxSV6Rlrjo48+apFQUm/y4dElejZjxgyLpobnm2umb9++iqIJIYoCnExejxaOZTicaBoSHz95PYtXz549OyuKRrMQtd0XonYk0oRYRzwqQ00T62khEIiQxD2ETFTffPNNdMEFF0RvvPGGhFoD4QJ4wYIFFjmrLXpGs46bb77ZzpUvTp2PwnXOLamOiLQw1ZH9ID2W60UiTQhRDCC64vVogNCKt99n7GN+I9WRcdgzR5gTmRsPOeSQvI27QpQSukOEaACYbDC4SZm74oorLP0jyQDHC/npp59GxxxzjNWpqeNj/cEQ4PiRgsOC1Ihjomi1Rc8eeeQRa9hBq/2kOsKGAmMGscgWGjb8T2rfmjdvrlRHIURRwBgWr0dj3mNsZSHrMCrGa1grdMKECTYWO4x9bdq0Udt9IXJEIk2IBoRJCOP/+uuvj1q1apU4EbmwoDU/k56EWt3xxiCk07Ao9fDhwxM7NyZFz7bYYotG8eKS4jh9+vTEro6kOvIohBDFAMIrqbPjzjvvbALNM0c8ivbcc89F3377bUY2A1G0wYMH25isKJoQtaO7RIgGhggaE9fIkSOrrXVCmLF22kknnVQV+RG146mN3hgEgfb8889bGmlY91Co6JmDoYJImzJlSoYI91RHmoY0xn4IIURDgDhbunRphkhjbmOMjUfR3n//fWu7H459jHctWrSwVEeleQuRGxJpQjQwCAQiNQcccEB0+umnJ3oN3dtIbdrQoUNt0WtF1KrHRc8XX3wRPfjgg5bayCPRMyJVaYmeORgq1XV17NWrlwk1pToKIYoBxl/GMRyK4ViLOGvfvn3GWMY4/dhjj5njLBz7EGY4JRmbNfYJkRsSaULkAcQAkxEi7cADD0ycmFyo0e3xhBNOsBRIhBrPi+/hWHBMODavvvqqCV+WO0hqDMIxJ4Vw4403tpQaOjc2ZvQsxFMdeQzPJ/tHFE2pjkKIYoFx9i9/+UuG6ALmtE033bQqksbfSXGkRjh0OvJ3X7xaY58QuSORJkSe8ImJRiK05ufnuFDztWSIqCHUFi1alBUZKkcQNmHd2YABAyx6RjG6L0odih9E2AYbbGDt9EltvPjii/PaubEm2K/qUh2pyaAeTamOQohigbGY9vthSjkwx4Xt9xn3br/99mqjaG3btlUUTYg6IJEmRB6hLgpP45VXXmn1UzWlPs6cOdPEyAsvvJBVcF1OYAgwyc+fP98aghx55JFWhJ4UaWTCR4ghyFiD7p577rH1dwoRPXMwTkhzTEp1JKqqBayFEMUE41h17fepv2Y842+M24g0xJrD33BQHnrooYlL0wghqkciTYg8g3GOaPjd735n6XcUWse7PhI5I4JGJI2IGkXXRIzinstSxid5xM2IESMscsaE/7e//c0m/TC6GKY24qG95ZZbLMWR3/HaFtIQQEg+/PDDWamOGCi03le6jxCimGBspm46FGmMwd40hJ8Z90hzxMEYvo7xmOZNRNE84iaEyA2JNCEaAYRay5YtoxtvvDEaN25cVSOLMKKCQc9ER8SIzpDUXtHFMN5WvtTwtEY6gl133XXR/vvvH91222323eN1Z961EdFLaiPH8pJLLrGFodNQkM45RGzPmTMnK9WxSZMmFklTqqMQophAdFGTFo7FjGneNMQdbDQMSYqi9evXT1E0IeqBRJoQjYSLCxbypG6KOrUkYeET3vjx461RBi3mk+qwih3E2Zo1a6IFCxZEZ511lokzRBqRtLg3FhA31J117NjROjaS2six9MhkY9eeJcE+L1y40LZw/9m/7t27ZwlzIYRIM8w5iDPmoFCkMR5Tj8ajR9GWL1+eNe4RRevUqZOcU0LUA4k0IRoRhASG+rbbbmtC45hjjjHhxmQWwmRIFAnBMnDgwKqOhknipZggIoinlVb6rLlzzjnnRD169DDBtWLFChOn8e9Higze2C233NIagiBwOW6kNpI6mAZx5iCkiaLFUx3ZT2rrtD6QEKKYYMwm1ZH2++GYhrNpp512sugY8xJRtHDhfsZlnJD77LOPzXmKoglRdyTShGhkPGWPCNCoUaNsLa/NNtvM0kHiggOjn8nxoYceshotvJWsDUYKZOjVTDsIL0QnkbNp06aZ8GS9MKKFLjzj38fFGWuKDRs2zJYqGDJkiKWKpiG1MQ7GCeJsxowZWamOTZs2tXXb4mJcCCHSDOPyxx9/nOg8Y+N55qekKBqZDjRyUi2aEPVDIk2IAkH6B1E0momwphcTGr/H00I8qkaNFt0O6QDJpIjgSbNYwwPrNXZM4KQyIjTZ/6lTp9r+h/ULjoszxBjNQOh6STpk69at7fm0TvicByKfRNJCY4Xz2bVrVxNqaYr6CSFEbTCWxevRgLGMZiDMQQ888IA9xqNoxx57rD1q3BOifujOEaKAMHl5+iMpf6NHj05sKgLemn727NmWJkj6HA02Vq1aZc/z9zAdpRAgzIj+Ub+wevVqa51/2mmnWW3dtddeawtSk+qIOEtqhkJa4DbbbBMdd9xxFjm79NJLTZxRi5Z2byyC1BewDr8b34nGJkRKhRB1h/sJscCWNG6I/IE4i9ejkQ3CeMyYNmHChMQo2i9+8Ytot912Uy2aEOvAjyqNusJadUIIg0mQnH5qtW699dboz3/+s0XQMP7jtymTJJMfk2SLFi0sGnf00UdHbdq0seeYJBGAjVEHwH4zQSNO2IgksTg3beg///xzew7hFvfEgk/2QPonYu68886zgnTETTFN8CwVQBrns88+a98XENqcH44Hj2lL0RQirSDGGPsYE3H4MC4ypnXu3NmiM9R3pt1xUwqQbo9TkGgZ5wI4DzvssEM0duzY6JRTTrE1LX25GP5GvTC1wwg11eEKUX8k0oRIEdyOTHakjrz99tuW3sgjv7vhHwdDhYmQ6Bv5/3SNJDJHRI7nEWy8hslzXWH/EFvsI/vj2zPPPGONTaZMmVKVxoiBFXpXQ0KRibBEnLHfiDOiZsXmfeWYrFy50tIaEabu7ef4ExW8+uqrzXARQtQO9w9j3osvvhhdfvnllkbMPcYYRv0uCyMjDhgrVOeZX3A+nXrqqdGkSZOq5iDmEzo20sCJNS3J5HBTEudanz59onvvvTfaaKONGsVRKESpIpEmRArhtkTkEElDACHWPvvsMxM/7rGMgwGDuGGSZEMwsHXp0iXq0KGDRar4O9Ec33hP0iSKkRRuHi1jW7JkiRWSz5o1K3rzzTejjz76yCZv37fqhBnwPzGqEJTbb7+9tWdmQifKxD4Xq2ec737//fdbF05q8ByOOeu4nXzyyUp3FCIHGPsY92jAM2jQIIvkML7wvEfeGT+6detmjYe4x4p13CgGSKfHifbOO+9Uje3MI3vssYc1sUJA+5zE+fEoGqmOiqIJsW5IpAmRYhBIpJgQpcGTefvtt1ukhueYGKu7fRFfGC4IIjYmVYwZxBobDUpatWplnmiacYRCjc/EM4oo5BGBxgSN+KCAnIkao8mjafy9pmHE9wWRwnbQQQeZOEOkYWwxkRd7GiB1du5tRlwD37t58+bW+IQCexmSQtQO9w8p09TcEsXx6E0I4xXj1kknnWTLcjCOcb+Jhod5YM8994yWLVtWNc7jUCOStmjRIpsjHMZyUhxphIVYS3IACiFyRyJNiCIAYUS0Bg/z448/bt0dqQPwNEjEXG24WGLzKBobE2lcpHkEjZ8RYR5J8+dqg8/j/zBpI8zweu+1114mzhBmPIdwLIVJnGND4XzPnj2zUh1ZI4i0H6U6ClE73DtEznB4MM55DVQSjGE4nljChJpcxhXRsDDWUwvI2IZYc9zh5g2rgLmE9MZx48bZuIeQE0KsGxJpQhQRCAJPg3z++eejyZMnW0dBjBk2F1KFwEUg4oSNxacPPPBAE2esEVYqUbM4iGeavNDFMp7qiAHZr18/GZBC5ABjG+May3QQRattLCNLoGPHjpZeRw2uotUNC/MNNdGkO5L26DCOYzqGUU5EGanrdClGrDEfCCHWDd1FQhQRCBwMftbconj+lltusc6BpPwwQZJeRyojXk5em89IFZ9NNIz9IVJEXRkeVNY0e/rpp62FPj+T/sL+8rpSE2iAYcl39TRHwEDBaEGcYtAIIWoGo5/MAFKGcULl4mwiikMaHp0HcZaIhoVzQAQtfi4Y6xBwDuMdHTeHDRumddGKFM6nZ+vwGJ5fUTgUSROiyPHoGgbOwoULrZCbmgA80TT58LoxDBoe2bjtc731mXARV2yeKskjAo01zXr06BFtvvnm5m1FmCBK8HDzmlJIZ6wJjBc8zNTPsAacF9bz/d2rjEAt9eMgxLrCvfPaa6/Zgve03M/VSGQcor4VR0mzZs1K0hFUKJhXaFx1wgknWN0tMG/ExzPGfXcaqqNj8cG9hzjDQYLTl4ZjZIAguBWdLiwSaUKUCNzKGDaIMgQZ3jBEGt0XvSMjjT9YmNS9o76FwwCijEnWH4nMtWvXztL32rdvH2266abWKp/1irwpCcLMBVw5wbFmwW5Pz/LjSCMDoohsTHRCiJqhvomIGB1Sv/3227XPfg9jkUdn3MnkMEYhDK666ipb7kK1UA0HKfQ33nhjNHLkyKxz4kKMMZ9MCmrRcEwpc6C44F7i3HKe2bAbyMQ544wzoqFDh2r+KjASaUKUKNzaGDR4yXzjdzaEGWLt008/zejOBRhDdCNkgm7ZsqVNwjwXRtH8ZzecyhWOIes43XbbbRbJBIwXPPp49lnwFRErhKgexiMyAIjG04THm1E4CK9evXpZYx7WY4ynNiIMPJKjroINB3MDqfQ33XSTnaMQP8YY9KyXxlqQOPLKfU4oNpjnZ8+eHQ0cONAcudgJ3G+777671XriABGFQyJNiDIljKKFwwCTLBOwT7YyeJLh2JHqSOczDEsmN0CUeRtqpToKUTuk1U2dOtUi0p5W53ikZuzYsebV//Wvf20Nevx+A8YqHCMYlSzoL8dIw4BI+93vfmdp20kijXPTpEmTquNOZoUoHsgEYa07nCMffvih3YecV+4znB40viKTRhQOuTyEKFMwbIiIYdAwufrmUTIGawmM6sFIZD2nNWvWZBiMeCF79+5tjzp+QtQO3nw61cYjZMCYdOyxx1okrXv37tEpp5ySldKIgCCSTU1b0meI+oHzjoZQ1Ykvj2AqY6D4YM5yEU4EDYEGnEcyaYYMGaLU1RQgkSaEEPWASY0i66TUK5Ye0AQnRO0gsHB0TJkyJaOlO+AsYtHqfffd1x7ZqDvjkb+FcD8+/PDD1nQkHvUR9YPj+P777yceT47/JptsYsY8nXvlkCoeEN84NYiUvfjii1VzGA5a6qnPO++8aKeddqpWnIvGQyJNCCHqAUYhdWehYckkR/qP1mwSIje4fxYsWGDRNOplQzASWaiaVDruJzaEAYvix6NpRAZWrFhhnxWvaRP1g/NBQ6Sk48nxRzzTVEpRtOICUTZ37lwTaYg1RDiZNaQ5st7n/vvvb7WGEt6FRyJNCCHqCAYh3n/y+MNUR4wVj6JpghOidjAYiYDFI9IYjURoSKfj0WtkvVFF3IgkOoDQY3H/+GeJ+oEjirrbsGYZOO44olgXTcZ8ccE5paZz8ODB1tXR5y9E93777RedfvrpJtb8fhOFRWdBCCHqCN5/0rMwBkMDBoOlW7duWV5+kX7wJvvSFXiXMWDCDQHA3+MGq6g/HHPSE2fMmJGV6kgUjQgaTXjCSA3RtDZt2tjaaPF0LD5j4sSJWfelqDtE0eheS1OkJDDoW7VqpShaEYFA43weffTR0SeffGK/A05FltW54oorLJVYWSDpQd0dhRDVghGFpw3jh8ewhX986HBvKh44NmoWeGTA52d/LHavK9+bFCA60bFGmhuXfDeMx1mzZlmxvTyR6YdrGkOFja6CrCeIl5l1BCmq92uca5YuZzvvvLMt4I4YR4hjoCqKUH8QU97VkeMeQutvugqSUhd3eiCiWXiX1Kyvvvpq7bPfQydIug3SQlx1ofUHx8R1110XDR8+PCsNleufxfs7duwog75IwMHEvIVAY45iDmfswtHBvUbq/rbbbmvnVqQHiTQhRBUuyjBaER88Uli8aNEiWwgbg2jp0qXmYU0CLxziZKuttrLJm3oFjFsWwcZTt/XWW5vhhHHL5OBCrpjAYHn33XetbTGpQBwzYHLr16+frdXEekEinbjTAYFAFIdUOxrA0IqaLmcYM+6ECEUa1ynXLTWHdO+kLorielLxZKjWD4TZqaeeaoKL8+FwnHF4PP3009GWW26ZNUZwD7KuGrUz1KGFNVO6D9cdjifH95e//KUdXx/jHIz5Z555xlIeRfphzMPpxELxDz74oDk5HJwaOEP23ntvNYBJIRJpQpQ5DAEM4hhJpHTRVp4NA4maKybspEhaEm7M8ogACzdEGUJt8803N+OKCb5z587mJfeoRDEItuq8+DV5/kVh4RrnOsbp8N1330V33XWXLeDKwsgINZ7n+nZxVhNcyzgacEgcf/zx0TnnnGMd0RS1qRscZxan7tKli0UuwzGF43nVVVdVdXJMAkcRa6eNGDHCzqnD+cFJNHPmTItoy+isG5wXji0RtNtvv90iaiEcz3322ceMfdamE+nGBdqYMWOiG2+80c4nzwHz7eGHHx7dcccdds8Vw/xbbkikCVGmYBQhvhAd8+fPt4J71irCg4pgc2HWUEOECzjEGBtCZrPNNou222676Mgjj7Q1kDyNjMhEWo0rvP+/+c1vLNXRvf98Lzz/pFl16tTJDEVReOLXONf3888/b23FcUi4MKsPnGM8z9Qg3nnnndGmm26aVSMlqofz8vbbb1tEmjQsh+OKuEJkcU9Vdy8huqdNm2apkjTxCc+jL7C82267STzXERwWODD69+9v58UNeoexG5F2//3323EW6cUF2qhRo8wxFQo0xirmqkcffdTGLs6rSB+SzUKUGUTCMFoxbB577DGLCCGSrr322mjevHk2MeOZxghqSB8On8X/RtgwcRDBIG3wz3/+sxlaPXv2tBoIjGk8uRhxafMhYQhy3EiN4/g4THCkABEdlDey8Ph1Rp3Z448/btc4RieRl/D6qq9AA/4HRs/rr78eXXTRRXbP8JzIDUQynn13dDg4akglpdV+Tc4O/oZAZosbmAiNcePG2TkWucP1y3V866232rWddD0zvmmMSz+IMc4h9xgCjTnXBRqOCzJaHnjggahly5YSaClGd5oQZQITLuIMEUaqCh5s6kEQaggmBvSahBkTMxEuBngMKdKQ4huRBU9dxIiqKRrmog1jDWN62bJlJhTZL1JtXnvtNUsnTJNY4/gsXLjQ0kBDA59jQut9vrvSqwoH1wnXC9fN+PHj7fpGoHGNI64xQDFUGup64nO4p6jPwdkgUZAb3PekOhKxQVCFcA+dccYZNsbUBOMRrznooIOyomWcB843AjAtY0cxwLngOqaZS/y8gMa24oB5ylMcb7jhhgzBzdyMA4S/IdQUaU43SncUosRhcGbCxSiiIxfRKpp/1NZSHJHFgM4gziM1V6RFeCMQctjDSZvPYWKgvoRIxaeffmobRjEb/4uNnxE4Nf1f/ieijzWShgwZYg1IMMgK3aDBazVuu+22qjoYjkHz5s2tO9YOO+ygJhIFgmsLwfTOO+9YKhbCzB0P9YmYIQL8+q7pegWu1z59+kT33nuvFeLLmK0Zxh68+DQyCLs6Ms5QT0b3uVzqnRhLcOaQCUATHzdEOXdEtYmm0cJfaai1w7EkQ4CsBsSzOxzC657rmmNJuiPXutId0wfjHfPUhRdeaE2R3DEFzE3M30T+TzzxRK2HVgRIpAlRomBYYgxhBD3xxBPRhAkTLJ0RQ5aBPOnWZ8BmEkYQsZEihreN4n46MyKgGOh5XWjEAp/Hxv/FWPKN9Vhobb548eJo7ty5ZgiwIRwxBJhAkvaF/4VXHa8fNWC//e1vTbixf4UwgtlHDEEifaRp+sSHYYkhSG5/06ZNZaA3MpwHT6FFQBMJQJxxbbnRXh1cw1zPnEM2rjk2ziHPU7OBcwOjh/uI/8N1y/0TwudQR4VQV01i7RA5J8LJuQojNtzfl1xySXTyySfbz7XBPclneZOLMHWS99N4hAYkOJRE9XAcuX84hiNHjrSffUzmXmBM93GN+4TmSDRJYrwT6YExjywCItGMRWEKNmMS98EFF1wQnXTSSXZ/aJxKPxJpQpQY3NIYkQzQNEnAgCFyxmCdJIjcIEUQka5Ie3HWUqGRBxECRBETM6+pqwDhfzHB83+ZQNgv0i1p6c8CtnSRJH0Q4YixlmRU83/x+LF4Kulr3vYcw7gxYd9feeUVE66kUvlxZOI766yzbGM/RePA8eeawaCk1uy+++6LVq5caY6J6sQZ1y+GCdc61zYba5/hhKDzKNcWhj7RHBdrbHwe7flpFvPHP/7R/k9cqGGwErmhbTn3i0iGscC7OoZLWHA/Ez2ra0SascO7PIbdVjkHRHxcTNR17ConuI+orYw3C/FjxqOfJ44rDVlozKLujunAx0Kuf+o5WVKE+yK8txBlzOtXXnmlRdMk0IqEypMrhCgRKg3Hiq+//rpi7ty5FZWDdcVGG21UUTnBoiZs42ffKgfpikpjtWLjjTeu6Ny5c8U111xj76ucpCsqDdWKSsN07ac2LHwun89+VhprFZVirWLYsGEVrVq1qqicPCoqjYCM/fR9rRRmFe3atasYP358ReVkVFFpSKz9xMahUgxUXHbZZRWVoixj35o3b15RKTTt2IvGgWPNNcC106tXr4oNN9ww8brxLbzWK0VZxSmnnFKxYMGCis8++6yiUnDbtVgp7ir+9a9/2fVZadys/U/fw+/8T147atSoikqDJ+t/8NkPPvigfY6onu+++65i+PDhds7C48f56du3rx3j+PGvCc7ZrFmzKlq2bFlRKeyqPo9z3rZt24o333zTXiOSYRzlmFca8DbGxs9J/N7iGPfs2dPGblF4GK+4p956662KLl262NhUKcqqzhf3AfMq9sDq1at1LxQZSkYVogTAY0YEAS/o9ddfbx5RUhxJ06q8z9e+6nuPW+XAbREEFnplAUvSgVgTjRQjUrWoPePv+YpU8bl8PhEoPLGkCl566aVRpTEVVYo1W7wWr1/oSffvR5rk6aefbqmbpLS5x7cxwFNJW3AeHfYRLz1brp5/UX+4fjn+pB5S+E4tEvUzRNOSroVKA8WirtTOUDPGtU6khkfqKkml5W9ci0TXiBJwfXKPhPA755frcvvtt7frNw77tnz58oz7TWTCfUyEnzqyMDUROP40ASHNOn78a4LzwjIepCHHxwxSITnfjTlOFBvcT0nNQrgPuHc6duyYMRdwfVNrzPEVhYVzQMSMrJSBAwdWZaX4GOTnkM7JNBAhgsYYJ4oHiTQhipx/rc1DZ80gDBUag9B9MBysHQZtxBmpjLfccoulAlG3gchwYVQXA2ld4X+RTsnkQfMNUgYxqgYPHmxrqGGwhQYC3xXhef7552d1rcon/A+MSibB0OBjwuOY8x1EfnGDhBTZE044wa5zjHDOS/w6d3FGPeUxxxxjqVl+rXOdIcrqY6zwuTTP4TEO13Lbtm0b9f4pNrh3SKvjHIb3kZ+vgw8+uM73EscbgYdzJ/5erg22UHyIHyBll0ZPpAojnkPhxTHFicf1Hl7TvIZxV86IwsKcxHl48sknzXFJCUE4FjJvkn5P12Ha8DPvS6AVHxJpQhQpDNJMrCw+jReNrlwLFizIiiowWDPJ8kjdDZE2mlwccsghFkVACCUZnY2NRypat25tzQOo7+nVq5dNNOH+YVjwHRFpvkBnvoUa4nDixIkZkyDHlGO3yy67mEEj8gfXM+ecxahpOEGtZVIk1Q12rnOub4TZ1VdfbdHahrrWq6s75HMxhNJwL6UV7p8XXngho14GEFfUy9T3/GB8sl4a5z506nB9MNaRYdAYzpxiwp0e1FjSEZVx1eF4tmrVypxh/BweU+C9bBJqhcHHQ5YZQaBRL4sjIpybcHrsv//+VoOmhfaLF4k0IYoMBmKMHVK+fL0zomhE08KBGjB4MCpJWaGw/sUXX4yOOOKIKoM1PvmmAYwCIh0e7Rs0aFBWmoZPUkxARElIhcynwcDxxvvPo8Oxo803qSThvomGBeOR6CmiPPQYh0Y+cA64TrhuEGdcO/yMcMJACaMB9YX/yXp+8f/NZ+NkIIVSIi0Zjhn36ZQpU8zp4bhBScMixqT6wLHv2rWr3Yvh8WecoMkP965EWiacg5deesla6YdZF34+fv/735tQ45qO3zucS5pRxe8DkX98PLziiiusUyM/h/cT8xJzPo15JNCKH4k0IYoIFyfU4VB3xjpDntoYTpgM1Bg8rNlEutekSZOsLS8phAzgaRRnIRgFHhG5+OKLo1GjRtUo1Gjxn6+UJo4rnng6ZvE/HSY+amHSKnZLAc4pXmI8+kSAcURgkISCnGPvqY1cK4j2XXfd1cQZtWNxA3NdwNBnH+IGP8KAe4v7TddCMpw3omh0dgzvIwQWqYpEpPm5PnDMGS+ocY3XC3INcf+Ghmy542PnNddck5WJwPGjy+lhhx1WlQIfPy+8n/sgPI8i/3AN45zFWXXHHXeYQAsjoO6UxVnBGmkSaMWPZhMhigCPnmFsEBFDoFF8Hx+kwSMK1HdgsNIkASOIwbvYvPx8F6JqtBVOKnzmu1PETg0bj/Fj0RAwMZJGikc+NGaY/EgnCfdHNAxc70RdcEAMHDjQ0nri6Y2Ir/Bap/kN1wFCCYO9IcWZw//HIRAXaexHjx49ZBBVA+cTRxLnkfMawrmiYQhCe10ELsee+htERvg53L+Mg/Esg3LF7y3SHN9+++0M8cr8gDC77LLLqgTajjvumHVecFz95S9/yboPRH7w+f+jjz6yRaipQ4uLa84RDkMyZW666aaqBmCiuJFIEyLluNcTUUZqIwuOJjVMcC8aKXgIM9K9iCjEhU2x4YZD3759LcXDjQcH4wvDmdqjMG2noQiNPMc99xxrGeYNCwYgtZakqHHOaTTB73GDhOPPAusXXXRRdPPNN1d1Bc2nI4Lriw6OodDwqC//X0ZRMoxhK1assHMZOlLcsKQejWO4LjDGkfLIFooK/t97771njhaJiu/HM8TZfffdlzVeci6OP/54WzuQa9mjaEmRNByEOp75x0U1mRw4rKZPn57V5MXnSFKGzzzzTEXQSgiJNCFSinvPwugZhkbcg4aRyISK54zURiIKPOYj3atQYHQhQI866ihL9Qi97j6J0SBg7ty5dswaCj8HRHRCjzNGCzn/2267bV5FQbnhAo26JQwSjjvnNjQkQ4MERwTRM687yyfsG/fe448/boY/++T7RVou96eiqslwD7EkSDwtm3NG3WCLFi2yhEBdYTxgvHNx4fg9TGfW8B4uR5g3uL9uvfVW6+oYRqY5F9SgUYvG+Mq8wTFlYfdQ9AKfo0ha/gkdVsx78UWqwbMJqN2mkRY1hBqHSgeJNCFSiEfPqD3z6Bm56PGUHYwR0gGp56AbYjGnNtYG34fvxWRFalnoecdYwICmRo+al4YyHvgcGlUsXrw44zMxBL2bXCmI4DTg55BUHmrQvGNZSGiQcL1z3TfWtY4ww1gKo2jA/Yho5FqQYM8Gg3L16tV2XsPzyX1D5Ib0LR4bAsbDPfbYI8tIRZzNmjWrrEUa16k7s5555pmszACEGWmOzCcucnke5x+/h0KN+Uk1afnFx0MiZzgn4y32wcdDarbJKPAUR81JpYNEmhApggGYydMX660peoZRSP0NgzMduljTpthTG2vDRSlrZOH1DaMnGGB4d+lgGY++1BfOBR74+OTI/6U4mwlRrDtukLBI+dChQ6NPPvkky6DmWBMxo1EM1zzXfmMaJFwLdFGNCzH+P7WJ+Y7kFSucx/nz50fvv/9+hlHPvcxyGyyg31DHjuuBZj7x6wKBzWL5nMOGGBeKEY4BHRlpFhJPl2MuwfG13377ZTi/gOudRiKhSOO9b731lp3Pcj2e+YRzRTopzUFYEzLJQcs1jiij/oya7VBci9JBIk2IlOCGKnUbpHohRGqLnlErVd3Cz6UKBh0595dffnli2uPIkSOtbigUtfWFY0/qHY8Ox5/FvzEGNSmuO37dk6qT1FLaHRKkFLJWXSEMEvaRNCMMfX52AcAj12KfPn2yjFvxPTg46DQXd5xgZNIwhI6MDTVuIShIQ95mm20yxDTnjLRxatPKMfrj9xh1u/EGSzj1WrZsGf3hD3+wqHT8XHCf4RwJ7zdEGp8RzzAQ6w5jH2MgYyE12N7R1gnHQ+4r6nbzXYsrCodEmhApwD1nd955py1KTatqJtXQoPDBGe8ZxcEINIRaOXrQEKR4fXffffesaBpGyNSpU804XBcwPkjTIsUtbtR4Fzk31kX9cOMRgYZBwj0QHmsMRs41tX9+vRfCIGGfSNdj4Xg3Sv1+JMoQFwXiexi/ELcsPh4ampxXHCx05WxIccvn8nk09PGMAoQhG9fZq6++us7jQrHhziuyLUhzDL8/xwthds4551TbbIK5pUOHDllzDOeTFLzwvIr6w3ni3JDmTUo/nVApeUiyATp37mzp3qTcJwlrUTrozApRQPBIMoH+9a9/jc477zxrEEKbXZ4L01GYIMPoGSItn63G044bF2effXaW0c5Eh9glpWddvLwY5jNnzrQoWjw1yOvRRP3hmHKO8AZTUxE3SNyQ79Wrl0XQEGoItkJc79yPOE7i3fC4Bojslet9WBvcO9yL8fEMAcVYRrpjQzuYEBr77LOPXT/huWJc8OYl5QTjGGmOiLQwzdENfmr4aNte3XjG8aSLalzA8bmklodOFVE/XKAhesmiSWqxz/li/CNSTO05j97gRZQuEmlCFAgMUgZijD8GZvechZOeT6Rh9IxuaMo//954YA2fQw89NMOA4PitXLnSuvCFaYp1hfdSjxZ+BoYfETTq0Uq59i/feAQNY+TCCy9MFGiIcCKWtNcnnbdQQojriWY03Kfhvcn9R6oe92PcgBXfn2NEAVE0RFoIxibiNh9GJueCDnfh9QQYwizVQeQnFG+ljN9npDkuW7Ys45hw/bZt29bSxrnXqosE87o999zTxrvwXHEv4FxEXIQCXNQNjh2OA1JxjzzySMvciNcMcm5wRuIcJIKGQCuUw0o0LhJpQhQADAVyza+//noTaElrQTE5+sCs6Fk2HAOMvOOOOy4rmoZRiAc/HvnIFd6DOGM5g7hhzgSJUENIiLrjRgnRsTPOOCMrxdENEmotKIonDYvjXSg8GsQ+h4YTYsBrqqozcMsZzimRK5qGhOIAY5+W+zQ6yoe45b7cfPPNozZt2qx95gf4G01p4gKuFGEM45q95557LM2RMdHHQo4DYyeNqRC0NZ0HXsvfOaaMfw5zFU4s6jTL4XjmA44h52jGjBk23iF6w/MEHHOcsqwlyJhZSIeVaHxkZQjRiLiByvpPiDNEWrw5CIMvkyLF2r/73e8sTUXRs2Qw+OgOR21LGNnCQKR5yLx58+pVM4HRwTlas2ZNhgGCWGCx3HwYl+UA1zhGCO3QSXFMEmh49fEo33jjjY2y/llNeCSCaBARA8eN3L322ss82iITFwgcNx5Do5N7yNvucxwbGsZPxspf/OIXVdEG37iXqVcNr7lShTmFDoysJRiPzHAOSHM85ZRTcjL4uQfpYBqOsX4v42AMsw1EbnANkkFABg2lDm4HhHC86dhME5HRo0dXtdgX5YNEmhCNBAaCpzey9llScxCMFgwLGhEQRRg2bJg8ZzXAMcFYprtemDqFAYFRTUOK0LjOFYTdU089lSXwMFbUer9++DmhIxwRtHiXuVCg0WY/DctJYDRhRNE+Poxys184TnbddVc5ThLgvBJBi6eI+jlGQDGm5Qs+O6njJucT50upiwrmFATApZdemtjNkeVLhg8fnrPjj+NIN9t4ih3j4+TJk02Ih/eHqB7GQY6bd3BEoLF0TNJcQ9dNXnPSSSeV/PI6IhmJNCEaAQbgML0RQ4GJLfRuelpD7969LUWFVCpFz2qHiYtj1rFjx4xjhSHGGnOrVq2qswHBe33xUAcDE2OFBhY6J3WHY4pAoxaJlLPQUA7Tr1gDLQ0GCfcmEQhqG+MpSBirxxxzjAmOfESDih2OF8ctHsHB8CRtK36vNjRcO56WHIoKxMtLL71koiU8n6UE34u55Y9//KNF0uL3Gdcs3RxrS3MM4VwxxtI1MzxvHE8cGKS1xkWGyMYdVcwt5557bvTQQw+ZWOPYhdcj1y1p3hdffLEt3B9P5xflg2YXIfIIAy8GC7nmLEqJSKtp3RPqzigMRghgtMoArB03PKhxwXh2MA5pmT59+vQ6GRC8D8OGzo5hlBPDjy5occNP1A7HH48+6bt0Lw3Frws0IpRE0PDyp8FjzDXA4tXvvvtuViQinzVVxQ7HisY9GKBJQpwoWhj1zgcYtNTvkoUQGrc4a1gvjfG4VCM/3Ftz5861NMd4qinzDEuXMI7Fo2I1wbnj9TgOwywCn9+SBLnIhLmEzBkch2QL0NU2XofukWbEMHYADg1+l0ArX2QBCpEn3BNPtyYG5erSGxmEEWVEzxBpnncuIZA7HC/qXDBC/Li5AUFRdigKaoPzU13r/S233NIeRe5wPEm9oosjxmN1Ao3U1LSk9GA4sc/XXnttlqGLscp9yn3L/otMuG/uuOOOLAOU80qKKHV8jXGOEdDelTAEhwHNLkLhXSrwnXCGnHXWWXb9hnMNxwMHCFG0+kRmGPdwTHC/hu/lf7L+3HPPPZchysUPcIw4H9TZYguQSRO/P3ws5O80rPI10CTQyhvNMELkAQZfBBktxklvpAtWPL0R4wGjFO8k9U8YMEyeSqWrOxwzjAjqJsLjx+ToIi1XLy+GBukoocGB8MPIoXhe5yd33FFB0TvXeCh4OKacsx49ekQ33HBDwZuEhHC9PPDAA9a2PDTmuWc32WQTW4dLYj0bH/fijVY41xigxx57rI1xjSFucdxQ2xtGfsBFGo+lhN9rtNuP1zh5hIY6NNIc6yOSGfdIU6ULYfh+/79/+MMfLHUvFIbljh8bRBnHHqdPPJMAGPewBRDBrIFGJ818R5tFcSCRJkQDg1HHZEXb7tNPPz36+OOPbVAOvfEYDhilpHexDlSTJk3M6NOgXH84pkRkQuOZSZJjj1ALje3q4BwhJIh6hkYOBgoTZ9OmTSXS6gCRTLzCpO5grHA+HM7XTjvtZIXx1F+kRaBhZH722Wcm0uKikija4MGDLd1RHu5scGwkNVrhnqElfmOmiCIkiKTF/x/jAE4Y7u9wTC5mfNzCEcJyLdx38euWFEecTHVJcwzhPQiH3XbbLSuKzDFlwWwEIiI9PPflimcQ4KhlvUcyBeLRTeD6pEEIjqo0ZROIdCCRJkQDwsRPzdn5558fjRw5MrH+jEmSWgkmU5oPaFBuGDD68fLyGBohLtLi3sskEBEYG++8806VEceGkUktR1qERDGAwU6DEIrf44Yb1zvX/RVXXBHtvPPOds7SgBu7999/f7WL//br109RtAQ8ipaWRiuIaJxf1KaFjhX2k0WtiWiEToNihnuNJiGXXHKJOUPCe40xq127dtaoYl2PP/ftoYceap0zw3vW7xtS9uMisRxhruH6ogad475ixYqsMdDTG3H+cd44rmnKJhDpQCJNiAaACYmJ8osvvoiOOuoo8ybHvWYYDaT6kGvuOefq2tRwYIhRcM0WHlPEFjVm8WhmEniESYViQg3hfR06dJBxniMeTSbqhFALHRWcJ7qWYsDQga++nv18wH4i0BFp8WgEBhULp5PuGBr94nsY/xBoSY1WOGakOjb2/YPBSwQpdIJxTtk/jOjQaC5WPPKLoV/dvTZixAiL1qyrM5BxFaH329/+NqvzsIt0skPeeOONjCh0ucB1hQ1ApJZOtYxx8XMCfhyJsBH9xGZgfGksB4YoHnRFCLGOMBEhABiYGWxZ3DMpcsCkRrcmPI3KOW94OJZ4d0l5DL2RnAc6unF+4qkmcTiPL7/8cpZw5vNY/FXGee0QncBAw2isrlHIaaedZmsFpuke4DohCnHrrbea0RteK5z/HXfcMfr1r38toZ4Ax+7zzz+PHnzwwSzjnOPFOk8YpY3tkGI8IEU5HqnFmGY5iLjxXGy4MCKdmHsNoexwr3HMaRRC3WdDXbfcC6Qp//73v8+KzHFcaVzC+cbZxbVQKtHKmuA74tRB+JNBQ6SRyGZ16Y1EzHBakB5KM6pC3BuiOJBIE2IdwBhhIsJzSP1ZkgeRQZnULjyMFAV790bR8HBciVDGjy/GC+emJqOMc8brSHfkZ8QDGwI7qQ5DJIMomzVrljkjkgx2DEbulTQdT/YRI+vRRx+NnnnmmURjl455OFpkTGXD8XrllVeyomg4NajfK1SjFf4/11vcucI48OKLL2bsa7Hh1yz3Ge324ymGfq+x9EtD3muMiThXaIiVJP64FqjD5h4nzTxei1pqcA2RNcBacaeeeqrVlRFNQ0CH54Pjz7EiBZf2+9gDaarFFelEFocQ9YSJhwkI45+JkMd4ihSDMuuf3XTTTbaIL0beuqaciOrh2HrzkNAowXDwtvrVgceTaFu8VoV0PBZyxTARNYPxiyf97LPPzoomI5wxSkgBiqdKFRoMLcT5Nddck2VUci3tvvvuFkmVQZUNxwoxPmbMmERRTsSApiGFELf8T+p/qUsLxwPudYREMYs0xjKiNXROjUdsuE5pt083wXyk1PN5fC7nnOMbT1lm36j7Y14kBTZem10KcO1w3FetWhWdd955lh3AmpyMe+E9wM9+vJhHJk6cGO26666qRRc5IZEmRD1wwwRPISmOGPZhzZMLtK233tpSUWhoofqz/IMhhhigq1soAjBgSL/BeAgN8BCMCIR2eB4Bg4fW/op+1oynC9ZUG3P77benznvsKWOkHiEwQ8MdI4paHtqLK5KaDPcUUTREbnjsOOdE0WiIUKi6Q/4n55B60nA8YAzgGkU8VDcepBnuLfb9oosuyrpm+Z7UAFKHls97jc/l8ydPnpzV/Ifxk+viyy+/jIYOHWpRtaS1wYoR5hK+Bwui0/gIpyALt/Ndk+YX5nxSbkkBpbEKmR4qdRC5ohlHiDrCIMwgPWXKFJuAfHB2MOQwSligGq+ZL0opA69xwHiIr4/EOeMcIdRCj3MIhg/RtlBcMMGSnkKDCwns6sEo89QrmuLws8N1z/VPlzNvFJIW2G+cLThS2O+wfg4jCmOKmh6lJSXjYyF1OEnpdgg0OmKGAqmxQaQxHoTnj/3kPse5Vt14kFbcqTBkyBCLpMXnHu41FkT2dvv5hHNMfTXRvKSIGuLRUwFJj2RZGlIBuc+KTRxz3BkrEGcs1k5q49ixY6MPPvggK2sAuOY5F0Th77vvPutyS0SXeUkCTeSKrEYh6oBPkKx9Qpv9eMQAQ56BuVevXibQmMAK5UUuVzDGEAPxVBKMMYrrQ6+z4yKOdMe4V5rPYmKVyK4ejllN6YLUrmCkpc2DzDnnmiCKlrTfRAgOP/xw+1lkg7E9derUrMWTuW+IotENs9DjH+NAUl0a40Gx1aW5KL777rvNoZSUXvrLX/6yQdrt5wpjY+fOna3OivuFfQjPt+/znDlzbEFn0gJJgVyzZo0J+zRH1ji2PucTCXzsscdsHON7eGpjXOTz3bnmiZ6dcsopVqPG9Ze2FG9RHMjqECJHfLCeMGGCRdCSBBopjaQ/skA1tWgy7hofF1aItdBY4FzhxU0yyji3RNn4e2ioe1ROUZTqcSMMgVZdumC+amPWBfaT/SU9M17T4/tNmqPSlJPx8ZC0ungUDSMVgbbVVlsV3DDlXNKsKe604fxTl1YskTSOL8cZcUYDqrhTAbFExBfnIfVOjXXcXZQwTrJfpIYjEMN7xiOXpGh6gw3Ezm233WY1XUTb+Ht4DRUSjisOHLJk5s2bZ+KMbrTs9+zZs6tq7MLjjyBmnqBzY/fu3S11nrGF7o1y1Ir6IpEmRA4wkWPIka5xwQUXVE0qjgs0CqVJ/UCghel2ovFgssQgow4lNBQ4h88++2yiSONcEkULzykw6VLfJpFWPURT6IjIFqYLeupVGtMFXWBgVFaXMoZBxjWkc58M55r15BC64X2DOEhLFA04n+3bt7f9CveF8QBHW7GINI/6nnnmmYlOBa/55LvGBWm+4bjikMQ5RhkAS814k6zwmCNquG4QP9OmTbOIFOKHyB91jaFgCwVQvvGIGceY/7969WqLEPtSIYwF77//vokzXhMXk1xjZAlQn4Ywo0ss94AfAyHqi0SaELXAZIhBd8MNN0SjRo2yQTw09Jn8GYwHDRpkhdzq2lR4MKzjETDOI+ulsTEhh2AUEEkLjU0mXoQ2n1PoaEBa4ZiyphgRp6R0QToisphwmiLK7CNpYqQjs4VRIAxKhMV+++0XDRgwQB7wamD847yzLhrHz/Hjl6ZFv9knxmPES+i0YQwgTbMYRBrjEoKS+SWeweFOBSKaXvNZiGuW/8l9Tt0Vzo9hw4bZ2Mn+sI8h3IN8B0TP/PnzowceeMAWf0YQ8T0QSAg2MhsYV3htQ4s23wfmdv4P+0HEjOgex5H7f9KkSbb+H6I4POaOH/tmzZpF/fr1s6UQWMCfaJqcO6Ih+FHl5JSO+LIQKSQUaGz8HE7qTP4INFJMTjzxRIumyaAvPBjhTLB4QjEEHNKeMCDCRYkZApmI8YIuW7asSsAxyfrES/MQkQnHDePluuuus7b63Bs+nXBfUI9JMw7SfdJisLB/XBvUkxD15toIHS5cEzT8oQEKjRBkaGXj5x1jmshN/LyT7sbxa926dWrGQs4zEV3EQCgqEZKkD7Zr1y5LSKQFrk/2n+uV6zasQ0MYIRIOPvhgW+YFB2EaUnOZI4mYISiJkr300ksmtpKiUA7fhX3HMcbGvYhwY+xl8Ww6JTN+8xquK84Xj7yPn8Pzx3P+fxBjbIzrbOwbG8eVyCT7huOO64BH9htBFs7zcdgHxgaOPWsAMqdw7NlnjRmiIZFIE6IaGKRzEWhE16hDU+1KeuA84Y0dOHCgeWQdUlJOPvlkS0lhUgUm63feece8uKS5OJxbvMEsYsy5FZlgyFCfgSGFceP3BgYSxxbDhTWyMGTSAgYYDQy4LujsF3rHuZ9JU6bT4y677GIRAJENx4yoA+edTnfx8849Q0pemu4ZBAKd+EivQ2A6REAQlHTgS6NzDVHB/uIEpM17GK3meCMKunbtat+BCBbXcJrgWkFUErFkLTHGWX7n+doiYy7GEGw88t0QaTvuuKO9H3HE/cw4Te0j4hvRDYz5HTt2tOvUBRr/mywYUi097d03Po/r2B10SXC8Q3F2zDHH2D7stttu9nvajr0oERBpQohMKgftikrDs+LSSy+tqJz8KioH4IrKQbpqqxyoK5o2bVpx2223VXz11VcVlQP82neKNFA52VZ88sknFe3bt6+onFirzlvlhF9x0EEHVaxZs2btKysqKg2fikrjraLSAMg4x5zfyZMnV/zzn/9c+0rhcHy5PwYNGlRRKXwzjluluKno1atXRaWhlKr7otKgq1i6dGlFjx49bB/Dfa40AiuaNGlScd1111VUGnIVlYbd2neJEM77F198UVFpoFZUirCMY1gpGCr23HPPipUrV1ZUGr5r35EOOPeVIsfOcbjP/M7z/D1tcKy5FivFpc1BXKPhvnO8d9hhh4oXX3yxolKgrH1X+uBe4vgy5jKe/upXv6qoFFN2/cTn1do2jgFzb6UoqqgUZzZmc2wYq5s3b17RokUL2/h8/5m/8ZoNN9zQ/idzQPxY1rQxf/A/eT/He/DgwRVPPfWUjX/MDZwnIfKFatKEiIFHjajZhRdeWG0EDY/xlVdeaQXSeNEUQUsXpL7g8SRlLTw3lROqef/DtBu8qESCeM6pnJzt/dQm4MUVmeB9fvXVV62VNsfP4bhzP1x66aWpiiyzj6ReUTea1CiECCs1KGxpWyYgTRC5eOGFF6x1PT87ft5pOU5kI233DNchzWvi1yPjAY1PeEwTRH+IOM2YMcPq0IighfvocxBZHPGFpNMG9xL7RxSMyBPp49SCEm1t06aNRQCJWucyVnAMGHs4NszLpIESGWP8JguCCBob6ev+M3/jNUTROI6MBbWdb/aZ/WEsYA75xS9+YevS0RCE5Tr22muvqrqzMM1SiIZGV5cQAS7QEGfjx4+vVqDdeOONluIogZZeMBQ7depkkyiCjI1zuWLFCuvUhSHEc0zadCYMzzPvpQaC861JOBOOGUYS9T3cH6HBQ/rVvvvuazUkaTEcOb8YcyybQVts9t0FOsYY+0wHT/6eJmGZNrg/MHrpbovgDe8XzjXnnS2NgoF7uFWrVokiDeO9NqO9MeHaJHWPGimcCqQ7IkwcvgPXKXWgXLcInGJwKnAOXKwhes4++2xL0yS9mLRouiHyN4QR429jj7scV0QXx5Y6uB122MFqku+55x7bTxajps4Sccb30LwgGgNdZUKsBaPDBRoiLO69ZABngOZvffv2lUGXcnzCDY1JwCh799137XmEGrVJdPcKX4c487XWRCaIHo4fLbT52cGwIopCFC0t0SgXaBi7GL0Yvy7QAGMLMT5mzBhbF43zLrLhmBE5o1EI9UU+LvI8xioGNrWeOK3SaLyyTzjX2MLrku8Rfp80QJSXhhZnnHGGXbvhPcb34BjTROTAAw9M7fGuCY4/9xljBXVjCHuiU7NmzTJBhDCizgtBRJSNMZxxuKHnWj6P+5/9QJTx/w499FDrTIooe+qppyzqh6CkdpH90PggGhuJNCEqwUDHY4mxlpTiyCSBEcffEGjFODmWG4gGIjpxmJy94QHb4sWLMzzVwPnu3LmzRFoMRC0i949//GNGEwMgIkVKEBGLNBw3jFtS2TB2SRsjghbuLwYajUJY+1DrGtYM9wdiZvLkyWuf+QGMbtK/aOiQ5vuF+x6DPBy3/XoOr4tCgkBjgW1S7ZNa7eP8oMERTTiKfQ7iuuGcMG4QQSP1EcGGMHKR5K38EW6MK23bto2aN29u4g2HKeeTY0I0kc/hHvaN39n4GwILgc77EFzM5XwegowIGf/HRRmCEZGI44H38FlpcDiJ8kTdHUXZgxcVgUZ+PwZbdQKN2gBPcZRASz8YXu+9954ZkNQrMNQx2TJxk15zzTXXmJFw7bXXWht5zjvwGgwB6iaYrBF74nuIRP3pT3+yqImnDXK88DDTah9DJw2t112gXXHFFdHDDz+cJSi5pxFmd999d9StW7eiSRkrBIyPRHRYzgKRFhe7GLPPPfecLV2Q5kgDYwA1h+yrO2W4TunsyL3OPV9IXKARJWPNxnhaLtdor169rNU+126pO5C47piHuZc5X+5Uo0sjj9zfS5cutePCmn1sXIsrV6609zNnAym6jOMILqLBnG/qEzn3XK++8TvzgRCpApEmRLlSORFYd8ZKQz2xg1blRGhdo+gA9vXXX6uLY5FBpzm6+YXntXJCrqg0zK37IB3H6Pb44x//uOrvvLZz584VlZO+uvzFoKNZnz597Dgxffi23nrrVVx11VV2jxQaOslx3ukiV2mYZd3TnOtKIVkxYcKEim+++UbnuBa+/fbbittvv93Gx0ojtuo4/tu//Zsd3yuvvNI6PqYd9vHggw/O6OzJ9+nQoYPd64WkUqBVLF++vKJ3797WgZBj6/vI9l//9V82jlUKlFR2omwsmK8rBZsdg++++87uX+bvL7/80s4v45Nv/M7G3xiXeD3v4/2650WxoHCAKFvw1BE9wTtMFI2fec7BU0lKRZjiKE9bcYGHlBQXvKQO57hy8jbPNZ7VRYsWZUROeS11Spz/SgNp7bOCY4R3H0925dyx9tnvITqJlx+vdiHhfBKNIOL95JNPJtaV4kUfPXq0pY2lpXYurRDFIO2OFLCk9FYaV1DvR9pZ2iH7gZTMMAuC78O4H7+eGxOP+jIHxRvbAOl2XLPMQ5WCsuQjaDXBuWN85phw73oaI/M0KZOM9b7xO1uYFsn7eL/ueVEsSKSJssQF2l133WU1K6Q7hoY6xr1q0IofRDV1aaG4xgCiDgWDiIWNac8cGp+ce+/sKH4AUcv9glEZGjkcW1prs6BsoZwYnFNSMak1PPLII+28JqU4YrTR+KdYmy40Jj5G0oUPEeEpgoChy8LBv//9780ALgbnFeea/YzvK9dOoUQax5SxiI6ZpFzGG9u4U4E0fMYkRIYEhhDlg2YoUXZguGHAUatCzQqTZGiAYJzjnaMGTQKtuMGYxJMaF1ycb2pUaMcfnnvAMPJImvgeDEc8/NOnTzdDEjAWMXg333zz6PTTTzdjvRAGpN/PCDMiaAsXLkw0dhFoEyZMsIgfXnXd0zVDVJJ1oeJronGOOX6/+c1vbI2uYrlP2G8iL3G4TnDSNbZQwynI//3d736XGPV1RyERNjrNqm5SiPJDs5QoK9ygmzJlinXQSoqgIdCIoOGRlzFX3CDS2rdvn+U9xxiiqciHH36Ycf6Ba6BHjx72XvE9HCOOF1t4vDDQWYuuUE0jPNqDkTtw4EBLXUVQuMGNUUtaHo0WiAJ27dpVTpcc8CYWSWmOnHPSBn/7298WlXBgP9ni555rhWso/I75BscQcw/zDHNR/Bj7PISjUGm5QpQvmqlE2RAKNFIc4xE0jHKiAUTXtA5aacD5w0CPCy6EBlE0IkOk7zkYcB55kyH/AwgfjlVSvczRRx9tQqixjUjuXe5hUsGI5CEqkgQadTwsmOsRNBm7NcO9gWihg2dSmiNj5DnnnGOPxeTI4H6m7Xr8/DMvNGYkza/b888/v2o9zlCg+TGWo1AIoTtflAVMwBiYtAgn/786gcbEqTb7pYMbZoi10DjDECWKRmpcGBlCnGHUFyIqlGYQP9TMEGFxOKYYkLvsskujp7yxH9QScr+OHDkya9FfzjVRnm222cYWyCWCJmO3dhALjJO0eWdB5aQ0RyJoRJqLJc3R4dzjeItfA8wNjSXSXKANHTrUUm8Rw+H44/MQc5QchUIIzVii5GHypUaFtWeY/OKLhDIxMhkycZ544omaGEsIDEvOJUItNM5Ik1uyZIkZTaFxhuFJxzqJtB/AiFyzZo1tcUFLKlbTpk0b7X7xe/mjjz6yKMP48eOzUpbZF5wsCDPqThFqquepHT+2M2fOtEV941FTopLUoLFeWrEK3qRrwL9j+F3zAXMOzgTmGdJzEWhhDZoLNLI8WCtNjkIhhEYAUdIw8eINplaFVtFxgYZB5wKNyVECrfTA+PFomuMpTmGaESA81DQkE4QsDSTC+wYw2omiNVbbfQxaUsOoi0Mcvv7664mGLvcwKZhE0GhqUohUzGKE8/uXv/wlGjZsWJbw5b6giQWLvhdbmmMa4Ngy97hAqy7FEScir9E8JIQAiTRR0pAWtXjx4uhXv/qV1azE07WYDPFaukCT8VF6cJ5pY52L0cP5p4ZNBtIPcM8QRQvvHURPY0YdEQwIMlLEiKDRaj/ewZH98EgE66BxHqmZE7XD8f3ss8+iiy++uFpH1nnnnWdNeIrZgZEULeNa9i0fcN8w95Cam9QkJBRovuac5iEhBEikiZKFyRGDA6ON9KiwvoI0EtJJMPiYHDUxli6c63i6YxIYo7Rp32yzzZRmFEAk7dlnn81KKeQ4NWnSJO+CFsFAHc+YMWNMKMTvZUCMcY7phkdLczrjNYZ4LAW8Q+bdd99t7fbjYpxI6RFHHBH179+/6NNGEUhxuNeJEubje3Gdcr3iCKxOoCGAlWovhEhClogoSTDsyP9n4osXwLtAI2WKTo4SaKWNe8lrE15cAzREwLgvZkO0IcGA/9vf/mZbPP2NtZvyGVXxVGWMXLo3ItLiDX84T6QzEjW7+eabFYmoIwgGas/ofsnx4+dQRCB+aaQzYsQIGzOLWUDwvRCZ4fcDxgXfGgquXSK9NS2u7pFfnApKtRdCJCGRJkoO76BFiuMbb7yRUQCPUUfR+/7772+LhMrjXvpgfGEM1WaEITiIDul6+AFE2ttvv50h0CDfqY4Ysxi1GLcDBw6MJk+enFUnxfnkXmaNtkceeSTq3bt30QuJxsSFBI1CaAVPNC0uxL0OrRTGSa7ld955J6OGEZgTGjKSFl67Bx54oNVDJ6XmckyvvPJKpdoLIapFIk2UFBgZGBssVB0XaOAdypgcqVMq5voKkRsY7e3atatVpPE6am5kLP0ADo8vvvgiI3oFGJkbb7xxXu4fT7/zBaqTohCcKwxb2pQj0BBqarFfN0hrpMPpmWeeafVo4TnmHsCxQR1V586dS6K2j+9HVDb8nlwviCWup4YQaVy7XKukNnLtVlc7yf9kHTQa3EigCSGqQzOaKBl8gsQrzJpOSQKNSMldd90lgVZGYHxhjNVmhGEoUZMmg+kHcHq89NJLGREWjiPHaKeddmpwUYQBTRSc1vqkOHr9WZKRe9JJJ1mKHve0OjjWDW9mQXpoUkMlIpIcf1L1SmX5Aq5huleG1zLXcUM5ZtxBSHMbaifjxxWYc6idxEmoddCEELUhkSZKAhdorIvEQqz8HKa14AmmboW0KYw6dX0rHzAwfasO/pYv4VHMYHhS2xkathwfnBwcr4Y6Vogwrz/DwCWCg1ijttThHHHfIqS5x2kSsuGGG8rZUkc4pjRUQqDR+TapUQhNQhBppZI+ylzA9yb1MJwXEPwsucHjusBnc59cf/31du3GO2SCz0FXXXVVdNRRR9mx1VgjhKgJjRCi6MHAI6WEtCc8lPHaFfdeEkFzr7soHzA8N9lkkxpFGoYoBhTGmgynHyDF8NNPP81KNXSR1hC4g4X1zxAHvkB1PC0N8YBBTRfCgw46SA1C6gHHlPNJR1sW94+n4nk6OM0sOC9EhjgXCLlQ3BQbfG9SEPke/n1d9LPoeX2FvjsXaKxD1LGm5jbMPVy71KmpdlIIkQuyRkRRwyRJWiML29IIBAMknCA9NQrxRm0Fhp4oLzCSuEZqEl8YTETRZPRngjjDUI+LNFLEGsLIxJmCCECYIdAQavEoOOeNerOePXvaAtXeIERium4wLiIg6Gj71FNPZaWDI1gQ35deemlVp8wBAwZY45BJkyZFy5Yti1atWmURI8Qd5y58f1rh2uWaeuGFF2y/Ha4fFjtHpNXnvnfnAnMPwovHmprbkILfrVs3XbtCiJzRSCGKGgwNus9hTJAqFaaYMPHibce7Sbt9JsuaoimiNOGc+zpp1Z1/POk0wljXtKdSAuMWQxSjPDTGEWe5dMusDU8RQzSE65+F/8vvYSJnCAeMXRwtMnLrhgs0Ogl6vW4ovLn+EWg0XDrttNOiBx98MJo6dapt1157bXTqqaeaSCZadO6550Zjx46N3n33XVvkHBHP56dVsHGdvfrqq9Fzzz2X4cBDlHbs2DFq3rx5nR0OfjwfeughaxCycOHCLNHLNYogY+7x5jalUt8nhGgcNNOJooXUFbpnhQLNJ0kmXYqyqQ+gQFvey/IFo4hrgZTH6uB62X333RVJC8CIxwESGvMOx7S+xib3KBEN7l0M3DvuuCMrRQwQDtScIRyoQSMdFcNaRm7dcEFBiiMdMxFVYaTS08GJoL3yyivW8MJTHBHNvJ4On59//nn08ssvR/fff380fPhwEx9EP4m0zZ8/3/5HOAanAb4n3wWhSdTLr2WuIQQT0cK6pL/zfo4HDUjOPvtsm19qcy5Qg6bmNkKI+iCrVRQlGAOkNg4bNiz68MMPswwDomYYECeccIIEmohWrlxpW3UQQWOTSPsBDFxSt8L0rXWFz8LIJTWMqMz06dOzRAOGLAYtogxxNnjwYDUIqScINK9Bo6lSKFSAax4xQao4aaS04mdsTYIxlvOHwCYCSuojog4BxFhLhA2xxt/SINb4/0S37r333uitt97K+F5cS506dYp22GGHnK8rvjuC75lnnrF1NhGrfNfqnAs0tqHTsDoJCyHqiyxXUXRg0GHYMQnSHjw08ABBRlSENCq1OBaAUK8Jrhl1dsyE+2rp0qWJkbS6gsFMZAajlg54YYpY+Pkcf6/hIUWMSITu4fqBKOF4jxw5skqghWOlR3sYJ6mp8vXCcj3WnFMECsLlgw8+sBRJomuINdILv/zyy4xGHY0N0a25c+dG11xzTUYqIt+PawoHXy4p8FyfHvklaojTgJ/57nHnAtE5ombjxo2zJSLkXBBCrAuySERRwYSJscEkSLcuN/J8osXIY+HiP/zhD2Z0qMZIYJwh0lq0aLH2mUy4ZjCmMFol0n4AA5QUtrgTBDimuRrf3J/cp4gyxBkirbYUMQTadtttZ0a0zkndQRwhkk488cQaBRoRNm8HTyrpkCFD7Pm6Cgs+m/9BjdoDDzxgkTXS0F977bWCRNb4/rTBZ6FuruEwGkyU9rDDDov22GOPGr8n++tC9/HHH7fvQ30zojT8Lvzswo/GIFy7RCXlXBBCrCua/UTRwGSIR3PWrFnR6NGjs1J3mHzbtGljAq5169byYIoqli9fbjU1SWBINVS3wlKCe4tUubhI43ki2bkY3V4P9cQTT5jh/vzzz5uRG0+h5F7FqULrdy1QXX84J4hfRDDii3TSmgQaIs7FBOeADARS9BhHmzRpYiKZ1+d6Hvg/jNG0pKdRh6dBIta4Drgecrlu1gUXVtSbLVmyJCPN0TtYsk81pcF7Wu6CBQuskQobKbrx1FyHa5f/R/dRosByLgghGgKNIqJowDvKpIt3NG7oETFjomQttB133FGt9kUGdHBDXCQZiBihDbnuV6nA8eI+Cx0hwO8Y3PHnQ/ibp4iNGDHCFkbmZ54L34fxH9afIdK4j+VgqTscVyKWb7zxhtXi8hh3ZPk4STMWREUY7UFUIFxIfcQRhrPr2GOPtYgmoo735irW+J+IRRqOEFmj/pBmI/PmzTMBla80SAQZETS6WMbXgeP+5vvedtttUcuWLROzLDwiSJ3z7bffbiKTKFo8dZPj4FuzZs3su1188cV2Hcu5IIRoKCTSRFGABxavPgKNSTj0jmJkMPmSRtWlSxe1ORYZ1GYMukhTJC0TjltSxIzfaTBR3XF1Q5coDkYu3Rs95S0EUUDEgXWqiEBoger646IYcYUgRqCFdVjgAo0mIWEELcTPSdOmTaN99903uvrqq6NHH33UBAjt6l2s5YpH1kiDdNFDVIqaNQQcQi4UkfWF7+kRRDouxteB8zli6NChietl+jW7evXqqv3EuYBjwVPqQzgGpEjvt99+0bRp06LjjjuuzsdGCCFqQyJNpB4mUIxFWhlTCM5k7Lj3l1oXPMAYGBJoIg7pjtWBAUe6o8RBNklCDIOV5+OGqxu6XpfEPZm0ODW40UztDgJNi/zWHx8fWayZ9eYWL15sY2R47ohM0mYfgXb00UcnCrQQzgOpgQgRUsepVXOxRirkRhttVKflEPzaIELFwtiIILZnn33WukQSmUXE10ew+fefPXu2XXPUKvO//LP4nj5HIBB9juD4eFqjizManxAVo0slUWScgyEuYlkEm/mI65z0Ro5TTcdTCCHqw48qB6pkd6gQKYDLkwmXRUPxkDKZu8HHRItHFEOP1BwMBxnaIg6GGOsasRgvxlgc0pUQCkQOdP38AClev/nNb6y2KHSMYIxSu0SDBNJIuR8xsDF2H3vsMeuAR9SbCErcyAUEAyIBo5naIKU31h+OL8ed8Y86XYQF5yKc1r0OC4Hmi/rXR1BwH3EdEFkieoSoIX2R39mPUGAlmRWhoONnzjnjNwKK9Mzu3btbVJV0QTbuxZpEO/+P78p3vu+++yzqx89hWqI78ajPoxswQpXPZX+5Pt9//30Td2RhEB3mOb5n0v6zv3wWDUdoTMUxZT8lzoQQ+UIiTaQaJs05c+aYQUcqS2j0MUFus802Zizi2ZShJ5LA6Jo6dap1Z0sSaSxyTf0KdSqK5PwAKYoYo4gu7kMHA5tjxn258cYbmxOFxiBESFg3i9+TxBnv457FuOUz99xzTzN6JYzrB2IEpxXRrYkTJ5pY41p3ON4INOqk7rzzTksFR6Ct6zWOOOJ/c54Ra7TepzEIv3s0rCazIhRrwPln7Gbftthii6hv376WWsn1gYjjO5BG6PvtTgHEIdcb1xLroPF7+P0RT3xmr169rFaZa433ci0T4R0/frw1sqGhEOIz6ZoF9o/9QOAhBHv06GGfpflGCJFvJNJEamHSpCaAonMm1dCbz8SJ8UEEZJdddsmqMRDC4ToirQqhTypeCIYfSzZQy1Ndi/5SxyMSbBix3FsYxhjiRLpI6UIAhCDOEHAsEM6xIxqRFFFx+EwM5p133tkiMN5gQaK47jBlMxZ+/PHHthYXKeAce88wABfEHTp0iO6+++5o6623tjEyLpDWBb9u+N/vvvuuiSVqzRD31QmekPi+8LsLNvaVNEKalvzyl7+0dGSEEd8dYYooI/0yFIehKcPnEK099NBDLQODz+N9t9xyi63pxnxCmiXHMTxuIYg8jiG1ZtRCH3HEEeac0HUrhGgsJNJEKmHiZFLFSJwwYYJNxH6pMkH6xMnGZNyQxocoLTDgXn75ZauBoTV4CB560hwR+zRLKDcwprm3iDQ++eSTZmAjwFjolzb4HBcaKPB8CMcNY5r71LckcYahy+u4X0855ZTo1FNPtZ8RgaLuEClCFBH5pU4MoYbQCKdxxkcXxLTTR6ghLPI1RvK/XawhGEkdJEXWr4tcCfePn/3aQXDxnXjk2sHRwnXLxueH393fhygjgkYqM9c39z/Hif10YZZ0vQL/i+PFvEJ3y1//+tfRVlttZZ/JPgghRGMhkSZSCRMrdWgUwsfr0DBA6ATHekrUs2jiFDWBUXb//feb4KfOKgRjjM5spDFR01hOYKRSw0OtDo4Q0sC4zxBgpJ1RX0a04ZBDDslIE02aMpIEAMYuhi4LBxPFZGkM7l3dr/UDgcH5omEFNWhEN4l2hiBQiDhRe3bFFVdYih6COOn8NDQu1nCEkIZIV09SYtlPnm8MXKR5tIvr2cVcdaLM4X0cK65RHDekkXL8XJw1xjEUQogQxexF6mBCp80+hjMTvAs0wLNK6gvefQxAGXyiNjDOaAqQZKRhyCH0eSw3iMpgTFPPhHglEoLRzz1HFz7qmLgX/f7DCK/Opxc+jzGLsYvoPfjgg01U0BSCKIju17rDdYvTijQ9xC7por5uVwhjI10GSYFkzbnGXrPLzzspgXTaxclGvfDgwYOtwUxjiEWuQ65XjheClmsakVaTQOOaZC7BMUF65NNPP21pkXSxZGzAaSGBJoQoBBJpIlVgODK5nnXWWdYhjgnW8cmUFsl4ODFKhKgNDDSMxCSB4dGecjTCEGCsZZZUl8Nzf/zjH6N+/fqZaKtOnMXheBJ5oKEPtVCk2yHWuFdl6NYdzhGppjRmITpGm/2444rjihhDlCHOiIwi1go1PnINsD+kzdIJceTIkSZ8Tj755Kht27YW6SNq1dBwHHK9xphLiJiR4sw+Md9Q44Y469SpkzqOCiFSgUSaSBWkXDFR0owAQ9Fh4mdSZZ0bun5hBAiRCwiMZcuWJQoNjDquLbZypDoBhrOEvxGxCR0lNUHEAUFGNIJatj59+lRFIkTdwLHAWEjjJBanZtxLWljZ0xtpsEHUishlWiKW3FsIHa6BHXbYwZxrzzzzjI3vLOGAQGJMz1VYVUeu4syFWZMmTaxJEHWXpI0y1/Dz9ttvXyXO1nWfhBCiIVBNmkgNpO+sWLHC1rOiriFsp4x33he+1Xpooi5Q03jOOedYl0KM3BCMMtLxaA6AAVdOcL9Rd0Yzjy+++KLGaFlt0wRCjAgEHR9pWMGxVJpY/UAUk6734osvRpdeeqmt8Ydgi6fseWYBXQfpYNiY9Wf1hQgg1x0OOFKQaVbDmD9z5kwToR7VjV9v/jvOlFCUhY/xjddyjBCyXItE9mgexFpstPhHJHq9Wbk6aYQQ6UYiTaQCJmbSephEaauMUeIwwXqnOdrtY4gIkStEg/Dijx07NiM6Cwh+F2nlFp3F6OfYsMSF33M1TQfV/Q2DmEY+l19+ubV6b8w6qFKC88H1SZr3NddcY+l3iDVSHsNjz7FlDCRiRjMc6tQQa8UWscQJx4Zo49ojckt3SL4va2IuX77cvhMLTvMaRCi1knx/ooc8z/cmXdF/pjkN657xGn7meOI06Ny5s0XI2Lg+JcyEEMWARJooOFyCGCMsiurdHP2yZCIl2jF69OjomGOOsclZBqCoC0SJWMiaNvMYeyF41+kSSgfCchT/HI/FixdHQ4cOrVoQOF6f5iRNFdyLGLykkBEVIZomJ0rdQZgwBpIOiEBbunSpCZf4uSAqRJRyp512MscD4oPf81Hj1dggUn1DvPHdw2wKv/74e3gt+nwQRtnY+J3jwvUpUSaEKEYk0kTBwUBhcVGiaHhKwxoY0lGos6COgWL4UjBGRONSk0hDXFCXwoK55dgogOGfY+LRG9a3ItXYO+Lxd+45Nn73mqj4tMF9yrpUCF4aWJTjsawPiBCiPXSzJRKJSEOscfzDY4zoIKpEtOg3v/mN1agVQ3qjEEKI+iORJgoKBp8vWk3LZgwUB6Nk8803tzTHbt26yUMv6gXdQjGAb7vttozrC6hL4fpiXaRiSxdrSBAFRG5IMXvjjTcs3YxmKzRYIALRsmVLa04xe/bsaMyYMXZMw6mD1xDRofU6HR0L2V2wGODYIY45jrfeemt03333RStXrrRzwJgYgkBGBLdr185qK/fbbz/LKCjn61UIIcoBiTRRUDBKpk2bZnUV1KR5eg/eYU9zPPbYY5XmKOoNxjANMog+ECXyIQ/jFxHy1FNPWWe3co/Sclw8xcwjOWyeNsaGqDjqqKNMrBEBCgUFr+M+JaLGQsYu1HTf/gDHk8wBIpJvv/22iS4ag/B7mNoHYfTs8MMPt9cSPaOmSql7QghR+kikiYKBUUJHL9IcFyxYkJGKhiHCAri0laZuqNwNaFF/EBI0yDj66KOj119/3a4zDGAiPyz8S2c8mjBITNQOx27JkiUW+aZ1ebxbpkfUWCZj1KhRtvC8Gol8L84Qvhyvd955J7ruuuuil19+2SK78cYgwHin6JkQQpQ3EmmiIHDZ0c2LFDQWOw3TpyjypuseAg2hhpEnxLqAuKDlNws0k85HdGLvvfeOjj/+ePuZa07UDvcoooLa0b59+5qThWMbTiMINQQGXfVGjBhRUs0t6oOnkpI+ynj35z//2cY+jmM8tRExS/SRa5JmNoqeCSFE+SKRJgoChgvRs6RmIRgoZ555ZnTWWWcpwiEaDK4xBAWPbgxT56gobd0hIkS7dFJIiazFlzbg+HJsSVm+7LLL7D4nElROjS64zjgu1JrdfvvtJs74meeSOmjiKEDM0jr+97//fbTHHnsoeiaEEGWMRJpodLjkaBZCC2mMl7CZA4bzlltuGT399NPRFltsoQiHECmEe5joEO37SSOl0QgCOB4ZQmAgPIiqXXLJJdY6nt95vlTFWijOqM2jqygNWThe8bozwEmAeKU5C5HdU045xZxTjIWKngkhRPkikSYaHdJ8WDyXRXTXrFmT0SyEZgM33XRTdOihh5oXWQiRTlyo0fiCur6XXnrJImxJKXyIEO5numgSIafWipRInDClINY4Fogzjgfi7M4777TlDFycMcbFp1oEGEKM49KvXz8TZ+FxEUIIUd5IpIlGhcuNLo40HnjggQfMgHEw5HbddVerRWP9KnmRhUg33M84XVjna9iwYdHMmTNNqPFcHO5n7nGiREOGDDFHTNu2bU2UFGtkDfHFd+U7z58/Pxo/fnz0+OOPW3aApzXGp1i+p0cYd9ttNxNnu+++e8lHGIUQQtQNiTTRqJAS5VE02qF7FA0DjmYhLCy8zz77qFmIEEUEQgVhgkg79dRTzRHDve73dwhRIsQatafHHHOMLVbPEgiINZ5Pe40gU6anNK5atSqaPn169MQTT9i45t0ak743IML4nltttVV08sknWwSN46DURiGEEHEk0kSjwaWG8YYRx7pVYRQNUUa3vXvvvdfEmgwWIYoL0hy9xTzR8Pvvv9+6GFKHlTTNeC0WESREGrVtvXv3tgXGGQ8QLrwmDZEl9p/vgTBj++CDD6K77rrL1otbsWKFjWUIt3iqp+PibJNNNokGDx5s4oyf+Z5qXCOEECIJiTTRaOBhnjdvXnTAAQdYLZobNAgy1kIjitanTx9F0YQoUphOECuIM0TaPffcU2PTDPD0P+57BBuLYXfr1s3WWtt8881NyPF3jzY1lgOHaBjfhYgg23vvvWeRwieffNKEGWLNo4VJ06h/LxdndKz1Wlu+q+rOhBBC1IREmmg0PIo2adKkrCjaIYccEt1yyy2KoglRAiBcEDGffvqprQ3GPf/555/bc9WJNeDeR9ggzNgQadtss020//77myOH7pCIGzYiUDy6cAu3XKNvTH84i9gnHnEkMTYhvli7kRTGhQsXRk899VS0evXqKsFWXXQQ+P98BwRnmzZtLHIWijNFzoQQQuSCRJpoFPBI41Hv2bOnGTtJUTRq0TDMhBClgddusZA4y22Q5hyKtZqmH4QW4wMRNI+kIco23XTT6Oc//3nUvn17W4eNjoi8joYktLHnkS0kFG3h/+TnpUuX2pIgdKlkbJo2bZo9539HlPE9ahKXwL6xj4gzFuGn3o7MAMQZ45rEmRBCiLogkSYaBbzS55xzTvTggw9aKpSDZ1m1aEKUNqFYe+ihh6zRhtdyEb2qrpYrjgs3j6LxyO/xjdfFo2k06AjHHuD/JkXSfFqMf0Yc/o6AZBxr3rx5dNBBB9l4RpdaxJmnaAohhBB1RSJN5B1SnzDI+vfvb22q3SONgYMwo25FHR2FKH249xFrdEWkPpXmG3PmzLHnEEeIuVwFW74Ip8QkkcZzCETGKyJkrVu3jk488UQTZvxMDZqnYQohhBD1RSJN5B2ML9ZEY2006tL8ksPL3KlTJ6v3oKObjBohygOPWiHO6Ag5ZcoUa2U/Y8YMe46/sVXXlCOfxP8fooyxyVMuEWbbbrutpTSecMIJFkFzwUZkL0nYCSGEEHVFIk3kHdZDGzhwYDR16lSr73CoJ7nqqqui4447zlKDhBDlh3dRxJlDTdgbb7xhXRRp2LFkyRITa0TgeA2vZctntM2nRMQW4ovIGIvr08CEmtrtttsu6tq1q9WeIcwQb0IIIURDI5Em8grGlTcMIcXJjSs8zqQGsZ4SaySRHiSEKG9csCHMcOh89NFH0aJFi0ysffzxx9bc45NPPrEaVxdsLtqYysJHqGl68wgZj17bxjjE77yfBiWs20aN2RZbbGGbR9L89UIIIUS+kEgTeYVUprFjx0YjRoywVEcH7/Sxxx4bXX311dGGG26oFCEhRAYutjyKxiObCzM6MDKm0OafhiS8nuffffddS0FcuXJltSKN8YZGIgitrbbaykQXnSHpGkkKNngbfaJpXmOmcUoIIURjIZEm8soXX3xRtTZamOpI233WRevXr595poUQIldcwOUjkqYomRBCiDQgkSbyBoYS3mzqN3h0wwkjiEVeZ82aFbVo0UIGkRBCCCGEEAGyjkXeIDWJBgBE0FygAWlEvXr1sjQiCTQhhBBCCCEykYUs8gbF/4sXL7bHENIbia4pzVEIIYQQQohsJNJE3kCc0ZktFGnUf7hIU+tqIYQQQgghspFIE3mDjmwvvfSSpT061KNtvfXW0WabbWY/CyGEEEIIITKRSBN5gRq0L7/80oRaWI9G9zQEGusNqZ21EEIIIYQQ2UikibyAMFu2bFlWC2xEWvv27RVFE0IIIYQQohok0kReQJyxEGwYRQPE2aabbmpiTQghhBBCCJGNRJrIG99+++3an36AlvutWrVS630hhBBCCCGqQZayyBtJNWc855sQQgghhBAiG4k0kRc8YpZUexavUxNCCCGEEEL8gESayAuINK89C1MbqVH75ptvsmrVhBBCCCGEEN8jkSbyAumMtNnfeeedM5qE0JJ/yZIl9iiEEEIIIYTIRiJN5A1EWteuXe3R+de//hXNnDkz+uc//6m0RyGEEEIIIRKQSBN5A3HWrVu36Cc/+UlVyuP//M//RAsWLIhWrFihaJoQQgghhBAJSKSJvEGa46677hp17969KppG9Ozvf/97NHbsWGvRj2gTQgghhBBC/IBEmsgbRM9Y0HrIkCH26NE0Uh3/9Kc/RTfccEP09ddfK6ImhBBCCCFEwL9fVsnan4VocBBmLVq0iN56663or3/9q0XO6Oz4v//7v/bcJ598ErVr186e/+677yzKhnBbvXq1te/n/Ult/IUQQgghhChVflSh7g0iz9As5KOPPooGDBgQvfnmm9E//vEPS3tEfFGvxrbRRhtFrVu3ttch0hBnhx9+eHT55ZdHG2ywQVUUTgghhBBCiFJHIk00CggzBNrQoUOjxYsX2+/xtdJciPE8Aq558+bRuHHjor333jujjb8QQgghhBCljMITolH48Y9/HHXu3DmaOHFi1KdPn2jjjTe2OrUwlZEUSC1yLYQQQgghyh1F0kSjQuojdWdvv/12dNddd1k7flIcqUdbb731TLSxEDaPhx12WDR8+HClOwohhBBCiLJCIk00OlxyiDW6PJL2+MEHH0TNmjWLVq1aZbVp66+/vv2tadOm0U9/+tPoP//zP9e+UwghhBBCiNJHIk0UlOouP6JpQgghhBBClCMSaUIIIYQQQgiRIlToI4QQQgghhBApQiJNCCGEEEIIIVKERJoQQgghhBBCpAiJNCGEEEIIIYRIDVH0/wEAS/P5fqBk2AAAAABJRU5ErkJggg=="
          },
          "format": {
            "$ref": "#/components/schemas/SignatureFormat"
          }
        }
      },
      "ObjectCardSecurityCodeResponse": {
        "title": "ObjectCardSecurityCodeResponse",
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/CSCResult"
          },
          "valid": {
            "maxLength": 1,
            "minLength": 1,
            "type": "string",
            "description": "##### Conditional: Returned if <samp>card.securityCode.indicator</samp> and <samp>card.securityCode.value</samp> are sent in the request.\n\nA simplified CSC check result based on the value in the <samp>card.securityCode.result</samp> field and the merchant’s accepted verification results as configured with Shift4 Payments. The value returned will be ‘Y’ if CSC verification passed or ‘N’ if CSC verification did not pass.",
            "example": "Y"
          }
        },
        "description": "##### Conditional: Returned if card.securityCode was sent in the request."
      },
      "AVSResult": {
        "title": "AVSResult",
        "enum": [
          "A",
          "E",
          "G",
          "N",
          "R",
          "S",
          "U",
          "W",
          "X",
          "Y",
          "Z"
        ],
        "type": "string",
        "description": "Identifies the response code returned from an Address Verification System (AVS) check with a processor.\n\nValue|Description\n-----|-----------\nA    | Street address matched, but ZIP/postal code did not match.\nE    | Error (AVS data is invalid or not allowed).\nG    | Card issuer does not participate in AVS.\nN    | No street address and no ZIP/postal code match.\nR    | Card issuer system is unavailable.\nS    | AVS service not supported.\nU    | Street address information unavailable.\nW    | Street address did not match, but ZIP/postal code matched.\nX    | Street address and 9-digit ZIP/postal code matched.\nY    | Street address and 5-digit ZIP code matched.\nZ    | Only the ZIP/postal code matched.",
        "example": "X"
      },
      "ObjectReceipt": {
        "title": "ObjectReceipt",
        "type": "object",
        "properties": {
          "key": {
            "maxLength": 100,
            "type": "string",
            "description": "The identifier the interface vendor can use to programmatically determine where to print a specific value.",
            "example": "ApplicationIdentifier"
          },
          "printName": {
            "maxLength": 100,
            "type": "string",
            "description": "The label that relates to the <samp>printValue</samp> field. When present in the response, this must be printed to the left of the <samp>printValue</samp>.",
            "example": "AID"
          },
          "printValue": {
            "maxLength": 350,
            "type": "string",
            "description": "The value that relates to the <samp>printName</samp> field. This must be printed to the right of the <samp>printName</samp>.",
            "example": "AID"
          }
        }
      },
      "AutoDistanceUnit": {
        "title": "AutoDistanceUnit",
        "enum": [
          "M",
          "K"
        ],
        "type": "string",
        "description": "The unit of measure that corresponds to the <samp>distanceDriven</samp> field.\n\nValue|Description\n-----|-----------\nM    | Miles\nK    | Kilometers"
      },
      "HotelSpecialCode": {
        "title": "HotelSpecialCode",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6
        ],
        "type": "integer",
        "description": "This field is used to provide additional detail for lodging transactions. If a lodging charge does not match one of the listed descriptions, the default value of ‘1’ should be sent in the request. When a value of ‘4’ is sent, the <samp>additionalCharges</samp> field needs to be sent as well.\n\nValue|Description\n-----|-----------\n1    | No Special Code\n2    | Assured Reservation/No Show\n3    | Advance Deposit\n4    | Delayed Charge\n5    | Express Check-Out Service\n6    | Assured Reservation/Normal",
        "example": 1
      },
      "CardNumberUnencrypted4": {
        "title": "CardNumberUnencrypted4",
        "required": [
          "dateTime",
          "amount",
          "clerk",
          "customer",
          "card",
          "transaction"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "apiOptions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "API Options modify the request being made. See the [API Options](#tag/API-Options) section for more information.",
            "example": [
              "RETURNEXPDATE",
              "ALLOWPARTIALAUTH"
            ]
          },
          "amount": {
            "$ref": "#/components/schemas/ObjectAmount"
          },
          "clerk": {
            "$ref": "#/components/schemas/ObjectClerk"
          },
          "receiptColumns": {
            "type": "integer",
            "description": "Send this field if you want Shift4 to format the receipt text instead of returning individual fields. The value sent will correlate to the column width of the formatted receipt that we return. (This also allows the receipt text to wrap to fit the paper size of the printed receipt.) See the [Printing Receipts](#tag/Printing-Receipts) section of this document for more information on formatted receipts.",
            "format": "int32",
            "example": 40
          },
          "customer": {
            "$ref": "#/components/schemas/Customer3"
          },
          "card": {
            "$ref": "#/components/schemas/Card5"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction28"
          }
        }
      },
      "ObjectAutoDriver": {
        "title": "ObjectAutoDriver",
        "type": "object",
        "properties": {
          "license": {
            "maxLength": 20,
            "type": "string",
            "description": "The cardholder's driver's license number.",
            "example": "1889624485"
          },
          "name": {
            "maxLength": 35,
            "type": "string",
            "description": "In a sale/authorization request for an auto rental, the customer’s name exactly as it appears on their driver’s license.",
            "example": "John Smith"
          },
          "taxNumber": {
            "maxLength": 20,
            "type": "string",
            "description": "This field contains the driver’s Tax Identification Number.",
            "example": "192012838"
          }
        }
      },
      "standard2": {
        "title": "standard2",
        "required": [
          "dateTime",
          "amount",
          "clerk"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "apiOptions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "API Options modify the request being made. See the [API Options](#tag/API-Options) section for more information.",
            "example": [
              "RETURNEXPDATE",
              "ALLOWPARTIALAUTH"
            ]
          },
          "amount": {
            "$ref": "#/components/schemas/Amount"
          },
          "clerk": {
            "$ref": "#/components/schemas/ObjectClerk"
          },
          "receiptColumns": {
            "type": "integer",
            "description": "Send this field if you want Shift4 to format the receipt text instead of returning individual fields. The value sent will correlate to the column width of the formatted receipt that we return. (This also allows the receipt text to wrap to fit the paper size of the printed receipt.) See the [Printing Receipts](#tag/Printing-Receipts) section of this document for more information on formatted receipts.",
            "format": "int32",
            "example": 40
          }
        }
      },
      "ObjectCardResponseFourWords": {
        "title": "ObjectCardResponseFourWords",
        "type": "object",
        "properties": {
          "entryMode": {
            "$ref": "#/components/schemas/EntryMode"
          },
          "fourWords": {
            "maxLength": 28,
            "type": "string",
            "description": "Four words that reference cardholder data (CHD). The four words can be entered into Shift4 Payments’ 4Word® web app separated by spaces to temporarily reveal CHD. In addition, the four words can be entered during an Online Entry or Offline Entry transaction in [Lighthouse Transaction Manager](https://ltm.shift4test.com/) to securely charge the corresponding card number.",
            "example": "cat blue washington enter"
          },
          "number": {
            "maxLength": 32,
            "type": "string",
            "description": "The card number field will always be masked when returned in a response.",
            "example": "XXXXXXXXXXXX8774"
          }
        }
      },
      "CardNumberUnencrypted3": {
        "title": "CardNumberUnencrypted3",
        "required": [
          "dateTime",
          "amount",
          "clerk",
          "customer",
          "card",
          "transaction"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "apiOptions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "API Options modify the request being made. See the [API Options](#tag/API-Options) section for more information.",
            "example": [
              "RETURNEXPDATE",
              "ALLOWPARTIALAUTH"
            ]
          },
          "amount": {
            "$ref": "#/components/schemas/ObjectAmount"
          },
          "clerk": {
            "$ref": "#/components/schemas/ObjectClerk"
          },
          "receiptColumns": {
            "type": "integer",
            "description": "Send this field if you want Shift4 to format the receipt text instead of returning individual fields. The value sent will correlate to the column width of the formatted receipt that we return. (This also allows the receipt text to wrap to fit the paper size of the printed receipt.) See the [Printing Receipts](#tag/Printing-Receipts) section of this document for more information on formatted receipts.",
            "format": "int32",
            "example": 40
          },
          "customer": {
            "$ref": "#/components/schemas/Customer3"
          },
          "card": {
            "$ref": "#/components/schemas/Card5"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction22"
          }
        }
      },
      "ObjectCardToken": {
        "title": "ObjectCardToken",
        "type": "object",
        "properties": {
          "value": {
            "maxLength": 16,
            "type": "string",
            "description": "This field is used to specify a card token. Whenever CHD is sent in a request, a card token will be returned in this field. Your interface should be designed to store this card token for future use. The latest card token received should be used in any subsequent request that references the same card data.",
            "example": "8048471746471119"
          }
        },
        "description": "##### Conditional: Send this object when using a card on file."
      },
      "ObjectCardResponseDeact": {
        "title": "ObjectCardResponseDeact",
        "type": "object",
        "properties": {
          "deactivationReason": {
            "maxLength": 32,
            "type": "string",
            "description": "In a Gift Card [Deactivate](#operation/deactivate) or [Cashout](#operation/cashout) request, specifies the reason for deactivation. In a Gift Card redemption or inquiry response, specifies the reason for denial sent by the processor.\n\nExamples to set the `user_parameters` :\n ```json\n{ \n  runtime_filters: [{\"col_name\": \"Color\", \"opr\": \"EQ\", \"values\": [\"red\"],\n}\n```",
            "example": "Lost or Stolen"
          },
          "entryMode": {
            "$ref": "#/components/schemas/EntryMode"
          },
          "expirationDate": {
            "type": "integer",
            "description": "##### Conditional: Requires API Option \"RETURNEXPDATE\". \n\nCard expiration date in MMYY format. This value will only be populated if \"RETURNEXPDATE\" is included in the <samp>apiOptions</samp> array.",
            "format": "int32",
            "example": 1230
          },
          "number": {
            "maxLength": 32,
            "type": "string",
            "description": "The card number field will always be masked when returned in a response.",
            "example": "XXXXXXXXXXXX8774"
          },
          "present": {
            "$ref": "#/components/schemas/Present"
          },
          "type": {
            "$ref": "#/components/schemas/CardTypeGCResp"
          },
          "balance": {
            "$ref": "#/components/schemas/ObjectCardBalance"
          },
          "token": {
            "$ref": "#/components/schemas/ObjectCardTokenGCResponse"
          }
        }
      },
      "ObjectCardBalance": {
        "title": "ObjectCardBalance",
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "description": "The balance remaining on the card.  Depending on which processor is being used, the balance may be returned for a gift card, debit card, EBT card, or other stored value card.",
            "example": 24.33
          }
        }
      },
      "TransactionResponseCode": {
        "title": "TransactionResponseCode",
        "enum": [
          "A",
          "C",
          "D",
          "e",
          "f",
          "P",
          "R"
        ],
        "type": "string",
        "description": "Code indicating the Shift4 Payments host response.        \n\nValue  | Description       | Details\n-------|-------------------|--------\nA      | Approved          | The transaction is approved.\nC      | Approved          | The transaction is approved without requiring additional authorization because it is less than or equal to a ceiling amount. (The ceiling amount is the original authorization amount multiplied by the tolerance per the merchant’s settings with Shift4 Payments.)\nD      | Declined          | The transaction is declined. <b>Note: Shift4 automatically declines AVS/CSC failures if the [POSHANDLEAVSFAIL Api Option](#tag/API-Options) was not sent in the request.</b>\ne      | [Error](#tag/Error-Codes) | There is an error condition.\nf      | [AVS or CSC failure](#tag/Understanding-AVS-and-CSC-Verification)| An AVS or CSC failure has occurred (credit card only). <b>Note: This value will only be returned if the [POSHANDLEAVSFAIL Api Option](#tag/API-Options) was sent in the request.</b>\nP      | [Partial approval](#tag/Partial-Approval)  | A partial approval has occurred.  Check <samp>amount.total</samp> for the approved amount.\nR      | Voice referral    | The transaction requires a voice referral.\n[blank]| Status is unknown | The approval status is unknown.\nX      | Expired Card      | There is an error condition due to the card being expired.",
        "example": "A"
      },
      "HotelAdditionalChargesMiniBar": {
        "title": "HotelAdditionalChargesMiniBar",
        "enum": [
          "Y",
          "N"
        ],
        "type": "string",
        "example": "Y"
      },
      "Token3": {
        "title": "Token3",
        "required": [
          "dateTime",
          "amount",
          "clerk",
          "card",
          "transaction"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "apiOptions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "API Options modify the request being made. See the [API Options](#tag/API-Options) section for more information.",
            "example": [
              "RETURNEXPDATE",
              "ALLOWPARTIALAUTH"
            ]
          },
          "amount": {
            "$ref": "#/components/schemas/Amount"
          },
          "clerk": {
            "$ref": "#/components/schemas/ObjectClerk"
          },
          "receiptColumns": {
            "type": "integer",
            "description": "Send this field if you want Shift4 to format the receipt text instead of returning individual fields. The value sent will correlate to the column width of the formatted receipt that we return. (This also allows the receipt text to wrap to fit the paper size of the printed receipt.) See the [Printing Receipts](#tag/Printing-Receipts) section of this document for more information on formatted receipts.",
            "format": "int32",
            "example": 40
          },
          "card": {
            "$ref": "#/components/schemas/Card17"
          },
          "customer": {
            "$ref": "#/components/schemas/ObjectCustomer"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction16"
          }
        },
        "example": {
          "dateTime": "2021-04-15T09:18:23.283-07:00",
          "amount": {
            "tax": 10.05,
            "total": 121.83
          },
          "card": {
            "expirationDate": 1225,
            "present": "N",
            "token": {
              "value": "8048471746471119"
            }
          },
          "clerk": {
            "numericId": 1576
          },
          "transaction": {
            "invoice": "192050",
            "notes": "Transaction notes are added here"
          }
        }
      },
      "ObjectCardSecurityCodeGC": {
        "title": "ObjectCardSecurityCodeGC",
        "type": "object",
        "properties": {
          "value": {
            "maxLength": 4,
            "type": "string",
            "description": "##### Conditional: May be required for gift card transactions.\n\nThe three- or four-digit Card Security Code associated with gift card. This value may be required for requests depending on a card's settings. It should not be stored by the interface.",
            "example": "333"
          }
        }
      },
      "ThreeDSecureProgramProtocol": {
        "title": "ThreeDSecureProgramProtocol",
        "enum": [
          1,
          2
        ],
        "type": "integer",
        "description": "Program Protocol must be provided by the merchant if they are participating in Mastercard 3D Secure and have previously authenticated using the Mastercard Identity Check or SecureCode program. It identifies the type of 3D-Secure program.\n\nIf not provided in the request Shift4 assumes 1 (3D Secure Version 1.0 [3DS 1.0]).\n\nValue| Description\n-----|------------\n1    | 3D Secure Version 1.0 [3DS 1.0]\n2    | EMV 3-D Secure [3DS 2.0]",
        "example": 1
      },
      "ObjectUniversalToken": {
        "title": "ObjectUniversalToken",
        "type": "object",
        "properties": {
          "value": {
            "maxLength": 50,
            "type": "string",
            "description": "An identifier for a card or payment account across all Shift4 Payments merchants.",
            "example": "97032276-5944-00000001-16985FD179D"
          }
        }
      },
      "Wallet3DSecureUsingi4Go": {
        "title": "Wallet3DSecureUsingi4Go",
        "required": [
          "dateTime",
          "amount",
          "clerk",
          "card",
          "extendedCardData",
          "transaction"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "apiOptions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "API Options modify the request being made. See the [API Options](#tag/API-Options) section for more information.",
            "example": [
              "RETURNEXPDATE",
              "ALLOWPARTIALAUTH"
            ]
          },
          "amount": {
            "$ref": "#/components/schemas/ObjectAmount"
          },
          "clerk": {
            "$ref": "#/components/schemas/ObjectClerk"
          },
          "receiptColumns": {
            "type": "integer",
            "description": "Send this field if you want Shift4 to format the receipt text instead of returning individual fields. The value sent will correlate to the column width of the formatted receipt that we return. (This also allows the receipt text to wrap to fit the paper size of the printed receipt.) See the [Printing Receipts](#tag/Printing-Receipts) section of this document for more information on formatted receipts.",
            "format": "int32",
            "example": 40
          },
          "customer": {
            "$ref": "#/components/schemas/ObjectCustomer"
          },
          "card": {
            "$ref": "#/components/schemas/Card6"
          },
          "extendedCardData": {
            "maxLength": 4096,
            "type": "string",
            "description": "Base64 encoded string received from the i4Go call. This is used to pass extended card information for processing 3D Secure, Apple Pay and Google Pay requests via i4Go.",
            "example": "eyJ0aHJlZURTZWN1cmUiOnsiY3J5cHRvZ3JhbSIgOiAiRUhYRjhoZmpBaVhOQUtJQUFBQldYQUFERWhFUiIsInNlY3VyaXR5TGV2ZWxJbmRpY2F0b3IiIDogIjI0MSJ9LCJjYXJkQnJhbmRUb2tlbiI6eyJyZXF1ZXN0b3JJZCIgOiAiMDEyMzQ1Njc4OTAxIn19"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction1"
          },
          "risk": {
            "$ref": "#/components/schemas/ObjectRiskTransactionRequest"
          }
        }
      },
      "ObjectAutoAdditionalCharges": {
        "title": "ObjectAutoAdditionalCharges",
        "type": "object",
        "properties": {
          "gasoline": {
            "$ref": "#/components/schemas/AutoAdditionalChargesGasoline"
          },
          "lateReturn": {
            "$ref": "#/components/schemas/AutoAdditionalChargesLateReturn"
          },
          "mileage": {
            "$ref": "#/components/schemas/AutoAdditionalChargesMileage"
          },
          "oneWayServiceFee": {
            "$ref": "#/components/schemas/AutoAdditionalChargesOneWayServiceFee"
          },
          "violationFee": {
            "$ref": "#/components/schemas/AutoAdditionalChargesViolationFee"
          }
        },
        "description": "The codes used to provide a reason for additional charges in an auto rental sale. Multiple codes can be specified for the same transaction."
      },
      "ObjectLighthouseRequest": {
        "title": "ObjectLighthouseRequest",
        "type": "object",
        "properties": {
          "data": {
            "type": "string",
            "description": "##### Conditional: Send only when processing SkyTab transactions.\nBase64 encoded JSON formatted data that will be passed through to Lighthouse for SkyTab transactions. This data will contain variable information.",
            "example": "eyJsaWdodGhvdXNlIjp7ImVtcGxveWVlaWQiOjEyMzQsImRldmljZWlkIjoiMTIzU0FCViJ9fQ=="
          }
        }
      },
      "P2PEEMV": {
        "title": "P2PEEMV",
        "required": [
          "dateTime",
          "amount",
          "clerk",
          "device",
          "emv",
          "p2pe",
          "transaction"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "apiOptions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "API Options modify the request being made. See the [API Options](#tag/API-Options) section for more information.",
            "example": [
              "RETURNEXPDATE",
              "ALLOWPARTIALAUTH"
            ]
          },
          "amount": {
            "$ref": "#/components/schemas/ObjectAmount"
          },
          "clerk": {
            "$ref": "#/components/schemas/ObjectClerk"
          },
          "receiptColumns": {
            "type": "integer",
            "description": "Send this field if you want Shift4 to format the receipt text instead of returning individual fields. The value sent will correlate to the column width of the formatted receipt that we return. (This also allows the receipt text to wrap to fit the paper size of the printed receipt.) See the [Printing Receipts](#tag/Printing-Receipts) section of this document for more information on formatted receipts.",
            "format": "int32",
            "example": 40
          },
          "card": {
            "$ref": "#/components/schemas/Card3"
          },
          "customer": {
            "$ref": "#/components/schemas/ObjectCustomer"
          },
          "device": {
            "$ref": "#/components/schemas/Device1"
          },
          "emv": {
            "$ref": "#/components/schemas/ObjectEMV"
          },
          "p2pe": {
            "$ref": "#/components/schemas/P2pe1"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction3"
          }
        }
      },
      "SignatureFormat": {
        "title": "SignatureFormat",
        "enum": [
          "P"
        ],
        "type": "string",
        "description": "The data format the signature data will be in. \"P\" for PNG format.",
        "example": "P"
      },
      "HotelAdditionalChargesGiftShop": {
        "title": "HotelAdditionalChargesGiftShop",
        "enum": [
          "Y",
          "N"
        ],
        "type": "string",
        "example": "Y"
      },
      "CardNumberUnencrypted1": {
        "title": "CardNumberUnencrypted1",
        "required": [
          "dateTime",
          "amount",
          "clerk",
          "customer",
          "card",
          "transaction"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "apiOptions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "API Options modify the request being made. See the [API Options](#tag/API-Options) section for more information.",
            "example": [
              "RETURNEXPDATE",
              "ALLOWPARTIALAUTH"
            ]
          },
          "amount": {
            "$ref": "#/components/schemas/ObjectAmount"
          },
          "clerk": {
            "$ref": "#/components/schemas/ObjectClerk"
          },
          "receiptColumns": {
            "type": "integer",
            "description": "Send this field if you want Shift4 to format the receipt text instead of returning individual fields. The value sent will correlate to the column width of the formatted receipt that we return. (This also allows the receipt text to wrap to fit the paper size of the printed receipt.) See the [Printing Receipts](#tag/Printing-Receipts) section of this document for more information on formatted receipts.",
            "format": "int32",
            "example": 40
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "card": {
            "$ref": "#/components/schemas/Card5"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction9"
          },
          "risk": {
            "$ref": "#/components/schemas/ObjectRiskTransactionRequest"
          },
          "lighthouse": {
            "$ref": "#/components/schemas/ObjectLighthouseRequest"
          }
        }
      },
      "HotelAdditionalChargesLaundry": {
        "title": "HotelAdditionalChargesLaundry",
        "enum": [
          "Y",
          "N"
        ],
        "type": "string",
        "example": "Y"
      },
      "HotelAdditionalChargesTelephone": {
        "title": "HotelAdditionalChargesTelephone",
        "enum": [
          "Y",
          "N"
        ],
        "type": "string",
        "example": "Y"
      },
      "P2PEMagstripeMSR1": {
        "title": "P2PEMagstripeMSR1",
        "required": [
          "dateTime",
          "amount",
          "clerk",
          "device",
          "p2pe",
          "transaction"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "apiOptions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "API Options modify the request being made. See the [API Options](#tag/API-Options) section for more information.",
            "example": [
              "RETURNEXPDATE",
              "ALLOWPARTIALAUTH"
            ]
          },
          "amount": {
            "$ref": "#/components/schemas/ObjectAmount"
          },
          "clerk": {
            "$ref": "#/components/schemas/ObjectClerk"
          },
          "receiptColumns": {
            "type": "integer",
            "description": "Send this field if you want Shift4 to format the receipt text instead of returning individual fields. The value sent will correlate to the column width of the formatted receipt that we return. (This also allows the receipt text to wrap to fit the paper size of the printed receipt.) See the [Printing Receipts](#tag/Printing-Receipts) section of this document for more information on formatted receipts.",
            "format": "int32",
            "example": 40
          },
          "card": {
            "$ref": "#/components/schemas/Card3"
          },
          "customer": {
            "$ref": "#/components/schemas/ObjectCustomer"
          },
          "device": {
            "$ref": "#/components/schemas/Device1"
          },
          "p2pe": {
            "$ref": "#/components/schemas/ObjectP2PEType05"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction11"
          },
          "lighthouse": {
            "$ref": "#/components/schemas/ObjectLighthouseRequest"
          }
        }
      },
      "ObjectHotelCheckOutRefund": {
        "title": "ObjectHotelCheckOutRefund",
        "type": "object",
        "properties": {
          "arrivalDateTime": {
            "type": "string",
            "description": "Arrival date and time of a guest’s hotel stay ISO8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm). For hotel transactions that are a straight sale (such as advanced deposit, no-show charge, and late charges), the arrival date needs to be one day before the sale date.",
            "example": "2021-04-12T15:39:01.594-07:00"
          },
          "departureDateTime": {
            "type": "string",
            "description": "Departure date and time of a guest’s hotel stay ISO8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm). For hotel transactions that are a straight sale (such as advanced deposit, no-show charge, and late charges), the departure date needs to be the day of the sale.",
            "example": "2021-04-15T09:18:23.283-07:00"
          }
        },
        "description": "##### Conditional: Utilize this object for Hotel transactions"
      },
      "ObjectAmountGC": {
        "title": "ObjectAmountGC",
        "required": [
          "total"
        ],
        "type": "object",
        "properties": {
          "total": {
            "type": "number",
            "description": "The amount which should be added to the card's balance.",
            "example": 20
          }
        },
        "description": "Object containing information regarding the amount being added onto the card or removed from the card."
      },
      "TransactionToShip": {
        "title": "TransactionToShip",
        "enum": [
          "Y",
          "N"
        ],
        "type": "string",
        "description": "Merchants acknowledgement to ship/process the order.",
        "example": "Y"
      },
      "Amount": {
        "title": "Amount",
        "required": [
          "total",
          "tax"
        ],
        "type": "object",
        "properties": {
          "total": {
            "type": "number",
            "description": "The amount being charged for a particular transaction. If other amount fields are sent, they must be included in the total amount.",
            "example": 160
          },
          "tax": {
            "type": "number",
            "description": "The amount of sales tax charged for a transaction. The tax amount is used by businesses to track tax expenses for accounting purposes. Identifying the tax amount also helps consumers understand the total amount that they were billed.  This field is part of Level 2 card data.",
            "example": 15
          }
        }
      },
      "Card36": {
        "title": "Card36",
        "required": [
          "present",
          "token"
        ],
        "type": "object",
        "properties": {
          "expirationDate": {
            "type": "integer",
            "description": "##### Conditional: Send in the request for manually entered or token transactions if the card has an expiration date. This field should not be specified when using an encrypted device.\n\nCard expiration date in MMYY format.",
            "format": "int32",
            "example": 1230
          },
          "present": {
            "$ref": "#/components/schemas/Present"
          },
          "token": {
            "$ref": "#/components/schemas/ObjectCardTokenRequired"
          }
        }
      },
      "Card72": {
        "title": "Card72",
        "required": [
          "number",
          "expirationDate",
          "entryMode"
        ],
        "type": "object",
        "properties": {
          "number": {
            "maxLength": 32,
            "type": "string",
            "description": "##### Conditional: Send only when card data is manually entered. This field should not be specified when using an encrypted device.\n\nThe payment card number entered in an initial authorization/sale request. This field will always be masked\nwhen returned in a response.",
            "example": "4321000000001119"
          },
          "expirationDate": {
            "type": "integer",
            "description": "##### Conditional: Send only when card data is manually entered or when using a token. This field should not be specified when using an encrypted device.\n\nCard expiration date in MMYY format. This value should only be populated in the initial sale/authorization request.",
            "format": "int32",
            "example": 1230
          },
          "entryMode": {
            "enum": [
              "M"
            ],
            "type": "string",
            "description": "##### Conditional: The Card Entry Mode should be sent in an initial request; in subsequent requests, it should be left blank or not sent.\n\nThe method used to capture a payment card in an authorization/sale request. \n\nValue|Description\n-----|-----------\nM    | Manual Entry",
            "example": "M"
          },
          "securityCode": {
            "$ref": "#/components/schemas/SecurityCode"
          }
        }
      },
      "Card17": {
        "title": "Card17",
        "required": [
          "present",
          "token"
        ],
        "type": "object",
        "properties": {
          "expirationDate": {
            "type": "integer",
            "description": "##### Conditional: Send only when card data is manually entered or when using a token. This field should not be specified when using an encrypted device.\n\nCard expiration date in MMYY format. This value should only be populated in the initial sale/authorization request.",
            "format": "int32",
            "example": 1230
          },
          "present": {
            "$ref": "#/components/schemas/PresentRefund"
          },
          "token": {
            "$ref": "#/components/schemas/ObjectCardTokenRequired"
          }
        }
      },
      "Card7": {
        "title": "Card7",
        "required": [
          "number",
          "expirationDate"
        ],
        "type": "object",
        "properties": {
          "number": {
            "maxLength": 32,
            "type": "string",
            "description": "##### Conditional: Send only when card data is manually entered. This field should not be specified when using an encrypted device.\n\nThe payment card number entered in an initial authorization/sale request. This field will always be masked\nwhen returned in a response.",
            "example": "4321000000001119"
          },
          "expirationDate": {
            "type": "integer",
            "description": "##### Conditional: Send only when card data is manually entered or when using a token. This field should not be specified when using an encrypted device.\n\nCard expiration date in MMYY format. This value should only be populated in the initial sale/authorization request.",
            "format": "int32",
            "example": 1230
          },
          "present": {
            "$ref": "#/components/schemas/Present"
          }
        }
      },
      "QRPayConfigSplitEnabled": {
        "title": "QRPayConfigSplitEnabled",
        "enum": [
          "Y",
          "N"
        ],
        "type": "string",
        "description": "Specifies whether split check processing is enabled or disabled for QR Code Payments\n\nValue|Description\n-----|-----------\nY    | Split check proessing is enabled.\nN    | Split check proessing is disabled."
      },
      "CardTypeRiskToken": {
        "title": "CardTypeRiskToken",
        "enum": [
          "TK"
        ],
        "type": "string",
        "description": "Payment Type submitted by merchant:\n\nValue| Description\n-----|------------\nTK   | Token",
        "example": "TK"
      },
      "BatchesSubmit400Error1": {
        "title": "BatchesSubmit400Error1",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result5"
            },
            "description": ""
          }
        }
      },
      "EntryMode1": {
        "title": "EntryMode1",
        "enum": [
          "M"
        ],
        "type": "string",
        "description": "##### Conditional: The Card Entry Mode should be sent in an initial request; in subsequent requests, it should be left blank or not sent.\n\nThe method used to capture a payment card in an authorization/sale request. \n\nValue|Description\n-----|-----------\nM    | Manual Entry",
        "example": "M"
      },
      "MerchantsMerchant400Error1": {
        "title": "MerchantsMerchant400Error1",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result5"
            },
            "description": ""
          }
        }
      },
      "P2pe": {
        "title": "P2pe",
        "required": [
          "data",
          "format"
        ],
        "type": "object",
        "properties": {
          "data": {
            "maxLength": 2048,
            "type": "string",
            "description": "The full output of a P2PE keypad/magnetic swipe reader (MSR).",
            "example": "027101801F2D1E00939B%*432100******1119^VS/DUAL TRACK^2212******?*;432100******1119=2212******?*CECE3FCE7781142BEC8D0E267AE89F5D3C7E235BF1A70E637951E8D93003E5A2586C336CA4A3B31F6639B04005BB12A716D8BC4D3AB125C27AB11A9DDC02816569D42A20B036EE5E2C71CB70565FB43B000000000000000000000000000000000000000000000000000000000000000000000000000000003434345434363138343962994950010038200415953903"
          },
          "format": {
            "$ref": "#/components/schemas/P2PEFormatIDTech"
          }
        },
        "description": "See [P2PE Format](#tag/P2PE-format) for more information."
      },
      "P2PEMagstripeMSR12": {
        "title": "P2PEMagstripeMSR12",
        "required": [
          "dateTime",
          "card",
          "device",
          "p2pe"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "card": {
            "$ref": "#/components/schemas/Card66"
          },
          "device": {
            "$ref": "#/components/schemas/Device1"
          },
          "p2pe": {
            "$ref": "#/components/schemas/ObjectP2PEType05"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction64"
          },
          "customer": {
            "$ref": "#/components/schemas/ObjectCustomer"
          }
        }
      },
      "ModeOffline400Error1": {
        "title": "ModeOffline400Error1",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result5"
            },
            "description": ""
          }
        }
      },
      "Device53": {
        "title": "Device53",
        "required": [
          "terminalId",
          "form"
        ],
        "type": "object",
        "properties": {
          "terminalId": {
            "maxLength": 32,
            "type": "string",
            "description": "To prompt a specific UTG-controlled PIN pad in a request, the API Terminal ID configured in UTG TuneUp must be specified in this field.",
            "example": "1742"
          },
          "form": {
            "$ref": "#/components/schemas/ObjectDeviceForm"
          }
        }
      },
      "DevicesPrintResponse": {
        "title": "DevicesPrintResponse",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result51"
            },
            "description": ""
          }
        }
      },
      "Result": {
        "title": "Result",
        "required": [
          "dateTime",
          "amount",
          "transaction",
          "redirectUrl",
          "trustly"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "amount": {
            "$ref": "#/components/schemas/Amount1"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction72"
          },
          "sourceIp": {
            "type": "string",
            "description": "Public source IP Address where the request originates,\nnot the IP Address of the web server.",
            "example": "63.57.84.101"
          },
          "redirectUrl": {
            "type": "string",
            "description": "URL to redirect the browser to the Trustly site where the customer can authenticate their bank.",
            "example": "'https://sandbox.trustly.com/start/scripts/paywithmybank.js?accessId=p8HFpPsRmGjhCsbe62YM'"
          },
          "server": {
            "$ref": "#/components/schemas/ObjectServer"
          },
          "trustly": {
            "$ref": "#/components/schemas/Trustly1"
          }
        }
      },
      "P2PEFormat1": {
        "title": "P2PEFormat1",
        "enum": [
          "01",
          "02",
          "03",
          "04",
          "05"
        ],
        "type": "string"
      },
      "Customer7": {
        "title": "Customer7",
        "required": [
          "firstName",
          "lastName",
          "phoneNumber",
          "ssn",
          "emailAddress",
          "addressLine1",
          "city",
          "region",
          "country",
          "postalCode",
          "enrollDate",
          "externalId"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "maxLength": 30,
            "type": "string",
            "description": "Customer first name",
            "example": "John"
          },
          "lastName": {
            "maxLength": 30,
            "type": "string",
            "description": "Customer last name",
            "example": "Smith"
          },
          "phoneNumber": {
            "type": "string",
            "description": "Customer phone number",
            "example": "+13110001234"
          },
          "ssn": {
            "type": "string",
            "description": "Customer Social Security Number",
            "example": "123123456"
          },
          "emailAddress": {
            "maxLength": 80,
            "type": "string",
            "description": "Customer email address.",
            "example": "firstname.lastname@email.com"
          },
          "addressLine1": {
            "maxLength": 30,
            "type": "string",
            "description": "Customer address Line 1.",
            "example": "65 Easy St"
          },
          "addressLine2": {
            "type": "string",
            "description": "Customer address line 2.",
            "example": "Apt 124"
          },
          "city": {
            "type": "string",
            "description": "Customer address city.",
            "example": "Las Vegas"
          },
          "region": {
            "type": "string",
            "description": "2 character ISO State Code.",
            "example": "NV"
          },
          "country": {
            "type": "string",
            "description": "2 character ISO Country Code.",
            "example": "US"
          },
          "postalCode": {
            "maxLength": 9,
            "minLength": 5,
            "type": "string",
            "description": "5-9 character Postal Code.",
            "example": "65144"
          },
          "enrollDate": {
            "type": "string",
            "description": "Date of the user's first transaction in your system, regardless of payment  method used. The date and time must be passed in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm)",
            "example": "2019-03-14T11:16:42.896-07:00"
          },
          "externalId": {
            "type": "string",
            "description": "Your external identifier for the Customer",
            "example": "OD-123"
          }
        }
      },
      "GiftcardsCashoutResponse": {
        "title": "GiftcardsCashoutResponse",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result32"
            },
            "description": ""
          }
        }
      },
      "Card3": {
        "title": "Card3",
        "type": "object",
        "properties": {
          "entryMode": {
            "$ref": "#/components/schemas/EntryMode"
          },
          "present": {
            "$ref": "#/components/schemas/Present"
          },
          "type": {
            "$ref": "#/components/schemas/CardType"
          }
        }
      },
      "Credential1": {
        "title": "Credential1",
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "description": "A security credential used to authenticate API requests and all [i4Go®](https://myportal.shift4.com/index.cfm?action=support.doc) authorizeClient/preauthorizeClient requests. An Access Token is the alias for the merchant account and interface being used. The Access Token is required in all requests except an [Access Token Exchange](#operation/accesstokenexchange) request, which generates an Access Token using an <samp>authToken</samp> and <samp>clientGuid</samp>.",
            "format": "uuid",
            "example": "EA79FB05-3AA7-4500-AF9A-73F986FF2C1D"
          },
          "apiSerialNumber": {
            "maxLength": 10,
            "type": "string",
            "description": "The serial number for the merchant account. This field is only used for backwards compatibility with older interfaces and has been replaced by the Access Token.",
            "example": "266"
          },
          "apiPassword": {
            "type": "string",
            "description": "A unique encrypted identifier that refers to a specific merchant account. It is required when making an [Access Token Exchange](#operation/accesstokenexchange) request. For detailed information about the AuthToken, please see [Authentication](#section/Authentication)",
            "format": "uuid"
          }
        }
      },
      "Card41": {
        "title": "Card41",
        "required": [
          "deactivationReason",
          "present",
          "token"
        ],
        "type": "object",
        "properties": {
          "deactivationReason": {
            "maxLength": 32,
            "type": "string",
            "description": "In a Gift Card [Deactivate](#operation/deactivate) or [Cashout](#operation/cashout) request, specifies the reason for deactivation. In a Gift Card redemption or inquiry response, specifies the reason for denial sent by the processor.",
            "example": "Lost or Stolen"
          },
          "present": {
            "$ref": "#/components/schemas/Present"
          },
          "token": {
            "$ref": "#/components/schemas/ObjectCardTokenRequired"
          },
          "expirationDate": {
            "type": "integer",
            "description": "##### Conditional: Send in the request for manually entered or token transactions if the card has an expiration date. This field should not be specified when using an encrypted device.\n\nCard expiration date in MMYY format.",
            "format": "int32",
            "example": 1230
          }
        }
      },
      "Card": {
        "title": "Card",
        "type": "object",
        "properties": {
          "present": {
            "$ref": "#/components/schemas/Present"
          },
          "type": {
            "$ref": "#/components/schemas/CardType"
          }
        }
      },
      "CardTypeRisk": {
        "title": "CardTypeRisk",
        "enum": [
          "AP",
          "CC",
          "PP",
          "GC"
        ],
        "type": "string",
        "description": "Payment Type submitted by merchant:\n\nValue| Description\n-----|------------\nAP   | Apple Pay\nCC   | Credit Card\nPP   | PayPal\nGC   | Gift Card",
        "example": "CC"
      },
      "SubsequentCapture": {
        "title": "SubsequentCapture",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result1"
            },
            "description": ""
          }
        },
        "example": {
          "result": [
            {
              "dateTime": "2021-04-15T09:18:23.283-07:00",
              "amount": {
                "total": 160
              },
              "transaction": {
                "authSource": "A",
                "responseCode": "A",
                "invoice": "193002",
                "notes": "Transaction notes are added here"
              },
              "server": {
                "name": "TM01CE"
              },
              "sourceIp": "63.57.84.101",
              "paymentAccountId": "BF06A6AB-A91D-4145-8704-13B8C48A7A95",
              "currencyCode": "USD",
              "trustly": {
                "originalTransactionId": "1002633190",
                "transactionId": "1002633191",
                "payment": {
                  "id": "1587954687",
                  "type": 2
                },
                "transaction": {
                  "type": "3",
                  "status": "1",
                  "statusMessage": "Pending"
                },
                "account": {
                  "name": "Business Demo Account",
                  "type": 1,
                  "profile": 2,
                  "accountNumber": "9174",
                  "routingNumber": "121000248"
                },
                "paymentProvider": {
                  "id": "200005501",
                  "type": 1,
                  "name": "Demo Bank"
                }
              }
            }
          ]
        }
      },
      "Card44": {
        "title": "Card44",
        "required": [
          "deactivationReason",
          "present",
          "number"
        ],
        "type": "object",
        "properties": {
          "deactivationReason": {
            "maxLength": 32,
            "type": "string",
            "description": "In a Gift Card [Deactivate](#operation/deactivate) or [Cashout](#operation/cashout) request, specifies the reason for deactivation. In a Gift Card redemption or inquiry response, specifies the reason for denial sent by the processor.",
            "example": "Lost or Stolen"
          },
          "present": {
            "$ref": "#/components/schemas/Present"
          },
          "number": {
            "maxLength": 32,
            "type": "string",
            "description": "##### Conditional: Send only when card data is manually entered. This field should not be specified when using an encrypted device.\n\nThe payment card number. This field will always be masked when returned in a response.",
            "example": "2664654648774"
          },
          "expirationDate": {
            "type": "integer",
            "description": "##### Conditional: Send in the request for manually entered or token transactions if the card has an expiration date. This field should not be specified when using an encrypted device.\n\nCard expiration date in MMYY format.",
            "format": "int32",
            "example": 1230
          },
          "securityCode": {
            "$ref": "#/components/schemas/ObjectCardSecurityCodeGC"
          }
        }
      },
      "Card66": {
        "title": "Card66",
        "required": [
          "entryMode"
        ],
        "type": "object",
        "properties": {
          "entryMode": {
            "$ref": "#/components/schemas/EntryMode"
          }
        }
      },
      "CredentialsAccesstoken400Error1": {
        "title": "CredentialsAccesstoken400Error1",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result5"
            },
            "description": ""
          }
        }
      },
      "ObjectDevicePromptTermsAndConditions": {
        "title": "ObjectDevicePromptTermsAndConditions",
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/DevicePromptTermsAndConditionsResult"
          },
          "value": {
            "maxLength": 4096,
            "type": "string",
            "description": "Contains the Terms and Conditions text for the UTG-controlled PIN pad to display to a consumer.",
            "example": "Terms and Conditions"
          }
        }
      },
      "RiskAssessment": {
        "title": "RiskAssessment",
        "enum": [
          "A",
          "D",
          "R",
          "E"
        ],
        "type": "string",
        "description": "This is the answer to the risk assessment. If the response is Escalate then transaction needs 3DS authentication. \n\nValue| Description\n-----|------------\nA    | Approve. Continue with the payment transaction.\nD    | Deny. Try another payment method\nR    | Review. Continue with the payment transaction.\nE    | Escalate. The transaction needs 3DS authentication.",
        "example": "A"
      },
      "Card82": {
        "title": "Card82",
        "type": "object",
        "properties": {
          "number": {
            "maxLength": 32,
            "type": "string",
            "description": "The gift card number that was created during the gift card allocate request."
          },
          "type": {
            "$ref": "#/components/schemas/CardTypeGCResp"
          },
          "balance": {
            "$ref": "#/components/schemas/ObjectCardBalance"
          }
        }
      },
      "CardsIdentifyResponse": {
        "title": "CardsIdentifyResponse",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result38"
            },
            "description": ""
          }
        }
      },
      "BatchInclusive": {
        "title": "BatchInclusive",
        "enum": [
          "Y",
          "N"
        ],
        "type": "string",
        "description": "Indicates whether or not you want the batch to include transactions for every day leading up to the <samp>transaction.businessDate</samp>.  If this parameter is not sent, the assumed value will be 'Y'.\n\nValue|Description\n-----|-----------\nY    | the batch will contain transactions for every day leading up to the specified <samp>businessDate</samp>\nN    | the batch will contain transactions for only the specified <samp>businessDate</samp>",
        "example": "N"
      },
      "ObjectBatchResponse": {
        "title": "ObjectBatchResponse",
        "type": "object",
        "properties": {
          "inclusive": {
            "$ref": "#/components/schemas/BatchInclusiveResponse"
          },
          "netAmount": {
            "type": "number",
            "description": "The net amount in the batch (saleAmount MINUS refundAmount)",
            "example": 5601.78
          },
          "netCount": {
            "type": "integer",
            "description": "The net transaction count in the batch (saleCount PLUS refundCount)",
            "format": "int32",
            "example": 187
          },
          "refundAmount": {
            "type": "number",
            "description": "The total amount of all refunds in the batch",
            "example": 100
          },
          "refundCount": {
            "type": "integer",
            "description": "The count of all refunds in the batch",
            "format": "int32",
            "example": 1
          },
          "saleAmount": {
            "type": "number",
            "description": "The total amount of all sales in the batch",
            "example": 5701.78
          },
          "saleCount": {
            "type": "integer",
            "description": "The count of all sales in the batch",
            "format": "int32",
            "example": 186
          },
          "processors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectBatchProcessors"
            },
            "description": ""
          }
        }
      },
      "ObjectTrustlyEstablishData": {
        "title": "ObjectTrustlyEstablishData",
        "type": "object",
        "properties": {
          "accessId": {
            "type": "string",
            "description": "The Trustly client application access id.",
            "example": "p8HFpPsRmGjhCsbe62YM"
          },
          "amount": {
            "type": "string",
            "description": "The amount of the transaction. This represents the maximum amount of the transactions that can be processed with the Authorization. If the amount is 0.00, there will be no upper bound on the transaction. (10 characters with support for 2 decimal places)",
            "example": "155.00"
          },
          "cancelUrl": {
            "type": "string",
            "description": "The URL where the user will be redirected if the request fails to procceses or the user cancels.",
            "example": "https://merchant.com/trustly/cancel"
          },
          "currency": {
            "type": "string",
            "description": "3-letter ISO Currency Code.",
            "example": "USD"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer8"
          },
          "description": {
            "type": "string",
            "description": "A description of the transaction.",
            "example": "Deferred"
          },
          "merchantId": {
            "type": "string",
            "description": "The Trusly Merchant Id.",
            "example": "1016236765"
          },
          "merchantReference": {
            "maxLength": 40,
            "type": "string",
            "description": "A specific merchant reference for this request. For example,  this could be an merchant order number or the same merchant reference value used in the original establish call.",
            "example": "48973-2038273-89457918"
          },
          "paymentType": {
            "type": "string",
            "description": "Value    |  Description\n---------|-------------\nDeferred | Deferred payment. Payment is authorized but the capture operation must be called to initiate the debit. You can start initiate multiple captures that are less than or equal to the original transaction authorization amount.",
            "example": "Deferred"
          },
          "requestSignature": {
            "type": "string",
            "description": "Request Signature used to secure the request.",
            "example": "a/n62XqfgQA31xmFnCxNEOjd7g="
          },
          "returnUrl": {
            "type": "string",
            "description": "The URL where the user will be redirected if the request procceses successfully.",
            "example": "https://merchant.com/trustly/success"
          }
        },
        "description": "The establishData object used when calling the Trustly Bank Widget."
      },
      "PaymentProvider": {
        "title": "PaymentProvider",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique identifier for the Payment Provider",
            "example": "200005501"
          },
          "type": {
            "type": "integer",
            "description": "Payment Provider Type\n\nCode | Description\n-----|------------\n1    | Online Banking\n2    | Manual Electronic Check",
            "format": "int32",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "Payment Provider name",
            "example": "Demo Bank"
          }
        }
      },
      "QrpaymentsGetqrdetailsResponse": {
        "title": "QrpaymentsGetqrdetailsResponse",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result60"
            },
            "description": ""
          }
        }
      },
      "QrpaymentsGetqrpaymentstatusResponse": {
        "title": "QrpaymentsGetqrpaymentstatusResponse",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result62"
            },
            "description": ""
          }
        }
      },
      "DevicesTermsandconditionsResponse": {
        "title": "DevicesTermsandconditionsResponse",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result42"
            },
            "description": ""
          }
        }
      },
      "P2PEviaIDTechDevice13": {
        "title": "P2PEviaIDTechDevice13",
        "required": [
          "dateTime",
          "p2pe"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "p2pe": {
            "$ref": "#/components/schemas/P2pe"
          }
        }
      },
      "Result1": {
        "title": "Result1",
        "required": [
          "dateTime",
          "amount",
          "transaction",
          "trustly"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "amount": {
            "$ref": "#/components/schemas/Amount1"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction72"
          },
          "sourceIp": {
            "type": "string",
            "description": "Public source IP Address where the request originates,\nnot the IP Address of the web server.",
            "example": "63.57.84.101"
          },
          "paymentAccountId": {
            "type": "string",
            "description": "Shift4 generated Unique Payment Account ID",
            "example": "BF06A6AB-A91D-4145-8704-13B8C48A7A95"
          },
          "currencyCode": {
            "type": "string",
            "description": "Transaction currency code.",
            "example": "USD"
          },
          "server": {
            "$ref": "#/components/schemas/ObjectServer"
          },
          "trustly": {
            "$ref": "#/components/schemas/Trustly2"
          }
        }
      },
      "DevicesPrintRequest": {
        "title": "DevicesPrintRequest",
        "required": [
          "dateTime",
          "device"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "device": {
            "$ref": "#/components/schemas/ObjectDeviceOnlyTID"
          },
          "receipt": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectReceipt"
            },
            "description": "array of receipt key/value pairs that should be printed on the receipt.",
            "example": [
              {
                "key": "ApplicationIdentifier",
                "printName": "AID",
                "printValue": "A0000000031010"
              },
              {
                "key": "TerminalVerificationResults",
                "printName": "TVR",
                "printValue": "8000"
              },
              {
                "key": "IssuerApplicationData",
                "printName": "IAD",
                "printValue": "06010A03A40002"
              },
              {
                "key": "TransactionStatusIndicator",
                "printName": "TSI",
                "printValue": "E800"
              },
              {
                "key": "AuthorizationResponseCode",
                "printName": "ARC",
                "printValue": "00"
              },
              {
                "key": "TransactionCurrencyCode",
                "printValue": "USD$"
              },
              {
                "key": "ApplicationLabel",
                "printValue": "CREDITO DE VISA"
              }
            ]
          }
        }
      },
      "InitialCapture2": {
        "title": "InitialCapture2",
        "required": [
          "dateTime",
          "amount",
          "sourceIp",
          "transaction",
          "successUrl",
          "cancelUrl",
          "currencyCode",
          "customer",
          "trustly"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "amount": {
            "$ref": "#/components/schemas/Amount1"
          },
          "sourceIp": {
            "type": "string",
            "description": "Public source IP Address where the request originates,\nnot the IP Address of the web server.",
            "example": "63.57.84.101"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction70"
          },
          "successUrl": {
            "type": "string",
            "description": "The URL where the user will be redirected if the request procceses successfully.",
            "example": "https://merchant.com/trustly/success"
          },
          "cancelUrl": {
            "type": "string",
            "description": "The URL where the user will be redirected if the request fails to procceses or the user cancels.",
            "example": "https://merchant.com/trustly/cancel"
          },
          "currencyCode": {
            "type": "string",
            "description": "Transaction currency code.",
            "example": "USD"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer7"
          },
          "trustly": {
            "$ref": "#/components/schemas/Trustly"
          }
        }
      },
      "Device52": {
        "title": "Device52",
        "type": "object",
        "properties": {
          "terminalId": {
            "maxLength": 32,
            "type": "string",
            "description": "##### Conditional: Include this field if using a UTG-controlled device.\n\nTo prompt a specific UTG-controlled PIN pad in a request, the API Terminal ID configured in UTG TuneUp must be specified in this field.",
            "example": "1742"
          },
          "promptInput": {
            "$ref": "#/components/schemas/ObjectDevicePromptInput"
          }
        }
      },
      "DevicesInitializereadersResponse": {
        "title": "DevicesInitializereadersResponse",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result43"
            },
            "description": ""
          }
        }
      },
      "DevicesTermsandconditionsRequest": {
        "title": "DevicesTermsandconditionsRequest",
        "required": [
          "dateTime",
          "device"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "device": {
            "$ref": "#/components/schemas/Device39"
          }
        }
      },
      "Payment": {
        "title": "Payment",
        "required": [
          "type",
          "description"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "integer",
            "description": "Value |  Description\n------|-------------\n2     | Deferred payment. Payment is authorized but the capture operation must be called to initiate the debit. You can start initiate multiple captures that are less than or equal to the original transaction authorization amount.",
            "format": "int32",
            "example": 2
          },
          "description": {
            "type": "string",
            "description": "A description of the transaction.",
            "example": "Deferred"
          }
        }
      },
      "QrpaymentsGetqrpaymentstatusRequest": {
        "title": "QrpaymentsGetqrpaymentstatusRequest",
        "required": [
          "dateTime",
          "qrCode"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "qrCode": {
            "$ref": "#/components/schemas/ObjectQRCodeRequest"
          }
        }
      },
      "DevicesPromptcardreadResponse": {
        "title": "DevicesPromptcardreadResponse",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result48"
            },
            "description": ""
          }
        }
      },
      "P2PEviaIDTechDevice9": {
        "title": "P2PEviaIDTechDevice9",
        "required": [
          "dateTime",
          "card",
          "transaction",
          "p2pe"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "card": {
            "$ref": "#/components/schemas/Card35"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction34"
          },
          "p2pe": {
            "$ref": "#/components/schemas/P2pe"
          }
        }
      },
      "Device54": {
        "title": "Device54",
        "type": "object",
        "properties": {
          "terminalId": {
            "maxLength": 32,
            "type": "string",
            "description": "##### Conditional: Include this field if using a UTG-controlled device.\n\nTo prompt a specific UTG-controlled PIN pad in a request, the API Terminal ID configured in UTG TuneUp must be specified in this field.",
            "example": "1742"
          },
          "form": {
            "$ref": "#/components/schemas/ObjectDeviceFormResponse"
          }
        }
      },
      "ModeOfflineResponse": {
        "title": "ModeOfflineResponse",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result66"
            },
            "description": ""
          }
        }
      },
      "P2PEviaIDTechDevice2": {
        "title": "P2PEviaIDTechDevice2",
        "required": [
          "dateTime",
          "amount",
          "clerk",
          "p2pe",
          "card",
          "transaction"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "apiOptions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "API Options modify the request being made. See the [API Options](#tag/API-Options) section for more information.",
            "example": [
              "RETURNEXPDATE",
              "ALLOWPARTIALAUTH"
            ]
          },
          "amount": {
            "$ref": "#/components/schemas/Amount"
          },
          "clerk": {
            "$ref": "#/components/schemas/ObjectClerk"
          },
          "receiptColumns": {
            "type": "integer",
            "description": "Send this field if you want Shift4 to format the receipt text instead of returning individual fields. The value sent will correlate to the column width of the formatted receipt that we return. (This also allows the receipt text to wrap to fit the paper size of the printed receipt.) See the [Printing Receipts](#tag/Printing-Receipts) section of this document for more information on formatted receipts.",
            "format": "int32",
            "example": 40
          },
          "p2pe": {
            "$ref": "#/components/schemas/P2pe"
          },
          "customer": {
            "$ref": "#/components/schemas/ObjectCustomer"
          },
          "card": {
            "$ref": "#/components/schemas/Card16"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction16"
          }
        },
        "example": {
          "dateTime": "2021-04-15T09:18:23.283-07:00",
          "amount": {
            "tax": 10.05,
            "total": 121.83
          },
          "card": {
            "present": "Y"
          },
          "clerk": {
            "numericId": 1576
          },
          "p2pe": {
            "data": "02df00801f2e1e00939b252a323232312a2a2a2a2a2a2a2a303030395e4d43322f4455414c20545241434b5e2a2a2a2a2a2a2a2a2a2a3f2a3b323232312a2a2a2a2a2a2a2a303030393d2a2a2a2a2a2a2a2a2a2a3f2aa0744ac45073ef2e516cd6b1111c990effb75fbe6521e40be763593c385c6c7cdcd41ffbabb59cd6c999bfe636dff9ef8408e38906db0fdc7497df96a3e8f564b9a4e1bd802f326eb9848b447512384700000000000000000000000000000000000000000000000000000000000000000000000000000000383237543839303939306299495001000000000521d503",
            "format": "02"
          },
          "transaction": {
            "invoice": "192029",
            "notes": "Transaction notes are added here"
          }
        }
      },
      "Account": {
        "title": "Account",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Financial Institution Account Name",
            "example": "Demo Bank"
          },
          "type": {
            "type": "integer",
            "description": "Financial Institution Account Type\n\nCode | Description\n-----|------------\n-1   | Unknown\n0    | Other\n1    | Checking\n2    | Savings",
            "format": "int32",
            "example": 1
          },
          "profile": {
            "type": "integer",
            "description": "Financial Institution Account Profile\n\nCode | Description\n-----|------------\n-1   | Unknown\n0    | Other\n1    | Personal\n2    | Business",
            "format": "int32",
            "example": 1
          },
          "accountNumber": {
            "type": "string",
            "description": "Last 4 digits of the bank account selected, or full Bank Account Number (if approved to receive it).",
            "example": "6748"
          },
          "routingNumber": {
            "type": "string",
            "description": "The routing number identifying the bank.",
            "example": "121000248"
          }
        }
      },
      "SubsequentDeposit": {
        "title": "SubsequentDeposit",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result1"
            },
            "description": ""
          }
        },
        "example": {
          "result": [
            {
              "dateTime": "2021-04-15T09:18:23.283-07:00",
              "amount": {
                "total": 160
              },
              "transaction": {
                "authSource": "A",
                "responseCode": "A",
                "invoice": "193002",
                "notes": "Transaction notes are added here"
              },
              "server": {
                "name": "TM01CE"
              },
              "sourceIp": "63.57.84.101",
              "paymentAccountId": "BF06A6AB-A91D-4145-8704-13B8C48A7A95",
              "currencyCode": "USD",
              "trustly": {
                "originalTransactionId": "1002633190",
                "transactionId": "1002633191",
                "payment": {
                  "id": "1587954687",
                  "type": 2
                },
                "transaction": {
                  "type": "3",
                  "status": "1",
                  "statusMessage": "Pending"
                },
                "account": {
                  "name": "Business Demo Account",
                  "type": 1,
                  "profile": 2,
                  "accountNumber": "9174",
                  "routingNumber": "121000248"
                },
                "paymentProvider": {
                  "id": "200005501",
                  "type": 1,
                  "name": "Demo Bank"
                }
              }
            }
          ]
        }
      },
      "Card21": {
        "title": "Card21",
        "required": [
          "present",
          "number",
          "expirationDate"
        ],
        "type": "object",
        "properties": {
          "entryMode": {
            "$ref": "#/components/schemas/EntryMode1"
          },
          "present": {
            "$ref": "#/components/schemas/PresentRefund"
          },
          "number": {
            "maxLength": 32,
            "type": "string",
            "description": "##### Conditional: Send only when card data is manually entered. This field should not be specified when using an encrypted device.\n\nThe payment card number entered in an initial authorization/sale request. This field will always be masked\nwhen returned in a response.",
            "example": "4321000000001119"
          },
          "expirationDate": {
            "type": "integer",
            "description": "##### Conditional: Send only when card data is manually entered or when using a token. This field should not be specified when using an encrypted device.\n\nCard expiration date in MMYY format. This value should only be populated in the initial sale/authorization request.",
            "format": "int32",
            "example": 1230
          }
        }
      },
      "ObjectDeviceFormItems": {
        "title": "ObjectDeviceFormItems",
        "type": "object",
        "properties": {
          "key": {
            "maxLength": 5,
            "type": "string",
            "description": "A five-character, alphanumeric string containing the ID of the field which you want to display a custom value on.",
            "example": "1"
          },
          "value": {
            "maxLength": 200,
            "type": "string",
            "description": "The value that should be displayed in the field specified by the key.",
            "example": "John Smith"
          }
        }
      },
      "TransactionResponseCodeQRPaymentStatus": {
        "title": "TransactionResponseCodeQRPaymentStatus",
        "enum": [
          "A",
          "C",
          "T"
        ],
        "type": "string",
        "description": "Code indicating that the status of the QR code payment\n\nValue  |Description\n-------|-----------\nA      | The QR Payment was processed and approved.\nC      | The QR Payment was cancelled. The QR code had not been used for payment or the payment was not successful.\nT      | The QR Payment was cancelled. The QR code had already been used for payment and was approved. The approval was reversed."
      },
      "Card39": {
        "title": "Card39",
        "required": [
          "present",
          "number"
        ],
        "type": "object",
        "properties": {
          "present": {
            "$ref": "#/components/schemas/Present"
          },
          "number": {
            "maxLength": 32,
            "type": "string",
            "description": "##### Conditional: Send only when card data is manually entered. This field should not be specified when using an encrypted device.\n\nThe payment card number. This field will always be masked when returned in a response.",
            "example": "2664654648774"
          },
          "expirationDate": {
            "type": "integer",
            "description": "##### Conditional: Send in the request for manually entered or token transactions if the card has an expiration date. This field should not be specified when using an encrypted device.\n\nCard expiration date in MMYY format.",
            "format": "int32",
            "example": 1230
          },
          "securityCode": {
            "$ref": "#/components/schemas/ObjectCardSecurityCodeGC"
          }
        }
      },
      "Card75": {
        "title": "Card75",
        "required": [
          "token"
        ],
        "type": "object",
        "properties": {
          "token": {
            "$ref": "#/components/schemas/Token23"
          }
        }
      },
      "BatchInclusiveResponse": {
        "title": "BatchInclusiveResponse",
        "enum": [
          "Y",
          "N"
        ],
        "type": "string",
        "description": "Indicates whether or not the batch includes transactions for every day leading up to the business date.\n\nValue|Description\n-----|-----------\nY    | the batch includes transactions for every day leading up to the specified business date\nN    | the batch includes transactions for only the specified business date",
        "example": "N"
      },
      "TransactionQRSaleFlag": {
        "title": "TransactionQRSaleFlag",
        "enum": [
          "A",
          "S"
        ],
        "type": "string",
        "description": "Specifies a transaction is a sale (‘S’) or authorization (‘A’).  Value sent in the [Get QR Code](#operation/getqrcode) request will be returned in the [Get QR Details](#operation/getqrdetails) response.",
        "example": "S"
      },
      "Card83": {
        "title": "Card83",
        "type": "object",
        "properties": {
          "token": {
            "$ref": "#/components/schemas/Token25"
          }
        }
      },
      "DevicesInitializereadersRequest": {
        "title": "DevicesInitializereadersRequest",
        "required": [
          "dateTime",
          "device"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "device": {
            "$ref": "#/components/schemas/ObjectDeviceOnlyTID"
          }
        }
      },
      "DevicesPromptinputResponse": {
        "title": "DevicesPromptinputResponse",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result49"
            },
            "description": ""
          }
        }
      },
      "P2PEEMV5": {
        "title": "P2PEEMV5",
        "required": [
          "dateTime",
          "card",
          "device",
          "emv",
          "p2pe"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "card": {
            "$ref": "#/components/schemas/Card66"
          },
          "device": {
            "$ref": "#/components/schemas/Device1"
          },
          "emv": {
            "$ref": "#/components/schemas/Emv"
          },
          "p2pe": {
            "$ref": "#/components/schemas/P2pe1"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction64"
          },
          "customer": {
            "$ref": "#/components/schemas/ObjectCustomer"
          }
        }
      },
      "Result4": {
        "title": "Result4",
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "credential": {
            "$ref": "#/components/schemas/Credential"
          },
          "server": {
            "$ref": "#/components/schemas/ObjectServer"
          }
        }
      },
      "Device36": {
        "title": "Device36",
        "type": "object",
        "properties": {
          "terminalId": {
            "maxLength": 32,
            "type": "string",
            "description": "##### Conditional: Include this field if using a UTG-controlled device.\n\nTo prompt a specific UTG-controlled PIN pad in a request, the API Terminal ID configured in UTG TuneUp must be specified in this field.",
            "example": "1742"
          }
        }
      },
      "DevicesPromptcardreadRequest": {
        "title": "DevicesPromptcardreadRequest",
        "required": [
          "dateTime",
          "device"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "device": {
            "$ref": "#/components/schemas/ObjectDeviceOnlyTID"
          }
        }
      },
      "PaymentProviderTransaction": {
        "title": "PaymentProviderTransaction",
        "required": [
          "id",
          "status",
          "statusMessage"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique payment provider transaction identifier.",
            "example": "ptx-ol33U2KYBoQLEI3zV_09LyVo-sbx"
          },
          "status": {
            "type": "string",
            "description": "Value        |  Description\n-------------|-------------\nSW010        | Established\nSW013        | Canceled\nSW020        | Authorization received\nSW021        | Authorization denied\nSW051        | Merchant error\nSW052        | Financial Institution error\nSW053        | Internal network error\nSW054        | Suspicious transaction activity\nSW055        | Negative data\nSW056        | Invalid account\nSW057        | Expired split token\nSW059        | Instant transaction rejected due to risk\nSW060        | Bank or network processor is down\nUC01         | User canceled the transaction at bank selection page\nUC02         | User canceled the transaction at login page\nUC03         | User canceled the transaction at invalid login page\nUC04         | User canceled the transaction at challenge question page\nUC05         | User canceled the transaction at invalid answers for challenge questions page.\nUC06         | User canceled the transaction at MFA page\nUC07         | User canceled the transaction at invalid MFA page\nUC08         | User canceled the transaction at account selection page\nUC09         | User canceled the transaction at error page\nUC10         | User canceled the transaction at partial account number page\nUC11         | User canceled the transaction at select account location page\nUC12         | User canceled the transaction because it does not have a bank on the list\nUC13         | User canceled the transaction at login with captcha page\nUC14         | User canceled the transaction at captcha validation page\nUC15         | User canceled the transaction at manual account input page\nUC16         | User canceled the transaction at manual account confirmation page\nUC17         | User canceled the transaction at MCD confirmation page\nUC18         | User canceled the transaction at MCD validation page\nUC19         | User canceled the transaction at account profile input page\nUC20         | User canceled the transaction at no dynamic balance page\nUC21         | User canceled the transaction at partial account not supported page\nUC22         | User canceled the transaction at security script page\nUC23         | User canceled the transaction at account not supported page\nUC24         | User canceled the transaction at authorize page with exception\nUC25         | User canceled the transaction at bad account page\nUC26         | User canceled the transaction at the bank's reset password screen\nUC27         | User canceled the transaction because the bank was unavailable\nUC28         | User canceled the transaction at an external screen\nUC29         | User canceled the transaction due to a timeout\nUC30         | User canceled on the manual entry screen after an invalid routing or account number entry\nUC31         | User canceled on the manual entry screen due to related information (SWIFT code or address) not being found\nAC100        | AC Pending\nAC101        | AC Declined\nAC102        | AC Approved\nAC103        | AC Error\nAC104        | AC Voided\nAC105        | AC Processed\nAC106        | AC Collected\nAC107        | AC Awaiting Capture\nAC108        | AC Awaiting Approval\nAC109        | AC Suspended\nAC110        | AC In Collection\nAC111        | AC In Research\nAC112        | AC Disputed\nAC113        | AC Uncollected, Insufficient Funds\nAC114        | AC Invalid or Closed Account\nAC115        | AC Other Returns\nAC116        | AC None\nAC117        | AC Expired\nAC118        | AC Settled\nSE01         | System in maintenance mode\nSE02         | System error connecting to API services\nSE03         | System error connecting to financial services gateway\nR01 to R84   | ACH return codes 01 to 84.\n900          | Account information incorrectly entered\n901          | Insufficient Funds\n902          | Account not Found\n903          | Payment Stopped/Recalled\n904          | Post/Stale Dated\n905          | Account Closed\n907          | No Debit Allowed\n908          | Funds Not Cleared\n909          | Currency/Account Mismatch\n910          | Payor/Payee Deceased\n911          | Account Frozen\n912          | Invalid/Incorrect Account No\n914          | Incorrect Payor/Payee Name\n915          | No Agreement Existed - Business/Personal Refused\n916          | Not in accordance with Agreement - Personal\n917          | Agreement Revoked - Personal\n918          | No Confirmation/Pre-Notification - Personal\n919          | Not in accordance with Agreement - Business\n920          | Agreement Revoked - Business\n921          | No Pre-Notification - Business\n922          | Customer Initiated Return - Credit Only\n990          | Institution in Default\n996          | Chargeback",
            "example": "4"
          },
          "statusMessage": {
            "type": "string",
            "description": "Status message of the related bank authorization",
            "example": "Established"
          }
        }
      },
      "ModeOnlineResponse": {
        "title": "ModeOnlineResponse",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result66"
            },
            "description": ""
          }
        }
      },
      "QrpaymentsGetqrcode400Error1": {
        "title": "QrpaymentsGetqrcode400Error1",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result5"
            },
            "description": ""
          }
        }
      },
      "DevicesPromptinputRequest": {
        "title": "DevicesPromptinputRequest",
        "required": [
          "dateTime",
          "device"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "device": {
            "$ref": "#/components/schemas/Device51"
          }
        }
      },
      "GiftcardsBalanceResponse": {
        "title": "GiftcardsBalanceResponse",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result31"
            },
            "description": ""
          }
        }
      },
      "Device51": {
        "title": "Device51",
        "required": [
          "terminalId",
          "promptInput"
        ],
        "type": "object",
        "properties": {
          "terminalId": {
            "maxLength": 32,
            "type": "string",
            "description": "To prompt a specific UTG-controlled PIN pad in a request, the API Terminal ID configured in UTG TuneUp must be specified in this field.",
            "example": "1742"
          },
          "promptInput": {
            "$ref": "#/components/schemas/ObjectDevicePromptInput"
          }
        }
      },
      "ErrorResponse1": {
        "title": "ErrorResponse1",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result6"
            },
            "description": ""
          }
        },
        "example": {
          "result": [
            {
              "error": {
                "longText": "Card type not recognized",
                "primaryCode": 9842,
                "secondaryCode": 0,
                "shortText": "NOT IN CARDRANGE"
              },
              "lighthouse": {
                "data": "eyJwYXltZW50SWQiOiI4NWM0MWNhNy01NzVjLTQzNGUtODIyZi0xYzZlOTE0ZDAzODYiLCJyZW1haW5pbmdBbW91bnQiOjB9"
              },
              "server": {
                "name": "U2API01CE"
              }
            }
          ]
        }
      },
      "P2PEMagstripeMSR6": {
        "title": "P2PEMagstripeMSR6",
        "required": [
          "dateTime",
          "amount",
          "card",
          "transaction",
          "device",
          "p2pe"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "amount": {
            "$ref": "#/components/schemas/ObjectAmountGC"
          },
          "card": {
            "$ref": "#/components/schemas/Card35"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction34"
          },
          "device": {
            "$ref": "#/components/schemas/Device1"
          },
          "p2pe": {
            "$ref": "#/components/schemas/ObjectP2PEType05"
          }
        }
      },
      "P2PEviaIDTechDevice12": {
        "title": "P2PEviaIDTechDevice12",
        "required": [
          "dateTime",
          "p2pe"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "p2pe": {
            "$ref": "#/components/schemas/P2pe"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction64"
          },
          "customer": {
            "$ref": "#/components/schemas/ObjectCustomer"
          }
        }
      },
      "DccCapable": {
        "title": "DccCapable",
        "enum": [
          "Y",
          "N"
        ],
        "type": "string",
        "description": "In BIN management, specifies whether or not the card is dynamic currency conversion (DCC) capable.",
        "example": "Y"
      },
      "CardNumberUnencrypted7": {
        "title": "CardNumberUnencrypted7",
        "required": [
          "dateTime",
          "card",
          "transaction"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "card": {
            "$ref": "#/components/schemas/Card44"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction34"
          }
        }
      },
      "CardNumberUnencrypted13": {
        "title": "CardNumberUnencrypted13",
        "required": [
          "dateTime",
          "card"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "card": {
            "$ref": "#/components/schemas/Card72"
          }
        }
      },
      "CredentialsAccesstokenRequest": {
        "title": "CredentialsAccesstokenRequest",
        "required": [
          "dateTime",
          "credential"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "credential": {
            "$ref": "#/components/schemas/ObjectCredential"
          }
        }
      },
      "Customer3": {
        "title": "Customer3",
        "required": [
          "postalCode"
        ],
        "type": "object",
        "properties": {
          "addressLine1": {
            "maxLength": 30,
            "type": "string",
            "description": "Cardholder’s street address exactly as it appears on their billing statement. This field is used in AVS.",
            "example": "65 Easy St"
          },
          "firstName": {
            "maxLength": 30,
            "type": "string",
            "description": "##### Conditional: Send only when card data is manually entered. This field should not be specified when using an encrypted device.\n\nSpecifies a consumer’s first name. This field is used in AVS. If the interface sends this field, the value specified by the interface will be returned in the response, unless the API Option USECARDNAME is included in the request and a UTG-controlled PIN pad is in use. If the interface does not send the <samp>customer</samp> object, the consumer's name will be returned in the <samp>customer</samp> object if the name is present in the card's track data.",
            "example": "John"
          },
          "lastName": {
            "maxLength": 30,
            "type": "string",
            "description": "##### Conditional: Send only when card data is manually entered. This field should not be specified when using an encrypted device.\n\nSpecifies a consumer’s last name. This field is used in AVS. If the interface sends this field, the value specified by the interface will be returned in the response, unless the API Option USECARDNAME is included in the request and a UTG-controlled PIN pad is in use. If the interface does not send the <samp>customer</samp> object, the consumer's name will be returned in the <samp>customer</samp> object if the name is present in the card's track data.",
            "example": "Smith"
          },
          "postalCode": {
            "maxLength": 9,
            "minLength": 5,
            "type": "string",
            "description": "Cardholder’s ZIP/postal code from their billing statement. This field is used in AVS. Do not include special characters.",
            "example": "65144"
          }
        }
      },
      "ObjectQRCodeRequest": {
        "title": "ObjectQRCodeRequest",
        "required": [
          "value"
        ],
        "type": "object",
        "properties": {
          "value": {
            "maxLength": 1024,
            "type": "string",
            "description": "Contains the QR Code URL string. This must match the value received in the [Get QR Code](#operation/getqrcode) response.",
            "example": "https://pay.skytab.com/A3KD42J"
          }
        }
      },
      "TransactionAuthSourceMode": {
        "title": "TransactionAuthSourceMode",
        "enum": [
          "E",
          "O"
        ],
        "type": "string",
        "description": "Indicates whether the UTG is online or offline.\n\nValue  | Description       \n-------|----------------------------\nE      | Online\nO      | Offline",
        "example": "O"
      },
      "CardNumberUnencrypted5": {
        "title": "CardNumberUnencrypted5",
        "required": [
          "dateTime",
          "card"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "card": {
            "$ref": "#/components/schemas/Card34"
          },
          "apiOptions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "API Options modify the request being made. See the [API Options](#tag/API-Options) section for more information.",
            "example": [
              "RETURNEXPDATE",
              "ALLOWPARTIALAUTH"
            ]
          },
          "customer": {
            "$ref": "#/components/schemas/Customer2"
          }
        }
      },
      "InitialDeposit": {
        "title": "InitialDeposit",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result"
            },
            "description": ""
          }
        },
        "example": {
          "result": [
            {
              "dateTime": "2021-04-15T09:18:23.283-07:00",
              "amount": {
                "total": 155
              },
              "server": {
                "name": "TM01CE"
              },
              "sourceIp": "63.57.84.101",
              "transaction": {
                "authSource": "A",
                "responseCode": "A",
                "invoice": "193010",
                "notes": "Transaction notes are added here"
              },
              "redirectUrl": "https://sandbox.trustly.com/start/scripts/paywithmybank.js?accessId=p8HFpPsRmGjhCsbe62YM",
              "trustly": {
                "state": "RedirectDataCreated",
                "establishData": {
                  "accessId": "p8HFpPsRmGjhCsbe62YM",
                  "amount": "155.00",
                  "cancelUrl": "https://merchant.com/trustly/cancel",
                  "currency": "USD",
                  "customer": {
                    "address": {
                      "address1": "2000 Broadway St",
                      "city": "Redwood City",
                      "country": "US",
                      "state": "CA",
                      "zip": "94063"
                    },
                    "email": "firstname.lastname@email.com",
                    "enrollDate": "1630595607",
                    "externalId": "externalId",
                    "name": "firstName lastName",
                    "phone": "+13110001234",
                    "taxId": "crypt2:DSNdJAZqXkbvoBk2r1M7ESkn4/OVJ+lgMqIxrdirPHs="
                  },
                  "description": "transaction description",
                  "merchantId": "1016236765",
                  "merchantReference": "48973-2038273-89457918",
                  "paymentType": "Deferred",
                  "requestSignature": "a/n62XqfgQA31xmFnCxNEOjd7g=",
                  "returnUrl": "https://merchant.com/trustly/success"
                }
              }
            }
          ]
        }
      },
      "Amount11": {
        "title": "Amount11",
        "required": [
          "total"
        ],
        "type": "object",
        "properties": {
          "total": {
            "type": "number",
            "description": "The amount of the refund.",
            "example": 51.32
          }
        }
      },
      "Amount13": {
        "title": "Amount13",
        "required": [
          "total",
          "tax"
        ],
        "type": "object",
        "properties": {
          "total": {
            "type": "number",
            "description": "The amount being charged for a particular transaction. If other amount fields are sent, they must be included in the total amount.",
            "example": 160
          },
          "tax": {
            "type": "number",
            "description": "The amount of sales tax charged for a transaction. The tax amount is used by businesses to track tax expenses for accounting purposes. Identifying the tax amount also helps consumers understand the total amount that they were billed.  This field is part of Level 2 card data.",
            "example": 15
          },
          "tip": {
            "type": "number",
            "description": "##### Conditional: Send in the request if a tip is included.\n\nThe tip amount of the transaction.",
            "example": 20
          },
          "surcharge": {
            "type": "number",
            "description": "##### Conditional: Send in the request if charging a surcharge for the transaction\n\nIn a sale or authorization transaction, the <samp>surcharge</samp> field specifies a fee amount that a consumer is charged in addition to the transaction amount. Using the <samp>surcharge</samp> field is required by the processors to identify any fee amount being charged when a consumer pays for a transaction with a credit or debit card.",
            "example": 5
          },
          "cashback": {
            "type": "number",
            "description": "Specifies the cashback amount in a transaction. When using a UTG-controlled PIN pad with the ALLOWCASHBACK API Option, this field will return the cashback amount requested by the consumer. The interface can also send the desired cashback amount in a request by adding it to the <samp>amount.total</samp> and including it in the <samp>amount.cashback</samp> field. This will bypass prompting the consumer for a cashback amount.",
            "example": 20
          }
        }
      },
      "ObjectQRCodeResponse": {
        "title": "ObjectQRCodeResponse",
        "type": "object",
        "properties": {
          "value": {
            "maxLength": 1024,
            "type": "string",
            "description": "Contains the QR Code URL string. This string can be converted to a QR code for printing on receipts or displaying on devices.",
            "example": "https://pay.skytab.com/A3KD42J"
          }
        }
      },
      "Card65": {
        "title": "Card65",
        "required": [
          "token"
        ],
        "type": "object",
        "properties": {
          "token": {
            "$ref": "#/components/schemas/ObjectCardTokenRequired"
          },
          "expirationDate": {
            "type": "integer",
            "description": "##### Conditional: Send only when card data is manually entered or when using a token. This field should not be specified when using an encrypted device.\n\nCard expiration date in MMYY format. This value should only be populated in the initial sale/authorization request.",
            "format": "int32",
            "example": 1230
          },
          "securityCode": {
            "$ref": "#/components/schemas/ObjectCardSecurityCode"
          }
        }
      },
      "Card76": {
        "title": "Card76",
        "type": "object",
        "properties": {
          "entryMode": {
            "$ref": "#/components/schemas/EntryMode"
          },
          "expirationDate": {
            "type": "integer",
            "description": "##### Conditional: Requires API Option \"RETURNEXPDATE\". \n\nCard expiration date in MMYY format. This value will only be populated if \"RETURNEXPDATE\" is included in the <samp>apiOptions</samp> array.",
            "format": "int32",
            "example": 1230
          },
          "levelResult": {
            "maxLength": 2,
            "minLength": 2,
            "type": "string",
            "description": "Classifies the type of card used in an authorization/sale request. This field is returned in a response if the data is provided by the processor. See [Card Level Results](#tag/Card-Level-Results) for a complete list of values.",
            "example": "2C"
          },
          "number": {
            "maxLength": 32,
            "type": "string",
            "description": "The card number field will always be masked when returned in a response.",
            "example": "XXXXXXXXXXXX1119"
          },
          "present": {
            "$ref": "#/components/schemas/Present"
          },
          "type": {
            "$ref": "#/components/schemas/CardTypeResp"
          },
          "balance": {
            "$ref": "#/components/schemas/ObjectCardBalance"
          },
          "token": {
            "$ref": "#/components/schemas/ObjectCardToken"
          }
        }
      },
      "P2PEFormat": {
        "title": "P2PEFormat",
        "enum": [
          "01",
          "02",
          "03",
          "04",
          "05"
        ],
        "type": "string",
        "description": "Classifies the type of payment device being used for P2PE.\n\nValue|Description\n-----|-----------\n01   | IDTech Enhanced Encryption format\n02   | IDTech Enhanced Encryption format USB HID\n03   | Ingenico format\n04   | VeriFone format\n05   | Shift4 Payments 3DES DUKPT format",
        "example": "01"
      },
      "Customer": {
        "title": "Customer",
        "required": [
          "postalCode"
        ],
        "type": "object",
        "properties": {
          "addressLine1": {
            "maxLength": 30,
            "type": "string",
            "description": "Cardholder’s street address exactly as it appears on their billing statement. This field is used in AVS.",
            "example": "65 Easy St"
          },
          "firstName": {
            "maxLength": 30,
            "type": "string",
            "description": "##### Conditional: Send only when card data is manually entered. This field should not be specified when using an encrypted device.\n\nSpecifies a consumer’s first name. This field is used in AVS. If the interface sends this field, the value specified by the interface will be returned in the response, unless the API Option USECARDNAME is included in the request and a UTG-controlled PIN pad is in use. If the interface does not send the <samp>customer</samp> object, the consumer's name will be returned in the <samp>customer</samp> object if the name is present in the card's track data.",
            "example": "John"
          },
          "lastName": {
            "maxLength": 30,
            "type": "string",
            "description": "##### Conditional: Send only when card data is manually entered. This field should not be specified when using an encrypted device.\n\nSpecifies a consumer’s last name. This field is used in AVS. If the interface sends this field, the value specified by the interface will be returned in the response, unless the API Option USECARDNAME is included in the request and a UTG-controlled PIN pad is in use. If the interface does not send the <samp>customer</samp> object, the consumer's name will be returned in the <samp>customer</samp> object if the name is present in the card's track data.",
            "example": "Smith"
          },
          "postalCode": {
            "maxLength": 9,
            "minLength": 5,
            "type": "string",
            "description": "Cardholder’s ZIP/postal code from their billing statement. This field is used in AVS. Do not include special characters.",
            "example": "65144"
          },
          "emailAddress": {
            "maxLength": 80,
            "type": "string",
            "description": "Customer email address.",
            "example": "firstname.lastname@email.com"
          },
          "ipAddress": {
            "maxLength": 20,
            "type": "string",
            "description": "Public source IP Address where the request originates,\nnot the IP Address of the web server.",
            "example": "63.57.84.101"
          }
        }
      },
      "Customer10": {
        "title": "Customer10",
        "type": "object",
        "properties": {
          "emailAddress": {
            "type": "string",
            "description": "This is the email address submitted by the customer.",
            "example": "firstname.lastname@email.com"
          },
          "fullName": {
            "type": "string",
            "description": "Name submitted with the order",
            "example": "John Smith"
          },
          "addressLine1": {
            "type": "string",
            "description": "Billing street address - Line 1",
            "example": "65 Easy St"
          },
          "addressLine2": {
            "type": "string",
            "description": "Billing street address - Line 2",
            "example": "c/o John Doe"
          },
          "city": {
            "type": "string",
            "description": "Billing address - City",
            "example": "Las Vegas"
          },
          "region": {
            "type": "string",
            "description": "Billing address - State/Province",
            "example": "NV"
          },
          "postalCode": {
            "maxLength": 9,
            "minLength": 5,
            "type": "string",
            "description": "Billing address - Postal Code",
            "example": "65144"
          },
          "country": {
            "type": "string",
            "description": "Billing address - Country",
            "example": "US"
          },
          "phoneNumber": {
            "type": "string",
            "description": "Bill-to Phone Number",
            "example": "+13110001234"
          },
          "shipping": {
            "$ref": "#/components/schemas/Shipping"
          }
        }
      },
      "Device": {
        "title": "Device",
        "required": [
          "terminalId"
        ],
        "type": "object",
        "properties": {
          "terminalId": {
            "maxLength": 32,
            "type": "string",
            "description": "##### Conditional: Include this field if using a UTG-controlled device.\n\nTo prompt a specific UTG-controlled PIN pad in a request, the API Terminal ID configured in UTG TuneUp must be specified in this field.",
            "example": "1742"
          },
          "promptPostalCode": {
            "$ref": "#/components/schemas/DevicePromptPostalCode"
          },
          "promptCardSecurityCode": {
            "$ref": "#/components/schemas/DevicePromptCardSecurityCode"
          },
          "promptStreetNumber": {
            "$ref": "#/components/schemas/DevicePromptStreetNumber"
          }
        }
      },
      "QrpaymentsGetqrpaymentstatus400Error1": {
        "title": "QrpaymentsGetqrpaymentstatus400Error1",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result5"
            },
            "description": ""
          }
        }
      },
      "Merchant": {
        "title": "Merchant",
        "type": "object",
        "properties": {
          "addressLine1": {
            "maxLength": 38,
            "type": "string",
            "description": "First line in the merchant’s business address as configured with Shift4 Payments.",
            "example": "456 Fake St"
          },
          "addressLine2": {
            "maxLength": 38,
            "type": "string",
            "description": "Second line in the merchant’s business address as configured with Shift4 Payments.",
            "example": "Suite 100"
          },
          "city": {
            "maxLength": 13,
            "type": "string",
            "description": "City of the merchant’s business address as configured with Shift4 Payments.",
            "example": "Las Vegas"
          },
          "dayEndingTime": {
            "maxLength": 6,
            "type": "string",
            "description": "The time the merchant’s business day ends as configured with Shift4 Payments.",
            "example": "010000"
          },
          "industry": {
            "$ref": "#/components/schemas/MerchantIndustry"
          },
          "name": {
            "maxLength": 22,
            "type": "string",
            "description": "The merchant’s business name as configured with Shift4 Payments.",
            "example": "Merchant XYZ"
          },
          "region": {
            "maxLength": 3,
            "type": "string",
            "description": "Region (State) of the merchant’s business address as configured with Shift4 Payments.",
            "example": "NV"
          },
          "phone": {
            "maxLength": 15,
            "type": "string",
            "description": "The merchant’s business telephone number as configured with Shift4 Payments.",
            "example": "702-123-4567"
          },
          "postalCode": {
            "maxLength": 9,
            "type": "string",
            "description": "ZIP/Postal Code of the merchant’s business address as configured with Shift4 Payments.",
            "example": "78402"
          },
          "serialNumber": {
            "maxLength": 11,
            "type": "string",
            "description": "The serial number of the merchant's account with Shift4 Payments.",
            "example": "00000044444"
          },
          "mid": {
            "maxLength": 10,
            "type": "string",
            "description": "The merchant ID associated with the merchant account.",
            "example": "15877"
          },
          "cardTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectMerchantCardTypes"
            },
            "description": "array of Mechant Card Types",
            "example": [
              {
                "type": "VS",
                "voiceCenter": {
                  "accountNumber": "2919201",
                  "phoneNumber": "1-800-444-5566"
                }
              },
              {
                "type": "MC",
                "voiceCenter": {
                  "accountNumber": "2919201",
                  "phoneNumber": "1-800-444-5566"
                }
              },
              {
                "type": "AX",
                "voiceCenter": {
                  "accountNumber": "65168416",
                  "phoneNumber": "1-800-123-1126"
                }
              },
              {
                "type": "NS",
                "voiceCenter": {
                  "accountNumber": "68406848684",
                  "phoneNumber": "1-888-320-1640"
                }
              }
            ]
          }
        }
      },
      "Device6": {
        "title": "Device6",
        "required": [
          "terminalId"
        ],
        "type": "object",
        "properties": {
          "terminalId": {
            "maxLength": 32,
            "type": "string",
            "description": "##### Conditional: Include this field if using a UTG-controlled device.\n\nTo prompt a specific UTG-controlled PIN pad in a request, the API Terminal ID configured in UTG TuneUp must be specified in this field.",
            "example": "1742"
          }
        }
      },
      "DevicesPromptconfirmationResponse": {
        "title": "DevicesPromptconfirmationResponse",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result41"
            },
            "description": ""
          }
        }
      },
      "Result5": {
        "title": "Result5",
        "type": "object",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/ObjectError"
          },
          "server": {
            "$ref": "#/components/schemas/ObjectServer"
          }
        }
      },
      "Customer8": {
        "title": "Customer8",
        "type": "object",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "email": {
            "maxLength": 80,
            "type": "string",
            "description": "Customer email address.",
            "example": "firstname.lastname@email.com"
          },
          "enrollDate": {
            "type": "string",
            "description": "Date of the user's first transaction in your system, regardless of payment  method used. This should be passed as a Unix Timestamp (epoch) in ms.",
            "example": "1630595607"
          },
          "externalId": {
            "type": "string",
            "description": "Your external identifier for the Customer",
            "example": "OD-123"
          },
          "name": {
            "type": "string",
            "description": "User's full name",
            "example": "John Smith"
          },
          "phone": {
            "type": "string",
            "description": "Customer phone number",
            "example": "+13110001234"
          },
          "taxId": {
            "type": "string",
            "description": "The customer's encrypted social security number.",
            "example": "crypt2:DSNdJAZqXkbvoBk2r1M7ESkn4/OVJ+lgMqIxrdirPHs="
          }
        }
      },
      "Device44": {
        "title": "Device44",
        "type": "object",
        "properties": {
          "info": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "An array of details regarding a UTG-controlled device.",
            "example": [
              "NUMBER_MSR_SWIPES=1634",
              "NUMBER_BAD_TRACK1_READS=85",
              "NUMBER_BAD_TRACK2_READS=395",
              "NUMBER_BAD_TRACK3_READS=337",
              "NUMBER_SIGNATURE_TOTALS=0000",
              "NUMBER_REBOOTS=0760",
              "TERMINAL_NAME=iPP350",
              "UNIT_SERIAL_NUMBER=2013016PT012622",
              "OS_VERSION=5220",
              "APPLICATION_VERSION=2156",
              "SECURITY_LIBRARY_VERSION=0415",
              "TDA_VERSION=1603",
              "EFTL_VERSION=0000",
              "EFTP_VERSION=0000",
              "RAM_SIZE=8628",
              "FLASH_SIZE=111064",
              "MANUFACTURE_DATE=2013-01-16",
              "CPEM_TYPE=1",
              "PEN_STATUS=UNSUPPORTED_DEVICE",
              "APPLICATION_NAME=Retail Base",
              "MANUFACTURE_ID=INGNAR",
              "DIGITIZER_VERSION=0000",
              "MANUFACTURER_SERIAL_NUMBER=71429877",
              "DUKPT0=F876543210016F8000F7",
              "DUKPT4=FFFF49003614954000B9"
            ]
          },
          "terminalId": {
            "maxLength": 32,
            "type": "string",
            "description": "##### Conditional: Include this field if using a UTG-controlled device.\n\nTo prompt a specific UTG-controlled PIN pad in a request, the API Terminal ID configured in UTG TuneUp must be specified in this field.",
            "example": "1742"
          }
        }
      },
      "Payment1": {
        "title": "Payment1",
        "required": [
          "id",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 15,
            "type": "string",
            "description": "A unique Trustly payment identifier.",
            "example": "1587954687"
          },
          "type": {
            "type": "integer",
            "description": "Value |  Description\n------|-------------\n2     | Deferred payment. Payment is authorized but the capture operation must be called to initiate the debit. You can start initiate multiple captures that are less than or equal to the original transaction authorization amount.",
            "format": "int32",
            "example": 2
          }
        }
      },
      "DevicesPromptsignatureResponse": {
        "title": "DevicesPromptsignatureResponse",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result39"
            },
            "description": ""
          }
        }
      },
      "GiftcardsReactivateResponse": {
        "title": "GiftcardsReactivateResponse",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result33"
            },
            "description": ""
          }
        }
      },
      "ModeOfflineRequest": {
        "title": "ModeOfflineRequest",
        "required": [
          "dateTime"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          }
        }
      },
      "QrpaymentsGetqrcodeResponse": {
        "title": "QrpaymentsGetqrcodeResponse",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result58"
            },
            "description": ""
          }
        }
      },
      "Customer20": {
        "title": "Customer20",
        "required": [
          "externalId",
          "enrollDate"
        ],
        "type": "object",
        "properties": {
          "postalCode": {
            "maxLength": 9,
            "minLength": 5,
            "type": "string",
            "description": "5-9 character Postal Code.",
            "example": "65144"
          },
          "externalId": {
            "type": "string",
            "description": "Your external identifier for the Customer",
            "example": "OD-123"
          },
          "enrollDate": {
            "type": "string",
            "description": "Date of the user's first transaction in your system, regardless of payment  method used. The date and time must be passed in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm)",
            "example": "2019-03-14T11:16:42.896-07:00"
          }
        }
      },
      "DevicesLineitemsRequest": {
        "title": "DevicesLineitemsRequest",
        "required": [
          "dateTime",
          "device"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "apiOptions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "API Options modify the request being made. See the [API Options](#tag/API-Options) section for more information.",
            "example": [
              "RETURNEXPDATE",
              "ALLOWPARTIALAUTH"
            ]
          },
          "device": {
            "$ref": "#/components/schemas/Device41"
          }
        }
      },
      "GiftcardsAllocate400Error1": {
        "title": "GiftcardsAllocate400Error1",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result5"
            },
            "description": ""
          }
        }
      },
      "Card16": {
        "title": "Card16",
        "required": [
          "present"
        ],
        "type": "object",
        "properties": {
          "present": {
            "$ref": "#/components/schemas/PresentRefund"
          },
          "type": {
            "$ref": "#/components/schemas/CardType"
          }
        }
      },
      "Customer2": {
        "title": "Customer2",
        "type": "object",
        "properties": {
          "addressLine1": {
            "maxLength": 30,
            "type": "string",
            "description": "Cardholder’s street address exactly as it appears on their billing statement. This field is used in AVS.",
            "example": "65 Easy St"
          },
          "firstName": {
            "maxLength": 30,
            "type": "string",
            "description": "##### Conditional: Send only when card data is manually entered. This field should not be specified when using an encrypted device.\n\nSpecifies a consumer’s first name. This field is used in AVS. If the interface sends this field, the value specified by the interface will be returned in the response, unless the API Option USECARDNAME is included in the request and a UTG-controlled PIN pad is in use. If the interface does not send the <samp>customer</samp> object, the consumer's name will be returned in the <samp>customer</samp> object if the name is present in the card's track data.",
            "example": "John"
          },
          "lastName": {
            "maxLength": 30,
            "type": "string",
            "description": "##### Conditional: Send only when card data is manually entered. This field should not be specified when using an encrypted device.\n\nSpecifies a consumer’s last name. This field is used in AVS. If the interface sends this field, the value specified by the interface will be returned in the response, unless the API Option USECARDNAME is included in the request and a UTG-controlled PIN pad is in use. If the interface does not send the <samp>customer</samp> object, the consumer's name will be returned in the <samp>customer</samp> object if the name is present in the card's track data.",
            "example": "Smith"
          },
          "postalCode": {
            "maxLength": 9,
            "minLength": 5,
            "type": "string",
            "description": "Cardholder’s ZIP/postal code from their billing statement. This field is used in AVS. Do not include special characters.",
            "example": "65144"
          }
        }
      },
      "ObjectBatchResponseNoProcessors": {
        "title": "ObjectBatchResponseNoProcessors",
        "type": "object",
        "properties": {
          "inclusive": {
            "$ref": "#/components/schemas/BatchInclusiveResponse"
          },
          "netAmount": {
            "type": "number",
            "description": "The net amount in the batch (saleAmount MINUS refundAmount)",
            "example": 5601.78
          },
          "netCount": {
            "type": "integer",
            "description": "The net transaction count in the batch (saleCount PLUS refundCount)",
            "format": "int32",
            "example": 187
          },
          "refundAmount": {
            "type": "number",
            "description": "The total amount of all refunds in the batch",
            "example": 100
          },
          "refundCount": {
            "type": "integer",
            "description": "The count of all refunds in the batch",
            "format": "int32",
            "example": 1
          },
          "saleAmount": {
            "type": "number",
            "description": "The total amount of all sales in the batch",
            "example": 5701.78
          },
          "saleCount": {
            "type": "integer",
            "description": "The count of all sales in the batch",
            "format": "int32",
            "example": 186
          }
        }
      },
      "Account4": {
        "title": "Account4",
        "required": [
          "accountNumber",
          "name",
          "profile",
          "routingNumber",
          "type"
        ],
        "type": "object",
        "properties": {
          "accountNumber": {
            "type": "string",
            "description": "Last 4 digits of the bank account selected, or full Bank Account Number (if approved to receive it).",
            "example": "6748"
          },
          "name": {
            "type": "string",
            "description": "Financial Institution Account Name",
            "example": "Demo Bank"
          },
          "profile": {
            "type": "integer",
            "description": "Financial Institution Account Profile\n\nCode | Description\n-----|------------\n-1   | Unknown\n0    | Other\n1    | Personal\n2    | Business",
            "format": "int32",
            "example": 1
          },
          "routingNumber": {
            "type": "string",
            "description": "The routing number identifying the bank.",
            "example": "121000248"
          },
          "type": {
            "type": "integer",
            "description": "Financial Institution Account Type\n\nCode | Description\n-----|------------\n-1   | Unknown\n0    | Other\n1    | Checking\n2    | Savings",
            "format": "int32",
            "example": 1
          }
        }
      },
      "DevicePromptConfirmationResult": {
        "title": "DevicePromptConfirmationResult",
        "enum": [
          "Y",
          "N"
        ],
        "type": "string",
        "description": "In the response to a Prompt Confirmation request, this field specifies whether the consumer has opted to confirm ('Y') or deny ('N') the requested value.",
        "example": "N"
      },
      "ObjectDeviceFormResponse": {
        "title": "ObjectDeviceFormResponse",
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 12,
            "type": "string",
            "description": "Specifies a 12-character, alphanumeric string containing the form name to display on a UTG-controlled PIN pad. The file extension should not be included in the value.",
            "example": "PF2"
          },
          "result": {
            "maxLength": 5,
            "type": "string",
            "description": "A five-character, alphanumeric string containing the ID of the button pressed by the consumer on a UTG-controlled PIN pad.",
            "example": "87"
          }
        }
      },
      "ObjectBatchProcessors": {
        "title": "ObjectBatchProcessors",
        "type": "object",
        "properties": {
          "archivesID": {
            "type": "integer",
            "description": "The ID that was assigned to the closed batch.",
            "format": "int32",
            "example": 41
          },
          "processor": {
            "type": "string",
            "description": "The processor which handled this batch of transactions.",
            "example": "TSYS"
          },
          "currencyCode": {
            "type": "string",
            "description": "The type of currency used for this batch of transactions.",
            "example": "840"
          },
          "refundAmount": {
            "type": "number",
            "description": "The total amount of all refunds in the batch",
            "example": 100
          },
          "refundCount": {
            "type": "integer",
            "description": "The count of all refunds in the batch",
            "format": "int32",
            "example": 1
          },
          "saleAmount": {
            "type": "number",
            "description": "The total amount of all sales in the batch",
            "example": 5701.78
          },
          "saleCount": {
            "type": "integer",
            "description": "The count of all sales in the batch",
            "format": "int32",
            "example": 186
          }
        }
      },
      "Card1": {
        "title": "Card1",
        "required": [
          "token"
        ],
        "type": "object",
        "properties": {
          "expirationDate": {
            "type": "integer",
            "description": "##### Conditional: Send only when card data is manually entered or when using a token. This field should not be specified when using an encrypted device.\n\nCard expiration date in MMYY format. This value should only be populated in the initial sale/authorization request.",
            "format": "int32",
            "example": 1230
          },
          "present": {
            "$ref": "#/components/schemas/Present"
          },
          "token": {
            "$ref": "#/components/schemas/ObjectCardTokenRequired"
          },
          "securityCode": {
            "$ref": "#/components/schemas/ObjectCardSecurityCode"
          }
        }
      },
      "Card80": {
        "title": "Card80",
        "type": "object",
        "properties": {
          "expirationDate": {
            "type": "integer",
            "description": "##### Conditional: Requires API Option \"RETURNEXPDATE\". \n\nCard expiration date in MMYY format. This value will only be populated if \"RETURNEXPDATE\" is included in the <samp>apiOptions</samp> array.",
            "format": "int32",
            "example": 1230
          },
          "number": {
            "maxLength": 32,
            "type": "string",
            "description": "The card number field will always be masked when returned in a response.",
            "example": "XXXXXXXXXXXX1119"
          },
          "type": {
            "$ref": "#/components/schemas/CardTypeResp"
          },
          "token": {
            "$ref": "#/components/schemas/ObjectCardToken"
          }
        }
      },
      "ObjectDeviceForm": {
        "title": "ObjectDeviceForm",
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 12,
            "type": "string",
            "description": "Specifies a 12-character, alphanumeric string containing the form name to display on a UTG-controlled PIN pad. The file extension should not be included in the value.",
            "example": "PF2"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectDeviceFormItems"
            },
            "description": "An array of key/value pairs used to populate fields on the custom form",
            "example": [
              {
                "key": "1",
                "value": "John Smith"
              },
              {
                "key": "2",
                "value": "123 Open St"
              }
            ]
          }
        }
      },
      "QRPayConfigTipEnabled": {
        "title": "QRPayConfigTipEnabled",
        "enum": [
          "Y",
          "N"
        ],
        "type": "string",
        "description": "Specifies whether tip prompting is enabled or disabled for the merchant\n\nValue|Description\n-----|-----------\nY    | Tip prompting is enabled.\nN    | Tip prompting is disabled."
      },
      "Card6": {
        "title": "Card6",
        "required": [
          "token"
        ],
        "type": "object",
        "properties": {
          "expirationDate": {
            "type": "integer",
            "description": "##### Conditional: Send only when card data is manually entered or when using a token. This field should not be specified when using an encrypted device.\n\nCard expiration date in MMYY format. This value should only be populated in the initial sale/authorization request.",
            "format": "int32",
            "example": 1230
          },
          "present": {
            "$ref": "#/components/schemas/Present"
          },
          "token": {
            "$ref": "#/components/schemas/ObjectCardTokenRequired"
          }
        }
      },
      "Card73": {
        "title": "Card73",
        "required": [
          "type",
          "number"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CardTypeRisk"
          },
          "number": {
            "maxLength": 32,
            "type": "string",
            "description": "##### Conditional: Send only when card data is manually entered. This field should not be specified when using an encrypted device.\n\nThe payment card number entered in an initial authorization/sale request. This field will always be masked\nwhen returned in a response.",
            "example": "4321000000001119"
          },
          "expirationDate": {
            "type": "integer",
            "description": "##### Conditional: Send only when card data is manually entered or when using a token. This field should not be specified when using an encrypted device.\n\nCard expiration date in MMYY format. This value should only be populated in the initial sale/authorization request.",
            "format": "int32",
            "example": 1230
          },
          "entryMode": {
            "$ref": "#/components/schemas/EntryMode"
          },
          "present": {
            "$ref": "#/components/schemas/Present"
          },
          "securityCode": {
            "$ref": "#/components/schemas/ObjectCardSecurityCode"
          }
        }
      },
      "CredentialsAccesstokenResponse": {
        "title": "CredentialsAccesstokenResponse",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result4"
            },
            "description": ""
          }
        }
      },
      "ObjectBatchTransaction": {
        "title": "ObjectBatchTransaction",
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "amount": {
            "type": "number",
            "description": "The amount being charged for a particular transaction. If other amount fields are sent, they must be included in the total amount.",
            "example": 160
          },
          "last4": {
            "maxLength": 32,
            "type": "string",
            "description": "##### Conditional: Send only when card data is manually entered. This field should not be specified when using an encrypted device.\n\nThe payment card number entered in an initial authorization/sale request. This field will always be masked\nwhen returned in a response.",
            "example": "4321000000001119"
          },
          "invoice": {
            "maxLength": 10,
            "type": "string",
            "description": "10-digit invoice number assigned by the interface to identify a transaction. An invoice number serves as a unique key that identifies a transaction within a batch in Shift4 Payments' Gateway.\n\n##### Note: Although the invoice number is sent as a JSON string it is a numeric value. No alpha characters are allowed.",
            "example": "192029"
          }
        }
      },
      "Card78": {
        "title": "Card78",
        "type": "object",
        "properties": {
          "entryMode": {
            "$ref": "#/components/schemas/EntryMode"
          },
          "expirationDate": {
            "type": "integer",
            "description": "##### Conditional: Requires API Option \"RETURNEXPDATE\". \n\nCard expiration date in MMYY format. This value will only be populated if \"RETURNEXPDATE\" is included in the <samp>apiOptions</samp> array.",
            "format": "int32",
            "example": 1230
          },
          "number": {
            "maxLength": 32,
            "type": "string",
            "description": "The card number field will always be masked when returned in a response.",
            "example": "XXXXXXXXXXXX1119"
          },
          "type": {
            "$ref": "#/components/schemas/CardTypeResp"
          },
          "token": {
            "$ref": "#/components/schemas/ObjectCardTokenResponse"
          }
        }
      },
      "Customer21": {
        "title": "Customer21",
        "required": [
          "externalId"
        ],
        "type": "object",
        "properties": {
          "externalId": {
            "type": "string",
            "description": "Your external identifier for the Customer",
            "example": "OD-123"
          }
        }
      },
      "Device35": {
        "title": "Device35",
        "type": "object",
        "properties": {
          "manufacturer": {
            "$ref": "#/components/schemas/DeviceManufacturer"
          },
          "model": {
            "maxLength": 50,
            "type": "string",
            "description": "##### Conditional: Required when using a non-UTG-controlled device.\n\nSpecifies the model of the device.",
            "example": "A930"
          },
          "serialNumber": {
            "maxLength": 64,
            "type": "string",
            "description": "##### Conditional: Required when using a non-UTG-controlled device.\n\nSpecifies the serial number of the device.",
            "example": "1170301234"
          },
          "capability": {
            "$ref": "#/components/schemas/ObjectDeviceCapability"
          }
        }
      },
      "DevicesLineitemsResponse": {
        "title": "DevicesLineitemsResponse",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result43"
            },
            "description": ""
          }
        }
      },
      "DevicesProcessformRequest": {
        "title": "DevicesProcessformRequest",
        "required": [
          "dateTime",
          "device"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "device": {
            "$ref": "#/components/schemas/Device53"
          }
        }
      },
      "P2PEMagstripeMSR7": {
        "title": "P2PEMagstripeMSR7",
        "required": [
          "dateTime",
          "card",
          "transaction",
          "device",
          "p2pe"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "card": {
            "$ref": "#/components/schemas/Card40"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction34"
          },
          "device": {
            "$ref": "#/components/schemas/Device1"
          },
          "p2pe": {
            "$ref": "#/components/schemas/ObjectP2PEType05"
          }
        }
      },
      "Device38": {
        "title": "Device38",
        "type": "object",
        "properties": {
          "terminalId": {
            "maxLength": 32,
            "type": "string",
            "description": "##### Conditional: Include this field if using a UTG-controlled device.\n\nTo prompt a specific UTG-controlled PIN pad in a request, the API Terminal ID configured in UTG TuneUp must be specified in this field.",
            "example": "1742"
          },
          "promptConfirmation": {
            "$ref": "#/components/schemas/ObjectDevicePromptConfirmation"
          }
        }
      },
      "QrpaymentsGetqrcodeRequest": {
        "title": "QrpaymentsGetqrcodeRequest",
        "required": [
          "dateTime",
          "amount",
          "transaction"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "amount": {
            "$ref": "#/components/schemas/Amount13"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction108"
          }
        }
      },
      "QrpaymentsGetqrdetails400Error1": {
        "title": "QrpaymentsGetqrdetails400Error1",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result5"
            },
            "description": ""
          }
        }
      },
      "Device39": {
        "title": "Device39",
        "required": [
          "terminalId"
        ],
        "type": "object",
        "properties": {
          "terminalId": {
            "maxLength": 32,
            "type": "string",
            "description": "To prompt a specific UTG-controlled PIN pad in a request, the API Terminal ID configured in UTG TuneUp must be specified in this field.",
            "example": "1742"
          },
          "promptTermsAndConditions": {
            "$ref": "#/components/schemas/ObjectDevicePromptTermsAndConditions"
          }
        }
      },
      "AirlineCreditReasonIndicator": {
        "title": "AirlineCreditReasonIndicator",
        "enum": [
          "A",
          "B",
          "C",
          "O",
          "P"
        ],
        "type": "string",
        "description": "Indicates the reason for a credit to the cardholder.  This field should contain spaces or one of the below codes.\n\nValue  | Description \n-------|---------------\nA      | Passenger transport ancillary purchase cancellation\nB      | Airline ticket and passenger transport ancillary purchase cancellation\nC      | Airline ticket cancellation\nO      | Other\nP      | Partial refund of airline ticket",
        "example": "P"
      },
      "ObjectDevicePromptInput": {
        "title": "ObjectDevicePromptInput",
        "required": [
          "index"
        ],
        "type": "object",
        "properties": {
          "index": {
            "maxLength": 3,
            "type": "string",
            "description": "This field specifies a value to be collected from a consumer using a UTG-controlled PIN pad.\n\nValue| Description                          | Return Format\n-----|--------------------------------------|-------------------------\n001  | Card Security Code                   | Numeric\n002  | Street Number                        | Numeric\n003  | ZIP Code                             | Numeric\n004  | Social Security Number (SSN)         | Numeric, no formatting\n005  | Last 4 of SSN                        | Numeric\n006  | Date of Birth                        | MM/DD/YYYY\n007  | Annual Income                        | Numeric, no formatting\n008  | Home Phone Number                    | Numeric, no formatting\n009  | Business Phone Number                | Numeric, no formatting\n010  | Email Address (Requires Touchscreen) | Alphanumeric\n011  | Driver's ID (Requires Touchscreen)   | Alphanumeric\n012  | Tip                                  | Numeric",
            "example": "005"
          },
          "result": {
            "maxLength": 4096,
            "type": "string",
            "description": "This field contains the value collected from a consumer using a UTG-controlled PIN pad.",
            "example": "981280913"
          }
        }
      },
      "TransactionResponseCodeQRCancel": {
        "title": "TransactionResponseCodeQRCancel",
        "enum": [
          "C",
          "T"
        ],
        "type": "string",
        "description": "Code indicating that the QR code was cancelled and if it was reversed\n\nValue  |Description\n-------|-----------\nC      | The QR Payment was cancelled. The QR code had not been used for payment or the payment was not successful.\nT      | The QR Payment was cancelled. The QR code had already been used for payment and was approved. The approval was reversed.",
        "example": "C"
      },
      "Amount14": {
        "title": "Amount14",
        "type": "object",
        "properties": {
          "total": {
            "type": "number",
            "description": "The amount being charged for a particular transaction. If other amount fields are sent, they must be included in the total amount.",
            "example": 160
          },
          "tax": {
            "type": "number",
            "description": "The amount of sales tax charged for a transaction. The tax amount is used by businesses to track tax expenses for accounting purposes. Identifying the tax amount also helps consumers understand the total amount that they were billed.  This field is part of Level 2 card data.",
            "example": 15
          },
          "tip": {
            "type": "number",
            "description": "##### Conditional: Send in the request if a tip is included.\n\nThe tip amount of the transaction.",
            "example": 20
          },
          "surcharge": {
            "type": "number",
            "description": "##### Conditional: Send in the request if charging a surcharge for the transaction\n\nIn a sale or authorization transaction, the <samp>surcharge</samp> field specifies a fee amount that a consumer is charged in addition to the transaction amount. Using the <samp>surcharge</samp> field is required by the processors to identify any fee amount being charged when a consumer pays for a transaction with a credit or debit card.",
            "example": 5
          },
          "cashback": {
            "type": "number",
            "description": "Specifies the cashback amount in a transaction. When using a UTG-controlled PIN pad with the ALLOWCASHBACK API Option, this field will return the cashback amount requested by the consumer. The interface can also send the desired cashback amount in a request by adding it to the <samp>amount.total</samp> and including it in the <samp>amount.cashback</samp> field. This will bypass prompting the consumer for a cashback amount.",
            "example": 20
          }
        }
      },
      "Credential": {
        "title": "Credential",
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "description": "A security credential used to authenticate API requests and all [i4Go®](https://myportal.shift4.com/index.cfm?action=support.doc) authorizeClient/preauthorizeClient requests. An Access Token is the alias for the merchant account and interface being used. The Access Token is required in all requests except an [Access Token Exchange](#operation/accesstokenexchange) request, which generates an Access Token using an <samp>authToken</samp> and <samp>clientGuid</samp>.",
            "format": "uuid",
            "example": "EA79FB05-3AA7-4500-AF9A-73F986FF2C1D"
          }
        }
      },
      "BatchesSubmitResponse": {
        "title": "BatchesSubmitResponse",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result56"
            },
            "description": ""
          }
        }
      },
      "Card34": {
        "title": "Card34",
        "required": [
          "number",
          "expirationDate"
        ],
        "type": "object",
        "properties": {
          "number": {
            "maxLength": 32,
            "type": "string",
            "description": "##### Conditional: Send only when card data is manually entered. This field should not be specified when using an encrypted device.\n\nThe payment card number entered in an initial authorization/sale request. This field will always be masked\nwhen returned in a response.",
            "example": "4321000000001119"
          },
          "expirationDate": {
            "type": "integer",
            "description": "##### Conditional: Send only when card data is manually entered or when using a token. This field should not be specified when using an encrypted device.\n\nCard expiration date in MMYY format. This value should only be populated in the initial sale/authorization request.",
            "format": "int32",
            "example": 1230
          },
          "securityCode": {
            "$ref": "#/components/schemas/SecurityCode"
          }
        }
      },
      "DevicePromptTermsAndConditionsResult": {
        "title": "DevicePromptTermsAndConditionsResult",
        "enum": [
          "A",
          "D"
        ],
        "type": "string",
        "description": "Returns the result of the Terms and Conditions screen on the PIN pad (based on the consumer’s input).\n\nValue| Description\n-----|------------\nA    | Accepted\nD    | Declined",
        "example": "A"
      },
      "Amount1": {
        "title": "Amount1",
        "required": [
          "total"
        ],
        "type": "object",
        "properties": {
          "total": {
            "type": "number",
            "description": "The amount being charged for a particular transaction. If other amount fields are sent, they must be included in the total amount.",
            "example": 160
          }
        }
      },
      "CardNumberUnencrypted12": {
        "title": "CardNumberUnencrypted12",
        "required": [
          "dateTime",
          "card"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "card": {
            "$ref": "#/components/schemas/Card34"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction64"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer2"
          }
        }
      },
      "Card81": {
        "title": "Card81",
        "required": [
          "token"
        ],
        "type": "object",
        "properties": {
          "token": {
            "$ref": "#/components/schemas/ObjectCardToken"
          }
        }
      },
      "CardsVerifyResponse": {
        "title": "CardsVerifyResponse",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result37"
            },
            "description": ""
          }
        }
      },
      "CardTokenErrorResponse1": {
        "title": "CardTokenErrorResponse1",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result5"
            },
            "description": ""
          }
        }
      },
      "ObjectBatch": {
        "title": "ObjectBatch",
        "type": "object",
        "properties": {
          "inclusive": {
            "$ref": "#/components/schemas/BatchInclusive"
          },
          "netAmount": {
            "type": "number",
            "description": "The net amount that is expected to be in the batch (sales MINUS refunds).  If this field is sent and the amount does not match, an error will be returned, and the batch will not be closed.",
            "example": 5601.78
          },
          "netCount": {
            "type": "integer",
            "description": "The net transaction count in the batch (sales PLUS refunds).  If this field is sent and the count does not match, an error will be returned, and the batch will not be closed.",
            "format": "int32",
            "example": 187
          }
        }
      },
      "Customer23": {
        "title": "Customer23",
        "required": [
          "externalId",
          "enrollDate"
        ],
        "type": "object",
        "properties": {
          "externalId": {
            "type": "string",
            "description": "Your external identifier for the Customer",
            "example": "OD-123"
          },
          "enrollDate": {
            "type": "string",
            "description": "Date of the user's first transaction in your system, regardless of payment  method used. The date and time must be passed in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm)",
            "example": "2019-03-14T11:16:42.896-07:00"
          }
        }
      },
      "Device37": {
        "title": "Device37",
        "required": [
          "terminalId"
        ],
        "type": "object",
        "properties": {
          "terminalId": {
            "maxLength": 32,
            "type": "string",
            "description": "To prompt a specific UTG-controlled PIN pad in a request, the API Terminal ID configured in UTG TuneUp must be specified in this field.",
            "example": "1742"
          },
          "promptConfirmation": {
            "$ref": "#/components/schemas/ObjectDevicePromptConfirmation"
          }
        }
      },
      "HostResponse": {
        "title": "HostResponse",
        "type": "object",
        "properties": {
          "reasonCode": {
            "maxLength": 4,
            "type": "string",
            "description": "Returns a response code from the host.\n\nValue |Reason Description\n------|------------------\n201   | Missing version of provider, this is built into SDK but must be supplied by merchant if not using the SDK\n202   | The mode type for post is missing. \n203   | The six digit Merchant ID was not sent\n204   | The unique session ID was not sent\n205   | Transaction ID number\n211   | The currency was missing in the RISK submission\n212   | The total amount was missing\n221   | The email address was missing\n222   | For MODE = P RISK inquiries the caller ID is missing\n223   | The website identifier that was created in the Agent Web Console (DEFAULT is the default website ID) is missing\n231\t  | The payment type is missing. \n232   | The credit card information is missing\n233   | Missing Magnetic Ink Character Recognition string\n234   | The PayPal Payer ID is missing\n235   | The payment token is missing.\n241   | The IP address is missing\n251   | The merchant acknowledgement is missing\n261   | The RISK query submitted to provider contained no data\n271\t  | The shopping cart data array attribute is missing.\n272   | The shopping cart data array attribute is missing.\n273   | The shopping cart data array attribute is missing.\n274   | The shopping cart data array attribute is missing.\n275   | The shopping cart data array attribute is missing.\n301   | The version of provider supplied by merchant does not fit the four integer parameter\n302   | The mode type is invalid. \n303   | The six digit Merchant ID is malformed or wrong\n304   | The unique session ID is invalid. Refer to the Data Collector\n305   | Transaction ID number is malformed\n311   | The currency was wrong in the RISK submission\n312   | The total amount is wrong. TOTL is the whole number amount charged to customer\n321   | The email address does not meet required format or is greater than 64 characters in length\n322   | For MODE = P RISK inquiries the caller ID is malformed\n323   | The website identifier that was created in the Agent Web Console (DEFAULT is the default w website ID) does not match what was created in the AWC.\n324   | The specified format is wrong. Format options are key value pairs, XML, JSON, YAML\n331   | The payment type is wrong. \n332   | The credit card information is malformed or wrong, test cards do not work in the production environment\n333   | Malformed or improper Magnetic Ink Character Recognition string.\n334   | The PayPal Payer ID is malformed or corrupt.\n335   | Malformed or improper Google Checkout Account ID string.\n336   | Malformed or improper Bill Me Later account number.\n337   | The encryption method specified is wrong.\n338   | The GreenDot payment token is not a valid payment token\n339   | When payment type equals CARD, PTYP = CARD and payment encryption type equals KHASH, `PENC = KHASH the value must be 20 characters in length.\n340   | Invalid or excessive characters in the PTOK field\n341   | The IP address does not match specifications\n342   | The Gift Card payment token is invalid due to invalid characters, null, or exceeding character length\n351   | The merchant acknowledgement must be Y or N\n362   | There is a discrepancy in the shopping cart key count and the number of items actually being sent in the cart\n371   | The shopping cart data array attribute is missing.\n372   | The shopping cart data array attribute is corrupt or missing.\n373   | The shopping cart data array attribute is corrupt or missing.\n374   | The shopping cart data array attribute is corrupt or missing.\n375   | The shopping cart data array attribute is corrupt or missing.\n399   | A UDF has been mistyped or does not exist in the Agent Web Console\n401   | RISK keys submitted by merchant were not part of SDK\n404   | When PTYP equals NONE and a PTOK is submitted\n413   | The RISK Post to provider exceeded the 4K limit.\n501   | Error regarding certificate - Using test certificate in prod\n502   | Invalid Merchant ID has been entered\n601   | Unspecified system error - Contact Merchant Services\n602   | Provider will not process particular transaction\n701   | No header found with merchantId = [XXXXX], session_id = [htot2kk5khpamo45f777q455], trans=[122347] This error occurs when a RISK request goes to the database and there is no data available in the reply. The Update post had an invalid transaction ID#. Check all required fields for update post and confirm they are being passed correctly.",
            "example": "271"
          },
          "reasonDescription": {
            "maxLength": 73,
            "type": "string",
            "description": "Returns a description from the host.",
            "example": "The credit card information is missing"
          }
        }
      },
      "ReportsBatchtotalsResponse": {
        "title": "ReportsBatchtotalsResponse",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result54"
            },
            "description": ""
          }
        }
      },
      "GiftcardsAllocateResponse": {
        "title": "GiftcardsAllocateResponse",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result29"
            },
            "description": ""
          }
        }
      },
      "Device40": {
        "title": "Device40",
        "type": "object",
        "properties": {
          "terminalId": {
            "maxLength": 32,
            "type": "string",
            "description": "##### Conditional: Include this field if using a UTG-controlled device.\n\nTo prompt a specific UTG-controlled PIN pad in a request, the API Terminal ID configured in UTG TuneUp must be specified in this field.",
            "example": "1742"
          },
          "promptTermsAndConditions": {
            "$ref": "#/components/schemas/ObjectDevicePromptTermsAndConditions"
          }
        }
      },
      "DevicesResetRequest": {
        "title": "DevicesResetRequest",
        "required": [
          "dateTime",
          "device"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "device": {
            "$ref": "#/components/schemas/ObjectDeviceOnlyTID"
          }
        }
      },
      "Device1": {
        "title": "Device1",
        "required": [
          "manufacturer",
          "model",
          "serialNumber",
          "capability"
        ],
        "type": "object",
        "properties": {
          "manufacturer": {
            "$ref": "#/components/schemas/DeviceManufacturer"
          },
          "model": {
            "maxLength": 50,
            "type": "string",
            "description": "##### Conditional: Required when using a non-UTG-controlled device.\n\nSpecifies the model of the device.",
            "example": "A930"
          },
          "serialNumber": {
            "maxLength": 64,
            "type": "string",
            "description": "##### Conditional: Required when using a non-UTG-controlled device.\n\nSpecifies the serial number of the device.",
            "example": "1170301234"
          },
          "capability": {
            "$ref": "#/components/schemas/ObjectDeviceCapability"
          }
        }
      },
      "P2PEEMV6": {
        "title": "P2PEEMV6",
        "required": [
          "dateTime",
          "card",
          "device",
          "emv",
          "p2pe"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "card": {
            "$ref": "#/components/schemas/Card66"
          },
          "device": {
            "$ref": "#/components/schemas/Device1"
          },
          "emv": {
            "$ref": "#/components/schemas/Emv"
          },
          "p2pe": {
            "$ref": "#/components/schemas/P2pe1"
          }
        }
      },
      "GiftcardsAllocateRequest": {
        "title": "GiftcardsAllocateRequest",
        "required": [
          "dateTime",
          "amount",
          "transaction"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "amount": {
            "$ref": "#/components/schemas/ObjectAmountGC"
          },
          "programId": {
            "maxLength": 16,
            "type": "string",
            "description": "The ID value for the program you are allocating a gift card under.",
            "example": "123529291"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction34"
          }
        }
      },
      "GiftcardsCancelRequest": {
        "title": "GiftcardsCancelRequest",
        "required": [
          "dateTime",
          "card",
          "transaction"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "card": {
            "$ref": "#/components/schemas/Card83"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction34"
          }
        }
      },
      "GiftcardsReloadResponse": {
        "title": "GiftcardsReloadResponse",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result34"
            },
            "description": ""
          }
        }
      },
      "Device17": {
        "title": "Device17",
        "required": [
          "terminalId"
        ],
        "type": "object",
        "properties": {
          "terminalId": {
            "maxLength": 32,
            "type": "string",
            "description": "##### Conditional: Include this field if using a UTG-controlled device.\n\nTo prompt a specific UTG-controlled PIN pad in a request, the API Terminal ID configured in UTG TuneUp must be specified in this field.",
            "example": "1742"
          },
          "promptCardSecurityCode": {
            "$ref": "#/components/schemas/DevicePromptCardSecurityCode"
          }
        }
      },
      "InitialCapture": {
        "title": "InitialCapture",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result"
            },
            "description": ""
          }
        },
        "example": {
          "result": [
            {
              "dateTime": "2021-04-15T09:18:23.283-07:00",
              "amount": {
                "total": 155
              },
              "server": {
                "name": "TM01CE"
              },
              "sourceIp": "63.57.84.101",
              "transaction": {
                "authSource": "A",
                "responseCode": "A",
                "invoice": "193010",
                "notes": "Transaction notes are added here"
              },
              "redirectUrl": "https://sandbox.trustly.com/start/scripts/paywithmybank.js?accessId=p8HFpPsRmGjhCsbe62YM",
              "trustly": {
                "state": "RedirectDataCreated",
                "establishData": {
                  "accessId": "p8HFpPsRmGjhCsbe62YM",
                  "amount": "155.00",
                  "cancelUrl": "https://merchant.com/trustly/cancel",
                  "currency": "USD",
                  "customer": {
                    "address": {
                      "address1": "2000 Broadway St",
                      "city": "Redwood City",
                      "country": "US",
                      "state": "CA",
                      "zip": "94063"
                    },
                    "email": "firstname.lastname@email.com",
                    "enrollDate": "1630595607",
                    "externalId": "externalId",
                    "name": "firstName lastName",
                    "phone": "+13110001234",
                    "taxId": "crypt2:DSNdJAZqXkbvoBk2r1M7ESkn4/OVJ+lgMqIxrdirPHs="
                  },
                  "description": "transaction description",
                  "merchantId": "1016236765",
                  "merchantReference": "48973-2038273-89457918",
                  "paymentType": "Deferred",
                  "requestSignature": "a/n62XqfgQA31xmFnCxNEOjd7g=",
                  "returnUrl": "https://merchant.com/trustly/success"
                }
              }
            }
          ]
        }
      },
      "CardNumberUnencrypted6": {
        "title": "CardNumberUnencrypted6",
        "required": [
          "dateTime",
          "amount",
          "card",
          "transaction"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "amount": {
            "$ref": "#/components/schemas/ObjectAmountGC"
          },
          "card": {
            "$ref": "#/components/schemas/Card39"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction34"
          }
        }
      },
      "Card5": {
        "title": "Card5",
        "required": [
          "number",
          "expirationDate",
          "securityCode"
        ],
        "type": "object",
        "properties": {
          "entryMode": {
            "$ref": "#/components/schemas/EntryMode1"
          },
          "present": {
            "$ref": "#/components/schemas/Present"
          },
          "number": {
            "maxLength": 32,
            "type": "string",
            "description": "##### Conditional: Send only when card data is manually entered. This field should not be specified when using an encrypted device.\n\nThe payment card number entered in an initial authorization/sale request. This field will always be masked\nwhen returned in a response.",
            "example": "4321000000001119"
          },
          "expirationDate": {
            "type": "integer",
            "description": "##### Conditional: Send only when card data is manually entered or when using a token. This field should not be specified when using an encrypted device.\n\nCard expiration date in MMYY format. This value should only be populated in the initial sale/authorization request.",
            "format": "int32",
            "example": 1230
          },
          "securityCode": {
            "$ref": "#/components/schemas/ObjectCardSecurityCode"
          }
        }
      },
      "Amount12": {
        "title": "Amount12",
        "type": "object",
        "properties": {
          "total": {
            "type": "number",
            "description": "The amount being charged for a particular transaction. If other amount fields are sent, they must be included in the total amount.",
            "example": 160
          }
        }
      },
      "Card19": {
        "title": "Card19",
        "required": [
          "present"
        ],
        "type": "object",
        "properties": {
          "entryMode": {
            "$ref": "#/components/schemas/EntryMode"
          },
          "present": {
            "$ref": "#/components/schemas/PresentRefund"
          },
          "type": {
            "$ref": "#/components/schemas/CardType"
          }
        }
      },
      "Card35": {
        "title": "Card35",
        "required": [
          "present"
        ],
        "type": "object",
        "properties": {
          "present": {
            "$ref": "#/components/schemas/Present"
          }
        }
      },
      "ObjectDevicePromptConfirmation": {
        "title": "ObjectDevicePromptConfirmation",
        "type": "object",
        "properties": {
          "question": {
            "maxLength": 64,
            "type": "string",
            "description": "This field displays an inquiry prompting a consumer's confirmation.",
            "example": "Rewards Program"
          },
          "result": {
            "$ref": "#/components/schemas/DevicePromptConfirmationResult"
          },
          "value": {
            "maxLength": 4096,
            "type": "string",
            "description": "This field displays text, such as an email address or legal text, for a consumer’s confirmation.",
            "example": "Would you like to join our rewards program?"
          }
        }
      },
      "ShippingType": {
        "title": "ShippingType",
        "enum": [
          "SD",
          "ND",
          "2D",
          "ST"
        ],
        "type": "string",
        "description": "Shipping type.\n\nValue| Description\n-----|------------\nSD   | Same Day\nND   | Next Day\n2D   | Second Day\nST   | Standard"
      },
      "Address": {
        "title": "Address",
        "type": "object",
        "properties": {
          "address1": {
            "maxLength": 30,
            "type": "string",
            "description": "Customer address Line 1.",
            "example": "65 Easy St"
          },
          "city": {
            "type": "string",
            "description": "Customer address city.",
            "example": "Las Vegas"
          },
          "country": {
            "type": "string",
            "description": "2 character ISO Country Code.",
            "example": "US"
          },
          "state": {
            "type": "string",
            "description": "2 character ISO State Code.",
            "example": "NV"
          },
          "zip": {
            "maxLength": 9,
            "minLength": 5,
            "type": "string",
            "description": "5-9 character Postal Code.",
            "example": "65144"
          }
        }
      },
      "BatchesSubmitRequest": {
        "title": "BatchesSubmitRequest",
        "required": [
          "dateTime",
          "transaction"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction106"
          },
          "batch": {
            "$ref": "#/components/schemas/ObjectBatch"
          }
        }
      },
      "CardNumberUnencrypted14": {
        "title": "CardNumberUnencrypted14",
        "required": [
          "dateTime",
          "transaction",
          "card",
          "amount",
          "currencyCode",
          "risk",
          "sourceIp"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction80"
          },
          "card": {
            "$ref": "#/components/schemas/Card73"
          },
          "amount": {
            "$ref": "#/components/schemas/Amount1"
          },
          "currencyCode": {
            "type": "string",
            "description": "Transaction currency code.",
            "example": "USD"
          },
          "risk": {
            "$ref": "#/components/schemas/Risk"
          },
          "sourceIp": {
            "type": "string",
            "description": "Public source IP Address where the request originates,\nnot the IP Address of the web server.",
            "example": "63.57.84.101"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer10"
          },
          "shoppingCart": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShoppingCartArray"
            },
            "description": "Array of objects detailing the individual items being purchased",
            "example": [
              {
                "type": "Deodarant",
                "sku": "579446588",
                "description": "New Spice Fiji",
                "quantity": 5,
                "price": 4
              },
              {
                "type": "Toothbrush",
                "sku": "135488945",
                "description": "Electric Model",
                "quantity": 1,
                "price": 104.99
              }
            ]
          }
        }
      },
      "Card40": {
        "title": "Card40",
        "required": [
          "deactivationReason",
          "present"
        ],
        "type": "object",
        "properties": {
          "deactivationReason": {
            "maxLength": 32,
            "type": "string",
            "description": "In a Gift Card [Deactivate](#operation/deactivate) or [Cashout](#operation/cashout) request, specifies the reason for deactivation. In a Gift Card redemption or inquiry response, specifies the reason for denial sent by the processor.",
            "example": "Lost or Stolen"
          },
          "present": {
            "$ref": "#/components/schemas/Present"
          }
        }
      },
      "Customer12": {
        "title": "Customer12",
        "type": "object",
        "properties": {
          "firstName": {
            "maxLength": 30,
            "type": "string",
            "description": "Specifies a consumer’s first name. This field is returned whenever the customer name is supplied in the request or if the track/EMV data contains the cardholder name.",
            "example": "John"
          },
          "lastName": {
            "maxLength": 30,
            "type": "string",
            "description": "Specifies a consumer’s last name. This field is returned whenever the customer name is supplied in the request or if the track/EMV data contains the cardholder name.",
            "example": "Smith"
          }
        }
      },
      "ModeOnlineRequest": {
        "title": "ModeOnlineRequest",
        "required": [
          "dateTime"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          }
        }
      },
      "DevicesPromptconfirmationRequest": {
        "title": "DevicesPromptconfirmationRequest",
        "required": [
          "dateTime",
          "device"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "device": {
            "$ref": "#/components/schemas/Device37"
          }
        }
      },
      "P2PEMagstripeMSR5": {
        "title": "P2PEMagstripeMSR5",
        "required": [
          "dateTime",
          "device",
          "p2pe"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "device": {
            "$ref": "#/components/schemas/Device1"
          },
          "p2pe": {
            "$ref": "#/components/schemas/ObjectP2PEType05"
          },
          "apiOptions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "API Options modify the request being made. See the [API Options](#tag/API-Options) section for more information.",
            "example": [
              "RETURNEXPDATE",
              "ALLOWPARTIALAUTH"
            ]
          },
          "customer": {
            "$ref": "#/components/schemas/ObjectCustomer"
          }
        }
      },
      "ReportsBatchdetails400Error1": {
        "title": "ReportsBatchdetails400Error1",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result5"
            },
            "description": ""
          }
        }
      },
      "PaymentProvider4": {
        "title": "PaymentProvider4",
        "required": [
          "id",
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique identifier for the Payment Provider",
            "example": "200005501"
          },
          "name": {
            "type": "string",
            "description": "Payment Provider name",
            "example": "Demo Bank"
          },
          "type": {
            "type": "integer",
            "description": "Payment Provider Type\n\nCode | Description\n-----|------------\n1    | Online Banking\n2    | Manual Electronic Check",
            "format": "int32",
            "example": 1
          }
        }
      },
      "ObjectCardResponseCashout": {
        "title": "ObjectCardResponseCashout",
        "type": "object",
        "properties": {
          "deactivationReason": {
            "maxLength": 32,
            "type": "string",
            "description": "In a Gift Card [Deactivate](#operation/deactivate) or [Cashout](#operation/cashout) request, specifies the reason for deactivation. In a Gift Card redemption or inquiry response, specifies the reason for denial sent by the processor.",
            "example": "Lost or Stolen"
          },
          "entryMode": {
            "$ref": "#/components/schemas/EntryMode"
          },
          "expirationDate": {
            "type": "integer",
            "description": "##### Conditional: Requires API Option \"RETURNEXPDATE\". \n\nCard expiration date in MMYY format. This value will only be populated if \"RETURNEXPDATE\" is included in the <samp>apiOptions</samp> array.",
            "format": "int32",
            "example": 1230
          },
          "number": {
            "maxLength": 32,
            "type": "string",
            "description": "The card number field will always be masked when returned in a response.",
            "example": "XXXXXXXXXXXX8774"
          },
          "present": {
            "$ref": "#/components/schemas/Present"
          },
          "type": {
            "$ref": "#/components/schemas/CardTypeGCResp"
          },
          "token": {
            "$ref": "#/components/schemas/ObjectCardTokenGCResponse"
          }
        }
      },
      "ObjectQRPayConfig": {
        "title": "ObjectQRPayConfig",
        "type": "object",
        "properties": {
          "splitEnabled": {
            "$ref": "#/components/schemas/QRPayConfigSplitEnabled"
          },
          "tipEnabled": {
            "$ref": "#/components/schemas/QRPayConfigTipEnabled"
          },
          "tipPresets": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Tip preset percentages configured by the merchant.",
            "example": [
              "15",
              "18",
              "20"
            ]
          }
        }
      },
      "ObjectDeviceOnlyTID": {
        "title": "ObjectDeviceOnlyTID",
        "required": [
          "terminalId"
        ],
        "type": "object",
        "properties": {
          "terminalId": {
            "maxLength": 32,
            "type": "string",
            "description": "To prompt a specific UTG-controlled PIN pad in a request, the API Terminal ID configured in UTG TuneUp must be specified in this field.",
            "example": "1742"
          }
        }
      },
      "CardNumberUnencrypted9": {
        "title": "CardNumberUnencrypted9",
        "required": [
          "dateTime",
          "card",
          "transaction"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "card": {
            "$ref": "#/components/schemas/Card39"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction34"
          }
        }
      },
      "ObjectP2PE": {
        "title": "ObjectP2PE",
        "required": [
          "data",
          "format"
        ],
        "type": "object",
        "properties": {
          "data": {
            "maxLength": 2048,
            "type": "string",
            "description": "The full output of a P2PE keypad/magnetic swipe reader (MSR).",
            "example": "027101801F2D1E00939B%*432100******1119^VS/DUAL TRACK^2212******?*;432100******1119=2212******?*CECE3FCE7781142BEC8D0E267AE89F5D3C7E235BF1A70E637951E8D93003E5A2586C336CA4A3B31F6639B04005BB12A716D8BC4D3AB125C27AB11A9DDC02816569D42A20B036EE5E2C71CB70565FB43B000000000000000000000000000000000000000000000000000000000000000000000000000000003434345434363138343962994950010038200415953903"
          },
          "format": {
            "$ref": "#/components/schemas/P2PEFormat"
          },
          "ksn": {
            "maxLength": 20,
            "type": "string",
            "description": "The key serial number which was used to encrypt the P2PE data.",
            "example": "6299495001100E200041"
          }
        },
        "description": "See [P2PE Format](#tag/P2PE-format) for more information."
      },
      "Amount23": {
        "title": "Amount23",
        "required": [
          "total"
        ],
        "type": "object",
        "properties": {
          "total": {
            "type": "number",
            "description": "The amount being charged for a particular transaction. If other amount fields are sent, they must be included in the total amount.",
            "example": 160
          },
          "bonus": {
            "type": "number",
            "description": "The amount awarded to the customer in case of any promotional event",
            "example": 10
          }
        }
      },
      "Card74": {
        "title": "Card74",
        "required": [
          "type",
          "token"
        ],
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "TK"
            ],
            "type": "string",
            "description": "Payment Type submitted by merchant:\n\nValue| Description\n-----|------------\nTK   | Token",
            "example": "TK"
          },
          "token": {
            "$ref": "#/components/schemas/ObjectCardTokenRequired"
          },
          "expirationDate": {
            "type": "integer",
            "description": "##### Conditional: Send only when card data is manually entered or when using a token. This field should not be specified when using an encrypted device.\n\nCard expiration date in MMYY format. This value should only be populated in the initial sale/authorization request.",
            "format": "int32",
            "example": 1230
          },
          "entryMode": {
            "$ref": "#/components/schemas/EntryMode"
          },
          "present": {
            "$ref": "#/components/schemas/Present"
          },
          "securityCode": {
            "$ref": "#/components/schemas/ObjectCardSecurityCode"
          }
        }
      },
      "Card84": {
        "title": "Card84",
        "type": "object",
        "properties": {
          "expirationDate": {
            "type": "integer",
            "description": "##### Conditional: Requires API Option \"RETURNEXPDATE\". \n\nCard expiration date in MMYY format. This value will only be populated if \"RETURNEXPDATE\" is included in the <samp>apiOptions</samp> array.",
            "format": "int32",
            "example": 1230
          },
          "number": {
            "maxLength": 32,
            "type": "string",
            "description": "The card number field will always be masked when returned in a response.",
            "example": "XXXXXXXXXXXX1119"
          },
          "type": {
            "$ref": "#/components/schemas/CardTypeResp"
          },
          "securityCode": {
            "$ref": "#/components/schemas/ObjectCardSecurityCode"
          },
          "token": {
            "$ref": "#/components/schemas/ObjectCardTokenResponse"
          }
        }
      },
      "GiftcardsDeactivateResponse": {
        "title": "GiftcardsDeactivateResponse",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result31"
            },
            "description": ""
          }
        }
      },
      "Result6": {
        "title": "Result6",
        "type": "object",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/ObjectError"
          },
          "lighthouse": {
            "$ref": "#/components/schemas/ObjectLighthouseResponse"
          },
          "server": {
            "$ref": "#/components/schemas/ObjectServer"
          }
        }
      },
      "InitialDeposit2": {
        "title": "InitialDeposit2",
        "required": [
          "dateTime",
          "amount",
          "sourceIp",
          "transaction",
          "successUrl",
          "cancelUrl",
          "currencyCode",
          "customer",
          "trustly"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "amount": {
            "$ref": "#/components/schemas/Amount1"
          },
          "sourceIp": {
            "type": "string",
            "description": "Public source IP Address where the request originates,\nnot the IP Address of the web server.",
            "example": "63.57.84.101"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction70"
          },
          "successUrl": {
            "type": "string",
            "description": "The URL where the user will be redirected if the request procceses successfully.",
            "example": "https://merchant.com/trustly/success"
          },
          "cancelUrl": {
            "type": "string",
            "description": "The URL where the user will be redirected if the request fails to procceses or the user cancels.",
            "example": "https://merchant.com/trustly/cancel"
          },
          "currencyCode": {
            "type": "string",
            "description": "Transaction currency code.",
            "example": "USD"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer7"
          },
          "trustly": {
            "$ref": "#/components/schemas/Trustly"
          }
        }
      },
      "P2PEviaIDTechDevice7": {
        "title": "P2PEviaIDTechDevice7",
        "required": [
          "dateTime",
          "card",
          "transaction",
          "p2pe"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "card": {
            "$ref": "#/components/schemas/Card40"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction34"
          },
          "p2pe": {
            "$ref": "#/components/schemas/P2pe"
          }
        }
      },
      "DevicesResetResponse": {
        "title": "DevicesResetResponse",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result43"
            },
            "description": ""
          }
        }
      },
      "GiftcardsActivate400Error1": {
        "title": "GiftcardsActivate400Error1",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result5"
            },
            "description": ""
          }
        }
      },
      "P2PEviaIDTechDevice6": {
        "title": "P2PEviaIDTechDevice6",
        "required": [
          "dateTime",
          "amount",
          "card",
          "transaction",
          "p2pe"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "amount": {
            "$ref": "#/components/schemas/ObjectAmountGC"
          },
          "card": {
            "$ref": "#/components/schemas/Card35"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction34"
          },
          "p2pe": {
            "$ref": "#/components/schemas/P2pe"
          }
        }
      },
      "P2pe1": {
        "title": "P2pe1",
        "required": [
          "format",
          "ksn"
        ],
        "type": "object",
        "properties": {
          "format": {
            "enum": [
              5
            ],
            "type": "integer",
            "description": "Classifies the type of payment device being used for P2PE.\n\nValue|Description\n-----|-----------\n05   | [Shift4 Payments 3DES DUKPT format](#tag/P2PE-format)",
            "format": "int32",
            "example": 5
          },
          "ksn": {
            "maxLength": 20,
            "type": "string",
            "description": "The key serial number which was used to encrypt the P2PE data.",
            "example": "6299495001100E200041"
          }
        }
      },
      "QrpaymentsCancelqrpayment400Error1": {
        "title": "QrpaymentsCancelqrpayment400Error1",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result5"
            },
            "description": ""
          }
        }
      },
      "QrpaymentsCancelqrpaymentResponse": {
        "title": "QrpaymentsCancelqrpaymentResponse",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result64"
            },
            "description": ""
          }
        }
      },
      "Customer22": {
        "title": "Customer22",
        "required": [
          "externalId"
        ],
        "type": "object",
        "properties": {
          "externalId": {
            "type": "string",
            "description": "Your external identifier for the Customer",
            "example": "OD-123"
          },
          "postalCode": {
            "maxLength": 9,
            "minLength": 5,
            "type": "string",
            "description": "5-9 character Postal Code.",
            "example": "65144"
          }
        }
      },
      "DevicesPromptsignatureRequest": {
        "title": "DevicesPromptsignatureRequest",
        "required": [
          "dateTime",
          "device"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "device": {
            "$ref": "#/components/schemas/ObjectDeviceOnlyTID"
          }
        }
      },
      "Merchant1": {
        "title": "Merchant1",
        "type": "object",
        "properties": {
          "serialNumber": {
            "maxLength": 11,
            "type": "string",
            "description": "The serial number of the merchant's account with Shift4 Payments.",
            "example": "00000044444"
          },
          "mid": {
            "maxLength": 10,
            "type": "string",
            "description": "The merchant ID associated with the merchant account.",
            "example": "15877"
          }
        }
      },
      "GiftcardsCancelResponse": {
        "title": "GiftcardsCancelResponse",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result36"
            },
            "description": ""
          }
        }
      },
      "ModeOnline400Error1": {
        "title": "ModeOnline400Error1",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result5"
            },
            "description": ""
          }
        }
      },
      "P2PEMagstripeMSR13": {
        "title": "P2PEMagstripeMSR13",
        "required": [
          "dateTime",
          "card",
          "device",
          "p2pe"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "card": {
            "$ref": "#/components/schemas/Card66"
          },
          "device": {
            "$ref": "#/components/schemas/Device1"
          },
          "p2pe": {
            "$ref": "#/components/schemas/ObjectP2PEType05"
          }
        }
      },
      "Result54": {
        "title": "Result54",
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "batch": {
            "$ref": "#/components/schemas/ObjectBatchResponseNoProcessors"
          },
          "server": {
            "$ref": "#/components/schemas/ObjectServer"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction104"
          }
        }
      },
      "Result49": {
        "title": "Result49",
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "device": {
            "$ref": "#/components/schemas/Device52"
          },
          "server": {
            "$ref": "#/components/schemas/ObjectServer"
          }
        }
      },
      "Result52": {
        "title": "Result52",
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "nonProblemRefunds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectBatchTransaction"
            },
            "description": "array of refunds that are not problem transactions - they are ready to be included in the batch",
            "example": [
              {
                "date": "TBD",
                "amount": 19.75,
                "last4": "1119",
                "invoice": "0000000607"
              },
              {
                "date": "TBD",
                "amount": 100,
                "last4": "2224",
                "invoice": "0000000630"
              }
            ]
          },
          "nonProblemSales": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectBatchTransaction"
            },
            "description": "array of sales that are not problem transactions - they are ready to be included in the batch",
            "example": [
              {
                "date": "TBD",
                "amount": 21.35,
                "last4": "1119",
                "invoice": "0000000505"
              },
              {
                "date": "TBD",
                "amount": 14.97,
                "last4": "2224",
                "invoice": "0000000508"
              }
            ]
          },
          "problemRefunds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectBatchTransaction"
            },
            "description": "array of refunds that are problem transactions",
            "example": [
              {
                "date": "TBD",
                "amount": 312,
                "last4": "1119",
                "invoice": "0000001234"
              },
              {
                "date": "TBD",
                "amount": 200,
                "last4": "2224",
                "invoice": "0000001235"
              }
            ]
          },
          "problemSales": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectBatchTransaction"
            },
            "description": "array of sales that are problem transactions",
            "example": [
              {
                "date": "TBD",
                "amount": 271.19,
                "last4": "1119",
                "invoice": "0000002947"
              },
              {
                "date": "TBD",
                "amount": 14.42,
                "last4": "2224",
                "invoice": "0000002801"
              }
            ]
          },
          "batch": {
            "$ref": "#/components/schemas/ObjectBatchResponseNoProcessors"
          },
          "server": {
            "$ref": "#/components/schemas/ObjectServer"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction104"
          }
        }
      },
      "SecurityCode": {
        "title": "SecurityCode",
        "type": "object",
        "properties": {
          "indicator": {
            "$ref": "#/components/schemas/CSCIndicator"
          },
          "value": {
            "maxLength": 4,
            "type": "string",
            "description": "##### Conditional: Send only when card data is manually entered. This field should not be specified when using an encrypted device.\n\nThe three- or four-digit Card Security Code found on a payment card. This value should only be sent in an initial sale/authorization request. It should not be stored by the interface. When sending <samp>card.securityCode.value</samp>, <samp>card.securityCode.indicator</samp> must also be sent.",
            "example": "333"
          }
        }
      },
      "Result23": {
        "title": "Result23",
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "server": {
            "$ref": "#/components/schemas/ObjectServer"
          },
          "universalToken": {
            "$ref": "#/components/schemas/ObjectUniversalToken"
          }
        }
      },
      "Result34": {
        "title": "Result34",
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "amount": {
            "$ref": "#/components/schemas/ObjectAmountGCResponse"
          },
          "card": {
            "$ref": "#/components/schemas/ObjectCardResponseGC"
          },
          "device": {
            "$ref": "#/components/schemas/ObjectDeviceOnlyTIDResponse"
          },
          "server": {
            "$ref": "#/components/schemas/ObjectServer"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction93"
          },
          "universalToken": {
            "$ref": "#/components/schemas/ObjectUniversalToken"
          }
        }
      },
      "Result79": {
        "title": "Result79",
        "required": [
          "dateTime",
          "sourceIp",
          "transaction",
          "tappp"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "sourceIp": {
            "type": "string",
            "description": "Public source IP Address where the request originates,\nnot the IP Address of the web server.",
            "example": "63.57.84.101"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction129"
          },
          "tappp": {
            "$ref": "#/components/schemas/Tappp4"
          }
        }
      },
      "Result14": {
        "title": "Result14",
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "amount": {
            "$ref": "#/components/schemas/Amount12"
          },
          "card": {
            "$ref": "#/components/schemas/ObjectCardResponseVoid"
          },
          "receipt": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectReceipt"
            },
            "description": "array of receipt key/value pairs that should be printed on the receipt.",
            "example": [
              {
                "key": "ApplicationIdentifier",
                "printName": "AID",
                "printValue": "A0000000031010"
              },
              {
                "key": "TerminalVerificationResults",
                "printName": "TVR",
                "printValue": "8000"
              },
              {
                "key": "IssuerApplicationData",
                "printName": "IAD",
                "printValue": "06010A03A40002"
              },
              {
                "key": "TransactionStatusIndicator",
                "printName": "TSI",
                "printValue": "E800"
              },
              {
                "key": "AuthorizationResponseCode",
                "printName": "ARC",
                "printValue": "00"
              },
              {
                "key": "TransactionCurrencyCode",
                "printValue": "USD$"
              },
              {
                "key": "ApplicationLabel",
                "printValue": "CREDITO DE VISA"
              }
            ]
          },
          "server": {
            "$ref": "#/components/schemas/ObjectServer"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction88"
          }
        }
      },
      "Risk2": {
        "title": "Risk2",
        "required": [
          "tranId",
          "assessment"
        ],
        "type": "object",
        "properties": {
          "tranId": {
            "type": "string",
            "description": "This is the unique transaction ID for this response from the 3rd party\nrisk provider. Store this value and use it to find additional details \n about this transaction within the 3rd party risk provider's UI.",
            "example": "DDWT0P3LG6LL"
          },
          "assessment": {
            "$ref": "#/components/schemas/RiskAssessment"
          }
        }
      },
      "Signature": {
        "title": "Signature",
        "required": [
          "data",
          "format"
        ],
        "type": "object",
        "properties": {
          "data": {
            "maxLength": 4194304,
            "type": "string",
            "description": "The base64-encoded data sent when a signature is captured as a Portable Network Graphics (PNG) file.",
            "example": ""
          },
          "format": {
            "enum": [
              "P"
            ],
            "type": "string",
            "description": "The data format the signature data will be in. \"P\" for PNG format.",
            "example": "P"
          }
        }
      },
      "DevicesInfoResponse": {
        "title": "DevicesInfoResponse",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result45"
            },
            "description": ""
          }
        }
      },
      "Device41": {
        "title": "Device41",
        "required": [
          "terminalId",
          "lineItems"
        ],
        "type": "object",
        "properties": {
          "terminalId": {
            "maxLength": 32,
            "type": "string",
            "description": "To prompt a specific UTG-controlled PIN pad in a request, the API Terminal ID configured in UTG TuneUp must be specified in this field.",
            "example": "1742"
          },
          "lineItems": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "An array of line items to display on the UTG-controlled device.",
            "example": [
              "Hamburger",
              "Fries",
              "Soda",
              "Cookie"
            ]
          }
        }
      },
      "Result11": {
        "title": "Result11",
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "amount": {
            "$ref": "#/components/schemas/Amount11"
          },
          "card": {
            "$ref": "#/components/schemas/Card76"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer12"
          },
          "clerk": {
            "$ref": "#/components/schemas/ObjectClerkResponse"
          },
          "device": {
            "$ref": "#/components/schemas/ObjectDeviceOnlyTIDResponse"
          },
          "emv": {
            "$ref": "#/components/schemas/ObjectEMV"
          },
          "receipt": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectReceipt"
            },
            "description": "array of receipt key/value pairs that should be printed on the receipt.",
            "example": [
              {
                "key": "ApplicationIdentifier",
                "printName": "AID",
                "printValue": "A0000000031010"
              },
              {
                "key": "TerminalVerificationResults",
                "printName": "TVR",
                "printValue": "8000"
              },
              {
                "key": "IssuerApplicationData",
                "printName": "IAD",
                "printValue": "06010A03A40002"
              },
              {
                "key": "TransactionStatusIndicator",
                "printName": "TSI",
                "printValue": "E800"
              },
              {
                "key": "AuthorizationResponseCode",
                "printName": "ARC",
                "printValue": "00"
              },
              {
                "key": "TransactionCurrencyCode",
                "printValue": "USD$"
              },
              {
                "key": "ApplicationLabel",
                "printValue": "CREDITO DE VISA"
              }
            ]
          },
          "signature": {
            "$ref": "#/components/schemas/ObjectSignature"
          },
          "server": {
            "$ref": "#/components/schemas/ObjectServer"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction86"
          },
          "universalToken": {
            "$ref": "#/components/schemas/ObjectUniversalToken"
          }
        }
      },
      "GiftcardsActivateResponse": {
        "title": "GiftcardsActivateResponse",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result27"
            },
            "description": ""
          }
        }
      },
      "Result25": {
        "title": "Result25",
        "type": "object",
        "properties": {
          "merchant": {
            "$ref": "#/components/schemas/ObjectMerchant"
          },
          "server": {
            "$ref": "#/components/schemas/ObjectServer"
          }
        }
      },
      "RiskAssessResponse": {
        "title": "RiskAssessResponse",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result85"
            },
            "description": ""
          }
        }
      },
      "Result12": {
        "title": "Result12",
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "amount": {
            "$ref": "#/components/schemas/ObjectAmount"
          },
          "card": {
            "$ref": "#/components/schemas/ObjectCardResponse"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer12"
          },
          "clerk": {
            "$ref": "#/components/schemas/ObjectClerkResponse"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction87"
          },
          "receipt": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectReceipt"
            },
            "description": "array of receipt key/value pairs that should be printed on the receipt.",
            "example": [
              {
                "key": "ApplicationIdentifier",
                "printName": "AID",
                "printValue": "A0000000031010"
              },
              {
                "key": "TerminalVerificationResults",
                "printName": "TVR",
                "printValue": "8000"
              },
              {
                "key": "IssuerApplicationData",
                "printName": "IAD",
                "printValue": "06010A03A40002"
              },
              {
                "key": "TransactionStatusIndicator",
                "printName": "TSI",
                "printValue": "E800"
              },
              {
                "key": "AuthorizationResponseCode",
                "printName": "ARC",
                "printValue": "00"
              },
              {
                "key": "TransactionCurrencyCode",
                "printValue": "USD$"
              },
              {
                "key": "ApplicationLabel",
                "printValue": "CREDITO DE VISA"
              }
            ]
          },
          "server": {
            "$ref": "#/components/schemas/ObjectServer"
          }
        }
      },
      "Result50": {
        "title": "Result50",
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "device": {
            "$ref": "#/components/schemas/Device54"
          },
          "server": {
            "$ref": "#/components/schemas/ObjectServer"
          }
        }
      },
      "Result20": {
        "title": "Result20",
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "card": {
            "$ref": "#/components/schemas/Card78"
          },
          "customer": {
            "$ref": "#/components/schemas/ObjectCustomer"
          },
          "device": {
            "$ref": "#/components/schemas/ObjectDeviceOnlyTIDResponse"
          },
          "server": {
            "$ref": "#/components/schemas/ObjectServer"
          },
          "universalToken": {
            "$ref": "#/components/schemas/ObjectUniversalToken"
          }
        }
      },
      "Emv": {
        "title": "Emv",
        "required": [
          "tlvData"
        ],
        "type": "object",
        "properties": {
          "tlvData": {
            "maxLength": 500,
            "type": "string",
            "description": "This field will contain all EMV tags in standard TLV format including the P2PE encrypted tags (5A and 57).  The P2PE encrypted tags (5A and 57) will have the entire TLV string encrypted and the encrypted data will be in a TLV format using the same tag. For example, tag 5A would look like the following:\n\n  Encrypted: 5A103737DA95D8062F647A0FF747CC496570\n  \n  Decrypted: 5A084761739001010010",
            "example": "4F07A0000000041010500A4D61737465724361726457203CCEB572BE7DD0A38E62E6BD70E3DAACE9B46BD3BF65E188E7D8D68D2178DE1A5A10B1794BAC083B08F0A1444F189A5493255F201A546573742F4361726420303920202020202020202020202020205F24032512315F25031511015F2D02656E5F3401018407A0000000041010950508200000009B02C8009F02060000000004449F03060000000000009F34031E03009F3704C5BF918D9F390105"
          }
        }
      },
      "Result7": {
        "title": "Result7",
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "amount": {
            "$ref": "#/components/schemas/ObjectAmount"
          },
          "card": {
            "$ref": "#/components/schemas/ObjectCardResponse"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer12"
          },
          "clerk": {
            "$ref": "#/components/schemas/ObjectClerkResponse"
          },
          "device": {
            "$ref": "#/components/schemas/ObjectDeviceOnlyTIDResponse"
          },
          "emv": {
            "$ref": "#/components/schemas/ObjectEMV"
          },
          "receipt": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectReceipt"
            },
            "description": "array of receipt key/value pairs that should be printed on the receipt.",
            "example": [
              {
                "key": "ApplicationIdentifier",
                "printName": "AID",
                "printValue": "A0000000031010"
              },
              {
                "key": "TerminalVerificationResults",
                "printName": "TVR",
                "printValue": "8000"
              },
              {
                "key": "IssuerApplicationData",
                "printName": "IAD",
                "printValue": "06010A03A40002"
              },
              {
                "key": "TransactionStatusIndicator",
                "printName": "TSI",
                "printValue": "E800"
              },
              {
                "key": "AuthorizationResponseCode",
                "printName": "ARC",
                "printValue": "00"
              },
              {
                "key": "TransactionCurrencyCode",
                "printValue": "USD$"
              },
              {
                "key": "ApplicationLabel",
                "printValue": "CREDITO DE VISA"
              }
            ]
          },
          "server": {
            "$ref": "#/components/schemas/ObjectServer"
          },
          "signature": {
            "$ref": "#/components/schemas/ObjectSignature"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction82"
          },
          "universalToken": {
            "$ref": "#/components/schemas/ObjectUniversalToken"
          },
          "cardBrandToken": {
            "$ref": "#/components/schemas/ObjectBrandToken"
          }
        }
      },
      "Result18": {
        "title": "Result18",
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "server": {
            "$ref": "#/components/schemas/ObjectServer"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction92"
          }
        }
      },
      "Result72": {
        "title": "Result72",
        "required": [
          "dateTime",
          "amount",
          "transaction",
          "trustly"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "amount": {
            "$ref": "#/components/schemas/Amount1"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction72"
          },
          "server": {
            "$ref": "#/components/schemas/ObjectServer"
          },
          "sourceIp": {
            "type": "string",
            "description": "Public source IP Address where the request originates,\nnot the IP Address of the web server.",
            "example": "63.57.84.101"
          },
          "paymentAccountId": {
            "type": "string",
            "description": "Shift4 generated Unique Payment Account ID",
            "example": "BF06A6AB-A91D-4145-8704-13B8C48A7A95"
          },
          "currencyCode": {
            "type": "string",
            "description": "Transaction currency code.",
            "example": "USD"
          },
          "trustly": {
            "$ref": "#/components/schemas/Trustly7"
          }
        }
      },
      "Result10": {
        "title": "Result10",
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "amount": {
            "$ref": "#/components/schemas/ObjectAmount"
          },
          "card": {
            "$ref": "#/components/schemas/ObjectCardResponse"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer12"
          },
          "clerk": {
            "$ref": "#/components/schemas/ObjectClerkResponse"
          },
          "device": {
            "$ref": "#/components/schemas/ObjectDeviceOnlyTIDResponse"
          },
          "emv": {
            "$ref": "#/components/schemas/ObjectEMV"
          },
          "lighthouse": {
            "$ref": "#/components/schemas/ObjectLighthouseResponse"
          },
          "receipt": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectReceipt"
            },
            "description": "array of receipt key/value pairs that should be printed on the receipt.",
            "example": [
              {
                "key": "ApplicationIdentifier",
                "printName": "AID",
                "printValue": "A0000000031010"
              },
              {
                "key": "TerminalVerificationResults",
                "printName": "TVR",
                "printValue": "8000"
              },
              {
                "key": "IssuerApplicationData",
                "printName": "IAD",
                "printValue": "06010A03A40002"
              },
              {
                "key": "TransactionStatusIndicator",
                "printName": "TSI",
                "printValue": "E800"
              },
              {
                "key": "AuthorizationResponseCode",
                "printName": "ARC",
                "printValue": "00"
              },
              {
                "key": "TransactionCurrencyCode",
                "printValue": "USD$"
              },
              {
                "key": "ApplicationLabel",
                "printValue": "CREDITO DE VISA"
              }
            ]
          },
          "server": {
            "$ref": "#/components/schemas/ObjectServer"
          },
          "signature": {
            "$ref": "#/components/schemas/ObjectSignature"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction82"
          },
          "universalToken": {
            "$ref": "#/components/schemas/ObjectUniversalToken"
          },
          "cardBrandToken": {
            "$ref": "#/components/schemas/ObjectBrandToken"
          }
        }
      },
      "Result64": {
        "title": "Result64",
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction112"
          },
          "merchant": {
            "$ref": "#/components/schemas/Merchant1"
          },
          "server": {
            "$ref": "#/components/schemas/ObjectServer"
          }
        }
      },
      "Result71": {
        "title": "Result71",
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "amount": {
            "$ref": "#/components/schemas/Amount12"
          },
          "error": {
            "$ref": "#/components/schemas/ObjectError"
          }
        }
      },
      "Result36": {
        "title": "Result36",
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "amount": {
            "$ref": "#/components/schemas/ObjectAmountGCResponse"
          },
          "card": {
            "$ref": "#/components/schemas/ObjectCardResponseGC"
          },
          "device": {
            "$ref": "#/components/schemas/ObjectDeviceOnlyTIDResponse"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction95"
          },
          "server": {
            "$ref": "#/components/schemas/ObjectServer"
          }
        }
      },
      "Result86": {
        "title": "Result86",
        "type": "object",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/ObjectError"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction137"
          }
        }
      },
      "Result56": {
        "title": "Result56",
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "batch": {
            "$ref": "#/components/schemas/ObjectBatchResponse"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction104"
          },
          "server": {
            "$ref": "#/components/schemas/ObjectServer"
          }
        }
      },
      "Result66": {
        "title": "Result66",
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction113"
          },
          "server": {
            "$ref": "#/components/schemas/ObjectServer"
          }
        }
      },
      "Result60": {
        "title": "Result60",
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "amount": {
            "$ref": "#/components/schemas/Amount14"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction110"
          },
          "merchant": {
            "$ref": "#/components/schemas/Merchant"
          },
          "qrPayConfig": {
            "$ref": "#/components/schemas/ObjectQRPayConfig"
          },
          "server": {
            "$ref": "#/components/schemas/ObjectServer"
          },
          "credential": {
            "$ref": "#/components/schemas/Credential1"
          }
        }
      },
      "Result9": {
        "title": "Result9",
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "amount": {
            "$ref": "#/components/schemas/ObjectAmount"
          },
          "card": {
            "$ref": "#/components/schemas/Card76"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer12"
          },
          "clerk": {
            "$ref": "#/components/schemas/ObjectClerkResponse"
          },
          "receipt": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectReceipt"
            },
            "description": "array of receipt key/value pairs that should be printed on the receipt.",
            "example": [
              {
                "key": "ApplicationIdentifier",
                "printName": "AID",
                "printValue": "A0000000031010"
              },
              {
                "key": "TerminalVerificationResults",
                "printName": "TVR",
                "printValue": "8000"
              },
              {
                "key": "IssuerApplicationData",
                "printName": "IAD",
                "printValue": "06010A03A40002"
              },
              {
                "key": "TransactionStatusIndicator",
                "printName": "TSI",
                "printValue": "E800"
              },
              {
                "key": "AuthorizationResponseCode",
                "printName": "ARC",
                "printValue": "00"
              },
              {
                "key": "TransactionCurrencyCode",
                "printValue": "USD$"
              },
              {
                "key": "ApplicationLabel",
                "printValue": "CREDITO DE VISA"
              }
            ]
          },
          "server": {
            "$ref": "#/components/schemas/ObjectServer"
          },
          "signature": {
            "$ref": "#/components/schemas/ObjectSignature"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction84"
          },
          "universalToken": {
            "$ref": "#/components/schemas/ObjectUniversalToken"
          }
        }
      },
      "Result33": {
        "title": "Result33",
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "card": {
            "$ref": "#/components/schemas/ObjectCardResponseGC"
          },
          "device": {
            "$ref": "#/components/schemas/ObjectDeviceOnlyTIDResponse"
          },
          "server": {
            "$ref": "#/components/schemas/ObjectServer"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction93"
          },
          "universalToken": {
            "$ref": "#/components/schemas/ObjectUniversalToken"
          }
        }
      },
      "MerchantsMerchantResponse": {
        "title": "MerchantsMerchantResponse",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result25"
            },
            "description": ""
          }
        }
      },
      "P2PEviaIDTechDevice5": {
        "title": "P2PEviaIDTechDevice5",
        "required": [
          "dateTime",
          "p2pe"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "p2pe": {
            "$ref": "#/components/schemas/P2pe"
          },
          "apiOptions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "API Options modify the request being made. See the [API Options](#tag/API-Options) section for more information.",
            "example": [
              "RETURNEXPDATE",
              "ALLOWPARTIALAUTH"
            ]
          },
          "customer": {
            "$ref": "#/components/schemas/ObjectCustomer"
          }
        }
      },
      "QrpaymentsCancelqrpaymentRequest": {
        "title": "QrpaymentsCancelqrpaymentRequest",
        "required": [
          "dateTime",
          "qrCode"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "qrCode": {
            "$ref": "#/components/schemas/ObjectQRCodeRequest"
          }
        }
      },
      "Result48": {
        "title": "Result48",
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "card": {
            "$ref": "#/components/schemas/ObjectCardResponse"
          },
          "p2pe": {
            "$ref": "#/components/schemas/ObjectP2PE"
          },
          "device": {
            "$ref": "#/components/schemas/Device36"
          },
          "server": {
            "$ref": "#/components/schemas/ObjectServer"
          }
        }
      },
      "P2PEMagstripeMSR9": {
        "title": "P2PEMagstripeMSR9",
        "required": [
          "dateTime",
          "card",
          "transaction",
          "device",
          "p2pe"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "card": {
            "$ref": "#/components/schemas/Card35"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction34"
          },
          "device": {
            "$ref": "#/components/schemas/Device1"
          },
          "p2pe": {
            "$ref": "#/components/schemas/ObjectP2PEType05"
          }
        }
      },
      "DevicesProcessformResponse": {
        "title": "DevicesProcessformResponse",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result50"
            },
            "description": ""
          }
        }
      },
      "Result51": {
        "title": "Result51",
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "device": {
            "$ref": "#/components/schemas/ObjectDeviceOnlyTIDResponse"
          },
          "server": {
            "$ref": "#/components/schemas/ObjectServer"
          }
        }
      },
      "Tappp": {
        "title": "Tappp",
        "type": "object",
        "properties": {
          "taxAmount": {
            "type": "string",
            "description": "Tax levied on the transaction amount",
            "example": "0.29"
          },
          "taxPercentage": {
            "type": "string",
            "description": "Tax percentage levied on the transaction amount",
            "example": "6"
          }
        }
      },
      "Result37": {
        "title": "Result37",
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "customer": {
            "$ref": "#/components/schemas/ObjectCustomer"
          },
          "card": {
            "$ref": "#/components/schemas/Card84"
          },
          "device": {
            "$ref": "#/components/schemas/ObjectDeviceOnlyTIDResponse"
          },
          "server": {
            "$ref": "#/components/schemas/ObjectServer"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction103"
          }
        }
      },
      "Result39": {
        "title": "Result39",
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "device": {
            "$ref": "#/components/schemas/ObjectDeviceOnlyTIDResponse"
          },
          "server": {
            "$ref": "#/components/schemas/ObjectServer"
          },
          "signature": {
            "$ref": "#/components/schemas/ObjectSignature"
          }
        }
      },
      "Result24": {
        "title": "Result24",
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "card": {
            "$ref": "#/components/schemas/ObjectCardResponseFourWords"
          },
          "server": {
            "$ref": "#/components/schemas/ObjectServer"
          }
        }
      },
      "QrpaymentsGetqrdetailsRequest": {
        "title": "QrpaymentsGetqrdetailsRequest",
        "required": [
          "dateTime",
          "qrCode"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "qrCode": {
            "$ref": "#/components/schemas/ObjectQRCodeRequest"
          }
        }
      },
      "ReportsBatchtotals400Error1": {
        "title": "ReportsBatchtotals400Error1",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result5"
            },
            "description": ""
          }
        }
      },
      "Result38": {
        "title": "Result38",
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "card": {
            "$ref": "#/components/schemas/ObjectCardResponseIdentify"
          },
          "device": {
            "$ref": "#/components/schemas/ObjectDeviceOnlyTIDResponse"
          },
          "server": {
            "$ref": "#/components/schemas/ObjectServer"
          }
        }
      },
      "Shipping": {
        "title": "Shipping",
        "type": "object",
        "properties": {
          "addressLine1": {
            "type": "string",
            "description": "Shipping street address - Line 1",
            "example": "65 Easy St"
          },
          "addressLine2": {
            "type": "string",
            "description": "Shipping street address - Line 2",
            "example": "c/o John Doe"
          },
          "city": {
            "type": "string",
            "description": "Shipping address - City",
            "example": "Las Vegas"
          },
          "country": {
            "type": "string",
            "description": "Shipping address - Country",
            "example": "US"
          },
          "emailAddress": {
            "type": "string",
            "description": "Shipping address - Email address of recipient",
            "example": "firstname.lastname@email.com"
          },
          "fullName": {
            "type": "string",
            "description": "Shipping address - Name of recipient",
            "example": "John Smith"
          },
          "postalCode": {
            "maxLength": 9,
            "minLength": 5,
            "type": "string",
            "description": "Shipping address - Postal Code",
            "example": "65144"
          },
          "phoneNumber": {
            "type": "string",
            "description": "Ship-to Phone Number",
            "example": "+13110001234"
          },
          "region": {
            "type": "string",
            "description": "Shipping address - State/Province",
            "example": "NV"
          },
          "type": {
            "$ref": "#/components/schemas/ShippingType"
          }
        }
      },
      "Result27": {
        "title": "Result27",
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "amount": {
            "$ref": "#/components/schemas/ObjectAmountGCResponse"
          },
          "card": {
            "$ref": "#/components/schemas/ObjectCardResponseGC"
          },
          "device": {
            "$ref": "#/components/schemas/ObjectDeviceOnlyTIDResponse"
          },
          "server": {
            "$ref": "#/components/schemas/ObjectServer"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction93"
          }
        }
      },
      "Result21": {
        "title": "Result21",
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "card": {
            "$ref": "#/components/schemas/Card80"
          },
          "server": {
            "$ref": "#/components/schemas/ObjectServer"
          },
          "universalToken": {
            "$ref": "#/components/schemas/ObjectUniversalToken"
          }
        }
      },
      "Result42": {
        "title": "Result42",
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "device": {
            "$ref": "#/components/schemas/Device40"
          },
          "server": {
            "$ref": "#/components/schemas/ObjectServer"
          }
        }
      },
      "Result58": {
        "title": "Result58",
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "qrCode": {
            "$ref": "#/components/schemas/ObjectQRCodeResponse"
          },
          "server": {
            "$ref": "#/components/schemas/ObjectServer"
          },
          "amount": {
            "$ref": "#/components/schemas/Amount14"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction109"
          }
        }
      },
      "Result73": {
        "title": "Result73",
        "required": [
          "dateTime",
          "amount",
          "transaction",
          "trustly"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "amount": {
            "$ref": "#/components/schemas/Amount1"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction72"
          },
          "server": {
            "$ref": "#/components/schemas/ObjectServer"
          },
          "sourceIp": {
            "type": "string",
            "description": "Public source IP Address where the request originates,\nnot the IP Address of the web server.",
            "example": "63.57.84.101"
          },
          "paymentAccountId": {
            "type": "string",
            "description": "Shift4 generated Unique Payment Account ID",
            "example": "BF06A6AB-A91D-4145-8704-13B8C48A7A95"
          },
          "currencyCode": {
            "type": "string",
            "description": "Transaction currency code.",
            "example": "USD"
          },
          "trustly": {
            "$ref": "#/components/schemas/Trustly9"
          }
        }
      },
      "Result77": {
        "title": "Result77",
        "required": [
          "dateTime",
          "currencyCode",
          "sourceIp",
          "transaction",
          "amount",
          "customer",
          "tappp"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "currencyCode": {
            "type": "string",
            "description": "Transaction currency code.",
            "example": "USD"
          },
          "sourceIp": {
            "type": "string",
            "description": "Public source IP Address where the request originates,\nnot the IP Address of the web server.",
            "example": "63.57.84.101"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction129"
          },
          "amount": {
            "$ref": "#/components/schemas/Amount23"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer22"
          },
          "tappp": {
            "$ref": "#/components/schemas/Tappp2"
          }
        }
      },
      "RiskAssess400Error1": {
        "title": "RiskAssess400Error1",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result86"
            },
            "description": ""
          }
        },
        "example": {
          "result": [
            {
              "error": {
                "longText": "format error",
                "primaryCode": 9151,
                "secondaryCode": 0,
                "shortText": "format error"
              },
              "transaction": {
                "s4RiskId": "EC52377F-5A8E-4534-BE7A-CF779A35BE45",
                "invoice": "0207123502",
                "orderId": "orderId",
                "hostResponse": {
                  "reasonCode": "232",
                  "reasonDescription": "The credit card information is missing"
                }
              }
            }
          ]
        }
      },
      "ErrorResponseAPM1": {
        "title": "ErrorResponseAPM1",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result70"
            },
            "description": ""
          }
        },
        "example": {
          "result": [
            {
              "dateTime": "2021-04-15T09:18:23.283-07:00",
              "amount": {
                "total": 160
              },
              "error": {
                "primaryCode": 9126,
                "secondaryCode": 0,
                "shortText": "SplitToken",
                "longText": "Expired Split Token"
              },
              "server": {
                "name": "U2API01CE"
              }
            }
          ]
        }
      },
      "ReportsBatchdetailsResponse": {
        "title": "ReportsBatchdetailsResponse",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result52"
            },
            "description": ""
          }
        }
      },
      "ShoppingCartArray": {
        "title": "ShoppingCartArray",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Shopping cart data array attribute high level or generalized description of the item added to the shopping cart; this value should be free from any markup or Unicode values. This value should be passed as plain text.",
            "example": "Deodarant"
          },
          "description": {
            "type": "string",
            "description": "Shopping cart data array attribute for a specific description of the item being purchased.",
            "example": "New Spice Fiji"
          },
          "sku": {
            "type": "string",
            "description": "Shopping cart data array attribute typically the SKU for an item; this value should be free from any markup or Unicode values. This value should be passed as plain text.",
            "example": "579446588"
          },
          "quantity": {
            "type": "integer",
            "description": "Shopping cart data array attribute signifying the quantity of the item being purchased.",
            "format": "int32",
            "example": 4
          },
          "price": {
            "type": "number",
            "description": "Shopping cart data array attribute for the price of the single item. Must be a natural number including 0.",
            "example": 1000
          }
        }
      },
      "Result45": {
        "title": "Result45",
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "device": {
            "$ref": "#/components/schemas/Device44"
          },
          "server": {
            "$ref": "#/components/schemas/ObjectServer"
          }
        }
      },
      "Result85": {
        "title": "Result85",
        "required": [
          "dateTime",
          "amount",
          "risk",
          "transaction"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "amount": {
            "$ref": "#/components/schemas/Amount1"
          },
          "risk": {
            "$ref": "#/components/schemas/Risk2"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction136"
          }
        }
      },
      "RiskAssess504Error1": {
        "title": "RiskAssess504Error1",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result87"
            },
            "description": ""
          }
        },
        "example": {
          "result": [
            {
              "error": {
                "longText": "Timeout waiting for response across the internet",
                "primaryCode": 9951,
                "secondaryCode": 0,
                "shortText": "RESPONSE TIMEOUT"
              },
              "transaction": {
                "s4RiskId": "EC52377F-5A8E-4534-BE7A-CF779A35BE45",
                "invoice": "0207123502",
                "orderId": "orderId"
              }
            }
          ]
        }
      },
      "Result31": {
        "title": "Result31",
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "card": {
            "$ref": "#/components/schemas/ObjectCardResponseDeact"
          },
          "device": {
            "$ref": "#/components/schemas/ObjectDeviceOnlyTIDResponse"
          },
          "server": {
            "$ref": "#/components/schemas/ObjectServer"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction93"
          },
          "universalToken": {
            "$ref": "#/components/schemas/ObjectUniversalToken"
          }
        }
      },
      "Result62": {
        "title": "Result62",
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "amount": {
            "$ref": "#/components/schemas/ObjectAmount"
          },
          "card": {
            "$ref": "#/components/schemas/ObjectCardResponse"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer12"
          },
          "clerk": {
            "$ref": "#/components/schemas/ObjectClerkResponse"
          },
          "receipt": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectReceipt"
            },
            "description": "array of receipt key/value pairs that should be printed on the receipt.",
            "example": [
              {
                "key": "ApplicationIdentifier",
                "printName": "AID",
                "printValue": "A0000000031010"
              },
              {
                "key": "TerminalVerificationResults",
                "printName": "TVR",
                "printValue": "8000"
              },
              {
                "key": "IssuerApplicationData",
                "printName": "IAD",
                "printValue": "06010A03A40002"
              },
              {
                "key": "TransactionStatusIndicator",
                "printName": "TSI",
                "printValue": "E800"
              },
              {
                "key": "AuthorizationResponseCode",
                "printName": "ARC",
                "printValue": "00"
              },
              {
                "key": "TransactionCurrencyCode",
                "printValue": "USD$"
              },
              {
                "key": "ApplicationLabel",
                "printValue": "CREDITO DE VISA"
              }
            ]
          },
          "server": {
            "$ref": "#/components/schemas/ObjectServer"
          },
          "signature": {
            "$ref": "#/components/schemas/ObjectSignature"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction111"
          },
          "universalToken": {
            "$ref": "#/components/schemas/ObjectUniversalToken"
          }
        }
      },
      "Risk": {
        "title": "Risk",
        "required": [
          "sessionId"
        ],
        "type": "object",
        "properties": {
          "sessionId": {
            "type": "string",
            "description": "Unique Session ID. Must be unique over a 30-day span.",
            "example": "123420552ab34024b461455de4bcb482"
          }
        }
      },
      "Result41": {
        "title": "Result41",
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "device": {
            "$ref": "#/components/schemas/Device38"
          },
          "server": {
            "$ref": "#/components/schemas/ObjectServer"
          }
        }
      },
      "Result43": {
        "title": "Result43",
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "device": {
            "$ref": "#/components/schemas/Device36"
          },
          "server": {
            "$ref": "#/components/schemas/ObjectServer"
          }
        }
      },
      "TerminalIDErrorResponse1": {
        "title": "TerminalIDErrorResponse1",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result5"
            },
            "description": ""
          }
        }
      },
      "Tokens4wordsRequest": {
        "title": "Tokens4wordsRequest",
        "required": [
          "dateTime",
          "card"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "card": {
            "$ref": "#/components/schemas/Card81"
          }
        }
      },
      "Transaction3": {
        "title": "Transaction3",
        "required": [
          "invoice",
          "purchaseCard"
        ],
        "type": "object",
        "properties": {
          "invoice": {
            "maxLength": 10,
            "type": "string",
            "description": "10-digit invoice number assigned by the interface to identify a transaction. An invoice number serves as a unique key that identifies a transaction within a batch in Shift4 Payments' Gateway.\n\n##### Note: Although the invoice number is sent as a JSON string it is a numeric value. No alpha characters are allowed.",
            "example": "192029"
          },
          "notes": {
            "maxLength": 4096,
            "type": "string",
            "description": "A free-form notes field that supports the use of HTML tags.  This can be used for reference in [Lighthouse Transaction Manager](https://ltm.shift4test.com/) and is not sent to the authorization host. Escaped quotation marks should not be sent in the Notes field.",
            "example": "Transaction notes are added here"
          },
          "businessDate": {
            "minLength": 10,
            "type": "string",
            "description": "Desired business date of a transaction. Include when overriding the existing business date of a transaction. The overriding date may be earlier or later than the existing date.",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "amex": {
            "$ref": "#/components/schemas/ObjectTransactionAmex"
          },
          "auto": {
            "$ref": "#/components/schemas/ObjectAutoCheckIn"
          },
          "airline": {
            "$ref": "#/components/schemas/ObjectAirlineRequest"
          },
          "cardOnFile": {
            "$ref": "#/components/schemas/ObjectCardOnFile"
          },
          "hotel": {
            "$ref": "#/components/schemas/ObjectHotelCheckIn"
          },
          "pin": {
            "$ref": "#/components/schemas/ObjectPin"
          },
          "purchaseCard": {
            "$ref": "#/components/schemas/ObjectPurchaseCard"
          },
          "vendorReference": {
            "maxLength": 50,
            "type": "string",
            "description": "Optional field for information that can be searched in LTM.",
            "example": "12382-01"
          }
        }
      },
      "Transaction93": {
        "title": "Transaction93",
        "type": "object",
        "properties": {
          "authSource": {
            "$ref": "#/components/schemas/TransactionAuthSource"
          },
          "invoice": {
            "maxLength": 10,
            "type": "string",
            "description": "10-digit invoice number assigned by the interface to identify a transaction. An invoice number serves as a unique key that identifies a transaction within a batch in Shift4 Payments' Gateway.\n\n##### Note: Although the invoice number is sent as a JSON string it is a numeric value. No alpha characters are allowed.",
            "example": "192029"
          },
          "responseCode": {
            "$ref": "#/components/schemas/TransactionResponseCode"
          }
        }
      },
      "TapppInitiatepaymentResponse": {
        "title": "TapppInitiatepaymentResponse",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result75"
            },
            "description": ""
          }
        }
      },
      "TransactionsInvoiceResponse": {
        "title": "TransactionsInvoiceResponse",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result12"
            },
            "description": ""
          }
        }
      },
      "TransactionsManualauthorizationResponse": {
        "title": "TransactionsManualauthorizationResponse",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result16"
            },
            "description": ""
          }
        }
      },
      "TransactionsSaleResponse": {
        "title": "TransactionsSaleResponse",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result10"
            },
            "description": ""
          }
        }
      },
      "Trustly": {
        "title": "Trustly",
        "required": [
          "payment"
        ],
        "type": "object",
        "properties": {
          "payment": {
            "$ref": "#/components/schemas/Payment"
          }
        }
      },
      "Transaction138": {
        "title": "Transaction138",
        "type": "object",
        "properties": {
          "s4RiskId": {
            "type": "string",
            "description": "Unique transaction identification number generated by Shift4 to identify  a specific risk transaction and a field that can be searched in LTM.",
            "example": "EC52377F-5A8E-4534-BE7A-CF779A35BE45"
          },
          "invoice": {
            "maxLength": 10,
            "type": "string",
            "description": "10-digit invoice number assigned by the interface to identify a transaction. An invoice number serves as a unique key that identifies a transaction within a batch in Shift4 Payments' Gateway.\n\n##### Note: Although the invoice number is sent as a JSON string it is a numeric value. No alpha characters are allowed.",
            "example": "192029"
          },
          "orderId": {
            "type": "string",
            "description": "Merchant’s Order Number",
            "example": "92282831"
          }
        }
      },
      "Trustly9": {
        "title": "Trustly9",
        "required": [
          "transactionId"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "maxLength": 15,
            "type": "string",
            "description": "A unique Trustly transaction identifier.",
            "example": "1002633191"
          },
          "payment": {
            "$ref": "#/components/schemas/Payment1"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction74"
          },
          "account": {
            "$ref": "#/components/schemas/Account"
          },
          "paymentProvider": {
            "$ref": "#/components/schemas/PaymentProvider"
          }
        }
      },
      "TrustlyStatusinquiryResponse": {
        "title": "TrustlyStatusinquiryResponse",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result73"
            },
            "description": ""
          }
        }
      },
      "Transaction127": {
        "title": "Transaction127",
        "required": [
          "authSource",
          "responseCode",
          "invoice"
        ],
        "type": "object",
        "properties": {
          "authSource": {
            "$ref": "#/components/schemas/TransactionAuthSource"
          },
          "responseCode": {
            "$ref": "#/components/schemas/TransactionResponseCode"
          },
          "invoice": {
            "maxLength": 10,
            "type": "string",
            "description": "10-digit invoice number assigned by the interface to identify a transaction. An invoice number serves as a unique key that identifies a transaction within a batch in Shift4 Payments' Gateway.\n\n##### Note: Although the invoice number is sent as a JSON string it is a numeric value. No alpha characters are allowed.",
            "example": "192029"
          },
          "notes": {
            "maxLength": 4096,
            "type": "string",
            "description": "A free-form notes field that supports the use of HTML tags.  This can be used for reference in [Lighthouse Transaction Manager](https://ltm.shift4test.com/) and is not sent to the authorization host. Escaped quotation marks should not be sent in the Notes field.",
            "example": "Transaction notes are added here"
          },
          "vendorReference": {
            "maxLength": 50,
            "type": "string",
            "description": "Optional field for information that can be searched in LTM.",
            "example": "12382-01"
          }
        }
      },
      "SubsequentDeposit2": {
        "title": "SubsequentDeposit2",
        "required": [
          "dateTime",
          "amount",
          "sourceIp",
          "transaction",
          "paymentAccountId"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "amount": {
            "$ref": "#/components/schemas/Amount1"
          },
          "sourceIp": {
            "type": "string",
            "description": "Public source IP Address where the request originates,\nnot the IP Address of the web server.",
            "example": "63.57.84.101"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction70"
          },
          "paymentAccountId": {
            "type": "string",
            "description": "Shift4 generated Unique Payment Account ID",
            "example": "BF06A6AB-A91D-4145-8704-13B8C48A7A95"
          }
        }
      },
      "Transaction108": {
        "title": "Transaction108",
        "required": [
          "invoice",
          "saleFlag"
        ],
        "type": "object",
        "properties": {
          "invoice": {
            "maxLength": 10,
            "type": "string",
            "description": "10-digit invoice number assigned by the interface to identify a transaction. An invoice number serves as a unique key that identifies a transaction within a batch in Shift4 Payments' Gateway.\n\n##### Note: Although the invoice number is sent as a JSON string it is a numeric value. No alpha characters are allowed.",
            "example": "192029"
          },
          "saleFlag": {
            "$ref": "#/components/schemas/TransactionQRSaleFlag"
          },
          "vendorReference": {
            "maxLength": 50,
            "type": "string",
            "description": "Optional field for information that can be searched in LTM.",
            "example": "12382-01"
          }
        }
      },
      "Transaction109": {
        "title": "Transaction109",
        "type": "object",
        "properties": {
          "invoice": {
            "maxLength": 10,
            "type": "string",
            "description": "10-digit invoice number assigned by the interface to identify a transaction. An invoice number serves as a unique key that identifies a transaction within a batch in Shift4 Payments' Gateway.\n\n##### Note: Although the invoice number is sent as a JSON string it is a numeric value. No alpha characters are allowed.",
            "example": "192029"
          },
          "saleFlag": {
            "$ref": "#/components/schemas/TransactionQRSaleFlag"
          },
          "vendorReference": {
            "maxLength": 50,
            "type": "string",
            "description": "Optional field for information that can be searched in LTM.",
            "example": "12382-01"
          },
          "responseCode": {
            "$ref": "#/components/schemas/TransactionResponseCode"
          }
        }
      },
      "TimeoutResponse1": {
        "title": "TimeoutResponse1",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result6"
            },
            "description": ""
          }
        }
      },
      "Transaction103": {
        "title": "Transaction103",
        "type": "object",
        "properties": {
          "authorizationCode": {
            "maxLength": 6,
            "type": "string",
            "description": "The authorization code provided by the consumer’s issuing bank. It is provided in a response if an online authorization or sale request is approved. Following a referral response, it is also specified in [Manual Sale](#operation/manualsale) requests.",
            "example": "198399"
          },
          "responseCode": {
            "$ref": "#/components/schemas/TransactionResponseCode"
          },
          "avs": {
            "$ref": "#/components/schemas/ObjectAVS"
          },
          "cardOnFile": {
            "$ref": "#/components/schemas/ObjectCardOnFile"
          }
        }
      },
      "Tappp2": {
        "title": "Tappp2",
        "required": [
          "token",
          "transactionId",
          "transactionTimestamp"
        ],
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "This is a unique token sent by TAPPP during initial request",
            "example": "GkmNK9g9LV5zVkl1GwKlYJXd1a3Clr3G2XHuwBR7mkXZUeNWbsuRH/OVeb57o8B1N2ZKqF1xoxPPkSvHiGQbtDv+d4vEg5vpn9DdGrYbdZN7/h1R/Wv5heXC7B04vtK9NtTVQYSYrTRByMGvHHlnds81TLDovirmmvUXYFlKmC0="
          },
          "transactionId": {
            "maxLength": 100,
            "type": "string",
            "description": "Unique transaction reference generated by TAPPP",
            "example": "RD-TX-41830974392803140"
          },
          "transactionTimestamp": {
            "type": "string",
            "description": "The time at which the transaction happened, in milliseconds, calculated from midnight of January 1, 1970",
            "example": "1633539671471"
          }
        }
      },
      "Transaction104": {
        "title": "Transaction104",
        "type": "object",
        "properties": {
          "businessDate": {
            "minLength": 10,
            "type": "string",
            "description": "Desired business date of a transaction. Include when overriding the existing business date of a transaction. The overriding date may be earlier or later than the existing date.",
            "example": "2021-04-15T09:18:23.283-07:00"
          }
        }
      },
      "Token25": {
        "title": "Token25",
        "type": "object",
        "properties": {
          "serialNumber": {
            "maxLength": 10,
            "type": "string",
            "description": "In requests that require the use of a shared card token that is held by another merchant account, such as in a TokenStore or TokenShare®, this field is used to specify the serial number for the account where the card token is stored.",
            "example": "266"
          },
          "value": {
            "maxLength": 16,
            "type": "string",
            "description": "This field is used to specify a card token. Whenever CHD is sent in a request, a card token will be returned in this field. Your interface should be designed to store this card token for future use. The latest card token received should be used in any subsequent request that references the same card data.",
            "example": "8048471746471119"
          }
        }
      },
      "Transaction112": {
        "title": "Transaction112",
        "type": "object",
        "properties": {
          "responseCode": {
            "$ref": "#/components/schemas/TransactionResponseCodeQRCancel"
          }
        }
      },
      "TransactionsCaptureRequest": {
        "title": "TransactionsCaptureRequest",
        "required": [
          "dateTime",
          "amount",
          "card",
          "clerk",
          "transaction"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "apiOptions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "API Options modify the request being made. See the [API Options](#tag/API-Options) section for more information.",
            "example": [
              "RETURNEXPDATE",
              "ALLOWPARTIALAUTH"
            ]
          },
          "amount": {
            "$ref": "#/components/schemas/ObjectAmountTaxNotRequired"
          },
          "card": {
            "$ref": "#/components/schemas/Card75"
          },
          "clerk": {
            "$ref": "#/components/schemas/ObjectClerk"
          },
          "receiptColumns": {
            "type": "integer",
            "description": "Send this field if you want Shift4 to format the receipt text instead of returning individual fields. The value sent will correlate to the column width of the formatted receipt that we return. (This also allows the receipt text to wrap to fit the paper size of the printed receipt.) See the [Printing Receipts](#tag/Printing-Receipts) section of this document for more information on formatted receipts.",
            "format": "int32",
            "example": 40
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction83"
          }
        }
      },
      "TrustlyCancelRequest": {
        "title": "TrustlyCancelRequest",
        "required": [
          "dateTime",
          "sourceIp",
          "transaction",
          "paymentAccountId",
          "trustly"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "sourceIp": {
            "type": "string",
            "description": "Public source IP Address where the request originates,\nnot the IP Address of the web server.",
            "example": "63.57.84.101"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction70"
          },
          "paymentAccountId": {
            "type": "string",
            "description": "Shift4 generated Unique Payment Account ID",
            "example": "BF06A6AB-A91D-4145-8704-13B8C48A7A95"
          },
          "trustly": {
            "$ref": "#/components/schemas/Trustly6"
          }
        }
      },
      "UTGControlledDevice7": {
        "title": "UTGControlledDevice7",
        "required": [
          "dateTime",
          "card",
          "device",
          "transaction"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00\n\nExamples to set the `user_parameters` :\n ```json\n{ \n  runtime_filters: [{\"column_name\": \"Color\", \"operator\": \"EQ\", \"values\": [\"red\"], \"persist\": false}],\n  runtime_sorts: [{\"column_name\": \"Color\", \"order\": \"ASC\", \"persist\": false}],\n  parameters: [{\"name\": \"Color\", \"values\": [\"ASC\"], \"persist\": false}],\n}\n```",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "card": {
            "$ref": "#/components/schemas/Card40"
          },
          "device": {
            "$ref": "#/components/schemas/Device17"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction34"
          }
        }
      },
      "Transaction110": {
        "title": "Transaction110",
        "type": "object",
        "properties": {
          "invoice": {
            "maxLength": 10,
            "type": "string",
            "description": "10-digit invoice number assigned by the interface to identify a transaction. An invoice number serves as a unique key that identifies a transaction within a batch in Shift4 Payments' Gateway.\n\n##### Note: Although the invoice number is sent as a JSON string it is a numeric value. No alpha characters are allowed.",
            "example": "192029"
          },
          "saleFlag": {
            "$ref": "#/components/schemas/TransactionQRSaleFlag"
          },
          "vendorReference": {
            "maxLength": 50,
            "type": "string",
            "description": "Optional field for information that can be searched in LTM.",
            "example": "12382-01"
          }
        }
      },
      "TransactionsRefundResponse": {
        "title": "TransactionsRefundResponse",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result11"
            },
            "description": ""
          }
        }
      },
      "TrustlyNotificationRequest": {
        "title": "TrustlyNotificationRequest",
        "required": [
          "amount",
          "currencyCode",
          "dateTime",
          "paymentAccountId",
          "transaction",
          "trustly"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "$ref": "#/components/schemas/Amount1"
          },
          "currencyCode": {
            "type": "string",
            "description": "Transaction currency code.",
            "example": "USD"
          },
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "paymentAccountId": {
            "type": "string",
            "description": "Shift4 generated Unique Payment Account ID",
            "example": "BF06A6AB-A91D-4145-8704-13B8C48A7A95"
          },
          "server": {
            "$ref": "#/components/schemas/ObjectServer"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction121"
          },
          "trustly": {
            "$ref": "#/components/schemas/Trustly10"
          }
        }
      },
      "Trustly6": {
        "title": "Trustly6",
        "required": [
          "transactionId"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "maxLength": 15,
            "type": "string",
            "description": "A unique Trustly transaction identifier.",
            "example": "1002633191"
          }
        }
      },
      "Result16": {
        "title": "Result16",
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "amount": {
            "$ref": "#/components/schemas/ObjectAmount"
          },
          "card": {
            "$ref": "#/components/schemas/ObjectCardResponse"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer12"
          },
          "clerk": {
            "$ref": "#/components/schemas/ObjectClerkResponse"
          },
          "emv": {
            "$ref": "#/components/schemas/ObjectEMV"
          },
          "receipt": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectReceipt"
            },
            "description": "array of receipt key/value pairs that should be printed on the receipt.",
            "example": [
              {
                "key": "ApplicationIdentifier",
                "printName": "AID",
                "printValue": "A0000000031010"
              },
              {
                "key": "TerminalVerificationResults",
                "printName": "TVR",
                "printValue": "8000"
              },
              {
                "key": "IssuerApplicationData",
                "printName": "IAD",
                "printValue": "06010A03A40002"
              },
              {
                "key": "TransactionStatusIndicator",
                "printName": "TSI",
                "printValue": "E800"
              },
              {
                "key": "AuthorizationResponseCode",
                "printName": "ARC",
                "printValue": "00"
              },
              {
                "key": "TransactionCurrencyCode",
                "printValue": "USD$"
              },
              {
                "key": "ApplicationLabel",
                "printValue": "CREDITO DE VISA"
              }
            ]
          },
          "server": {
            "$ref": "#/components/schemas/ObjectServer"
          },
          "signature": {
            "$ref": "#/components/schemas/ObjectSignature"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction89"
          },
          "universalToken": {
            "$ref": "#/components/schemas/ObjectUniversalToken"
          }
        }
      },
      "Transaction19": {
        "title": "Transaction19",
        "required": [
          "invoice"
        ],
        "type": "object",
        "properties": {
          "invoice": {
            "maxLength": 10,
            "type": "string",
            "description": "10-digit invoice number assigned by the interface to identify a transaction. An invoice number serves as a unique key that identifies a transaction within a batch in Shift4 Payments' Gateway.\n\n##### Note: Although the invoice number is sent as a JSON string it is a numeric value. No alpha characters are allowed.",
            "example": "192029"
          },
          "notes": {
            "maxLength": 4096,
            "type": "string",
            "description": "A free-form notes field that supports the use of HTML tags.  This can be used for reference in [Lighthouse Transaction Manager](https://ltm.shift4test.com/) and is not sent to the authorization host. Escaped quotation marks should not be sent in the Notes field.",
            "example": "Transaction notes are added here"
          },
          "businessDate": {
            "minLength": 10,
            "type": "string",
            "description": "Desired business date of a transaction. Include when overriding the existing business date of a transaction. The overriding date may be earlier or later than the existing date.",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "amex": {
            "$ref": "#/components/schemas/ObjectTransactionAmex"
          },
          "airline": {
            "$ref": "#/components/schemas/ObjectAirlineRequestRefund"
          },
          "hotel": {
            "$ref": "#/components/schemas/ObjectHotelCheckOutRefund"
          },
          "pin": {
            "$ref": "#/components/schemas/ObjectPin"
          },
          "purchaseCard": {
            "$ref": "#/components/schemas/ObjectPurchaseCardRefund"
          },
          "vendorReference": {
            "maxLength": 50,
            "type": "string",
            "description": "Optional field for information that can be searched in LTM.",
            "example": "12382-01"
          }
        }
      },
      "Transaction87": {
        "title": "Transaction87",
        "type": "object",
        "properties": {
          "authorizationCode": {
            "maxLength": 6,
            "type": "string",
            "description": "The authorization code provided by the consumer’s issuing bank. It is provided in a response if an online authorization or sale request is approved. Following a referral response, it is also specified in [Manual Sale](#operation/manualsale) requests.",
            "example": "198399"
          },
          "authSource": {
            "$ref": "#/components/schemas/TransactionAuthSource"
          },
          "invoice": {
            "maxLength": 10,
            "type": "string",
            "description": "10-digit invoice number assigned by the interface to identify a transaction. An invoice number serves as a unique key that identifies a transaction within a batch in Shift4 Payments' Gateway.\n\n##### Note: Although the invoice number is sent as a JSON string it is a numeric value. No alpha characters are allowed.",
            "example": "192029"
          },
          "responseCode": {
            "$ref": "#/components/schemas/TransactionResponseCode"
          },
          "saleFlag": {
            "$ref": "#/components/schemas/TransactionSaleFlag"
          }
        }
      },
      "Transaction89": {
        "title": "Transaction89",
        "type": "object",
        "properties": {
          "authorizationCode": {
            "maxLength": 6,
            "type": "string",
            "description": "The authorization code provided by the consumer’s issuing bank. It is provided in a response if an online authorization or sale request is approved. Following a referral response, it is also specified in [Manual Sale](#operation/manualsale) requests.",
            "example": "198399"
          },
          "authSource": {
            "$ref": "#/components/schemas/TransactionAuthSource"
          },
          "invoice": {
            "maxLength": 10,
            "type": "string",
            "description": "10-digit invoice number assigned by the interface to identify a transaction. An invoice number serves as a unique key that identifies a transaction within a batch in Shift4 Payments' Gateway.\n\n##### Note: Although the invoice number is sent as a JSON string it is a numeric value. No alpha characters are allowed.",
            "example": "192029"
          },
          "responseCode": {
            "$ref": "#/components/schemas/TransactionResponseCode"
          },
          "saleFlag": {
            "$ref": "#/components/schemas/TransactionSaleFlag"
          },
          "amex": {
            "$ref": "#/components/schemas/ObjectTransactionAmex"
          },
          "avs": {
            "$ref": "#/components/schemas/ObjectAVS"
          }
        }
      },
      "Transaction92": {
        "title": "Transaction92",
        "type": "object",
        "properties": {
          "invoice": {
            "maxLength": 10,
            "type": "string",
            "description": "10-digit invoice number assigned by the interface to identify a transaction. An invoice number serves as a unique key that identifies a transaction within a batch in Shift4 Payments' Gateway.\n\n##### Note: Although the invoice number is sent as a JSON string it is a numeric value. No alpha characters are allowed.",
            "example": "192029"
          },
          "saleFlag": {
            "$ref": "#/components/schemas/TransactionSaleFlag"
          }
        }
      },
      "Transaction95": {
        "title": "Transaction95",
        "type": "object",
        "properties": {
          "invoice": {
            "maxLength": 10,
            "type": "string",
            "description": "10-digit invoice number assigned by the interface to identify a transaction. An invoice number serves as a unique key that identifies a transaction within a batch in Shift4 Payments' Gateway.\n\n##### Note: Although the invoice number is sent as a JSON string it is a numeric value. No alpha characters are allowed.",
            "example": "192029"
          },
          "responseCode": {
            "$ref": "#/components/schemas/TransactionResponseCode"
          }
        }
      },
      "TapppTokenstatusRequest": {
        "title": "TapppTokenstatusRequest",
        "required": [
          "dateTime",
          "sourceIp",
          "transaction",
          "tappp"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "sourceIp": {
            "type": "string",
            "description": "Public source IP Address where the request originates,\nnot the IP Address of the web server.",
            "example": "63.57.84.101"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction34"
          },
          "tappp": {
            "$ref": "#/components/schemas/Tappp3"
          }
        }
      },
      "Token8": {
        "title": "Token8",
        "required": [
          "dateTime",
          "amount",
          "card",
          "transaction"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "amount": {
            "$ref": "#/components/schemas/ObjectAmountGC"
          },
          "card": {
            "$ref": "#/components/schemas/Card36"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction34"
          }
        }
      },
      "Transaction83": {
        "title": "Transaction83",
        "required": [
          "invoice"
        ],
        "type": "object",
        "properties": {
          "invoice": {
            "maxLength": 10,
            "type": "string",
            "description": "10-digit invoice number assigned by the interface to identify a transaction. An invoice number serves as a unique key that identifies a transaction within a batch in Shift4 Payments' Gateway.\n\n##### Note: Although the invoice number is sent as a JSON string it is a numeric value. No alpha characters are allowed.",
            "example": "192029"
          },
          "notes": {
            "maxLength": 4096,
            "type": "string",
            "description": "A free-form notes field that supports the use of HTML tags.  This can be used for reference in [Lighthouse Transaction Manager](https://ltm.shift4test.com/) and is not sent to the authorization host. Escaped quotation marks should not be sent in the Notes field.",
            "example": "Transaction notes are added here"
          },
          "businessDate": {
            "minLength": 10,
            "type": "string",
            "description": "Desired business date of a transaction. Include when overriding the existing business date of a transaction. The overriding date may be earlier or later than the existing date.",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "amex": {
            "$ref": "#/components/schemas/ObjectTransactionAmex"
          },
          "auto": {
            "$ref": "#/components/schemas/ObjectAutoCheckOut"
          },
          "cardOnFile": {
            "$ref": "#/components/schemas/ObjectCardOnFile"
          },
          "hotel": {
            "$ref": "#/components/schemas/ObjectHotelCheckOut"
          },
          "vendorReference": {
            "maxLength": 50,
            "type": "string",
            "description": "Optional field for information that can be searched in LTM.",
            "example": "12382-01"
          }
        }
      },
      "Transaction88": {
        "title": "Transaction88",
        "type": "object",
        "properties": {
          "authorizationCode": {
            "maxLength": 6,
            "type": "string",
            "description": "The authorization code provided by the consumer’s issuing bank. It is provided in a response if an online authorization or sale request is approved. Following a referral response, it is also specified in [Manual Sale](#operation/manualsale) requests.",
            "example": "198399"
          },
          "hostResponse": {
            "$ref": "#/components/schemas/ObjectHostResponse"
          },
          "invoice": {
            "maxLength": 10,
            "type": "string",
            "description": "10-digit invoice number assigned by the interface to identify a transaction. An invoice number serves as a unique key that identifies a transaction within a batch in Shift4 Payments' Gateway.\n\n##### Note: Although the invoice number is sent as a JSON string it is a numeric value. No alpha characters are allowed.",
            "example": "192029"
          },
          "responseCode": {
            "$ref": "#/components/schemas/TransactionResponseCode"
          },
          "saleFlag": {
            "$ref": "#/components/schemas/TransactionSaleFlag"
          }
        }
      },
      "TapppTokenstatusResponse": {
        "title": "TapppTokenstatusResponse",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result79"
            },
            "description": ""
          }
        }
      },
      "Transaction74": {
        "title": "Transaction74",
        "required": [
          "type",
          "status",
          "statusMessage"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Value |  Description\n------|-------------\n0     | External - This transaction is created when the Feedback API is called to update the status of a transaction created with a paymentType of Retrieval.\n1     | Authorize - This is a transaction created with paymentType is Deferred or Recurring.\n2     | Pay - This is a transaction created with paymentType of Instant.\n3     | Capture - Capture transactions are created with the Capture API.\n4     | Refund - Capture transactions are created with the Refund API.\n5     | Reverse - A reverse transaction is created when the payment is charged back by the bank (payment provider).\n6     | Deposit - Deposit transactions are created with the Deposit API.\n7     | Reclaim - Reclaim transactions are created with the Reclaim API.\n8     | Representment - A representment transaction represents an attempt to reprocess a previously denied Capture transaction.\n10    | Preauthorization - Preauthorization transactions are created with the Preauthorization API.",
            "example": "3"
          },
          "status": {
            "type": "string",
            "description": "Value        |  Description\n-------------|-------------\n0            | <b>New</b>: This is the initial status after the transaction is created but before the consumer chooses a financial institution for payment. Transactions in the new state are visible only through Notification or the API status operations, not through the Merchant Portal.\n1            | <b>Pending</b>: Payment is pending. This is the initial transaction status when the consumer has the Pay Panel open but has not yet authorized the transaction. Transactions in the Pending state are visible only through Notification or the API status operations, not through the Merchant Portal.\n2            | <b>Authorized</b>: Payment was authorized by the consumer (they have selected their account and clicked ‘Pay') but the ACH has not yet been submitted for processing.\n3 \t         | <b>Processed</b>: Transaction was processed. The ACH debit has been submitted to the ACH network after authorization by the consumer.\n4            | <b>Completed</b>: Transaction was paid, funds transferred.\n5            | <b>Failed</b>: Internal failure of transaction. (Unrelated to the merchant).\n6            | <b>Expired</b>: Pending transaction timed out before the consumer authorized the payment via the Pay Panel.\n7            | <b>Canceled</b>: Transaction was canceled by the consumer by closing the Pay Panel prior to the transaction being authorized or canceling the transaction from the Pay Panel.\n8            | <b>Denied</b>: Money transfer was denied, consumer account does not have enough funds.\n10           | <b>Reversed</b>: Payment was reversed (charged back by the bank or Trustly).\n11           | <b>Partially</b>: Refunded\tPayment was partially refunded.\n12           | <b>Refunded</b>: Payment was refunded.\n13           | <b>Voided</b>: Authorization was voided by the merchant. This occurs when the 'cancel' API is invoked or the transaction is canceled in the Merchant Portal (this must be done prior to the transaction being moved to ‘Processed' status).\n14           | <b>OnHold</b>: A transaction is put on hold after authorization if something is preventing the normal flow, such as when an ACH debit could not be initiated, or if the Trustly wants the merchant to verify that it really approves of this customer authorizing this amount. The payment may take longer to process than usual. Note: if a transaction is On Hold, you can verify it through the Merchant Portal to let it resume the normal flow of payment processing. Currently, there is no equivalent way to do that verification through the API.",
            "example": "4"
          },
          "statusMessage": {
            "type": "string",
            "description": "Status message of the related bank authorization",
            "example": "NEED EXAMPLE"
          }
        }
      },
      "Transaction106": {
        "title": "Transaction106",
        "required": [
          "businessDate"
        ],
        "type": "object",
        "properties": {
          "businessDate": {
            "minLength": 10,
            "type": "string",
            "description": "The business date you want to close a batch for.",
            "example": "2021-04-15T00:00:00.000-07:00"
          }
        }
      },
      "TrustlyStatusinquiryRequest": {
        "title": "TrustlyStatusinquiryRequest",
        "required": [
          "dateTime",
          "sourceIp",
          "transaction",
          "paymentAccountId",
          "trustly"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "sourceIp": {
            "type": "string",
            "description": "Public source IP Address where the request originates,\nnot the IP Address of the web server.",
            "example": "63.57.84.101"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction70"
          },
          "paymentAccountId": {
            "type": "string",
            "description": "Shift4 generated Unique Payment Account ID",
            "example": "BF06A6AB-A91D-4145-8704-13B8C48A7A95"
          },
          "trustly": {
            "$ref": "#/components/schemas/Trustly6"
          }
        }
      },
      "Result75": {
        "title": "Result75",
        "required": [
          "dateTime",
          "sourceIp",
          "redirectUrl",
          "transaction"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "sourceIp": {
            "type": "string",
            "description": "Public source IP Address where the request originates,\nnot the IP Address of the web server.",
            "example": "63.57.84.101"
          },
          "redirectUrl": {
            "type": "string",
            "description": "URL to redirect the browser to the TAPPP site where the customer can redeem with PIN",
            "example": "'https://s4-betmgm.tappp.tv/'"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction127"
          }
        }
      },
      "Tappp3": {
        "title": "Tappp3",
        "required": [
          "token"
        ],
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "This is a unique token sent by TAPPP during initial request",
            "example": "GkmNK9g9LV5zVkl1GwKlYJXd1a3Clr3G2XHuwBR7mkXZUeNWbsuRH/OVeb57o8B1N2ZKqF1xoxPPkSvHiGQbtDv+d4vEg5vpn9DdGrYbdZN7/h1R/Wv5heXC7B04vtK9NtTVQYSYrTRByMGvHHlnds81TLDovirmmvUXYFlKmC0="
          }
        }
      },
      "TapppCaptureRequest": {
        "title": "TapppCaptureRequest",
        "required": [
          "dateTime",
          "sourceIp",
          "transaction",
          "customer",
          "tappp"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "sourceIp": {
            "type": "string",
            "description": "Public source IP Address where the request originates,\nnot the IP Address of the web server.",
            "example": "63.57.84.101"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction34"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer23"
          },
          "tappp": {
            "$ref": "#/components/schemas/Tappp3"
          }
        }
      },
      "Token22": {
        "title": "Token22",
        "required": [
          "dateTime",
          "transaction",
          "card",
          "amount",
          "currencyCode",
          "risk",
          "sourceIp"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction80"
          },
          "card": {
            "$ref": "#/components/schemas/Card74"
          },
          "amount": {
            "$ref": "#/components/schemas/Amount1"
          },
          "currencyCode": {
            "type": "string",
            "description": "Transaction currency code.",
            "example": "USD"
          },
          "risk": {
            "$ref": "#/components/schemas/Risk"
          },
          "sourceIp": {
            "type": "string",
            "description": "Public source IP Address where the request originates,\nnot the IP Address of the web server.",
            "example": "63.57.84.101"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer10"
          },
          "shoppingCart": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShoppingCartArray"
            },
            "description": "Array of objects detailing the individual items being purchased",
            "example": [
              {
                "type": "Deodarant",
                "sku": "579446588",
                "description": "New Spice Fiji",
                "quantity": 5,
                "price": 4
              },
              {
                "type": "Toothbrush",
                "sku": "135488945",
                "description": "Electric Model",
                "quantity": 1,
                "price": 104.99
              }
            ]
          }
        }
      },
      "Tappp4": {
        "title": "Tappp4",
        "required": [
          "status",
          "code",
          "message"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Short string specifying the status of request processing",
            "example": "SUCCESS"
          },
          "code": {
            "type": "string",
            "description": "The response code generated by the partner platform",
            "example": "200"
          },
          "message": {
            "type": "string",
            "description": "Additional information regarding the processing code about how TAPPP processed the request",
            "example": "Valid Token"
          }
        }
      },
      "Transaction80": {
        "title": "Transaction80",
        "required": [
          "invoice"
        ],
        "type": "object",
        "properties": {
          "toShip": {
            "$ref": "#/components/schemas/TransactionToShip"
          },
          "orderId": {
            "type": "string",
            "description": "Merchant’s Order Number",
            "example": "92282831"
          },
          "invoice": {
            "maxLength": 10,
            "type": "string",
            "description": "10-digit invoice number assigned by the interface to identify a transaction. An invoice number serves as a unique key that identifies a transaction within a batch in Shift4 Payments' Gateway.\n\n##### Note: Although the invoice number is sent as a JSON string it is a numeric value. No alpha characters are allowed.",
            "example": "192029"
          },
          "vendorReference": {
            "maxLength": 50,
            "type": "string",
            "description": "Optional field for information that can be searched in LTM.",
            "example": "12382-01"
          }
        }
      },
      "Token20": {
        "title": "Token20",
        "required": [
          "dateTime",
          "card"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "card": {
            "$ref": "#/components/schemas/Card65"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction64"
          },
          "customer": {
            "$ref": "#/components/schemas/ObjectCustomer"
          }
        }
      },
      "Transaction22": {
        "title": "Transaction22",
        "required": [
          "invoice",
          "authorizationCode",
          "purchaseCard"
        ],
        "type": "object",
        "properties": {
          "invoice": {
            "maxLength": 10,
            "type": "string",
            "description": "10-digit invoice number assigned by the interface to identify a transaction. An invoice number serves as a unique key that identifies a transaction within a batch in Shift4 Payments' Gateway.\n\n##### Note: Although the invoice number is sent as a JSON string it is a numeric value. No alpha characters are allowed.",
            "example": "192029"
          },
          "authorizationCode": {
            "maxLength": 6,
            "type": "string",
            "description": "The authorization code provided by the consumer’s issuing bank. It is provided in a response if an online authorization or sale request is approved. Following a referral response, it is also specified in [Manual Sale](#operation/manualsale) requests.",
            "example": "198399"
          },
          "manualTranId": {
            "maxLength": 15,
            "type": "string",
            "description": "This is typically used in a Referral. If a ManualTranID is returned by the issuer with the Auth code, it should be sent to the processor in the ManualTranid field.",
            "example": "123456789012345"
          },
          "notes": {
            "maxLength": 4096,
            "type": "string",
            "description": "A free-form notes field that supports the use of HTML tags.  This can be used for reference in [Lighthouse Transaction Manager](https://ltm.shift4test.com/) and is not sent to the authorization host. Escaped quotation marks should not be sent in the Notes field.",
            "example": "Transaction notes are added here"
          },
          "businessDate": {
            "minLength": 10,
            "type": "string",
            "description": "Desired business date of a transaction. Include when overriding the existing business date of a transaction. The overriding date may be earlier or later than the existing date.",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "amex": {
            "$ref": "#/components/schemas/ObjectTransactionAmex"
          },
          "auto": {
            "$ref": "#/components/schemas/ObjectAutoCheckIn"
          },
          "airline": {
            "$ref": "#/components/schemas/ObjectAirlineRequest"
          },
          "cardOnFile": {
            "$ref": "#/components/schemas/ObjectCardOnFile"
          },
          "hotel": {
            "$ref": "#/components/schemas/ObjectHotelCheckIn"
          },
          "purchaseCard": {
            "$ref": "#/components/schemas/ObjectPurchaseCard"
          },
          "vendorReference": {
            "maxLength": 50,
            "type": "string",
            "description": "Optional field for information that can be searched in LTM.",
            "example": "12382-01"
          }
        }
      },
      "Trustly1": {
        "title": "Trustly1",
        "required": [
          "state",
          "establishData"
        ],
        "type": "object",
        "properties": {
          "state": {
            "type": "string",
            "description": "Value               |  Description\n--------------------|-------------\nRedirectDataCreated | Redirect URL has been returned. \nCapturePending      | Capture request is pending.",
            "example": "RedirectDataCreated"
          },
          "establishData": {
            "$ref": "#/components/schemas/ObjectTrustlyEstablishData"
          }
        }
      },
      "TrustlyRefundRequest": {
        "title": "TrustlyRefundRequest",
        "required": [
          "dateTime",
          "amount",
          "sourceIp",
          "transaction",
          "paymentAccountId",
          "trustly"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "amount": {
            "$ref": "#/components/schemas/Amount1"
          },
          "sourceIp": {
            "type": "string",
            "description": "Public source IP Address where the request originates,\nnot the IP Address of the web server.",
            "example": "63.57.84.101"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction115"
          },
          "paymentAccountId": {
            "type": "string",
            "description": "Shift4 generated Unique Payment Account ID",
            "example": "BF06A6AB-A91D-4145-8704-13B8C48A7A95"
          },
          "trustly": {
            "$ref": "#/components/schemas/Trustly6"
          }
        }
      },
      "Transaction129": {
        "title": "Transaction129",
        "required": [
          "authSource",
          "responseCode",
          "invoice"
        ],
        "type": "object",
        "properties": {
          "authSource": {
            "$ref": "#/components/schemas/TransactionAuthSource"
          },
          "responseCode": {
            "$ref": "#/components/schemas/TransactionResponseCode"
          },
          "invoice": {
            "maxLength": 10,
            "type": "string",
            "description": "10-digit invoice number assigned by the interface to identify a transaction. An invoice number serves as a unique key that identifies a transaction within a batch in Shift4 Payments' Gateway.\n\n##### Note: Although the invoice number is sent as a JSON string it is a numeric value. No alpha characters are allowed.",
            "example": "192029"
          }
        }
      },
      "TransactionsManualsaleResponse": {
        "title": "TransactionsManualsaleResponse",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result16"
            },
            "description": ""
          }
        }
      },
      "Transaction136": {
        "title": "Transaction136",
        "required": [
          "s4RiskId",
          "invoice"
        ],
        "type": "object",
        "properties": {
          "s4RiskId": {
            "type": "string",
            "description": "Unique transaction identification number generated by Shift4 to identify  a specific risk transaction and a field that can be searched in LTM.",
            "example": "EC52377F-5A8E-4534-BE7A-CF779A35BE45"
          },
          "invoice": {
            "maxLength": 10,
            "type": "string",
            "description": "10-digit invoice number assigned by the interface to identify a transaction. An invoice number serves as a unique key that identifies a transaction within a batch in Shift4 Payments' Gateway.\n\n##### Note: Although the invoice number is sent as a JSON string it is a numeric value. No alpha characters are allowed.",
            "example": "192029"
          },
          "orderId": {
            "type": "string",
            "description": "Merchant’s Order Number",
            "example": "92282831"
          }
        }
      },
      "Result29": {
        "title": "Result29",
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "amount": {
            "$ref": "#/components/schemas/ObjectAmountGCResponse"
          },
          "card": {
            "$ref": "#/components/schemas/Card82"
          },
          "programId": {
            "maxLength": 16,
            "type": "string",
            "description": "The ID value for the program you are allocating a gift card under.",
            "example": "123529291"
          },
          "server": {
            "$ref": "#/components/schemas/ObjectServer"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction95"
          }
        }
      },
      "Result76": {
        "title": "Result76",
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "error": {
            "$ref": "#/components/schemas/ObjectError"
          },
          "server": {
            "$ref": "#/components/schemas/ObjectServer"
          }
        }
      },
      "TapppCancelResponse": {
        "title": "TapppCancelResponse",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result79"
            },
            "description": ""
          }
        }
      },
      "TapppInitiatepayment400Error1": {
        "title": "TapppInitiatepayment400Error1",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result76"
            },
            "description": ""
          }
        },
        "example": {
          "result": [
            {
              "dateTime": "2021-04-15T09:18:23.283-07:00",
              "error": {
                "primaryCode": 9131,
                "secondaryCode": 0,
                "shortText": "Auth Header",
                "longText": "No authorization header found"
              },
              "server": {
                "name": "U2API01CE"
              }
            }
          ]
        }
      },
      "Token14": {
        "title": "Token14",
        "required": [
          "dateTime",
          "card",
          "transaction"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "card": {
            "$ref": "#/components/schemas/Card36"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction34"
          }
        }
      },
      "Transaction11": {
        "title": "Transaction11",
        "required": [
          "invoice",
          "purchaseCard"
        ],
        "type": "object",
        "properties": {
          "invoice": {
            "maxLength": 10,
            "type": "string",
            "description": "10-digit invoice number assigned by the interface to identify a transaction. An invoice number serves as a unique key that identifies a transaction within a batch in Shift4 Payments' Gateway.\n\n##### Note: Although the invoice number is sent as a JSON string it is a numeric value. No alpha characters are allowed.",
            "example": "192029"
          },
          "notes": {
            "maxLength": 4096,
            "type": "string",
            "description": "A free-form notes field that supports the use of HTML tags.  This can be used for reference in [Lighthouse Transaction Manager](https://ltm.shift4test.com/) and is not sent to the authorization host. Escaped quotation marks should not be sent in the Notes field.",
            "example": "Transaction notes are added here"
          },
          "businessDate": {
            "minLength": 10,
            "type": "string",
            "description": "Desired business date of a transaction. Include when overriding the existing business date of a transaction. The overriding date may be earlier or later than the existing date.",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "amex": {
            "$ref": "#/components/schemas/ObjectTransactionAmex"
          },
          "auto": {
            "$ref": "#/components/schemas/ObjectAutoCheckOut"
          },
          "airline": {
            "$ref": "#/components/schemas/ObjectAirlineRequest"
          },
          "cardOnFile": {
            "$ref": "#/components/schemas/ObjectCardOnFile"
          },
          "hotel": {
            "$ref": "#/components/schemas/ObjectHotelCheckOut"
          },
          "pin": {
            "$ref": "#/components/schemas/ObjectPin"
          },
          "purchaseCard": {
            "$ref": "#/components/schemas/ObjectPurchaseCard"
          },
          "vendorReference": {
            "maxLength": 50,
            "type": "string",
            "description": "Optional field for information that can be searched in LTM.",
            "example": "12382-01"
          }
        }
      },
      "TapppCancel400Error1": {
        "title": "TapppCancel400Error1",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result76"
            },
            "description": ""
          }
        },
        "example": {
          "result": [
            {
              "dateTime": "2021-04-15T09:18:23.283-07:00",
              "error": {
                "primaryCode": 9132,
                "secondaryCode": 0,
                "shortText": "Token not found",
                "longText": "Request cannot be processed, token not found"
              },
              "server": {
                "name": "U2API01CE"
              }
            }
          ]
        }
      },
      "TapppDecryptpayload400Error1": {
        "title": "TapppDecryptpayload400Error1",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result76"
            },
            "description": ""
          }
        },
        "example": {
          "result": [
            {
              "dateTime": "2021-04-15T09:18:23.283-07:00",
              "error": {
                "primaryCode": 9133,
                "secondaryCode": 0,
                "shortText": "Auth header",
                "longText": "No authorization header found"
              },
              "server": {
                "name": "U2API01CE"
              }
            }
          ]
        }
      },
      "Transaction8": {
        "title": "Transaction8",
        "required": [
          "invoice",
          "purchaseCard"
        ],
        "type": "object",
        "properties": {
          "invoice": {
            "maxLength": 10,
            "type": "string",
            "description": "10-digit invoice number assigned by the interface to identify a transaction. An invoice number serves as a unique key that identifies a transaction within a batch in Shift4 Payments' Gateway.\n\n##### Note: Although the invoice number is sent as a JSON string it is a numeric value. No alpha characters are allowed.",
            "example": "192029"
          },
          "notes": {
            "maxLength": 4096,
            "type": "string",
            "description": "A free-form notes field that supports the use of HTML tags.  This can be used for reference in [Lighthouse Transaction Manager](https://ltm.shift4test.com/) and is not sent to the authorization host. Escaped quotation marks should not be sent in the Notes field.",
            "example": "Transaction notes are added here"
          },
          "businessDate": {
            "minLength": 10,
            "type": "string",
            "description": "Desired business date of a transaction. Include when overriding the existing business date of a transaction. The overriding date may be earlier or later than the existing date.",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "amex": {
            "$ref": "#/components/schemas/ObjectTransactionAmex"
          },
          "auto": {
            "$ref": "#/components/schemas/ObjectAutoCheckOut"
          },
          "airline": {
            "$ref": "#/components/schemas/ObjectAirlineRequest"
          },
          "cardOnFile": {
            "$ref": "#/components/schemas/ObjectCardOnFile"
          },
          "hotel": {
            "$ref": "#/components/schemas/ObjectHotelCheckOut"
          },
          "purchaseCard": {
            "$ref": "#/components/schemas/ObjectPurchaseCard"
          },
          "vendorReference": {
            "maxLength": 50,
            "type": "string",
            "description": "Optional field for information that can be searched in LTM.",
            "example": "12382-01"
          }
        }
      },
      "Transaction1": {
        "title": "Transaction1",
        "required": [
          "invoice",
          "purchaseCard"
        ],
        "type": "object",
        "properties": {
          "invoice": {
            "maxLength": 10,
            "type": "string",
            "description": "10-digit invoice number assigned by the interface to identify a transaction. An invoice number serves as a unique key that identifies a transaction within a batch in Shift4 Payments' Gateway.\n\n##### Note: Although the invoice number is sent as a JSON string it is a numeric value. No alpha characters are allowed.",
            "example": "192029"
          },
          "notes": {
            "maxLength": 4096,
            "type": "string",
            "description": "A free-form notes field that supports the use of HTML tags.  This can be used for reference in [Lighthouse Transaction Manager](https://ltm.shift4test.com/) and is not sent to the authorization host. Escaped quotation marks should not be sent in the Notes field.",
            "example": "Transaction notes are added here"
          },
          "businessDate": {
            "minLength": 10,
            "type": "string",
            "description": "Desired business date of a transaction. Include when overriding the existing business date of a transaction. The overriding date may be earlier or later than the existing date.",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "amex": {
            "$ref": "#/components/schemas/ObjectTransactionAmex"
          },
          "auto": {
            "$ref": "#/components/schemas/ObjectAutoCheckIn"
          },
          "airline": {
            "$ref": "#/components/schemas/ObjectAirlineRequest"
          },
          "cardOnFile": {
            "$ref": "#/components/schemas/ObjectCardOnFile"
          },
          "hotel": {
            "$ref": "#/components/schemas/ObjectHotelCheckIn"
          },
          "purchaseCard": {
            "$ref": "#/components/schemas/ObjectPurchaseCard"
          },
          "vendorReference": {
            "maxLength": 50,
            "type": "string",
            "description": "Optional field for information that can be searched in LTM.",
            "example": "12382-01"
          },
          "s4RiskId": {
            "type": "string",
            "description": "Unique transaction identification number generated by Shift4 to identify  a specific risk transaction and a field that can be searched in LTM.\n\n##### Conditional: must be sent if [Risk Assessment](#operation/riskassess) was completed prior to processing the transaction.",
            "example": "EC52377F-5A8E-4534-BE7A-CF779A35BE45"
          }
        }
      },
      "TrustlyCancelResponse": {
        "title": "TrustlyCancelResponse",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result73"
            },
            "description": ""
          }
        }
      },
      "Trustly7": {
        "title": "Trustly7",
        "required": [
          "originalTransactionId",
          "transactionId"
        ],
        "type": "object",
        "properties": {
          "originalTransactionId": {
            "type": "string",
            "description": "Original Transaction Id",
            "example": "1002633190"
          },
          "transactionId": {
            "maxLength": 15,
            "type": "string",
            "description": "A unique Trustly transaction identifier.",
            "example": "1002633191"
          },
          "payment": {
            "$ref": "#/components/schemas/Payment1"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction74"
          },
          "account": {
            "$ref": "#/components/schemas/Account"
          },
          "paymentProvider": {
            "$ref": "#/components/schemas/PaymentProvider"
          }
        }
      },
      "TransactionsInvoiceResponse1": {
        "title": "TransactionsInvoiceResponse1",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result14"
            },
            "description": ""
          }
        }
      },
      "Transaction121": {
        "title": "Transaction121",
        "required": [
          "authSource",
          "responseCode",
          "invoice"
        ],
        "type": "object",
        "properties": {
          "authSource": {
            "$ref": "#/components/schemas/TransactionAuthSource"
          },
          "hostResponse": {
            "$ref": "#/components/schemas/ObjectHostResponse"
          },
          "responseCode": {
            "$ref": "#/components/schemas/TransactionResponseCode"
          },
          "invoice": {
            "maxLength": 10,
            "type": "string",
            "description": "10-digit invoice number assigned by the interface to identify a transaction. An invoice number serves as a unique key that identifies a transaction within a batch in Shift4 Payments' Gateway.\n\n##### Note: Although the invoice number is sent as a JSON string it is a numeric value. No alpha characters are allowed.",
            "example": "192029"
          },
          "vendorReference": {
            "maxLength": 50,
            "type": "string",
            "description": "Optional field for information that can be searched in LTM.",
            "example": "12382-01"
          }
        }
      },
      "Result70": {
        "title": "Result70",
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "amount": {
            "$ref": "#/components/schemas/Amount12"
          },
          "error": {
            "$ref": "#/components/schemas/ObjectError"
          },
          "server": {
            "$ref": "#/components/schemas/ObjectServer"
          }
        }
      },
      "Result32": {
        "title": "Result32",
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "amount": {
            "$ref": "#/components/schemas/ObjectAmountGCResponse"
          },
          "card": {
            "$ref": "#/components/schemas/ObjectCardResponseCashout"
          },
          "device": {
            "$ref": "#/components/schemas/ObjectDeviceOnlyTIDResponse"
          },
          "server": {
            "$ref": "#/components/schemas/ObjectServer"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction93"
          },
          "universalToken": {
            "$ref": "#/components/schemas/ObjectUniversalToken"
          }
        }
      },
      "TokensDuplicateResponse": {
        "title": "TokensDuplicateResponse",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result21"
            },
            "description": ""
          }
        }
      },
      "Transaction": {
        "title": "Transaction",
        "required": [
          "invoice",
          "purchaseCard"
        ],
        "type": "object",
        "properties": {
          "invoice": {
            "maxLength": 10,
            "type": "string",
            "description": "10-digit invoice number assigned by the interface to identify a transaction. An invoice number serves as a unique key that identifies a transaction within a batch in Shift4 Payments' Gateway.\n\n##### Note: Although the invoice number is sent as a JSON string it is a numeric value. No alpha characters are allowed.",
            "example": "192029"
          },
          "notes": {
            "maxLength": 4096,
            "type": "string",
            "description": "A free-form notes field that supports the use of HTML tags.  This can be used for reference in [Lighthouse Transaction Manager](https://ltm.shift4test.com/) and is not sent to the authorization host. Escaped quotation marks should not be sent in the Notes field.",
            "example": "Transaction notes are added here"
          },
          "businessDate": {
            "minLength": 10,
            "type": "string",
            "description": "Desired business date of a transaction. Include when overriding the existing business date of a transaction. The overriding date may be earlier or later than the existing date.",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "amex": {
            "$ref": "#/components/schemas/ObjectTransactionAmex"
          },
          "auto": {
            "$ref": "#/components/schemas/ObjectAutoCheckIn"
          },
          "airline": {
            "$ref": "#/components/schemas/ObjectAirlineRequest"
          },
          "cardOnFile": {
            "$ref": "#/components/schemas/ObjectCardOnFile"
          },
          "hotel": {
            "$ref": "#/components/schemas/ObjectHotelCheckIn"
          },
          "purchaseCard": {
            "$ref": "#/components/schemas/ObjectPurchaseCard"
          },
          "vendorReference": {
            "maxLength": 50,
            "type": "string",
            "description": "Optional field for information that can be searched in LTM.",
            "example": "12382-01"
          }
        }
      },
      "Transaction31": {
        "title": "Transaction31",
        "required": [
          "invoice",
          "authorizationCode",
          "purchaseCard"
        ],
        "type": "object",
        "properties": {
          "invoice": {
            "maxLength": 10,
            "type": "string",
            "description": "10-digit invoice number assigned by the interface to identify a transaction. An invoice number serves as a unique key that identifies a transaction within a batch in Shift4 Payments' Gateway.\n\n##### Note: Although the invoice number is sent as a JSON string it is a numeric value. No alpha characters are allowed.",
            "example": "192029"
          },
          "authorizationCode": {
            "maxLength": 6,
            "type": "string",
            "description": "The authorization code provided by the consumer’s issuing bank. It is provided in a response if an online authorization or sale request is approved. Following a referral response, it is also specified in [Manual Sale](#operation/manualsale) requests.",
            "example": "198399"
          },
          "manualTranId": {
            "maxLength": 15,
            "type": "string",
            "description": "This is typically used in a Referral. If a ManualTranID is returned by the issuer with the Auth code, it should be sent to the processor in the ManualTranid field.",
            "example": "123456789012345"
          },
          "notes": {
            "maxLength": 4096,
            "type": "string",
            "description": "A free-form notes field that supports the use of HTML tags.  This can be used for reference in [Lighthouse Transaction Manager](https://ltm.shift4test.com/) and is not sent to the authorization host. Escaped quotation marks should not be sent in the Notes field.",
            "example": "Transaction notes are added here"
          },
          "businessDate": {
            "minLength": 10,
            "type": "string",
            "description": "Desired business date of a transaction. Include when overriding the existing business date of a transaction. The overriding date may be earlier or later than the existing date.",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "amex": {
            "$ref": "#/components/schemas/ObjectTransactionAmex"
          },
          "auto": {
            "$ref": "#/components/schemas/ObjectAutoCheckOut"
          },
          "airline": {
            "$ref": "#/components/schemas/ObjectAirlineRequest"
          },
          "cardOnFile": {
            "$ref": "#/components/schemas/ObjectCardOnFile"
          },
          "hotel": {
            "$ref": "#/components/schemas/ObjectHotelCheckOut"
          },
          "pin": {
            "$ref": "#/components/schemas/ObjectPin"
          },
          "purchaseCard": {
            "$ref": "#/components/schemas/ObjectPurchaseCard"
          },
          "vendorReference": {
            "maxLength": 50,
            "type": "string",
            "description": "Optional field for information that can be searched in LTM.",
            "example": "12382-01"
          }
        }
      },
      "TapppCapture400Error1": {
        "title": "TapppCapture400Error1",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result76"
            },
            "description": ""
          }
        },
        "example": {
          "result": [
            {
              "dateTime": "2021-04-15T09:18:23.283-07:00",
              "error": {
                "primaryCode": 9132,
                "secondaryCode": 0,
                "shortText": "Token Expired",
                "longText": "Request cannot be processed, token has expired"
              },
              "server": {
                "name": "U2API01CE"
              }
            }
          ]
        }
      },
      "TokensAddResponse": {
        "title": "TokensAddResponse",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result20"
            },
            "description": ""
          }
        }
      },
      "Transaction25": {
        "title": "Transaction25",
        "required": [
          "invoice",
          "authorizationCode",
          "purchaseCard"
        ],
        "type": "object",
        "properties": {
          "invoice": {
            "maxLength": 10,
            "type": "string",
            "description": "10-digit invoice number assigned by the interface to identify a transaction. An invoice number serves as a unique key that identifies a transaction within a batch in Shift4 Payments' Gateway.\n\n##### Note: Although the invoice number is sent as a JSON string it is a numeric value. No alpha characters are allowed.",
            "example": "192029"
          },
          "authorizationCode": {
            "maxLength": 6,
            "type": "string",
            "description": "The authorization code provided by the consumer’s issuing bank. It is provided in a response if an online authorization or sale request is approved. Following a referral response, it is also specified in [Manual Sale](#operation/manualsale) requests.",
            "example": "198399"
          },
          "manualTranId": {
            "maxLength": 15,
            "type": "string",
            "description": "This is typically used in a Referral. If a ManualTranID is returned by the issuer with the Auth code, it should be sent to the processor in the ManualTranid field.",
            "example": "123456789012345"
          },
          "notes": {
            "maxLength": 4096,
            "type": "string",
            "description": "A free-form notes field that supports the use of HTML tags.  This can be used for reference in [Lighthouse Transaction Manager](https://ltm.shift4test.com/) and is not sent to the authorization host. Escaped quotation marks should not be sent in the Notes field.",
            "example": "Transaction notes are added here"
          },
          "businessDate": {
            "minLength": 10,
            "type": "string",
            "description": "Desired business date of a transaction. Include when overriding the existing business date of a transaction. The overriding date may be earlier or later than the existing date.",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "amex": {
            "$ref": "#/components/schemas/ObjectTransactionAmex"
          },
          "auto": {
            "$ref": "#/components/schemas/ObjectAutoCheckIn"
          },
          "airline": {
            "$ref": "#/components/schemas/ObjectAirlineRequest"
          },
          "cardOnFile": {
            "$ref": "#/components/schemas/ObjectCardOnFile"
          },
          "hotel": {
            "$ref": "#/components/schemas/ObjectHotelCheckIn"
          },
          "pin": {
            "$ref": "#/components/schemas/ObjectPin"
          },
          "purchaseCard": {
            "$ref": "#/components/schemas/ObjectPurchaseCard"
          },
          "vendorReference": {
            "maxLength": 50,
            "type": "string",
            "description": "Optional field for information that can be searched in LTM.",
            "example": "12382-01"
          }
        }
      },
      "TapppCaptureResponse": {
        "title": "TapppCaptureResponse",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result79"
            },
            "description": ""
          }
        }
      },
      "TransactionsSignatureRequest": {
        "title": "TransactionsSignatureRequest",
        "required": [
          "dateTime",
          "signature",
          "transaction"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "apiOptions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "API Options modify the request being made. See the [API Options](#tag/API-Options) section for more information.",
            "example": [
              "RETURNEXPDATE",
              "ALLOWPARTIALAUTH"
            ]
          },
          "device": {
            "$ref": "#/components/schemas/Device35"
          },
          "signature": {
            "$ref": "#/components/schemas/Signature"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction34"
          }
        }
      },
      "TrustlyRefundResponse": {
        "title": "TrustlyRefundResponse",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result72"
            },
            "description": ""
          }
        }
      },
      "Trustly2": {
        "title": "Trustly2",
        "required": [
          "originalTransactionId",
          "transactionId",
          "payment",
          "transaction",
          "account",
          "paymentProvider"
        ],
        "type": "object",
        "properties": {
          "originalTransactionId": {
            "type": "string",
            "description": "Original Transaction Id",
            "example": "1002633190"
          },
          "transactionId": {
            "maxLength": 15,
            "type": "string",
            "description": "A unique Trustly transaction identifier.",
            "example": "1002633191"
          },
          "payment": {
            "$ref": "#/components/schemas/Payment1"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction74"
          },
          "account": {
            "$ref": "#/components/schemas/Account"
          },
          "paymentProvider": {
            "$ref": "#/components/schemas/PaymentProvider"
          }
        }
      },
      "UTGControlledDevice6": {
        "title": "UTGControlledDevice6",
        "required": [
          "dateTime",
          "amount",
          "card",
          "device",
          "transaction"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "amount": {
            "$ref": "#/components/schemas/ObjectAmountGC"
          },
          "card": {
            "$ref": "#/components/schemas/Card35"
          },
          "device": {
            "$ref": "#/components/schemas/Device17"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction34"
          }
        }
      },
      "TransactionsAuthorizationResponse": {
        "title": "TransactionsAuthorizationResponse",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result7"
            },
            "description": ""
          }
        }
      },
      "TransactionsInvoice400Error1": {
        "title": "TransactionsInvoice400Error1",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result6"
            },
            "description": ""
          }
        }
      },
      "Transaction137": {
        "title": "Transaction137",
        "type": "object",
        "properties": {
          "s4RiskId": {
            "type": "string",
            "description": "Unique transaction identification number generated by Shift4 to identify  a specific risk transaction and a field that can be searched in LTM.",
            "example": "EC52377F-5A8E-4534-BE7A-CF779A35BE45"
          },
          "invoice": {
            "maxLength": 10,
            "type": "string",
            "description": "10-digit invoice number assigned by the interface to identify a transaction. An invoice number serves as a unique key that identifies a transaction within a batch in Shift4 Payments' Gateway.\n\n##### Note: Although the invoice number is sent as a JSON string it is a numeric value. No alpha characters are allowed.",
            "example": "192029"
          },
          "hostResponse": {
            "$ref": "#/components/schemas/HostResponse"
          },
          "orderId": {
            "type": "string",
            "description": "Merchant’s Order Number",
            "example": "92282831"
          }
        }
      },
      "UTGControlledDevice13": {
        "title": "UTGControlledDevice13",
        "required": [
          "dateTime",
          "device"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "device": {
            "$ref": "#/components/schemas/Device"
          }
        }
      },
      "TapppCancelRequest": {
        "title": "TapppCancelRequest",
        "required": [
          "dateTime",
          "sourceIp",
          "transaction",
          "customer",
          "tappp"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "sourceIp": {
            "type": "string",
            "description": "Public source IP Address where the request originates,\nnot the IP Address of the web server.",
            "example": "63.57.84.101"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction34"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer21"
          },
          "tappp": {
            "$ref": "#/components/schemas/Tappp3"
          }
        }
      },
      "Token10": {
        "title": "Token10",
        "required": [
          "dateTime",
          "card",
          "transaction"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "card": {
            "$ref": "#/components/schemas/Card41"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction34"
          }
        }
      },
      "TokensUniversaltokenResponse": {
        "title": "TokensUniversaltokenResponse",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result23"
            },
            "description": ""
          }
        }
      },
      "Transaction86": {
        "title": "Transaction86",
        "type": "object",
        "properties": {
          "authorizationCode": {
            "maxLength": 6,
            "type": "string",
            "description": "The authorization code provided by the consumer’s issuing bank. It is provided in a response if an online authorization or sale request is approved. Following a referral response, it is also specified in [Manual Sale](#operation/manualsale) requests.",
            "example": "198399"
          },
          "authSource": {
            "$ref": "#/components/schemas/TransactionAuthSource"
          },
          "hostResponse": {
            "$ref": "#/components/schemas/ObjectHostResponse"
          },
          "invoice": {
            "maxLength": 10,
            "type": "string",
            "description": "10-digit invoice number assigned by the interface to identify a transaction. An invoice number serves as a unique key that identifies a transaction within a batch in Shift4 Payments' Gateway.\n\n##### Note: Although the invoice number is sent as a JSON string it is a numeric value. No alpha characters are allowed.",
            "example": "192029"
          },
          "responseCode": {
            "$ref": "#/components/schemas/TransactionResponseCode"
          },
          "retrievalReference": {
            "maxLength": 12,
            "type": "string",
            "description": "Reference retrieval number assigned by the authorizing agency. This value is printed on some receipts.",
            "example": "402F9H0230S0"
          },
          "saleFlag": {
            "$ref": "#/components/schemas/TransactionSaleFlag"
          },
          "amex": {
            "$ref": "#/components/schemas/ObjectTransactionAmex"
          }
        }
      },
      "Transaction70": {
        "title": "Transaction70",
        "required": [
          "invoice"
        ],
        "type": "object",
        "properties": {
          "invoice": {
            "maxLength": 10,
            "type": "string",
            "description": "10-digit invoice number assigned by the interface to identify a transaction. An invoice number serves as a unique key that identifies a transaction within a batch in Shift4 Payments' Gateway.\n\n##### Note: Although the invoice number is sent as a JSON string it is a numeric value. No alpha characters are allowed.",
            "example": "192029"
          },
          "notes": {
            "maxLength": 4096,
            "type": "string",
            "description": "A free-form notes field that supports the use of HTML tags.  This can be used for reference in [Lighthouse Transaction Manager](https://ltm.shift4test.com/) and is not sent to the authorization host. Escaped quotation marks should not be sent in the Notes field.",
            "example": "Transaction notes are added here"
          },
          "vendorReference": {
            "maxLength": 50,
            "type": "string",
            "description": "Optional field for information that can be searched in LTM.",
            "example": "12382-01"
          }
        }
      },
      "Transaction72": {
        "title": "Transaction72",
        "required": [
          "authSource",
          "responseCode",
          "invoice"
        ],
        "type": "object",
        "properties": {
          "authSource": {
            "$ref": "#/components/schemas/TransactionAuthSource"
          },
          "hostResponse": {
            "$ref": "#/components/schemas/ObjectHostResponse"
          },
          "responseCode": {
            "$ref": "#/components/schemas/TransactionResponseCode"
          },
          "invoice": {
            "maxLength": 10,
            "type": "string",
            "description": "10-digit invoice number assigned by the interface to identify a transaction. An invoice number serves as a unique key that identifies a transaction within a batch in Shift4 Payments' Gateway.\n\n##### Note: Although the invoice number is sent as a JSON string it is a numeric value. No alpha characters are allowed.",
            "example": "192029"
          },
          "notes": {
            "maxLength": 4096,
            "type": "string",
            "description": "A free-form notes field that supports the use of HTML tags.  This can be used for reference in [Lighthouse Transaction Manager](https://ltm.shift4test.com/) and is not sent to the authorization host. Escaped quotation marks should not be sent in the Notes field.",
            "example": "Transaction notes are added here"
          },
          "vendorReference": {
            "maxLength": 50,
            "type": "string",
            "description": "Optional field for information that can be searched in LTM.",
            "example": "12382-01"
          }
        }
      },
      "TapppTokenstatus400Error1": {
        "title": "TapppTokenstatus400Error1",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result76"
            },
            "description": ""
          }
        },
        "example": {
          "result": [
            {
              "dateTime": "2021-04-15T09:18:23.283-07:00",
              "error": {
                "primaryCode": 9133,
                "secondaryCode": 0,
                "shortText": "Invalid token",
                "longText": "Request cannot be processed, invalid token"
              },
              "server": {
                "name": "U2API01CE"
              }
            }
          ]
        }
      },
      "Tappp1": {
        "title": "Tappp1",
        "required": [
          "payload"
        ],
        "type": "object",
        "properties": {
          "payload": {
            "type": "string",
            "description": "Encrypted payload received from TAPPP redirect",
            "example": "eyJhbGciOiAiUlMyNTYiLCAidHlwZSI6ICJKU09OIn0=.Zmtwd2l4a05CVmlpTU9lNFl5eHdRSkgzVWZxT3FNNUNucXl6dUVVTlRhTlJiS2FMZmV5QlZ4ZDk0a0xzRklDYUdGSkhLQkZjeEFSdmp2c0M0VW85Mmdpa3BFWDhhOUloc3gxM3BqakVWQ0xZU285T0QzVGh3ZHpvc25oZ2ZWdE9zNkx0OUVuZkwvMUtFbDVRYlE1Ym9CdCtpOE93N3JzcnBWMjVieklvbjRhbGMrV1p1d0pzNHBFcXdMMVNUb1pIY01EcGhvZlJ5MFFwbnp0YlZoWDJVQ1dRRlBRaUQ4V05HT0llaDc5VERIMmJNSGV2ZzBQZzJLcVBWd1RhNHRJdmpycDNNcHpsUkVZZ2FmaXduUVR3RGZvUHlFR29zZERpdEQvVTVGdW5lNnhlNk8wQlJtZmZFbytvZnBxRG1KdXgzTEFyU1ZPYWZKWjZMTXFSNGlUMk9LSGRIblRhMVdNM05qOXE4ZkpJWnp0TVBXV2gvVEkxR2Q4dnRUMklIZVdySTBHN2s2Q3AyZXBmQ3ZPcEJtNDg1eWxnYVBQRnVWQUxUTm03WUVhOWRQamFrekdpRkxJRnVGUmFRUStsZ1pRci84bTNYb3pOTGd0aXZQSENyV1pUeXhYVXRMZWh2MHIxbG5YWW1IMFJsZldpYVpkNGJuVVp6NkQvZzZiNlFFTklCRmg2Q3lJVzNOVUphMktVTk1ySXlOZDJZc0Vsc1ZvaEdJVjhhL0FER2Z2SFd6VXIxNjE2emRrK2ZDeGdSeHdJODFhQVJ5MERjbEFRTi9RSU9VQVo5Z2ppQTMvb0JQMXZ3NEVZRXpRYmZZcEpjcFgzVGVGVTk3Z0hXRGY3TW56TFliR1dDWDVIeXdjS09uTHljSWZYZlFXRmRhTDFhODFjRjRWZHYrZHJubW89.Vm43TG5odVZiTzc3VmlEVkU4UzVuWUYxZmUyUUpPMmx0MzJlNlp5TFIycUVzWThGeWx3d2JrL2FRMHpiZ3U0c0FXc3kzdWlKd1dSRmYyc0o5ZlltZmgvaUhTODR1dFlXSDl0NVZNcWpIdnVWbFI5eTFwanQ2aWNwekFDZjc3dFpBSmNkN29nSWdkSWhqaUIvbDRXSk1yU0hndmtuVmJSMEVCU3FHMHhVU2VJY2RaT2pQaGp6TEtkcGprdDlwSlZDSEc4RHZTV2FRTnVNUVNQRnFyWDVCRjc2alYveUNTRVRqVDVyNEgzSTZtaVpwOHR2Mzh2NzVHRTBhUkJQSmZGbTFMN2dVNVVxemNkUHhyRjN6ZU5ERy9lNzI4YWxBT2Q4ajJXUko1QUQzRTFxUGcvR1BSbkEyMFgzeEtzckM1V1FOMHdDQTFDOTZhNGZXREgvRGhVMVIybTBlWUNHSWxnTjlSbjdzZFNaVWZCdUhibFFvVFNtb1FUUDA1NlZYNWpDbkRZSnBQeFo3UzMwb0hXSFpVMk0xaDdidHZaZTQxRjBPMmhlT1l2NHNnNUZSODJQandKMEh5YmY4dlBmUEpVYkhJbjNQNG9vRWFVZ0d0VTFFSjBtM1YycVJmOXZZU1dlQUM4RWtTRXhqdzlKeDRTMDRUNnprMkVPZ29IQnVGZWl6UHQ3RUwwbkMreFJkelkvek5wMnZtejNlTlpyM005TmExNFlCSmJkbzFBS2o4a2p3dGJUZUNTaDV5QmhMQzVRZmxvdHVjNXloa29CY1FQSC9PMVVRQjhTODFUb2cvTWlJODMyK3I2Zk5xMUNFaGptWFgrejlFRHNVMzkzMmZ1Q203L0VvMkdZVHYxcHMzb0lxRkprVjdrUmUxa3hYZjIrQUpTVUdMTHRGTkk9"
          }
        }
      },
      "Transaction16": {
        "title": "Transaction16",
        "required": [
          "invoice"
        ],
        "type": "object",
        "properties": {
          "invoice": {
            "maxLength": 10,
            "type": "string",
            "description": "10-digit invoice number assigned by the interface to identify a transaction. An invoice number serves as a unique key that identifies a transaction within a batch in Shift4 Payments' Gateway.\n\n##### Note: Although the invoice number is sent as a JSON string it is a numeric value. No alpha characters are allowed.",
            "example": "192029"
          },
          "notes": {
            "maxLength": 4096,
            "type": "string",
            "description": "A free-form notes field that supports the use of HTML tags.  This can be used for reference in [Lighthouse Transaction Manager](https://ltm.shift4test.com/) and is not sent to the authorization host. Escaped quotation marks should not be sent in the Notes field.",
            "example": "Transaction notes are added here"
          },
          "businessDate": {
            "minLength": 10,
            "type": "string",
            "description": "Desired business date of a transaction. Include when overriding the existing business date of a transaction. The overriding date may be earlier or later than the existing date.",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "amex": {
            "$ref": "#/components/schemas/ObjectTransactionAmex"
          },
          "airline": {
            "$ref": "#/components/schemas/ObjectAirlineRequestRefund"
          },
          "hotel": {
            "$ref": "#/components/schemas/ObjectHotelCheckOutRefund"
          },
          "purchaseCard": {
            "$ref": "#/components/schemas/ObjectPurchaseCardRefund"
          },
          "vendorReference": {
            "maxLength": 50,
            "type": "string",
            "description": "Optional field for information that can be searched in LTM.",
            "example": "12382-01"
          }
        }
      },
      "Transaction64": {
        "title": "Transaction64",
        "type": "object",
        "properties": {
          "cardOnFile": {
            "$ref": "#/components/schemas/ObjectCardOnFile"
          }
        }
      },
      "TimeoutResponseAPM1": {
        "title": "TimeoutResponseAPM1",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result71"
            },
            "description": ""
          }
        }
      },
      "Token21": {
        "title": "Token21",
        "required": [
          "dateTime",
          "card"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "card": {
            "$ref": "#/components/schemas/Card65"
          }
        }
      },
      "TokensDuplicateRequest": {
        "title": "TokensDuplicateRequest",
        "required": [
          "dateTime",
          "card"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "apiOptions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "API Options modify the request being made. See the [API Options](#tag/API-Options) section for more information.",
            "example": [
              "RETURNEXPDATE",
              "ALLOWPARTIALAUTH"
            ]
          },
          "card": {
            "$ref": "#/components/schemas/Card75"
          },
          "customer": {
            "$ref": "#/components/schemas/ObjectCustomer"
          },
          "device": {
            "$ref": "#/components/schemas/Device36"
          }
        }
      },
      "Transaction34": {
        "title": "Transaction34",
        "required": [
          "invoice"
        ],
        "type": "object",
        "properties": {
          "invoice": {
            "maxLength": 10,
            "type": "string",
            "description": "10-digit invoice number assigned by the interface to identify a transaction. An invoice number serves as a unique key that identifies a transaction within a batch in Shift4 Payments' Gateway.\n\n##### Note: Although the invoice number is sent as a JSON string it is a numeric value. No alpha characters are allowed.",
            "example": "192029"
          }
        }
      },
      "Trustly10": {
        "title": "Trustly10",
        "required": [
          "account",
          "payment",
          "paymentProvider",
          "paymentProviderTransaction",
          "transaction",
          "transactionId"
        ],
        "type": "object",
        "properties": {
          "account": {
            "$ref": "#/components/schemas/Account4"
          },
          "originalTransactionId": {
            "type": "string",
            "description": "Original Transaction Id",
            "example": "1002633190"
          },
          "payment": {
            "$ref": "#/components/schemas/Payment1"
          },
          "paymentProvider": {
            "$ref": "#/components/schemas/PaymentProvider4"
          },
          "paymentProviderTransaction": {
            "$ref": "#/components/schemas/PaymentProviderTransaction"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction74"
          },
          "transactionId": {
            "maxLength": 15,
            "type": "string",
            "description": "A unique Trustly transaction identifier.",
            "example": "1002633191"
          }
        }
      },
      "Transaction115": {
        "title": "Transaction115",
        "required": [
          "invoice",
          "originalInvoice",
          "originalDate"
        ],
        "type": "object",
        "properties": {
          "invoice": {
            "maxLength": 10,
            "type": "string",
            "description": "10-digit invoice number assigned by the interface to identify a transaction. An invoice number serves as a unique key that identifies a transaction within a batch in Shift4 Payments' Gateway.\n\n##### Note: Although the invoice number is sent as a JSON string it is a numeric value. No alpha characters are allowed.",
            "example": "192029"
          },
          "originalInvoice": {
            "maxLength": 10,
            "type": "string",
            "description": "The invoice number from the original sale. Used to link the refund to the original sale.\n\n##### Note: Although the originalInvoice number is sent as a JSON string it is a numeric value. No alpha characters are allowed.",
            "example": "192029"
          },
          "originalDate": {
            "type": "string",
            "description": "The date and time of the original transaction request in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be an exact match for the value sent in the original transaction request.",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "notes": {
            "maxLength": 4096,
            "type": "string",
            "description": "A free-form notes field that supports the use of HTML tags.  This can be used for reference in [Lighthouse Transaction Manager](https://ltm.shift4test.com/) and is not sent to the authorization host. Escaped quotation marks should not be sent in the Notes field.",
            "example": "Transaction notes are added here"
          },
          "vendorReference": {
            "maxLength": 50,
            "type": "string",
            "description": "Optional field for information that can be searched in LTM.",
            "example": "12382-01"
          }
        }
      },
      "TransactionsSignature400Error1": {
        "title": "TransactionsSignature400Error1",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result6"
            },
            "description": ""
          }
        }
      },
      "Result87": {
        "title": "Result87",
        "type": "object",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/ObjectError"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction138"
          }
        }
      },
      "SubsequentCapture2": {
        "title": "SubsequentCapture2",
        "required": [
          "dateTime",
          "amount",
          "sourceIp",
          "transaction",
          "paymentAccountId"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "amount": {
            "$ref": "#/components/schemas/Amount1"
          },
          "sourceIp": {
            "type": "string",
            "description": "Public source IP Address where the request originates,\nnot the IP Address of the web server.",
            "example": "63.57.84.101"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction70"
          },
          "paymentAccountId": {
            "type": "string",
            "description": "Shift4 generated Unique Payment Account ID",
            "example": "BF06A6AB-A91D-4145-8704-13B8C48A7A95"
          }
        }
      },
      "Tokens4wordsResponse": {
        "title": "Tokens4wordsResponse",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result24"
            },
            "description": ""
          }
        }
      },
      "TapppDecryptpayloadRequest": {
        "title": "TapppDecryptpayloadRequest",
        "required": [
          "dateTime",
          "sourceIp",
          "transaction",
          "customer",
          "tappp"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "sourceIp": {
            "type": "string",
            "description": "Public source IP Address where the request originates,\nnot the IP Address of the web server.",
            "example": "63.57.84.101"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction34"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer21"
          },
          "tappp": {
            "$ref": "#/components/schemas/Tappp1"
          }
        }
      },
      "TapppDecryptpayloadResponse": {
        "title": "TapppDecryptpayloadResponse",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result77"
            },
            "description": ""
          }
        }
      },
      "Transaction9": {
        "title": "Transaction9",
        "required": [
          "invoice",
          "purchaseCard"
        ],
        "type": "object",
        "properties": {
          "invoice": {
            "maxLength": 10,
            "type": "string",
            "description": "10-digit invoice number assigned by the interface to identify a transaction. An invoice number serves as a unique key that identifies a transaction within a batch in Shift4 Payments' Gateway.\n\n##### Note: Although the invoice number is sent as a JSON string it is a numeric value. No alpha characters are allowed.",
            "example": "192029"
          },
          "notes": {
            "maxLength": 4096,
            "type": "string",
            "description": "A free-form notes field that supports the use of HTML tags.  This can be used for reference in [Lighthouse Transaction Manager](https://ltm.shift4test.com/) and is not sent to the authorization host. Escaped quotation marks should not be sent in the Notes field.",
            "example": "Transaction notes are added here"
          },
          "businessDate": {
            "minLength": 10,
            "type": "string",
            "description": "Desired business date of a transaction. Include when overriding the existing business date of a transaction. The overriding date may be earlier or later than the existing date.",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "amex": {
            "$ref": "#/components/schemas/ObjectTransactionAmex"
          },
          "auto": {
            "$ref": "#/components/schemas/ObjectAutoCheckOut"
          },
          "airline": {
            "$ref": "#/components/schemas/ObjectAirlineRequest"
          },
          "cardOnFile": {
            "$ref": "#/components/schemas/ObjectCardOnFile"
          },
          "hotel": {
            "$ref": "#/components/schemas/ObjectHotelCheckOut"
          },
          "purchaseCard": {
            "$ref": "#/components/schemas/ObjectPurchaseCard"
          },
          "vendorReference": {
            "maxLength": 50,
            "type": "string",
            "description": "Optional field for information that can be searched in LTM.",
            "example": "12382-01"
          },
          "s4RiskId": {
            "type": "string",
            "description": "Unique transaction identification number generated by Shift4 to identify  a specific risk transaction and a field that can be searched in LTM.\n\n##### Conditional: must be sent if [Risk Assessment](#operation/riskassess) was completed prior to processing the transaction.",
            "example": "EC52377F-5A8E-4534-BE7A-CF779A35BE45"
          }
        }
      },
      "Transaction28": {
        "title": "Transaction28",
        "required": [
          "invoice",
          "authorizationCode",
          "purchaseCard"
        ],
        "type": "object",
        "properties": {
          "invoice": {
            "maxLength": 10,
            "type": "string",
            "description": "10-digit invoice number assigned by the interface to identify a transaction. An invoice number serves as a unique key that identifies a transaction within a batch in Shift4 Payments' Gateway.\n\n##### Note: Although the invoice number is sent as a JSON string it is a numeric value. No alpha characters are allowed.",
            "example": "192029"
          },
          "authorizationCode": {
            "maxLength": 6,
            "type": "string",
            "description": "The authorization code provided by the consumer’s issuing bank. It is provided in a response if an online authorization or sale request is approved. Following a referral response, it is also specified in [Manual Sale](#operation/manualsale) requests.",
            "example": "198399"
          },
          "manualTranId": {
            "maxLength": 15,
            "type": "string",
            "description": "This is typically used in a Referral. If a ManualTranID is returned by the issuer with the Auth code, it should be sent to the processor in the ManualTranid field.",
            "example": "123456789012345"
          },
          "notes": {
            "maxLength": 4096,
            "type": "string",
            "description": "A free-form notes field that supports the use of HTML tags.  This can be used for reference in [Lighthouse Transaction Manager](https://ltm.shift4test.com/) and is not sent to the authorization host. Escaped quotation marks should not be sent in the Notes field.",
            "example": "Transaction notes are added here"
          },
          "businessDate": {
            "minLength": 10,
            "type": "string",
            "description": "Desired business date of a transaction. Include when overriding the existing business date of a transaction. The overriding date may be earlier or later than the existing date.",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "amex": {
            "$ref": "#/components/schemas/ObjectTransactionAmex"
          },
          "auto": {
            "$ref": "#/components/schemas/ObjectAutoCheckOut"
          },
          "airline": {
            "$ref": "#/components/schemas/ObjectAirlineRequest"
          },
          "cardOnFile": {
            "$ref": "#/components/schemas/ObjectCardOnFile"
          },
          "hotel": {
            "$ref": "#/components/schemas/ObjectHotelCheckOut"
          },
          "purchaseCard": {
            "$ref": "#/components/schemas/ObjectPurchaseCard"
          },
          "vendorReference": {
            "maxLength": 50,
            "type": "string",
            "description": "Optional field for information that can be searched in LTM.",
            "example": "12382-01"
          }
        }
      },
      "TapppInitiatepaymentRequest": {
        "title": "TapppInitiatepaymentRequest",
        "required": [
          "dateTime",
          "sourceIp",
          "successUrl",
          "cancelUrl",
          "transaction",
          "customer"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "sourceIp": {
            "type": "string",
            "description": "Public source IP Address where the request originates,\nnot the IP Address of the web server.",
            "example": "63.57.84.101"
          },
          "successUrl": {
            "type": "string",
            "description": "The URL where the user will be redirected if the request procceses successfully.",
            "example": "https://merchant.com/trustly/success"
          },
          "cancelUrl": {
            "type": "string",
            "description": "The URL where the user will be redirected if the request fails to procceses or the user cancels.",
            "example": "https://merchant.com/trustly/cancel"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction70"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer20"
          },
          "tappp": {
            "$ref": "#/components/schemas/Tappp"
          }
        }
      },
      "Transaction84": {
        "title": "Transaction84",
        "type": "object",
        "properties": {
          "authorizationCode": {
            "maxLength": 6,
            "type": "string",
            "description": "The authorization code provided by the consumer’s issuing bank. It is provided in a response if an online authorization or sale request is approved. Following a referral response, it is also specified in [Manual Sale](#operation/manualsale) requests.",
            "example": "198399"
          },
          "authSource": {
            "$ref": "#/components/schemas/TransactionAuthSource"
          },
          "hostResponse": {
            "$ref": "#/components/schemas/ObjectHostResponse"
          },
          "invoice": {
            "maxLength": 10,
            "type": "string",
            "description": "10-digit invoice number assigned by the interface to identify a transaction. An invoice number serves as a unique key that identifies a transaction within a batch in Shift4 Payments' Gateway.\n\n##### Note: Although the invoice number is sent as a JSON string it is a numeric value. No alpha characters are allowed.",
            "example": "192029"
          },
          "responseCode": {
            "$ref": "#/components/schemas/TransactionResponseCode"
          },
          "retrievalReference": {
            "maxLength": 12,
            "type": "string",
            "description": "Reference retrieval number assigned by the authorizing agency. This value is printed on some receipts.",
            "example": "402F9H0230S0"
          },
          "saleFlag": {
            "$ref": "#/components/schemas/TransactionSaleFlag"
          },
          "amex": {
            "$ref": "#/components/schemas/ObjectTransactionAmex"
          },
          "cardOnFile": {
            "$ref": "#/components/schemas/ObjectCardOnFile"
          }
        }
      },
      "Token23": {
        "title": "Token23",
        "required": [
          "value"
        ],
        "type": "object",
        "properties": {
          "serialNumber": {
            "maxLength": 10,
            "type": "string",
            "description": "In requests that require the use of a shared card token that is held by another merchant account, such as in a TokenStore or TokenShare®, this field is used to specify the serial number for the account where the card token is stored.",
            "example": "266"
          },
          "value": {
            "maxLength": 16,
            "type": "string",
            "description": "This field is used to specify a card token. Whenever CHD is sent in a request, a card token will be returned in this field. Your interface should be designed to store this card token for future use. The latest card token received should be used in any subsequent request that references the same card data.",
            "example": "8048471746471119"
          }
        }
      },
      "Transaction82": {
        "title": "Transaction82",
        "type": "object",
        "properties": {
          "authorizationCode": {
            "maxLength": 6,
            "type": "string",
            "description": "The authorization code provided by the consumer’s issuing bank. It is provided in a response if an online authorization or sale request is approved. Following a referral response, it is also specified in [Manual Sale](#operation/manualsale) requests.",
            "example": "198399"
          },
          "authSource": {
            "$ref": "#/components/schemas/TransactionAuthSource"
          },
          "invoice": {
            "maxLength": 10,
            "type": "string",
            "description": "10-digit invoice number assigned by the interface to identify a transaction. An invoice number serves as a unique key that identifies a transaction within a batch in Shift4 Payments' Gateway.\n\n##### Note: Although the invoice number is sent as a JSON string it is a numeric value. No alpha characters are allowed.",
            "example": "192029"
          },
          "hostResponse": {
            "$ref": "#/components/schemas/ObjectHostResponse"
          },
          "responseCode": {
            "$ref": "#/components/schemas/TransactionResponseCode"
          },
          "retrievalReference": {
            "maxLength": 12,
            "type": "string",
            "description": "Reference retrieval number assigned by the authorizing agency. This value is printed on some receipts.",
            "example": "402F9H0230S0"
          },
          "saleFlag": {
            "$ref": "#/components/schemas/TransactionSaleFlag"
          },
          "amex": {
            "$ref": "#/components/schemas/ObjectTransactionAmex"
          },
          "avs": {
            "$ref": "#/components/schemas/ObjectAVS"
          },
          "cardOnFile": {
            "$ref": "#/components/schemas/ObjectCardOnFile"
          }
        }
      },
      "Transaction111": {
        "title": "Transaction111",
        "type": "object",
        "properties": {
          "authorizationCode": {
            "maxLength": 6,
            "type": "string",
            "description": "The authorization code provided by the consumer’s issuing bank. It is provided in a response if an online authorization or sale request is approved. Following a referral response, it is also specified in [Manual Sale](#operation/manualsale) requests.",
            "example": "198399"
          },
          "authSource": {
            "$ref": "#/components/schemas/TransactionAuthSource"
          },
          "invoice": {
            "maxLength": 10,
            "type": "string",
            "description": "10-digit invoice number assigned by the interface to identify a transaction. An invoice number serves as a unique key that identifies a transaction within a batch in Shift4 Payments' Gateway.\n\n##### Note: Although the invoice number is sent as a JSON string it is a numeric value. No alpha characters are allowed.",
            "example": "192029"
          },
          "responseCode": {
            "$ref": "#/components/schemas/TransactionResponseCodeQRPaymentStatus"
          },
          "saleFlag": {
            "$ref": "#/components/schemas/TransactionSaleFlag"
          },
          "amex": {
            "$ref": "#/components/schemas/ObjectTransactionAmex"
          },
          "avs": {
            "$ref": "#/components/schemas/ObjectAVS"
          }
        }
      },
      "TransactionsSignatureResponse": {
        "title": "TransactionsSignatureResponse",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result18"
            },
            "description": ""
          }
        }
      },
      "UTGControlledDevice5": {
        "title": "UTGControlledDevice5",
        "required": [
          "dateTime",
          "device"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "apiOptions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "API Options modify the request being made. See the [API Options](#tag/API-Options) section for more information.",
            "example": [
              "RETURNEXPDATE",
              "ALLOWPARTIALAUTH"
            ]
          },
          "customer": {
            "$ref": "#/components/schemas/ObjectCustomer"
          },
          "device": {
            "$ref": "#/components/schemas/Device"
          }
        }
      },
      "UTGControlledDevice12": {
        "title": "UTGControlledDevice12",
        "required": [
          "dateTime",
          "device"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "device": {
            "$ref": "#/components/schemas/Device"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction64"
          },
          "customer": {
            "$ref": "#/components/schemas/ObjectCustomer"
          }
        }
      },
      "Transaction113": {
        "title": "Transaction113",
        "type": "object",
        "properties": {
          "authSource": {
            "$ref": "#/components/schemas/TransactionAuthSourceMode"
          }
        }
      },
      "UTGControlledDevice9": {
        "title": "UTGControlledDevice9",
        "required": [
          "dateTime",
          "card",
          "device",
          "transaction"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "The date and time in ISO 8601 format including the timezone offset (yyyy-mm-ddThh:mm:ss.nnn+hh:mm).\n\nMust be sent as the local date/time of the merchant. For example, a request processed at a merchant in the Pacific time zone at 9:18am on April 15th 2021 would be sent as 2021-04-15T09:18:23.283-07:00",
            "example": "2021-04-15T09:18:23.283-07:00"
          },
          "card": {
            "$ref": "#/components/schemas/Card35"
          },
          "device": {
            "$ref": "#/components/schemas/Device17"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction34"
          }
        }
      },
      "TransactionsCaptureResponse": {
        "title": "TransactionsCaptureResponse",
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result9"
            },
            "description": ""
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Credentials",
      "description": "This section contains the endpoint for retrieving an Access Token."
    },
    {
      "name": "Transactions",
      "description": "This section contains the endpoints for transactions."
    },
    {
      "name": "Gift Cards",
      "description": "This section contains the endpoints for operations involving gift cards."
    },
    {
      "name": "Tokens",
      "description": "This section contains the endpoints for operations involving card tokens."
    },
    {
      "name": "Merchants",
      "description": "This section contains the endpoint for retrieving information about the merchant."
    },
    {
      "name": "Cards",
      "description": "This section contains the endpoints for card verification and identification."
    },
    {
      "name": "Devices",
      "description": "This section contains the endpoints for operations involving UTG-controlled devices."
    },
    {
      "name": "Reports",
      "description": "This section contains the endpoint for retrieving reports."
    },
    {
      "name": "Batches",
      "description": "This section contains the endpoint for settling a batch of transactions."
    },
    {
      "name": "QR Payments",
      "description": "\nQR Code payment processing allows a cardholder to process payments in a card present environment without having to touch a payment device.\nThe cardholder can scan a QR code, which will take them to our pay.skytab.com web page where they can enter their payment information and process the payment.\n\nThere are two options for processing QR payments described below: UTG controlled devices and interface vendor controlled flow.\n\n### UTG Controlled Devices\n\nUTG has been enhanced to include QR Code payment support without requiring any interface vendor changes.\nIf enabled by the merchant, UTG will display a QR Pay button on the Insert/Tap screen.\nIf the cardholder chooses the QR Pay button, UTG will display a QR code that the cardholder can scan, which will allow them to process their payment via their phone.\nWhile this is not completely touch free from the cardholder's perspective, this will allow the merchant to take advantage of QR Code payments with no code changes.\n\nIf you choose to utilize the UTG Controlled Devices option, then you will not need to implement any of the QR Payments endpoints.\n\n### Interface Vendor Controlled\n\nThe interface vendor can choose to integrate QR code processing into their flow utilizing the endpoints defined in this section.\nAn example use case would be printing the QR code on the guest check in a restaurant environment.\nThis would allow the cardholder to scan the QR code on the printed check and pay without ever having to interact with a payment device or having the clerk take their card back to the POS workstation for payment.\nBelow is the process flow for the QR code printed on the guest check use case:\n\n1. Clerk initiates a check print operation on the POS system.\n2. Interface vendor sends a [Get QR Code](#operation/getqrcode) request to obtain a dynamic QR code string.\n3. Interface vendor creates a QR image from the QR Code string received in the [Get QR Code](#operation/getqrcode) response and prints it on the guest check.\n4. Clerk delivers the check to the cardholder.\n5. Cardholder scans the QR code with their phone, which directs them to the pay.skytab.com site.\n6. Cardholder enters their payment information and processes the payment.\n7. Interface vendor sends a [Get QR Payment Status](#operation/getqrpaymentstatus) request to get the authorization information for the payment processed by the cardholder.\n8. Conditionally, if the cardholder chooses to utilize a different form of payment (cash, gives the card to the clerk to process, etc) rather than utilizing the QR code for payment, the interface vendor will send a [Cancel QR Payment](#operation/cancelqrpayment) request to cancel that QR code.\n"
    },
    {
      "name": "Mode",
      "description": "This section contains the endpoint for putting UTG into offline mode and taking UTG out of offline mode. This functionality can be utilized at a UTG deployed at a merchant site. It will not be supported via the hosted REST servers."
    },
    {
      "name": "Trustly",
      "description": "This section contains the endpoints for processing Trustly transactions. This  functionality can only be utilized via the hosted REST servers. It will  not be supported via UTG deployed at a merchant site.\n\nTrustly is an alternative payment method that allows a user to pay with their bank account. When processing an initial Trustly Capture or Deposit, the user is redirected to the Trustly site where they can select their bank, login using their online banking credentials, and choose the account they want to pay from.\n\nIn order to initiate a Trustly capture transaction you must first send a request to the [Trustly Capture](#operation/trustlycapture) endpoint using the Initial Capture body to obtain the redirect URL and establishData content necessary to call the trustly  Javascript. The initial Trustly Capture request will return a redirectURL and the  establishData content.\n\nBelow is a sample HTML page for redirecting the user to the Trustly page. You will need to insert the redirectURL into the script src and the trustly.establishData  into establishData variable that you receive from the inital Trustly Capture response before calling Trustly.selectBankWidget.\n\n    <html>\n      <head>\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n        <script>\n          var TrustlyOptions = {\n            closeButton: false,\n            dragAndDrop: true,\n            widgetContainerId: 'widget',\n          };\n        </script>\n        <script src=\"https://sandbox.trustly.com/start/scripts/trustly.js?accessId={accessId}\"></script>\n      </head>\n      <body style=\"margin: 0;\">\n        <div id=\"widget\"></div>\n      </body>\n      <script>\n        var establishData = {\n          accessId: {accessId},\n          merchantId: {merchantId},\n          merchantReference: {merchantReference},\n          description: 'transaction description',\n          currency: 'USD',\n          amount: '0.00',\n          merchantReference: 'merchant reference',\n          paymentType: 'Deferred',\n          returnUrl: 'https://merchant.com/trustly/return',\n          cancelUrl: 'https://merchant.com/trustly/cancel'      \n        };\n        Trustly.selectBankWidget(establishData, TrustlyOptions);\n      </script>\n    </html>          \n    \n\nThe user will then be redirected to the Trustly site where they can select  their bank and login using their online banking credentials. If the user  cancels, they will be redirected back to the cancelURL the vendor supplied in the Initial Capture request. The redirect is sent back to the interface vendor directly and should be treat as a failed payment. \n\nIf the user completes their bank account selection they will be redirected  back to the successURL. At this point the capture request is still pending. Once Trustly finalizes the capture request Shift4 will send a  [Trustly Notification](#operation/trustlynotification) request to the endpoint  configured for the merchant account. This notification event will contain the  final status of the capture request along with a paymentAccountId value. This  paymentAccountId can be stored for processing subsequent [Trustly Capture](#operation/trustlycapture) using the Subsequent Capture body.  Subsequent [Trustly Capture](#operation/trustlycapture) requests can be processed without the user having to authenticate their bank. \n\nThe Trustly split token payment credentials that are tied to the paymentAccountId can expire on the Trustly side after a period of time. If you attempt to process a Subsequent [Trustly Capture](#operation/trustlycapture) and the Trustly split token payment  credentials are expired you will receive the following error response:\n\n    \"error\": {\n      \"primaryCode\": 9126,\n      \"secondaryCode\": 0,\n      \"shortText\": \"SplitToken\",\n      \"longText\": \"Expired Split Token\"\n    }\n\nWhen you receive this error you should process an initial [Trustly Capture](#operation/trustlycapture) request using the Initial Capture request body in order to redirect the user back to the Trustly website where they can re-authenticate their bank credentials.\n## Trustly Specific Error Codes\nIn addition to the standard [Error Code](#tag/Error-Codes) list, below is a list of Trustly specific errors:\n\nprimaryCode  | secondaryCode  |  shortText             |  longText                                     | Cause                                                   | Solution                                     \n------------ |--------------- |------------------------|-----------------------------------------------|---------------------------------------------------------|---------\n9126         | 0              | SplitToken             |  Expired split token                          |                                                         |\n9879         | 0              | AMT exceeded           |  Refund amount greater than original amount   |                                                         |\n9505         | 0              | Pending                |  Cancel transaction still in progress         |                                                         |\n9505         | 1              | Pending                |  Refund request still in progress             |                                                         |\n9506         | 0              | Cancel failed          |  Cancel transaction failed, execute refund transaction   |                                              |\n9815         | 1              | Duplicate invoice      |  Duplicate invoice                            |                                                         |"
    },
    {
      "name": "TAPPP",
      "description": "This section contains the endpoints for processing TAPPP transactions. This  functionality can only be utilized via the hosted REST servers. It will  not be supported via UTG deployed at a merchant site.\n\nTAPPP is an alternative payment method that utilizes prepaid cards  to allow a user to deposit set amounts to their virtual wallet or redeem for streaming services.\n\n## TAPPP Specific Error Codes\nIn addition to the standard [Error Code](#tag/Error-Codes) list, below is a list of TAPPP specific errors:\n\nprimaryCode  | secondaryCode  |  shortText             |  longText                                     | Cause                                                   | Solution                                     \n------------ |--------------- |------------------------|-----------------------------------------------|---------------------------------------------------------|---------\n9130         | 0              | Token not found        |  Request cannot be processed, Token not found |                                                         |\n9131         | 0              | Auth header            |  No authorization header found                |                                                         |\n9815         | 0              | Invoice not found      |  Invoice number not found in database         |                                                         |\n9133         | 0              | Invalid token          |  Request cannot be processed, invalid token   |                                                         |"
    },
    {
      "name": "Risk",
      "description": "This section contains the endpoints for checking the level of risk before  processing a transaction. Risk assessment is used to prevent fraud payment  attempts by checking all the relevant data retrieved from user. In order to  initiate a risk assessment you must first send a request to the risk/assess  endpoint. \n\nThis functionality can only be utilized via the hosted REST servers.  It will not be supported via UTG deployed at the merchant site."
    },
    {
      "name": "Understanding Card Tokens",
      "description": "\nCurrent card association regulations specify that a merchant must encrypt all stored payment card numbers. Furthermore, these regulations do not allow the storing of card track information or card security codes (CSCs). Using Shift4 Payments’ tokenization eliminates the need for both encryption key management and encryption algorithm maintenance in your interface. Tokenization is not encryption, but works together with our True P2PE® solution to relieve the merchant and the interface from the burden of storing, processing, and transmitting sensitive cardholder data (CHD), greatly reducing the scope of PCI DSS assessments and nearly eliminating the risk of a data breach.\n\nA card token is a unique, 16-character value created by Shift4 Payments' Gateway to reference CHD. In and of itself, a card token has no meaning and no decipherable relationship to CHD. The token is format-preserving and repeatable.\n### Repeatable Tokens\nRepeatable tokens create a 1:1 relationship between the token and the PAN. Repeatable tokens will be reissued indefinitely within and among a predefined specific merchant environment. Because the same token is returned for a given PAN within a merchant’s environment, the token can be used for services such as e-folio, analytics, folio consolidation, loyalty promotions, fraud detection tools, back-office processes, and any system where the PAN is needed to identify a customer.\n### Format-Preserving Tokens\nGlobal Token Vault tokens are card-based (repeatable), format-preserving tokens. This means that they preserve many of the elements of an actual credit card.  The following is a brief summary of the details of the token:\n- 16 numeric digits long, regardless of the length of the credit card length or card prefix (BIN)\n- The first digit of the token is always an “8”\n- The second and third digits generally identify the card brand\n- The last 4 digits of the token are the last four digits of the actual card number\n- All tokens from the default vault pass a Luhn Mod 10 test\n- Custom tokens that do not pass Luhn Mod 10 test can also be created\n- Tokens are not tied to expiration dates, so they do not expire\n\nWhenever the payment card number is used in a request, a card token will be returned in the corresponding response in the <samp>card.token.value</samp> field. Your interface should be designed to store this card token for future use.\n\n##### <b>WARNING! Sending both the payment card number and a card token in a request will result in an error.</b>\n\n### Card Token Expiration\nTokens never expire even if the card does. In the case the card has expired you can send the same card and new expiration date for a sale or in a tokenization request to update the expiration date Shift4 has saved with that token.\n\n### Vaults and Token Sharing\nGlobal Token Vault creates unique “vaults” for each GTV ID. GTV IDs can be created per merchant or can be shared across a number of affiliated (branded or chain) merchants. Any merchants sharing a vault are able to securely share tokens within their vault. The same token will be returned for a credit card number within a merchant’s Global Token Vault.\nWhen merchants share tokens, it: \n- Enables analytics across their vault network\n- Eases accounting and reconciliation activities\n- Creates a 1:1 relationship between a token and the customer\n\nA merchant environment can be defined by: \n- <b>Outlet or terminal</b>: A single standalone outlet or terminal ID\n- <b>Property</b>: A location with multiple outlets or terminals\n- <b>Chain</b>: A local or regional restaurant with multiple locations or a group of affiliated hotels using common technology (e.g., reservation system)\n- <b>Brand</b>: A regional or national company consisting of many properties or multiple chains and potentially owned-and-managed or corporate-owned locations\n- <b>Corporation</b>: A national or international company with many properties, chains, or brands\n\n### TokenStore Functions\n\nShift4 Payments has the TokenStore function to allow you to tokenize CHD.\n\n#### TokenStore Add\n\n[TokenStore Add](#operation/tokensadd) is used to add CHD to the merchants’s Global Token Vault  and receive a card token. Common uses of TokenStore Add are card-on-file processing or collecting CHD when an order or reservation is placed but not billed right away. TokenStore Add is sent when a purchase is not immediately processed and CHD needs to be tokenized for later use\n\n### Use Case 1: TokenStore Add\n\n##### Actors: Interface, Shift4 Payments\n\n##### Preconditions: CHD has been captured by a merchant and is ready for the interface to send.\n\n##### Main Flow: This flow illustrates receiving a card token for a card.\n\n1. The interface sends the [TokenStore Add](#operation/tokensadd) request using the merchant’s Global Token Vault.\n\n2. Shift4 Payments returns a response with a card token in the <samp>card.token.value</samp> field.\n\n3. The interface vendor stores the card token instead of CHD in its database for use in subsequent transactions.\n\n##### Optional Flow: This flow illustrates validating a card before storing a card token.\n\n4. A [Verify Card](#operation/cardsverify) request is sent using the resultant card token.\n\n5. Include <samp>customer</samp> and <samp>card.securityCode</samp> fields in the verify request if you want cvv and avs to also be validated with the card number.\n\n6. A response with no errors is received.\n\n7. The interface interrogates the <samp>transaction.responseCode</samp>, <samp>transaction.avs.valid</samp>, and <samp>card.securityCode.valid</samp> fields (where applicable), and stores the card token if valid.\n\n##### Post Conditions: The token returned remains the same for the card in question and the token can be shared with any vendor that has the same GTVID setup on their account. \n"
    },
    {
      "name": "Legacy Card Tokens",
      "description": "\n### This implementation for tokenization has been deprecated and replaced by the Global Token Vault tokenization solution. This information is here for vendors that have already integrated with our legacy tokenization solution. This approach should not be utilized for any new integrations. See the  [Understanding Card Tokens](#tag/Understanding-Card-Tokens) section for details on the Global Token Vault solution. \n\nCurrent card association regulations specify that a merchant must encrypt all stored payment card numbers. Furthermore, these regulations do not allow the storing of card track information or card security codes (CSCs). Using Shift4 Payments’ tokenization eliminates the need for both encryption key management and encryption algorithm maintenance in your interface. Tokenization is not encryption, but works together with our True P2PE® solution to relieve the merchant and the interface from the burden of storing, processing, and transmitting sensitive cardholder data (CHD), greatly reducing the scope of PCI DSS assessments and nearly eliminating the risk of a data breach.\n\nA card token is a unique, 16-character value created by Shift4 Payments' Gateway to reference CHD. In and of itself, a card token has no meaning and no decipherable relationship to CHD. A card token is the last four digits of a payment card number followed by a random 12-character alphanumeric code.\n\nWhenever the payment card number is used in a request, a card token will be returned in the corresponding response in the <samp>card.token.value</samp> field. Your interface should be designed to store this card token for future use. The latest card token received should be used in any subsequent request that references the same card data.\n\n##### <b>WARNING! Sending both the payment card number and a card token in a request will result in an error.</b>\n\n### Short-Term Data Storage\n\nShort-term data, including the full track data, CSC and PIN, or P2PE PIN block, is stored with the card token until it is consumed – either when a transaction is processed or if it expires (whichever comes first). The length of time during which short-term data is held is configurable to 24, 48, 72, or a maximum duration of 96 hours for pre-authorization to remain PCI compliant.\n\n### Card Token Expiration\n\nA card token will remain valid for 3 days, 7 days, 14 days, 1 month, 3 months, 6 months, 9 months, 12 months, 18 months, 24 months, or until the card’s expiration date. If a payment card expires prior to the card token’s expiration date, then the card token will expire regardless of the expiration date configured in [Lighthouse Transaction Manager](https://ltm.shift4test.com/).\n\nTip: If you want to determine if a card token’s expiration date exceeds the card’s expiration date before storing a card token, you can support use of the RETURNEXPDATE API Option.\n\nShort-term data storage and the expiration of card tokens are configured within the merchant’s [Lighthouse Transaction Manager](https://ltm.shift4test.com/) account’s Token Store Settings. More information about TokenStore® is in the [Utilizing TokenStore](#tag/Utilizing-TokenStore) section of this document.\n### Utilizing TokenStore\n\nBy default, each merchant account has a TokenStore, a secure repository for all of their tokens in Shift4 Payments’ PCI-compliant data centers. Shift4 Payments’ TokenStore allows merchants to process refunds, card-on-file payments, incremental authorizations, and more without relying on actual CHD.\n\n### Sharing Tokens between Merchant Accounts\n\nMany enterprise and multi-location merchants want to share tokens across different revenue centers and properties. Shift4 Payments offers two ways to do this: TokenShare® and Global TokenStore. There are a few main differences between how TokenShare and Global TokenStore work:\n\n- TokenShare allows merchants to share tokens among accounts. Merchants can use the tokens stored in their own account as well as the tokens stored in other merchants’ accounts when permission has been granted to do so.\n\n- A Global TokenStore is an account that acts as a centralized repository for multiple merchants’ tokens. Its sole purpose is to act as a shared TokenStore for permitted merchant accounts.\n\n\nWhether you choose to support TokenShare, Global TokenStore, or both depends on your interface requirements and the merchant’s preference. Examples of how your interface can support them are explained in detail below.\n\n### How TokenShare Works\n\nTo support TokenShare, your interface must store the (correlated) Shift4 Payments serial number of the merchant account where a given token was created. When a merchant needs to use a token that resides in another merchant’s TokenStore, your application will send the token and populate the serial number of the account where the token is located in the <samp>card.token.serialNumber</samp> field in a request. This will enable Shift4 Payments' Gateway to locate that token for use.\n\nAn example of this process is given below. \n\n\nNote: the example provided below is a simplified scenario intended to help illustrate the TokenShare process. Please note that other implementations may work differently depending on the transaction(s) being performed and the merchant’s account setup. Also, card tokens are made up of 16 alphanumeric characters, but letters are used in this example to represent the tokens. The serial numbers used are also simplified for the purpose of this example only.\n\n1. Stores 1 and 2 each have tokens in their respective TokenStore accounts in Shift4 Payments’ data centers.\n\n2. A customer comes into Store 1 (serial 123) and uses a credit card ending with 1119 to purchase a pair of shoes. When the transaction is approved, Token C is generated by Shift4 Payments' Gateway and stored in Store 1’s TokenStore.\n\n3. The customer later returns the pair of shoes at Store 2 (serial 124). Store 2 doesn’t have Token C in their TokenStore; therefore, the interface must provide Token C and specify “123” in the <samp>card.token.serialNumber</samp> field in the return request. This allows Shift4 Payments' Gateway to locate Token C in Store 1’s TokenStore to process the return\n\n4. When Store 2 completes the refund transaction, Token Z is created by Shift4 Payments' Gateway and added to Store 2’s TokenStore.\n\n\n<b>Important: If a merchant is processing a transaction with a payment card or using a token from their TokenStore, the transaction will be processed as usual and no serial number needs to be referenced.</b>\n\n### How Global TokenStore Works\n\nTo support Global TokenStore, your interface will need to keep track of the Global TokenStore’s serial number for use in certain requests. When a merchant needs to use a token that resides in the Global TokenStore, your interface will send the token and populate the Global TokenStore’s serial number in the <samp>card.token.serialNumber</samp> field in a request. This will cause Shift4 Payments' Gateway to locate the token in the Global TokenStore account for that merchant’s use.\n\nAn example of this process is given below. Note: The example provided below is a simplified scenario intended to help illustrate the Global TokenStore process. Please note that other implementations may work differently depending on the transaction(s) being performed and the merchant’s account setup. \n\nAlso, card tokens are made up of 16 alphanumeric characters, but letters are used in this example to represent the tokens. The serial numbers used are also simplified for the purpose of this example only\n\n1. Store 1 (serial 123) and Store 2 (serial 124) each have tokens in their respective TokenStore accounts in Shift4 Payments’ data centers. The Global TokenStore holds tokens that Store 1 and Store 2 have deposited into it.\n\n2. A customer comes into Store 1 (serial 123) and uses a credit card ending with 1119 to purchase a pair of shoes. When the transaction is approved, Token C is generated by Shift4 Payments' Gateway and stored in Store 1’s TokenStore.\n\n3. To make this card available for use by other parts of the business, the interface must deposit Token C, which is stored in Store 1’s TokenStore, into the Global TokenStore account. This is accomplished by sending a [TokenStore Duplicate](#/operation/tokensduplicate) request along with serial ‘123’ in the <samp>card.token.serialNumber</samp> field (as that is the current location of the token) using the Access Token for the Global TokenStore account (as that is the account where Token C will be deposited). This causes Shift4 Payments' Gateway to create a new token, Token G, in the Global TokenStore.\n\n4. The customer later returns the pair of shoes at Store 2 (serial 124). Store 2 doesn’t have the correct token to process the refund because it is not stored in their TokenStore. Therefore, the interface must provide Token G and specify “789” in the <samp>card.token.serialNumber</samp> field in the return request. This allows Shift4 Payments' Gateway to locate Token G in the Global TokenStore to process the return.\n\n5. When Store 2 completes the refund transaction, Token Z is created by Shift4 Payments' Gateway and added to Store 2’s TokenStore.\n\n\n<b>Important: If a merchant is processing a transaction with a payment card or using a token from their TokenStore, the transaction will be processed as usual and no serial number needs to be referenced.</b>\n\n### TokenStore Functions\n\nShift4 Payments has two functions associated with the TokenStore: TokenStore Add and TokenStore Duplicate.\n\n#### TokenStore Add\n\n[TokenStore Add](#operation/tokensadd) is used to add CHD to a local or Global TokenStore and receive a card token. Common uses of TokenStore Add are card-on-file processing or collecting CHD when an order or reservation is placed but not billed right away. TokenStore Add is sent when a purchase is not immediately processed and CHD needs to be tokenized for later use. When using TokenStore Add,  short-term data will not be consumed during the tokenization process; instead, the short-term data will remain with the card token for the amount of time configured by the merchant in their Token Store Settings in [Lighthouse Transaction Manager](https://ltm.shift4test.com/).\n\n#### TokenStore Duplicate\n\n[TokenStore Duplicate](#operation/tokensduplicate) is used to generate a new card token using an existing card token. When the [TokenStore Duplicate](#/operation/tokensduplicate) request is sent, a new card token will be returned to be used in place of the original token. The [TokenStore Duplicate](#/operation/tokensduplicate) request will store short-term data if sent by the interface until it is used or for the period configured in the merchant’s [Lighthouse Transaction Manager](https://ltm.shift4test.com/) account. When a merchant has a card token that is going to expire and wants to replace it, [TokenStore Duplicate](#/operation/tokensduplicate) can also be used to generate a new card token. The [TokenStore Duplicate](#/operation/tokensduplicate) request can also be used to deposit a card token into a Global TokenStore.\n\n### Use Case 1: Local TokenStore Add without Card Validation\n\n##### Actors: Interface, Shift4 Payments\n\n##### Preconditions: CHD has been captured by a merchant and is ready for the interface to send.\n\n##### Main Flow: This flow illustrates receiving a card token for a card.\n\n1. The interface sends the [TokenStore Add](#operation/tokensadd) request using the merchant’s Access Token to store CHD locally.\n\n2. Shift4 Payments returns a response with a card token in the <samp>card.token.value</samp> field.\n\n3. The interface vendor stores the card token instead of CHD in its database for use in subsequent transactions.\n\n##### Optional Flow: This flow illustrates validating a card before storing a card token.\n\n4. A [Verify Card](#operation/cardsverify) request is sent using the resultant card token.\n\n5. A response with no errors is received.\n\n6. The interface interrogates the <samp>transaction.responseCode</samp>, <samp>transaction.avs.valid</samp>, and <samp>card.securityCode.valid</samp> fields (where applicable), and stores the card token if valid.\n\n\n##### Post Conditions: A new card token has been created and stored in the merchant’s TokenStore.    \n\n\n\n### Use Case 2: Global TokenStore Duplicate Using an Existing card token\n\n##### Actors: Interface, Shift4 Payments\n\n##### Preconditions: A merchant has a card token that needs to be duplicated in the Global TokenStore after a purchase.\n\n##### Main Flow: This flow illustrates receiving a card token for a card without checking its validity.\n\n4. The interface sends the [TokenStore Duplicate](#operation/tokensduplicate) request using the Global TokenStore’s Access Token.\n\n5. Shift4 Payments returns a response with a new card token in the <samp>card.token.value</samp> field.\n\n6. The interface vendor stores the new card token in its database (instead of the old card token) for use in subsequent transactions.\n\n\n##### Post Conditions: The card data has been added to the Global TokenStore.\n"
    },
    {
      "name": "Understanding Invoices",
      "description": "\nIt is crucial that an interface handle invoice numbers correctly because the invoice number is a unique identifier for a transaction on a per-batch basis in Shift4 Payments' Gateway.\n\n\nThe invoice number is used for any subsequent requests relating to the initial request, such as converting an authorization to a sale, incremental authorizations, or a void. For subsequent requests, the invoice number from the initial request is used to link to the transaction.\n\n\nRefunds and credits are not considered subsequent requests, so these transactions require a new invoice number.  If the same invoice number is used for a [Refund](#operation/refund) as was used for the sale, the consumer could end up with a net credit. For example, if invoice 1225151234 is used for a $100 sale and later that same day, a refund is processed for $25 using the same invoice number, the customer will receive a $25 net credit instead of being charged a net of $75 because the invoice was overwritten before the batch was processed by the merchant.\n\n\n<b>Important: Shift4 Payments requires that your interface be designed to never reuse an invoice number once a payment flow is complete within an individual batch.</b>\n\n\n## Incremental Authorizations\n\nIncremental authorizations are commonly used in lodging where the final amount for the guest’s bill is unknown.  They may also be used in F&B interfaces (\"bar mode\"). While an initial authorization will be made and an invoice number will be assigned to the guest’s bill (i.e., the folio), additional transactions may also be needed, such as if the guest extends their stay or purchases incidentals. These additional transactions, or incremental authorizations, are added to the same invoice number.\n\n\nAt Shift4 Payments, incremental authorizations share the same invoice number. When the guest checks out, the sale is captured for the final amount, including the initial authorization and all approved incremental authorizations.\n\n\nSometimes, incremental authorizations are declined.  When this occurs, Shift4 Payments' Gateway automatically rolls the transaction back to the last valid authorization on file.\n\n\n### Lodging\n\n#### Use Case 4: Processing an Incremental Authorization (Lodging)\n\n#### Actors: Interface, Shift4 Payments, Clerk\n\n#### Preconditions: The merchant has an approved initial transaction for a guest’s folio.\n\n##### Main Flow 1: This flow illustrates an incremental authorization request used to increase the amount on an existing authorization.\n\n1. The clerk initiates an authorization transaction through the interface.\n\n2. The interface sends an [Authorization](#operation/authorization) request and the card token from the initial transaction to the UTG with an amount greater than the existing authorization.\n\n3. The UTG sends the card token and transaction request to Shift4 Payments' Gateway for processing.\n\n4. Shift4 Payments' Gateway returns a resultant card token and approval result to the UTG.\n\n\n##### Alternate Flow 1: This flow illustrates a referral response. (Main Flow; Step 4.)\n\n1. The clerk chooses to continue the transaction after receiving an ‘R’ response.  This response includes the data provided in the <samp>merchant.cardTypes</samp> array.\n\n2. The clerk calls the phone number provided and follows the instructions.\n\n3. The Voice Authorization Center approves the transaction and a voice authorization code is provided.\n\n4. The interface sends a [Manual Authorization](#operation/manualauthorization) request to add the incremental authorization to the invoice in Shift4 Payments' Gateway.\n\n\n### F&B\n\nShift4 Payments is certified with only a subset of processors for incremental authorizations in F&B.  If your interface will use this functionality, please check with your CSD regarding which processor(s) you expect merchants using your interface will use in production.  Attempting to use incremental authorization flows on a processor which Shift4 Payments has not certified those flows with, may result in trouble with tolerance guarantees, downgrades, and ghost authorizations.\n"
    },
    {
      "name": "P2PE format",
      "description": "\nWhen using Shift4 Payments 3DES DUKPT format for P2PE, the following fields should be set&colon;\n\n- <samp>p2pe.ksn</samp> should be set to the key serial number which was used to encrypt the data.\n\n- <samp>p2pe.format</samp> should be set to \"05\".\n\n- additional fields should be set depending on the input method, as described in the sections below&colon;\n\n### EMV\n\nThe <samp>emv.tlvdata</samp> field should contain all EMV tags in standard TLV format including the P2PE encrypted tags (5A & 57)\n\n\nThe P2PE encrypted tags (5A and 57) will have the entire TLV string encrypted, and the encrypted data will be in a TLV format using the same tag. For example, tag 5A would look like the following&colon;\n\n\n   - Encrypted&colon; 5A103737DA95D8062F647A0FF747CC496570\n   \n   \n   - Decrypted&colon; 5A084761739001010010\n\n### Track information\n\nThe <samp>p2pe.data</samp> field should contain the encrypted data.\n\n\nAfter decryption, the format would look like&colon; \"%B4444333327271111^MICROS TEST CARD^1612999999?;4444333327271111=1612999999?\".\n  \n### Manual Entry\n\nThe <samp>p2pe.data</samp> field should contain the encrypted data.\n\n\nAfter decryption, the format would look like&colon; \"cardnumber|expirationdate|CSC\".\n"
    },
    {
      "name": "Device Functionality",
      "description": "design - devices"
    },
    {
      "name": "Response Handling",
      "description": "design - response handling"
    },
    {
      "name": "Advanced Concepts",
      "description": "design - advanced concepts"
    },
    {
      "name": "Card Level Results",
      "description": "\nBelow is a list of values specifying a detailed card type if returned by a processor.\n\nValue |  Description\n------|-------------\n1A    | American Express\n1B    | Discover\n1C    | Mastercard (International Use)\n1D    | Mastercard Credit\n1E    | Mastercard Electronic\n1F    | Mastercard Gold\n1G    | Mastercard New World\n1H    | Mastercard Standard\n1I    | Mastercard Titanium\n1J    | Mastercard Unembossed Credit\n1K    | Mastercard/EuroCard and Diners Club\n1L    | Platinum Mastercard\n1M    | Visa Infinitel\n1N    | Visa Signature\n1P    | Visa Traditional\n1R    | World Elite Mastercard\n1S    | World Mastercard\n2A    | Mastercard Credit BusinessCard Prepaid Outside U.S.\n2B    | Mastercard Debit BusinessCard Prepaid Workplace Business-to-Business\n2C    | Mastercard Debit Standard Prepaid – Payroll\n2D    | Mastercard Debit Standard Prepaid – Gift\n2E    | Mastercard Debit Standard Prepaid – General Spend\n2F    | Mastercard Debit Standard Prepaid – Consumer Incentive\n2G    | Mastercard Debit Standard Prepaid – Insurance\n2H    | Mastercard Debit Standard Prepaid – Other\n2I    | Mastercard Debit Standard Prepaid – Travel\n2J    | Mastercard Debit Standard Prepaid – Teen\n2K    | Mastercard Debit Standard Prepaid – Government\n2L    | Mastercard Debit Standard Prepaid – Flex Benefit\n2M    | Mastercard Debit Standard Prepaid – Employee Incentive\n2N    | Mastercard Electronic BusinessCard Prepaid Outside U.S.\n2P    | Mastercard Electronic Consumer Prepaid Outside U.S.\n2R    | Mastercard Electronic Commercial Prepaid Outside U.S.\n2S    | Mastercard Standard Prepaid Outside U.S.\n2T    | Prepaid\n2U    | Private Label Prepaid\n2V    | Visa General Prepaid\n2W    | Visa Prepaid Commercial\n2X    | Visa Prepaid Gift\n2Y    | Visa Prepaid Healthcare\n2Z    | Visa Travel Money\n3A    | Mastercard BusinessCard\n3B    | Mastercard Electronic BusinessCard\n3C    | Mastercard Executive BusinessCard\n3D    | Mastercard Executive BusinessCard\n3E    | Mastercard Purchasing Card\n3F    | Mastercard World BusinessCard\n3G    | Visa Business\n3H    | Visa Business Check Card\n3I    | Visa Commerce\n3K    | Visa GSA Purchasing with Fleet\n3L    | Visa Purchasing\n3M    | Visa Purchasing with Fleet\n3N    | Visa Signature Business\n3P    | World Mastercard BusinessCard\n3R    | American Express Purchasing\n4A    | Mastercard Corporate\n4B    | Mastercard Corporate Executive Card\n4C    | Mastercard Electronic Commercial\n4D    | Mastercard Executive Corporate Card\n4E    | Mastercard World Corporate Card\n4F    | Visa Corporate Card\n4G    | Visa GSA Corporate T&E\n4H    | World Mastercard Corporate Card\n5A    | Visa Traditional Rewards\n6A    | Debit Brokerage\n6B    | Debit Business Card\n6C    | Debit Gold Mastercard\n6D    | Debit Mastercard\n6E    | Debit Other\n6F    | Debit Platinum Mastercard\n6G    | Maestro Point-of-Sale Debit Program\n6H    | Mastercard Debit\n6I    | Mastercard Deferred Debit Business\n6J    | Mastercard Deferred Debit Consumer\n6K    | Mastercard Electronic Consumer Debit Outside U.S.\n6L    | Mastercard Unembossed Debit Outside U.S.\n6M    | Mastercard Unembossed Debit\n6N    | World Mastercard Debit\n7A    | Visa Check Card\n7B    | Visa Flex/HSA/FSA Card\n7C    | Mastercard Flex/HSA/FSA Card\n8A    | U.K. Domestic Switch Brand\n8B    | U.K. Domestic Solo Brand\n8C    | Common Proprietary Swedish Credit Card\n8D    | Common Proprietary Swedish Debit Card\n8E    | Maestro\n8F    | Mastercard Fleet Card\n8G    | Private Label\n8H    | Proprietary\n8I    | Proprietary Credit Card (Sweden Domestic)\n8J    | Proprietary Debit Card (Sweden Domestic)\n8K    | Kelly Springfield Credit Card\n8L    | Goodyear Credit Card\n8M    | Goodyear Commercial Card\n8N    | Wright Express Credit Card\n9X    | Reserved/Interlink\n"
    },
    {
      "name": "API Options",
      "description": "API Options can be sent in order to adjust the functionality of the request being made. API Options should be sent in the <samp>apiOptions</samp> array.\n## Transaction Authorization Request Options\n### ALLOWPARTIALAUTH \nThis option is used to enable the processor to issue a partial approval (if they support it). When ALLOWPARTIALAUTH is included in a request, the interface must be able to handle a <samp>transaction.responseCode</samp> of 'P', which indicates the transaction has been partially approved. The <samp>amount.total</samp> field in the response will contain the approved amount, which should be compared against the amount requested.\n### POSHANDLEAVSFAIL\nWhen an interface sends \"POSHANDLEAVSFAIL\" for an initial authorization or sale, Shift4 Payments will not automatically void a [One Pass](#tag/Understanding-AVS-and-CSC-Verification)  transaction which has an AVS or CSC failure. One Pass transactions which result in an AVS or CSC failure will return transction.responseCode 'f'. This option does  not affect [Two Pass](#tag/Understanding-AVS-and-CSC-Verification) transactions.\n### RETURNEXPDATE\nThis option is used to return a card’s expiration date unmasked.\n\nFederal law requires all businesses to truncate credit card information on receipts. Make sure your receipt does not display the card’s expiration date and only displays the last four digits of the card number. See the example below:\n\nACCTXXXXXXXXXXXX1234\n\n      \n\nFor more information, see: https://www.ftc.gov/tips-advice/business-center/guidance/slip-showing-federal-law-requires-all-businesses-truncate\n\n### TAXEXEMPT\nThis option indicates that a transaction is tax exempt. TAXEXEMPT should only be used when a transaction is explicitly tax exempt.\n## Sale Request Options\n### INVMUSTEXIST\nThis option returns an error if the invoice specified in a [Sale/Purchase](#operation/sale) or [Capture](#operation/capture) does not already exist.\n## EBT Authorization Request Options\n### EBTCASH\nThis option is used to indicate the transaction is an EBT cash benefit.\n### EBTFOOD\nThis option is used to indicate the transaction is an EBT food stamps benefit.\n### EBTWITHDRAW\nThis option is used to indicate the transaction is an EBT cash withdrawal.\n## Merchant Information Options\n### FULLDBANAME\nThis option is used to return the merchant’s full DBA Name in the <samp>notes</samp> field on [Merchant Information](#operation/merchantsmerchant) requests.\n### RETURNCURRENCYCODE\nThis option is used to return the merchant’s configured currency code in the <samp>currencyCode</samp> field.\n## UTG-Controlled PIN Pad Options\n### ALLOWCASHBACK\nThis option is used to allow the interface to process cash back requests from a consumer.\n### APPENDLINEITEM\nThis option is used to append a line item to the existing line item(s) displayed on the screen. This API Option works with Display Line Items requests.\n### BYPASSAMOUNTOK\nThis option is used to bypass the Amount OK screen and go straight to the insert/swipe screen. If Tip is enabled on the device, it will cause the UTG to prompt for Tip prior to going to the insert/swipe screen.  The Amount OK screen can be bypassed for all transactions on Ingenico PIN pad devices by selecting the “Bypass Amount OK” setting in UTG TuneUp.\n### BYPASSSIGCAP\nThis option is used to suppress requesting an electronic signature from a consumer for a given transaction.\n### BYPASSUTG\nThis option is used to bypass the PIN pad (even if a <samp>device.terminalId</samp> is included in a request).\n### BYPASSTIP\nThis option is used to prevent the PIN pad from prompting for tip for the current transaction (if Tip is enabled for the PIN pad device in UTG TuneUp).\n### DISABLEEMV\nThis option is used to process a transaction using a specialized payment card via an alternate merchant ID (MID).\n### DISABLEMCE\nThis option is used to override the UTG TuneUp setting allowing manual card entry (MCE). The UTG will display a Please Swipe/Insert (or Tap, if applicable) form with the Manual Entry button disabled or hidden.\n### DISABLECONTACTLESS\nThis option is used to disable the PIN pad’s contactless functionality for the current transaction.\n### DISCARDTRACKINFO\nThis option is used to make a swiped card appear manually entered by discarding the swipe data other than the card number and expiration date.\n### LANECLOSED\nThis option is used with a [Reset PIN Pad](#operation/devicesreset) request to put a terminal into a Lane Closed state. The device will display the Lane Closed screen instead of the standard idle screens. A second [Reset PIN Pad](#operation/devicesreset) request without the LANECLOSED API Option will cancel the display of the lane closed screen.\n### NOSIGNATURE\nThis option is used to suppress requesting a signature from a consumer for a given transaction.\n### PRINTTIPLINE\nThis option is used to include a tip line in the receipt text.\n### PLCCSIGNATURE\nThis option is used with a [Request Signature](#operation/devicessignatures) request. If PLCCSIGNATURE is included, the screen on the PIN pad will display “I have received and agree with the Terms and Conditions” instead of “Please sign and tap ok with pen”.\n### RETURNSIGNATURE\nThis option is used to return the signature captured on a PIN pad to the interface. The returned signature can then be used by the interface to display to the clerk or print on a receipt.\n### USECARDNAME\nThis option is used to overwrite the values in the <samp>customer.firstName</samp> and <samp>customer.lastName</samp> fields with the information from the track data.\n### USEMCE\nThis option is used to bypass the Please Swipe Card screen and display the Enter Card Number screen instead. This allows the interface to force MCE (even if it is disabled by default in UTG TuneUp).\n### USEQRPAY\nThis option is used to bypass the Please Swipe Card screen and display the QR Payments screen instead. This allows the interface to force QR Payments (even if it is disabled in UTG TuneUp).\n## TokenStore Options\n### TOKENAUTH\nThis option is used to trigger the system to perform a $0 or $1 authorization to validate the card. If the card is valid, the card number will be stored and a card token will be returned. All other responses will return error 9858. This API Option will be ignored if the CSC information or track data is included in the request because CSC and track data cannot be stored after authorization and would be consumed by the TOKENAUTH API Option.\n### IGNOREEXPIRY\nThis option is used to tokenize expired cards when using the TokenStore Add function request. When IGNOREEXPIRY is included in the apiOptions array, Shift4 will allow the card sent in the request to be tokenized – regardless of its expiration date. Using IGNOREEXPIRY also allows expired cards to be imported.\n## Totals Report Option\n### NONPROBLEMSONLY\nThis option is used to return only non-problem transactions in the response to a [Totals Report](#operation/reportsbatchtotals) request.\n## Citcon Option\n### QRLINK\nThis option only applies to the GetQRCode request. If included, the response will return a link to a QR code image or a string that can be converted to a QR code image.\n## Device Manufacturer Only API Options\n### CONTACTLESSEMVCAPABLE\nThis option is only used by device manufacturers to identify if the device is capable of processing contactless EMV payment cards.\n"
    },
    {
      "name": "Test Card Numbers",
      "description": "The test card numbers listed in the tables below are the only acceptable numbers that may be used in the Shift4 Payments test environment. The use of any card number that is not listed in this section will result in an error.\n\nCard Type                                 | Card Number      | Expiration Date\n------------------------------------------|------------------|----------------\n<b>VS – Visa</b>                          | 4321000000001119 | Any Future Date\nVS – Visa                                 | 4616222222222257 | Any Future Date\nVS – Visa                                 | 4761739001010010 | Any Future Date\nVS – FSA Visa Debit, PIN Capable          | 4843609999999981 | Any Future Date\nVS – FSA Visa Debit, No PIN               | 4960049898989899 | Any Future Date\nVS – Interac Visa                         | 4506364400038106 | Any Future Date\n<b>MC – Mastercard</b>                    | 5432000000003332 | Any Future Date\nMC – Mastercard                           | 5290111111111111 | Any Future Date\nMC – Mastercard                           | 2221000000000009 | Any Future Date\nMC – Mastercard                           | 5413330089604111 | Any Future Date\nMC – FSA Mastercard Debit, PIN Capable    | 5329809999999995 | Any Future Date\nMC – FSA Mastercard Debit, No PIN         | 5543249898989898 | Any Future Date\n<b>AX – American Express</b>              | 373400000002221  | Any Future Date\nAX – American Express                     | 342877777777705  | Any Future Date\nAX – American Express                     | 374245455400001  | Any Future Date\n<b>JC – JCB</b>                           | 3337000000005551 | Any Future Date\nJC – JCB                                  | 3112030205926211 | Any Future Date\n<b>NS – Novus/Discover</b>                | 30103869233631   | Any Future Date\nNS – Novus/Discover                       | 6011013928534509 | Any Future Date\nNS – Novus/Discover                       | 6011000000004444 | Any Future Date\nNS – Discover                             | 3059910000007215 | Any Future Date\nNS – Discover                             | 6011040000000000 | Any Future Date\nNS – Discover                             | 6011025500136883 | Any Future Date\nNS – Discover                             | 6011202300122435 | Any Future Date\nNS – Discover                             | 6011485500160269 | Any Future Date\nNS – Discover                             | 6011740000186192 | Any Future Date      \nNS – Discover                             | 6011780000146150 | Any Future Date\nNS – Discover                             | 6011869900135411 | Any Future Date\nNS – Discover                             | 6440009900070414 | Any Future Date\nNS – Discover                             | 6506000000000006 | Any Future Date\nNS – Discover                             | 6555900000084001 | Any Future Date\nNS – Discover                             | 6011050000000017 | Any Future Date\nNS – Discover                             | 6011000990055240 | Any Future Date\nNS – Discover                             | 6011000991223805 | Any Future Date\nNS – Discover                             | 6510000000000034 | Any Future Date\nNS – Discover                             | 8171000000001244 | Any Future Date       \nNS – Diners Club International            | 36998900076186   | Any Future Date\nNS – Diners Club International            | 3899910000005874 | Any Future Date\nNS – Diners Club International            | 3095000000009894 | Any Future Date\nNS – Discover - JCB Test Card             | 3528000000123429 | Any Future Date\nNS – Discover - China Union Pay Test Card | 6221261111112650 | Any Future Date\nNS – Discover - China Union Pay Test Card | 6282000123842342 | Any Future Date\n<b>PL – Private Label</b>                 | 980000159        | Any Future Date\nPL – Private Label                        | 980000033        | Any Future Date\nPL – Private Label                        | 980000119        | Any Future Date\nPL – Private Label                        | 980000039        | Any Future Date\nPL – Private Label                        | 980000152        | Any Future Date\nPL – Private Label                        | 980000038        | Any Future Date\nPL – Private Label                        | 980000157        | Any Future Date\nPL – Private Label                        | 980000116        | Any Future Date\nPL – Private Label                        | 980000111        | Any Future Date\nPL – Private Label                        | 6019191200450867 | Any Future Date\nPL – Private Label                        | 6034591400025529 | Any Future Date\nPL – Private Label                        | 6034610000000011 | Any Future Date\nPL – Private Label                        | 6019190000900022 | Any Future Date\nPL – Private Label                        | 6034591400075565 | Any Future Date\n\n## Private-Label Promotional Code Test Values\n\nPromo Type 01   | Promo Type 02       | Promo Type 03\n----------------|---------------------|--------------\nF1: 000000      | F1: 000002          | F1: 000000\nF2: 000010      | F2: 000025          | F2: 000000\nF3: 12 MONTHS   | F3: 9 MONTHS        | F3: 6 MONTHS\nF4: NO INTEREST | F4: BILLED INTEREST | F4: EQUAL PAYMENT      \n\n\n## Acceptable Test Card Trigger Numbers\n\nThe following table contains acceptable test card trigger numbers; however, it is preferable to use the dollar amount trigger values for most testing. Refer to the Shift4 Payments Test Server Logic section for dollar amount values.\n\nCard Type                                 | Card Number      | Description\n------------------------------------------|------------------|----------------\nVS – Visa                                 | 4417010617574247 | Used to trigger a demo host error.\nMC – Mastercard                           | 5301933782570466 | Used to trigger a demo host error.\nVS – Visa                                 | 4184324142934805 | Used to trigger a timeout response.\nVS – Visa                                 | 4184026860115661 | Used to trigger a timeout response.\nMC – Mastercard                           | 5410648714659090 | Used to trigger a timeout response.\nMC – Mastercard                           | 5410191817369234 | Used to trigger a timeout response.\nVS – Visa                                 | 4024007135532710 | Used to trigger an invalid card response on Verify Card (FRC 2F) requests.\nMC – Mastercard                           | 5135299256640694 | Used to trigger an invalid card response on Verify Card (FRC 2F) requests.\nNS - Novus/Discover                       | 30249963622904   | Used to trigger an invalid card response on Verify Card (FRC 2F) requests.\nAX – American Express                     | 371449635398431  | Used to trigger an invalid card response on Verify Card (FRC 2F) requests.\nJC – JCB                                  | 3088518677707770 | Used to trigger an invalid card response on Verify Card (FRC 2F) requests.\nNS - Novus/Discover                       | 6011186767363105 | Used to trigger an invalid card response on Verify Card (FRC 2F) requests.\nVS – Visa                                 | 4444000000008686 | Used to trigger an i4Go® error.\nVS – Visa                                 | 4321000000001118 | This card number will fail the LUHN MOD 10 check.\n"
    },
    {
      "name": "Test Server Trigger Values",
      "description": "Shift4 Payments’ test server simulates connectivity to a credit card processing network and provides processor-like responses to credit card transactions. The test host can be triggered for specific responses, allowing you to properly code for errors, declines, referrals, and other scenarios.\n\nDesired Response                                                 | Trigger(s)\n-----------------------------------------------------------------|---------------------------------\n<samp>transaction.responseCode</samp>                                  |\n‘A’ (Authorized)                                                 | <samp>amount.total</samp> ≤ 500\n‘R’ (Referral)                                                   | 500 < <samp>amount.total</samp> ≤ 1000\n‘D’ (Declined)                                                   | 1,000 < <samp>amount.total</samp> < 10,000\n‘D’ on a refund (Declined purchase return)                       | <samp>amount.total</samp>=19.19\n'P' (Partial Approval)                                      | <samp>amount.total</samp>=219 in the initial [Authorization](#operation/authorization), [Capture](#operation/capture), or [Sale/Purchase](#operation/sale), <br> OR increase the <samp>amount.total</samp> by 219 on an incremental [Authorization](#operation/authorization) or [Capture](#operation/capture)\n<samp>transaction.avs.result</samp>                                    | \n‘A’ (Street address matched, but ZIP/postal code did not match.) | <samp>customer.addressLine1</samp> or <samp>customer.postalCode</samp> contains 65\\*\n‘E’ (Error - AVS data is invalid or not allowed.)                | <samp>customer.addressLine1</samp> or <samp>customer.postalCode</samp> contains 69\\*\n‘N’ (No street address and no ZIP/postal code match.)            | <samp>customer.addressLine1</samp> or <samp>customer.postalCode</samp> contains 78\\*\n‘R’ (Card issuer system is unavailable.)                         | <samp>customer.addressLine1</samp> or <samp>customer.postalCode</samp> contains 82\\*\n‘S’ (AVS service not supported.)                                 | <samp>customer.addressLine1</samp> or <samp>customer.postalCode</samp> contains 83\\*\n‘U’ (Street address information unavailable).                    | <samp>customer.addressLine1</samp> or <samp>customer.postalCode</samp> contains 85\\*\n‘X’ (Street address and 9-digit ZIP/postal code matched.)        | <samp>customer.addressLine1</samp> or <samp>customer.postalCode</samp> contains 88\\*\n‘Y’ (Street address and 5-digit ZIP code matched.)               | <samp>customer.addressLine1</samp> or <samp>customer.postalCode</samp> contains 89\\*\n‘Z’ (Only the ZIP/postal code matched.                           | <samp>customer.addressLine1</samp> or <samp>customer.postalCode</samp> contains 90\\*\n<samp>card.securityCode.valid</samp>                                   | \n‘M’ (Match)                                                      | <samp>card.securityCode.value</samp>=\"333\" or \"3333\"\n‘N’ (No match)                                                   | <samp>card.securityCode.value</samp>=\"444\" or \"4444\"\n‘P’ (Not processed)                                              | <samp>card.securityCode.value</samp>=\"555\" or \"5555\"\n‘S’ (Should have been present)                                   | <samp>card.securityCode.value</samp>=\"666\" or \"6666\"\n‘U’ (Issuer unavailable to process)                              | <samp>card.securityCode.value</samp>=\"777\" or \"7777\"\n<samp>card.levelResult</samp>                                          | \n‘1A’                                                             | <samp>amount.total</samp>=6.66 and <samp>card.type</samp>=\"AX\"\n‘1B’                                                             | <samp>amount.total</samp>=6.66 and <samp>card.type</samp>=\"NS\"\n‘2C’                                                             | <samp>amount.total</samp>=6.66 and <samp>card.type</samp>=\"MC\"\n‘2V’                                                             | <samp>amount.total</samp>=6.66 and <samp>card.type</samp>=\"VS\"\n<b>delayed response</b>  |\n<samp>transaction.responseCode</samp>=‘A’                                     | <samp>amount.total</samp>=111.XX, where XX is the number of seconds that the transaction response will be delayed\n<samp>transaction.responseCode</samp>=‘e’                                     | <samp>amount.total</samp>=112.XX\n<samp>transaction.responseCode</samp>=‘R’                                     | <samp>amount.total</samp>=511.XX\n<samp>transaction.responseCode</samp>=‘D’                                     | <samp>amount.total</samp>=1,111.XX\n<b>prepaid cards</b> |\n<samp>transaction.responseCode</samp>=‘A’ and <br> <samp>card.balance.amount</samp> of 43.34 (pre-paid Visa/Mastercard/AMEX)  | <samp>amount.total</samp> = 6.66\n<samp>transaction.responseCode</samp>=‘R’ and <br> <samp>card.balance.amount</samp> of 83.34 (pre-paid Visa/Mastercard/AMEX)  | <samp>amount.total</samp> = 516.66\n<samp>transaction.responseCode</samp>=‘D’ and <br> <samp>card.balance.amount</samp> of 134.34 (pre-paid Visa/Mastercard/AMEX) | <samp>amount.total</samp> = 1116.66\n<b>other</b> |\nOne Pass Validation                                              | <samp>amount.total</samp> ≤ 100 and send appropriate AVS/CSC triggers (see above)\nTwo Pass Validation                                              | <samp>amount.total</samp> > 100 and send appropriate AVS/CSC triggers (see above)\nDemo Host Error                                                  | 10,000 <= <samp>amount.total</samp> < 1,000,000\n\n\\* If more than one trigger sequence is present, values are read from left to right with the values in the <samp>customer.addressLine1</samp> field taking precedence over the values in the <samp>customer.postalCode</samp> field. For example, if customer.addressLine1=6545 Elm and <samp>customer.postalCode</samp>=49081, the <samp>transaction.avs.result</samp> would return ‘A’ because ‘65’ occurred before ‘90’.\n"
    },
    {
      "name": "Error Codes",
      "description": "Shift4 Payments has created error codes to identify error conditions as they occur when processing a transaction. An error condition is any condition where a card was not successfully processed with an approval, referral, or decline response. When appropriate, the interface notifies the user when an error has occurred by displaying an error code, a short error message, and a long error message.\n\nAVS and CSC failures are not considered error codes; instead, they are considered non-authorized responses from the issuer.\n\nDuring testing, please contact your assigned API Analyst for assistance if you encounter a critical error or if any error persists after you attempt a solution described below.\n\nprimaryCode  | secondaryCode  |  shortText                              | longText                                 | Cause                                                   | Solution\n-------------|----------------|-----------------------------------------|------------------------------------------|---------------------------------------------------------|---------\n1001         | 0              | [Processing Service] UNAVAILABLE        | No connection to processor               | Connection to processor not available.                  |\n2011         | 0              | [Varies, depending on failure]          | Communication failure to processor       | Communication failure with processor.                   |\n4003         | 0              | [Text varies]                           | Timeout waiting for response             | No response from remote system.                         | Check network connectivity.\n9012         | 0              | Com Timeout                             | Timeout waiting for response from modem  | Modem/serial error.                                     | Send an [Invoice Information](#operation/getinvoice) request. Log the transaction if error is still received.\n9018         | 0              | Com Enq Timeout                         | Timeout waiting for ENQ                  | Modem/serial error.                                     | Send an [Invoice Information](#operation/getinvoice) request. Log the transaction if error is still received.\n9020         | 0              | Com Ack Nak Timeout                     | Timeout waiting for ACK or NAK           | Modem/serial error.                                     | Send an [Invoice Information](#operation/getinvoice) request. Log the transaction if error is still received.\n9023         | 0              | Comm Char Timeout                       | Timeout Timeout waiting for a character  | Modem/serial error.                                     | Send an [Invoice Information](#operation/getinvoice) request. Log the transaction if error is still received.\n9033         | 0              | TRAN TIMEOUT                            | Shift4 Client Socket Timeout             | Connection problem between vendor software and the UTG. | Check network connectivity between the POS application and the UTG.      \n9036         | 0              | APIInvData                              | Invalid data in API request              | Transaction request contains invalid data.              | Correct data.\n9070         | 0              | BASEKEY FAILURE                         |                                          | The P2PE key injected in the device is not valid.       | Contact the device manufacturer/supplier to have the correct key injected.\n9076         | 0              | INCORRECT FORMAT                        | Original encryption format not supported | Device is set for original encryption mode.             | Must use Enhanced Encryption Format with AES.\n9076         | 1              | INCORRECT FORMAT                        | TDES not supported                       | Device is set up for Triple DES.                        | Must use Enhanced Encryption Format with AES.\n9076         | 2              | INCORRECT FORMAT                        | The encrypted block is corrupted or in an unknown format | Unable to decrypt data.                 |\n9076         | 3              | DECRYPTION FAILED                       | The encrypted block is corrupt           | Unable to decrypt data.                                 |\n9076         | 6              | NOT P2PE DATA                           | The P2PE device returned unencrypted Card Brand data. Call Shift4 Support immediately. |           |\n91XX‡        | 0              | [Response varies, depending upon error] | Host Error                               | Processor host error.                                   |Contact Shift4 Payments\n9179         | 0              | USEMCE ERROR                            | Can’t specify track information when using USEMCE | POS Vendor sent track information along with the USEMCE option.|\n9179         | 1              | USEMCE ERROR                            | Can’t specify card information when using USEMCE | POS Vendor sent card informationalong with the USEMCE option. | \n9179         | 2              | USEMCE ERROR                            | Can’t specify <samp>card.token.value</samp> when using USEMCE | POS Vendor sent a <samp>card.token.value</samp> along with the USEMCE option.|\n9180         | 0              | PAN MISMATCH                            | Personal Account Number mismatch between tags 57 and 5A | The cardholder’s card has a different card number in the track 2 equivalent data (tag 57) and the Application PAN (tag 5A) on the Chip. Request a different form of payment. |\n9270         | 0              | NoMSRdata                               | No MSR data                              |                                                         | Wait for customer to swipe their card.\n9271         | 0              | NoCouponData                            | No Coupon Data                           |                                                         |\n9401‡        | 0              | DB NO RETURN                            | Credit (Returns) cannot be processed for Debit cards | Some processors do not support debit refunds. | Contact Shift4 Payments.\n9402         | 0              | NEED TRACK2                             | Debit Transactions require a track2 swipe. | Debit transactions require Track 2 data.  EBT transactions require track 2 data or must be manually keyed.  |\n9402         | 0              | TRACK 1 N/A                             | EBT/Food Transactions require a track2 swipe or manual keyed. | Debit transactions require Track 2 data.  EBT transactions require track 2 data or must be manually keyed.  |\n9402         | 1              | NOT A DEBIT CARD                        | Debit transaction cannot be processed with this card. | Debit not allowed for this account.  | Request a different form of payment.\n9501         | 3              | INVALID INPUT                           | INVALID INPUT FROM CUSTOMER | Customer pressed an unrecognized button on the PIN pad. | Retry transaction.\n9501         | 3              | NO INPUT FROM CUST                      | NO INPUT FROM CUSTOMER | The transaction failed due to no input from the consumer in the specified time. | Retry transaction.\n9501         | 3              | No DUKPT Key                            | Device not seeded | The pin pad was not injected correctly. | Contact your MSP to inject the PIN pad.\n9501         | 3              | TRAN Cancelled                          | No pin entered | Transaction cancelled by customer. | \n9501         | 20             | UNABLE TO READ CARD                     | UNABLE TO READ CARD DATA | Card reader is bad or dirty. | Retry transaction.  Clean or replace card reader if problem persists.\n9551         | 2              | CANCELLED                               | Transaction cancelled by user | The transaction was cancelled by the user. | \n9551         | 2              | NO PIN                                  | NO PIN was enetered by the cardholder | Customer did not enter the PIN. | Retry transaction and have customer enter the PIN.\n9553         | 1              | BAD IMAGE                               | Photo type not supported | A format other than PNG was specified. | Use a supported image format.\n9601         | 1              | NO PIN                                  | No PIN entered by customer | Customer did not enter the PIN. | Retry transaction and have customer enter the PIN.\n9803         | 0              | INVALID CK                              | Checks CK for Merchant ID not found | Check verification not configured for merchant. | Call Shift4 Payments regarding check support.\n9803         | 0              | INVALID DCC                             | Dynamic Currency Conversion for Merchant Id not found | DCC not configured for merchant. | Call Shift4 Payments regarding DCC support.\n9803         | 0              | INVALID MID                             | Invalid Shift4 merchant ID or card type not configured for merchant | The MID is not recognized by Shift4. | Confirm POS software is sending correct Access Token or MID and check the UTG configurations.  Contact Shift4 Payments.\n9803         | 0              | INVALID MID                             | Merchant ID is zero | POS software is sending '0' as MID.  Invalid merchant ID. | Confirm POS software is sending correct Access Token or MID and check the UTG configurations.  Contact Shift4 Payments.      \n9815         | 0              | NO INV                                  | Invoice not found | Invoice number not found in database. | \n9819         | 0              | NO CARD INFO                            | ENGINE[Varies] |  | Confirm POS software is sending card information correctly.\n9820         | 0              | LUHN FAIL                               | Card doesn't pass Luhn check  | Account number did not pass Luhn mod 10 check.  Card is possibly invalid. | \n9824         | 0              | INVALID INVOICE                         | Invoice is invalid - not numeric  | Invoice number contains non-numeric data. | Correct data and retry transaction.\n9836         | 0              | CARD MISMATCH                           | Can't Change Cards-Split tender is required | One card is being used for authorization and another for settlement on the same transaction. |\n9837         | 0              | BAD EXPIRATION                          | Invalid Exp Date | Expiration date not valid. |\n9837         | 0              | EXPIRED CARD                            | This card has expired | Card has expired. | Request a different form of payment.\n9838         | 0              | AMT EXCEEDED                            | Amount exceeded $999,999.99 | Amount exceeded $999,999.99. Cannot process transactions greater than that. | \n9842         | 0              | INVALID CARD                            | Card is invalid--garbage found -OR- CardSwipe is invalid--garbage found | Invalid card number.  Card number is non-numeric. | Contact Shift4 Payments.\n9842         | 0              | NOT IN CARDRANGE                        | Card type not recognized | Card type not recognized for merchant.  Or, card type does not start with the expected card range. | Use a different card for payment.\n9842         | 0              | NOT IYC                                 | Card type is not It's Your Card | Attempting a gift card transaction on a non-gift card account. | Contact Shift4 Payments.\n9846         | 0              | BAD UNIQUE ID                           | Unique Identifier not found for Merchant | Shift4 Payments has no record of the card token being sent by the merchant.  If utilizing TOKENSTORE, the card token and its associated card data have been purged from the TOKENSTORE. | Contact Shift4 Payments. If utilizing TOKENSTORE and this problem occurs frequently, the Long Term Data Storage Duration timer can be adjusted in Lighthouse Transaction Manager.\n9861         | 0              | ACCESS DENIED                           | Global TOKENSTORE permission denied | Serial number is not on the Global TokenStore's allowed list. | Verify that the correct serial number is specified in the <samp>card.token.serialNumber</samp> field.  Remember: If trying to access your local TokenStore, the serial number is not required.\n9861         | 1              | NOT ALLOWED                             | Cannot send unencrypted card data with P2PE |  |\n9861         | 7              | NOT ALLOWED                             | Cannot send <samp>card.token.value</samp> with [Initialize Readers](#/operation/devicesinitializereaders) request |  |\n9862         | 2              | AccessToken                             | AccessToken not found |  |\n9862         | 3              | AuthToken                               | AuthToken not valid | The AuthToken was entered incorrectly into the application or it could have been revoked. |\n9862         | 4              | AuthToken                               | AuthToken has already been used | A production Auth Token may only be used once. |\n9862         | 5              | AuthToken                               | Time expired for the AuthToken  | The Auth Token was not used in the time allotted by the Lighthouse Transaction Manager Account Administrator. |\n9951         | 0              | RESPONSE TIMEOUT                        | Timeout waiting for response across the internet | Transaction timeout at data center or processor | \n9957         | 0              | NO HOST                                 | [Text regarding processor varies.] Not connected. | Processor not available. | Contact Shift4 Payments.\n9960         | 0              | INTERNET FAILURE                        | Transaction timeout with processor |  | Contact Shift4 Payments.\n9961         | 0              | INTERNET FAILURE                        | Transaction timeout [location] |  | Contact Shift4 Payments.\n9130         | 0              | Token not found                         |  Request cannot be processed, Token not found |                                                         |\n9131         | 0              | Auth header                             |  No authorization header found                |                                                         |\n9132         | 0              | Token expired                           |  Request cannot be processed, Token has expired |                                                       |\n9133         | 0              | Invalid token                           |  Request cannot be processed, invalid token   |                                                         |\n9126         | 0              | SplitToken                              |  Expired split token   |                                                                                |\n9879         | 0              | AMT exceeded                            |  Refund amount greater than original amount   |                                                         |\n9505         | 0              | Pending                                 |  Cancel transaction still in progress   |                                                               |\n9505         | 1              | Pending                                 |  Refund request still in progress   |                                                                   |\n9506         | 0              | Cancel failed                           |  Cancel transaction failed, execute refund transaction   |                                              |\n9815         | 1              | Duplicate invoice                       |  Duplicate invoice   |                                                                                  |\n\n‡If you are experiencing this critical error in the production environment, contact the Shift4 Payments Support team immediately at 702.597.2480, option 2.\n"
    },
    {
      "name": "Change Log",
      "description": "\n# 1.6.12\n- Fixed the 504 timeout error response example where the primaryCode was showing 995 instead of 9951\n\n# 1.6.11\n- Added customer.emailAddress and customer.ipAddress to the /transactions/sale and /transactions/authorization endpoints.\n\n# 1.6.10\n- Added clarifications to the transaction.cardOnFile.usageIndicator and transaction.cardOnFile.transactionId descriptions.\n\n# 1.6.9\n- Clarified the format for transaction.airline.ticket.passengerName\n\n# 1.6.8\n- Added the /tokens/duplicate endpoint back to the doc with a note that it is for legacy style tokens only.\n- Fixed the example in the Trustly notification where trustly.account.profile was showing as a string instead of an integer.\n- Marked the /batches/submit and /reports/batchtotals endpoints as being supported only through the hosted REST servers.\n\n# 1.6.7\n- Added support for the airlines industry.\n- Fixed the production URL for the /risk/assess endpoint.\n- Fixed the GET /merchants/merchant example where the voiceCenter.accountNumber was showing as an integer instead of a string.\n\n# 1.6.6\n- Renamed transaction.id to transaction.s4RiskId and risk.id to risk.tranId.\n- Added clarification to transaction.responseCode values 'D' and 'f' regarding the POSHANDLEAVSFAIL API Option.\n- Added clarification to the POSHANDLEAVSFAIL API Option that one pass AVS/CVV failures will result in transaction.responseCode 'f'.\n- Renamed the Partial Authorization section to Partial Approval.\n\n# 1.6.5\n- Updated the /giftcards/activate, /giftcards/deactivate, /giftcards/cashout, /giftcards/, /giftcards/reactivate, /giftcards/reload, and /giftcards/balance endpoints to have unique request body schemas based on the request type.\n- Updated the /tokens/add endpoint to have unique request body schemas based on the request type.\n- Updated the /cards/verify and /cards/identify endpoints to have unique request body schemas based on the request type.\n\n# 1.6.4\n- Fixed a typo in the shoppingCart array where the field 'quantity' was misspelled.\n\n# 1.6.3\n- Updated all fields that were the type was set as currency to be set as number\n- Fixed examples where SourceIp was incorrectly listed as SourceIP.\n\n# 1.6.2\n- Added support for the /risk/assess endpoint\n- Added transaction.id, risk.id and risk.assessment to the /transactions/sale and /transactions/authorization endpoints. These values must be sent if the /risk/assess call was made prior to the transaction.\n- Added the 'A' value to transaction.authSource\n- Added transaction.authSource, transaction.responseCode, and transaction.hostResponse to the /trustly/capture, /trustly/deposit, /trustly/refund, and /trustly/cancel endpoints\n- Added the /trustly/statusinquiry endpoint\n- Added transaction.authSource, and transaction.responseCode to the /tappp/cancel, /tappp/capture, /tappp/decryptpayload, /tappp/initiatepayment, and /tappp/tokenstatus endpoints.\n\n# 1.6.1\n- Added the lighthouse object back to the /transactions/sale endpoint with clarification that it is for Skytab transactions only.\n\n# 1.6.0\n- Added support for the /tappp/initiatepayment endpoint\n- Added support for the /tappp/decryptpayload endpoint\n- Added support for the /tappp/tokenstatus endpoint\n- Added support for the /tappp/capture endpoint\n- Added support for the /tappp/cancel endpoint\n- Added transaction.saleFlag to the GET /transactions/invoice response\n\n# 1.5.8\n- Updated the transaction flow diagram to show the 9551,4 error will come back as a 200 response not a 400 response.\n- Added transaction.retrievalReference to the /transactions/authorization, /transactions/capture, /transactions/sale, and /transactions/refund responses.\n- Added card.token to the /cards/verify response.\n- Added transaction.cardOnFile to the /cards/verify request and response.\n- Added transaction.cardOnFile to the /transactions/authorization response.\n\n# 1.5.7\n- Added the 'X' value to the transaction.responseCode field.\n\n# 1.5.6\n- Fixed the device.promptInput.index description so that the values are in a properly formatted table.\n\n# 1.5.5\n- Added a link to the P2PE format section when referencing P2PE format 05 in the various transaction endpoints.\n- Added additional values to the hostResponse.reasonCode field to cover additional card brands.\n\n# 1.5.4\n- Added the [Development Quick Start](#section/Development-Quick-Start) section.\n\n# 1.5.3\n- Added merchant.mid to the merchants/merchant response\n- Added transaction.vendorReference to the trustly notification request.\n\n# 1.5.2\n- Broke down the /trustly/capture and /trustly/deposit process flow into separate diagrams for initial and subsequent requests.\n- Added process flow diagrams to the /trustly/cancel and /trustly/refund requests\n- Fixed a typo in the Trustly refund response example where the tag was listed as 'originalnvoice' instead of 'originalInvoice'\n\n\n# 1.5.1\n- Added trustly.transactionId to the /trustly/cancel and /trustly/refund requests\n- Removed amount from /trustly/cancel request\n- Added the Restaurant Authorization and Settlement Flow section to Basic Concepts\n\n# 1.5.0\n- Added support for the /trustly/capture endpoint\n- Added support for the /trustly/deposit endpoint\n- Added support for the /trustly/refund endpoint\n- Added support for the /trustly/cancel endpoint\n- Added support for the Trustly notification request\n\n# 1.4.5\n- Updated the /transactions/manualauthorization and /transactions/manualsale endpoints to have unique request body schemas based on the request type.\n\n# 1.4.4\n- Updated the /transactions/refund endpoint to have unique request body schemas based on the request type.\n\n# 1.4.3\n- Updated the /mode/offline and /mode/online endpoints to include AccessToken in the header.\n\n# 1.4.2\n- Updated the /transactions/sale endpoint to have unique request body schemas based on the request type.\n- Fixed the cardOnFile.usageIndicator where the enums were specified as \"Initial\" and \"Subsequent\" instead of \"01\" and \"02\"\n- Fixed the cardOnFile.scheduledIndicator where the enums were specified as \"Scheduled\" and \"Unscheduled\" instead of \"01\" and \"02\"\n- Added transaction.businessDate to the /transactions/refund endpoint\n\n# 1.4.1\n- Added a Wallet/3D Secure Using Card Number request body to the  /transactions/authorization endpoint.\n- Fixed the receiptColumns length to 2 characters.\n\n# 1.4.0\n- Updated the /transactions/authorization endpoint to have unique request body schemas based on the request type.\n- Updated the [Understanding Card Tokens](#tag/Understanding-Card-Tokens) section to utilize Global Token Vault  tokenization. Moved the legacy tokenization methodology to the [Legacy Card Tokens](#tag/Legacy-Card-Tokens)\n- Removed Universal Token from the /giftcard endpoint responses.\n- Updated the text in the Two Pass Verification section to clarify that the gateway will automatically void a Two Pass Verification failure.\n\n# 1.3.0\n- Added the /giftcards/allocate endpoint.\n\n# 1.2.5\n- Added clarification to the /transactions/capture endpoint to indicate that the card object is required.\n\n# 1.2.4\n- Added clarification to card.entryMode that the field is not needed when P2PE data is being sent from a non-UTG controlled device.\n\n# 1.2.3\n- Added hostResponse object to transaction object in  200 authorization response.\n- Added a note to the invoice description to clarify that it is a numeric only field even though it is sent as a JSON String.\n\n# 1.2.2\n\n- Added device.serialNumber for non-utg controlled devices.\n- Added device.manufacturer and device.model to the /refund endpoint\n\n# 1.2.1\n\n- Updated the /devices/info responses to reflect the different data that is returned based on device type.\n\n# 1.2.0\n\n- Added the /mode endpoint used to put UTG into offline mode via an API call.\n- Added expiration date to the \"Using token\" examples for various endpoints.\n- Clarified the dateTime field to be in the merchant's time.\n- Fixed the /giftcards/cancel endpoint to include token data.\n\n# 1.1.8\n\n- Fixed the Max Length for VendorRefence to 50 (was previously 60).\n\n# 1.1.7\n\n- Added card.present to the /cards/verify endpoint\n\n# 1.1.6\n\n- Added response values to the ThreeDSecureCAVVResult field\n- Clarified the description for BusinessDate on the reports/batchtotals and batches/submit endpoints.\n\n# 1.1.5 \n\n- Added ReceiptColumns to the /transactions/invoice GET and DELETE endpoints\n\n# 1.1.4\n\n- Added additional ThreeDSecure fields. \n- Updated max length for previously configured ThreeDSecure properties.\n\n# 1.1.3\n\n- Added qrCode.qrPayIndicator to the /transactions/authorization and /transactions/sale endpoint request.\n\n# 1.1.2\n\n- Added the Lighthouse object to the 400 and 504 responses.\n\n# 1.1.1\n\n- Added the extendedCardData field to the /transactions/authorization and /transactions/sale endpoints. Used when processing 3D Secure, Apple Pay and Google Pay transactions via i4Go.\n\n# 1.1.0\n\n- Added endpoints for /qrpayments/getqrcode, /qrpayments/getqrpaymentstatus, /qrpayments/getqrdetails, /qrpayments/cancelqrpayment\n- Added Apple Pay/3D Secure support to the /transactions/authorization and /transactions/sale endpoints. This feature is still in certification and is subject to change.\n\n# 1.0.28\n\n- Added content to the Notes Field definition stating, \"Escaped quotation marks should not be sent in the Notes field.\"\n- Added the following note to the Endpoints definition under the Introduction.Note: The Shift4 REST API responses will filter out values that are empty strings, false (Boolean), or zeros (numeric). For example, if a zero is sent in a numeric field such as tax, the API will not return that field in the response.\n- Added the tax field to Refund under amount.\n- Added the transaction purchaseCard object to Refund.\n\n# 1.0.27\n\n- Added Federal law requirement to truncate credit card information on receipts. This was added under Printing Receipts, EMV Receipts, and under the API Option RETURNEXPDATE.\n\n# 1.0.26\n\n- Updated the ManualTranid definition and updated its application to just Manual Authorization, and Manual Sale.\n\n# 1.0.25\n\n- Added the two fields, ManualTranid and VendorReference, to Authorization, Capture, SalePurchase, Refund, Manual Authorization, and Manual Sale.\n\n# 1.0.24\n\n- Corrected two typos. One in How Global TokenStore Works (for the purpose of this example) and the other in Formatted Receipts (receipts).\n\n# 1.0.23\n\n- Added Acceptable Test Card Trigger Numbers table, Required EMV Authorization Request Tags table, Required Contactless EMV Authorization Request Tags table, and Financially Sensitive EMV Tags table. \n\n- Added card types CI (Citgo) and BC (Backed Card).\n\n- Added PRINTTIPLINE to the API Options.\n\n# 1.0.22\n\n- Added lighthouse.data to the 200 response for the /transactions/sale endpoint\n\n# 1.0.21\n\n- Added customer.firstName and customer.lastName to the 200 response for the following endpoints: /transactions/authorization, /transactions/capture, /transactions/sale, /transactions/invoice, /transactions/manualauthorization, and /transactions/manualsale\n\n# 1.0.20\n\n- Fixed promptSecurityCode to reflect the correct field name - promptCardSecurityCode.\n\n- Fixed overrideBusDate to reflect the correct field name - transaction.businessDate.\n\n# 1.0.19\n\n- Added header for Device Manufacture Only API Options.\n\n- Added CONTACTLESSEMVCAPABLE API Option with definition\n\n# 1.0.18\n\n- Changed the AccessToken in the example to a working value so that it can just be copied/pasted for quick testing.\n\n- Changed the authToken and clientGuid in the credentials/accesstoken request to a working value so that it can just be copied/pasted for quick testing.\n\n# 1.0.17\n\n- Added receiptColumns\n\n# 1.0.16\n\n- Added API Option header parameter to GET transactions/invoice\n\n# 1.0.15\n\n- Added IGNOREEXPIRY Api Option\n\n- Added the lighthouse object\n\n- Added Card On File Transaction content to Advanced Concepts\n\n# 1.0.14\n\n- Added cardOnFile object\n\n- Added universal token object and GET /tokens/universaltoken endpoint\n\n- Corrected endpoint for POST /devices/termsandconditions\n\n# 1.0.13\n\n- Corrected endpoint for DELETE /tokens\n\n- Updated response format and sample for POST /tokens/add\n\n- Updated response format for POST /cards/identify\n\n- Updated sample responses for several gift card endpoints\n\n# 1.0.12\n\n- Updated device object\n\n- Updated /cards/identify response format\n\n# 1.0.11\n\n- Updated parameters for formatted receipt\n\n- Reformatted Test Server Trigger Values section\n\n# 1.0.10\n\n- Updated use cases\n\n- Added trigger for decline on a refund\n\n- Updated Citcon section\n\n# 1.0.9\n\n- Updated void use case\n\n- Updated upload signature request format\n\n# 1.0.8\n\n- Updated responseCode information\n\n# 1.0.7\n\n- Updated <samp>card.type</samp> information\n\n# 1.0.6\n\n- Updated void response format\n\n- Updated capture request format\n\n- Added <samp>transaction.amex</samp> object\n\n- Added <samp>transaction.saleFlag</samp>\n\n# 1.0.5\n\n- Updated information on UTG and offline behavior\n\n- Corrected parameters on some devices endpoints\n\n# 1.0.4\n\n- Updated Printing Receipts section\n\n- Rebranded DotN to LTM and Shift4 Payments' Gateway\n\n- Expanded information about closing batches\n\n- Added <samp>device.manufacturer</samp> and <samp>device.model</samp>\n\n# 1.0.3\n\n- Updated <samp>device.capability</samp> object\n\n- Added <samp>formattedReceipt</samp> object and header\n\n# 1.0.2\n\n- Added emv fields for fallback scenarios\n\n- Updated descriptions for <samp>customer</samp> and <samp>device.capability</samp> objects\n\n- Updated sample requests and responses\n\n# 1.0.1\n\n- Added the following endpoints: /devices/promptinput, /giftcards/cancel\n\n- Added partial approval responseCode to the Transaction Flow Diagram\n\n- Updated the \"conditional\" statements about several fields\n\n# 1.0.0\n\n- Removed Sandbox URLs\n\n- Added the following endpoints: /devices/prompttermsandconditions, /devices/initializereaders, /devices/promptcardread, /devices/processform\n\n# 0.7.28 Beta\n\n- Added the following endpoints: /devices/promptconfirmation, /devices/lineitems, /devices/info, /devices/reset\n\n- Added apiOption POSHANDLEAVSFAIL\n\n- Added information regarding contactless EMV\n\n# 0.7.27 Beta\n\n- Updated description of debit-related fields\n\n- Removed the /cards/block, /cards/blockstatus, /cards/unblock endpoints\n\n# 0.7.26 Beta\n\n- Added a test card for Discover's new BIN range\n\n- Updated the request formats for some of the /cards, /devices, and /tokens endpoints\n\n# 0.7.25 Beta\n\n- Added the following endpoints: /cards/verify, /cards/identify, /cards/block, /cards/unblock, /cards/blockstatus, /devices/print, /devices/promptsignature, /tokens/4words\n\n# 0.7.24 Beta\n\n- Re-added the /tokens/delete endpoint\n\n- Added endpoints for /reports/batchtotals and /batches/submit\n\n- Added information about responseCode 'P' (partial approval)\n\n- Updated the P2PE data samples\n\n# 0.7.23 Beta\n\n- Changed <samp>customer.streetAddress</samp> to <samp>customer.addressLine1</samp>\n\n# 0.7.22 Beta\n\n- Updated samples for Using EMV with P2PE\n\n- Updated Transaction Flow Diagram\n\n- Added overrideBusDate parameter\n\n# 0.7.21 Beta\n\n- Added URL example for locally installed UTG\n\n# 0.7.20 Beta\n\n- Added <samp>device.capability</samp> object\n\n# 0.7.19 Beta\n\n- Updated EMV & P2PE information\n\n- Corrected the response format\n\n# 0.7.18 Beta\n\n- Removed display of meaningless extra names for fields and objects (ex: CustomerObject)\n\n- Added Gift Cards endpoints, Manual Sale and Manual Authorization\n\n# 0.7.17 Beta\n\n- Added image for Transaction Flow Diagram\n\n# 0.7.16 Beta\n\n- Added multiple versions of request bodies for several endpoints\n\n- Re-ordered request and response fields for greater consistency\n\n- Added example value for <samp>signature.data</samp> and <samp>emv.tlvdata</samp>\n\n- Fixed missing descriptions on some fields in error result schemas\n\n# 0.7.15 Beta\n\n- Updated several design consideration sections to reflect API flow changes\n\n# 0.7.14 Beta\n\n- Updated the response format for several endpoints\n\n- Removed references to a few deprecated API Options and fields\n\n# 0.7.13 Beta\n\n- Split \"Design Considerations\" into multiple groups and relocated them to be after \"Endpoints\"\n\n- Updated references to old field names\n\n- Fixed unintentional linebreaks on several \"Warning\" messages\n\n# 0.7.12 Beta\n\n- Updated sample error responses to be more accurate for each endpoint\n\n# 0.7.11 Beta\n\n- Added clerk to sample response for multiple endpoints\n\n- Added 504 response type\n\n- Added information about special characters on some header parameters\n\n- Converted several lists to tables (for enum's) \n\n# 0.7.10 Beta\n\n- Updated name for /transactions/authorization endpoint\n\n- Added header fields for /credentials/accesstoken endpoint\n\n# 0.7.9 Beta\n\n- Removed <samp>metatoken</samp> object and RETURNMETATOKEN APIOption\n\n# 0.7.8 Beta\n\n- Added <samp>result</samp> parent object in responses\n\n- Removed /tokens/delete endpoint\n\n# 0.7.7 Beta\n\n- Added the Hotel and Auto Rental blocks to the Capture request.\n\n- Removed the body from the DELETE functions in transactions/invoice and tokens/delete.\n\n- Fixed where some string fields were showing up as non-strings in the examples.\n\n# 0.7.6 Beta\n\n- Fixed the <samp>credential</samp> object in the Access Token Exchange request so that it is singular.\n\n- Fixed the dateTime description and examples to show the colon in the time offset.\n\n- Fixed the server URLs to include /api/rest in the path.\n\n# 0.7.5 Beta\n\n- Extended the Trigger Values section\n\n- Extended the Error Codes section      \n\n# 0.7.4 Beta\n\n- Changed the casing on the Header parameters.\n\n# 0.7.3 Beta\n\n- Added Receipt Printing Requirements content\n\n- Removed apiOptions from responses\n"
    },
    {
      "name": "UTG-controlled devices",
      "description": "\n### Requirements for EMV Processing with Shift4 Payments using a UTG-controlled device\n\nEMV has been a complete paradigm shift in the U.S. payments industry. The good news is that Shift4 Payments is handling almost all of the changes to development so that you can quickly and easily support EMV.\n\n\nCertifying for EMV with Shift4 Payments requires P2PE PIN pads that are configured specifically for the Shift4 Payments test environment. This requires a Shift4 Payments P2PE test key and, if you plan to certify for debit, any U.S. debit key.\n\n\n##### <b>Important: The Shift4 Payments P2PE test key is different from the production key; these two types of keys cannot be interchanged.</b>\n\n\nThe PIN pad(s) that you use for testing must be loaded with the required Shift4 Payments test key by the device manufacturer or reseller before certification can begin. \n\n\n##### <b>Requirement: In EMV processing with a UTG-controlled PIN pad, your application must populate the <samp>device.terminalId</samp> field with the API Terminal ID that you configured in UTG TuneUp in order to prompt the PIN pad.</b>\n\nIn production, each UTG-controlled PIN pad can process EMV transactions for only a single MID.\n\n\nTo learn about the installation and usage of the UTG software, head to our [Documentation Corner](https://myportal.shift4.com/index.cfm?action=support.doc) and check out the links under the heading \"UTG\".  Within the \"UTG Installation and Configuration Guide\" is a section titled \"Adding a REST Interface\".\n\n\n\nFor more information about EMV receipt requirements, please refer to the [Printing Receipts](#tag/Printing-Receipts) section of this document.\n\nNote: Certifying for EMV with Shift4 Payments using UTG-controlled devices does not require the use of chip cards because the UTG, which is already certified for EMV with the processors, controls the PIN pad and handles the chip card functionality.\n\n\n### Quick Chip EMV\n\nIn typical EMV processing, the consumer’s card must remain inserted into the PIN pad from the moment a transaction is totaled until an approval, decline, or referral response is returned from the card issuer. As a result, consumers have complained that transaction times are much slower with EMV chip cards than they are with magnetic stripe cards.\n\n\nHowever, consumers can experience EMV transaction times that are comparable to those processed with magnetic stripe cards with quick chip EMV. Shift4 Payments provides support for quick chip EMV with all of the major card brands, including Visa Quick Chip for EMV, Mastercard M/Chip Fast, Amex Quick Chip, and Discover Quick Chip.\n\n\nQuick chip EMV allows the consumer to remove their EMV chip card before the transaction is sent online to the card issuer for authorization. This reduces the amount of time the card is required to remain in a terminal, giving consumers a perceived speed increase because they can put their card away earlier than they can with typical EMV processing.\n\n\nIf you are certified with Shift4 Payments for EMV, you don’t need to make any changes to your interface to support this feature because quick chip functionality is completely handled by the UTG.\n\n\nIf you’d like to learn more about how you can enhance the EMV checkout experience with faster transaction times, see the [Supporting Swipe Ahead for Faster Transactions at the POS](#section/Supporting Swipe Ahead for Faster Transactions at the POS) section of this document.    \n\n\n##### Tip: Quick chip simply gives consumers a perceived speed increase as they are able to remove their card while the typical EMV authorization process flow occurs. However, interface designers can certify to support Insert/Swipe Ahead, which provides an actual speed increase to EMV transaction times. For more information, see the [Supporting Swipe Ahead for Faster Transactions at the POS](#section/Supporting Swipe Ahead for Faster Transactions at the POS) section of this document.\n\n\n### Supporting Swipe Ahead for Faster Transactions at the POS\n\nInsert/Swipe Ahead functionality allows swipe, insert, contactless, or manual payment card entry at the Point of Sale (POS) before the merchant has finished ringing up a transaction.\n\n\nYou can support Swipe Ahead functionality by sending an [Initialize Readers](#operation/devicesinitializereaders) request. This will prompt the consumer to enter their card information by displaying the Insert/Swipe (or Tap, if applicable) screen when the clerk begins scanning items.\n\n\n##### <b>Requirement: A UTG-controlled PIN pad is required to support Insert/Swipe Ahead.</b>\n\nAfter an [Initialize Readers](#operation/devicesinitializereaders) request is made, if the consumer’s payment data is entered, the \"Please wait for cashier\" screen will display while the clerk continues to scan items.\n\n\nDepending on your system or the merchant’s business practices, when the transaction has been totaled, you will send an [Authorization](#operation/authorization) or [Sale/Purchase](#operation/sale) to send the transaction online for processing.\n\n\n#### Sending Line Item(s) Requests with Initialize Readers\n\nAfter sending an [Initialize Readers](#operation/devicesinitializereaders), you can send [Display Line Items](#operation/deviceslinesitems) requests to display details about the item(s) being purchased to the consumer. After the consumer’s card data has been entered and the [Initialize Readers](#operation/devicesinitializereaders) response is returned, the line items requests will be processed in the order received. Therefore, you may choose to wait until the [Initialize Readers](#operation/devicesinitializereaders) response is received to send [Display Line Items](#operation/deviceslinesitems) requests, or you may send line items requests immediately following the [Initialize Readers](#operation/devicesinitializereaders) request.\n\n\nTip: If you send line items requests before the [Initialize Readers](#operation/devicesinitializereaders) response has been received, you should set a timer that is greater than the time currently remaining on the [Initialize Readers](#operation/devicesinitializereaders) request. This allows time for the UTG to receive and respond to line items requests after the [Initialize Readers](#operation/devicesinitializereaders) response has been received.\n\n\n#### Clearing the Initialize Readers Data Cache\n\nIf a [Initialize Readers](#operation/devicesinitializereaders) request has been sent and a consumer’s payment card data has been entered, a [Reset Device](#operation/devicesreset) request can be sent to reset the PIN pad to idle if it hasn’t yet been sent online for processing. [Reset Device](#operation/devicesreset) may be helpful if there is a need to change the consumer’s payment method, such as if the consumer decides that they want to pay using a different payment card or cash.\n\n\nIn addition to [Reset Device](#operation/devicesreset), the Initialize Readers data cache will also be cleared if another [Initialize Readers](#operation/devicesinitializereaders) request is sent or if the transaction is processed.\n\n### Use Case 3: Sending an Initialize Readers Request before Sale or Authorization\n\n##### Actors: Interface, Shift4 Payments\n\n##### Preconditions: A merchant is processing a sale.\n\n##### Main Flow: This flow illustrates sending an Initialize Readers request prior to a sale or authorization request, allowing the consumer to swipe, insert, or tap their card prior to a transaction being totaled.\n\n1. The clerk has begun scanning items for purchase.\n\n2. The interface sends a [Initialize Readers](#operation/devicesinitializereaders) request to the UTG, causing the PIN pad to prompt the consumer to insert, swipe, or tap their payment card. If applicable, the payment card entry is followed by a prompt for PIN.\n\n3. The UTG begins processing the transaction and securely holds the data in cache. The transaction is not sent online for processing at this stage. If the card was inserted, the PIN pad prompts the consumer to remove their card.\n\n4. The PIN pad displays a “Please wait for the cashier” message on the PIN pad.\n\n5. The UTG sends the [Initialize Readers](#operation/devicesinitializereaders) response to the interface.\n\n6. The interface sends an authorization or sale request with the final transaction amount for processing.\n\n7. The PIN pad prompts the consumer to accept the total amount via the “Amount OK” screen.\n\n8. The PIN pad displays “Authorizing, please wait” while the authorization or sale request is sent for processing.\n\n9. A response indicating approval is returned, and the PIN pad prompts the consumer for signature, if applicable.\n\n\n#### Post Conditions: An approved transaction awaits settlement at the end of the day.\n\n\nTip: The “Amount OK” screen can be skipped if you send the BYPASSAMOUNTOK API Option or if the “Bypass Amount OK” option was selected in UTG TuneUp when configuring the PIN pad.\n"
    },
    {
      "name": "EMV Tags for UTGless devices",
      "description": "### Required EMV Authorization Request Tags\n\nBelow are the primary tags used in EMV authorization requests. Not all of the following tags are required on every transaction. For detailed a explanation of a tag's length and format, please refer to EMV Lab or official EMVCo documentation.\n\nTag        | Name                                            | Description\n-----------|-------------------------------------------------|------------------------------------------------------------------------------\n9F1E       | Interface Device (IFD) Serial Number            | Unique and permanent serial number assigned to the IFD by the manufacturer.\n9F40       | Additional Terminal Capabilities                | Indicates the data input and output capabilities of the terminal.\n9F02       | Authorized Amount                               | Authorized amount of the transaction (excluding adjustments).\n9F03       | Other Amount                                    | Secondary amount associated with the transaction representing a cashback amount.\n9F26       | Application Cryptogram                          | Cryptogram returned by the ICC in response of the GENERATE AC command.\n4F         | Application Identifier (AID) - ICC              | Identifies the application as described in ISO/IEC 7816-5.\n9F06       | Application Identifier (AID) - Terminal         | Identifies the application as described in ISO/IEC 7816-5.\n82         | Application Interchange Profile                 | Mnemonic associated with the AID according to ISO/IEC 7816-5.\n9F36       | Application Transaction Counter                 | Counter maintained by the application in the ICC (incrementing the ATC is managed by the ICC).\n9F34       | Cardholder Verification Method (CVM) Results    | Identifies a method of verification of the cardholder supported by the application.\n9F27       | Cryptogram Information Data                     | Indicates the type of cryptogram and the actions to be performed by the terminal.\n9F39       | POS Entry Mode                                  | Indicates the method by which the PAN was entered, according to the first two digits of the ISO 8583:1987 POS Entry Mode.\n9F33       | Terminal Capabilities                           | Indicates the card data input, CVM, and security capabilities of the terminal.\n9F1A       | Terminal Country Code                           | Indicates the country of the terminal, represented according to ISO 3166.\n9F35       | Terminal Type                                   | Indicates the environment of the terminal, its communications capability, and its operational control.\n95         | Terminal Verification Results                   | Status of the different functions as seen from the terminal.\n5F2A       | Transaction Currency Code                       | Indicates the currency code of the transaction according to ISO 4217.\n9A         | Transaction Date                                | Local date that the transaction was authorized.\n9B         | Transaction Status Information                  | Indicates the functions performed in a transaction.\n9F21       | Transaction Time                                | Local time that the transaction was authorized.\n9C         | Transaction Type                                | Indicates the type of financial transaction, represented by the first two digits of ISO 8583:1987 Processing Code.\n9F37       | Unpredictable Number                            | Value to provide variability and uniqueness to the generation of a cryptogram.\n5F2D       | Language Preference                             | 1-4 languages stored in order of preference, each represented by 2 alphabetical characters according to ISO 639.\n5F34       | Primary Account Number (PAN) Sequence Number    | Identifies and differentiates cards with the same PAN.\n84         | Dedicated File (DF) Name                        | Identifies the name of the DF as described in ISO/IEC 7816-4.\n9F10       | Issuer Application Data                         | Contains proprietary application data for transmission to the issuer in an online transaction.      \n\n### Required Contactless EMV Authorization Request Tags\nThe following tag must be sent on all Mastercard PayPass (contactless EMV) transactions. For detailed a explanation of a tag's length and format, please refer to EMV Lab or official EMVCo documentation.\n\nTag        | Name                                            | Description\n-----------|-------------------------------------------------|------------------------------------------------------------------------------\n9F6E       | Form Factor Indicator (FFI)                     | The PayPass Third Party Data contains proprietary information from a third party.\n\n### Financially Sensitive EMV Tags\nThe following EMV tags contain sensitive cardholder data that must be encrypted if sent to Shift4 for transaction processing. For detailed a explanation of a tag's length and format, please refer to EMV Lab or official EMVCo documentation.\n\nTag        | Name                                            | Description\n-----------|-------------------------------------------------|------------------------------------------------------------------------------\n5A         | Primary Account Number (PAN)                    | Valid cardholder account number (encrypted).\n57         | Track 2 Equivalent Data                         | Contains the data elements of track 2 according to ISO/IEC 7813, excluding start sentinel, end sentinel, and Longitudinal Redundancy Check (LRC), as follows: Primary Account Number (n, var. up to 19) Field Separator (Hex 'D') (b) Expiration Date (YYMM) (n 4) Service Code (n 3) Discretionary Data (defined by individual payment systems) (n, var.) Pad with one Hex 'F' if needed to ensure whole bytes (b).\n5F24       | Application Expiration date                     | Date after which application expires.\n5F30       | Service Code                                    | Service code as defined in ISO/IEC 7813 for track 1 and track 2.\n9F1F       | Track 1 Discretionary Data                      | Discretionary part of track 1 according to ISO/IEC 7813.\n9F20       | Track 2 Discretionary Data                      | Discretionary part of track 2 according to ISO/IEC 7813.      \n"
    },
    {
      "name": "NFC/Contactless Payments",
      "description": "\nShift4 Payments allows merchants to accept contactless payments, such as Apple Pay®, Samsung Pay®, and Android Pay®.  When using a UTG-controlled device equipped with NFC/contactless technology, the ability to accept contactless payments is configurable by the merchant in UTG TuneUp.  Some devices by vendors such as PAX and Innowi also support contactless payments.\n\n\nTo support contactless payments, your interface will need to be able to accept a card.entryMode of ‘R’ in a response.\n\n\nShift4 Payments only supports the tap-and-pay functionality of mobile wallet applications and does not currently support in-app purchases.\n"
    },
    {
      "name": "Timeouts and Communication Failures",
      "description": "\nCommunication failures can occur at various points in the transaction process and cause the transaction to timeout. This section outlines the amount of time that your interface should allow for transaction responses, the communication error codes your interface should receive, and guidelines for handling communication failures.\n\n### Global Timer\n\nInterfaces will need to implement a Global Timer to monitor the time between a request and a response. The Global Timer should be configurable because the values may need to be changed later.\n\n- For transactions with card entry using a UTG-controlled PIN pad, initially set the Global Timer to 120 seconds.  The device-timer setting in UTG TuneUp must have a lower value than your chosen Global Timer duration.\n- For transactions with card entry other than a UTG-controlled PIN pad, initially set the Global Timer to 65 seconds.\n\nWhen a transaction response exceeds the time limit configured in the Global Timer, the interface will need to treat the timeout as a communication error.\n\n\n### Communication Error Codes\n\nThe following is a list of the communication error codes:\n\nCode| \n----|\n1001|2011|4003|9012|9018|9020|9023|9033|9489\n9901|9902|9951|9957|9960|9961|9962|9964|9978\n\n\nIf one of these error codes is received, follow the [Transaction Flow Diagram](#tag/Transaction-Flow-Diagram) to check the status of the invoice.\n\n\n### When a Communication Failure Occurs\n\nWhen a communication failure occurs, it is important to determine the status of the transaction in progress to determine the point at which the error occurred. For example, a communication failure does not mean that the card issuer did not receive or approve the transaction; if the failure occurred before the card issuer responded, the merchant could have a valid approval.\n\n\nTo determine the status of the transaction, an [Invoice Information](#operation/getinvoice) request must be sent by the interface. The [Invoice Information](#operation/getinvoice) request will need to include the invoice number in the Invoice header parameter. Using the information in the response to the [Invoice Information](#operation/getinvoice) request, the interface will either void, log, or continue the transaction. If the [Invoice Information](#operation/getinvoice) request is unsuccessful, the interface can resend the request once before logging the transaction for an auditor’s review.\n\n\nWhen a communication failure occurs, the interface should complete the following steps:\n\n1. Wait for 1 to 3 seconds (in the production environment) or 3 to 5 seconds (in the test environment).\n\n2. Send an [Invoice Information](#operation/getinvoice) request to check the invoice status.\n\n  - If an \"Invoice Not Found\" error is returned, then the original transaction which timed out can be sent again (using the same invoice number).\n\n  - OR if the invoice was found, check the value in the <samp>transaction.responseCode</samp> field (if present).  If the status still cannot be determined from the response, log the transaction for an auditor’s review.\n\n  - OR if the [Invoice Information](#operation/getinvoice) request fails, one retry can be attempted before logging the transaction for review.\n\n\n##### <b>WARNING! If a transaction fails, do not send a [Void](#operation/void) request. Your interface should log the error condition for the merchant’s review.</b>\n\n\n### When a Gift Card Balance Loading Communication Failure Occurs:\n\nWhen a communication failure occurs while loading a balance on a gift card, send a [Balance](#operation/balance) request to check the balance.\n- If the Global Timer expires before receiving a response or if the interface receives a communication error, log the transaction for an auditor’s review.\n- If you receive the [Balance](#operation/balance) response and the correct balance (prior balance plus requested load amount) is not reflected, log the transaction for an auditor’s review and adjustment.\n\n\n##### <b>WARNING! Never send a [Void](#operation/void) request for communication errors related to gift cards. Your interface should log the error condition for the merchant’s review.</b>\n\n### When a Communication Failure Occurs while Charging a Gift Card:\n\nWhen a communication failure occurs while redeeming a gift card (authorization or sale), the card's balance will not be returned in a subsequent [Invoice Information](#operation/getinvoice) request.  The interface can send a [Balance](#operation/balance) request to check the balance if this information is needed.\n\n### Logging Communication Failures for Auditor Review\n\nWhen unresolved exceptions, such as timeouts and communication errors, occur during the processing flow, a transaction should be logged for an auditor’s review. Logging the transaction allows the merchant’s auditor to review the batch of transactions and fix potential issues, such as double charges.\n"
    },
    {
      "name": "Handling Referral Responses",
      "description": "\nA <samp>transaction.responseCode</samp> of ‘R’ indicates the card issuer is unable to approve a transaction without processing a voice referral. Voice referrals are commonly caused when an issuer has concerns over fraudulent activity. Voice referrals can also happen when a merchant is processing in offline mode.\n\n\nThe way your interface responds to a voice referral is based on the merchant’s business practices and industry. The interface will either need to treat a referral response as a decline or process the transaction using an authorization code (provided by the card-issuing bank over the phone). An e-commerce interface would treat referral responses as declines because there is no clerk to call the card issuer. Interfaces for other industries may need to add the ability to follow Shift4 Payments’ voice referral flow (detailed below). A best practice in interface design is to make referral handling configurable by dollar amount and merchant preference.\n\n### Authorization Codes\n\nA successful voice referral will result in a card issuer providing a voice authorization code that the clerk will enter into the interface. Your interface will then pass the authorization code to Shift4 Payments' Gateway using the [Manual Authorization](#operation/manualauthorization) request or [Manual Sale](#operation/manualsale) request.\n\n### Invalid Authorization Codes\n\nHistorically, merchants have experienced issues with clerks entering invalid authorization codes. This can occur when a clerk mistypes the code given by the staff at the voice authorization phone number or makes up a code to avoid having to call the card issuer. Invalid authorization codes can cause merchants to lose revenue when a purchase cannot be authorized by the card issuer or a chargeback occurs. In addition to lost revenue, merchants can be fined by the processor when an invalid authorization code is entered.\n\nValid authorization codes are six alphanumeric characters (no special characters); your interface should verify that the code entered meets this criteria. Shift4 Payments strongly recommends a warning message be displayed on the screen where the clerk enters the authorization code. This message should warn the clerk that the authorization code entered must match the one provided by the issuer.\n\n### Use Case 6: Handling Voice Referrals \n\n##### Actors: Clerk, Consumer, Interface, Shift4 Payments, Voice Authorization Center\n\n##### Preconditions: A transaction request has received a referral response. The merchant is not e-commerce, where referral requests are automatically voided.\n\n##### Main Flow: This flow illustrates successfully obtaining a voice authorization.\n1. The clerk and consumer choose to continue the transaction after receiving an ‘R’ response.  This response includes the data provided in the <samp>merchant.cardTypes</samp> array.\n\n2. The interface displays the information from the response for the clerk’s use.\n\n3. The clerk calls the phone number provided and follows the instructions.\n\n4. The Voice Authorization Center approves the transaction and a voice authorization code is provided.\n\n5. The interface displays a field in which the clerk will enter the voice authorization code.\n\n6. The clerk enters and submits the voice authorization code.\n\n7. The interface will send a [Manual Authorization](#operation/manualauthorization) request or [Manual Sale](#operation/manualsale) request.\n\n##### Alternate Flow 1: This flow illustrates the merchant or consumer canceling the transaction prior to attempting to get a voice authorization code. (Main Flow; Step 1.)\n\nNo further action is required.  Shift4 Payments automatically voids transactions that receive an 'R' response.\n\n\n##### Alternate Flow 2: This flow illustrates the card issuer declining the transaction. (Main Flow; Step 6.)\n\nNo further action is required.  Shift4 Payments automatically voids transactions that receive an 'R' response.\n\n\n##### Exception Flow 1: This flow illustrates a failure attempting to get the voice referral data.\n\n1. Starting at step 1 of Main Flow: The clerk and consumer choose to continue the transaction after receiving an ‘R’ response.  However, the voice authorization center information is not provided in the referral response.\n\n2. The clerk refers to the merchant’s backup voice referral procedures.\n\n3. Return to Main Flow; Step 3.\n\nPost Conditions: The voice authorization code is recorded for approved transaction.\n"
    },
    {
      "name": "Understanding AVS and CSC Verification",
      "description": "\nAddress Verification System (AVS) and Card Security Code (CSC) verification are two separate verification systems that are often used together when processing card-not-present transactions and manually entered cards in card-present scenarios. \n\nAVS and CSC data may be collected through prompts on a PIN pad, entered into the interface by the clerk, or entered into an e-commerce web page by the consumer. The AVS and CSC data is collected and sent with the initial authorization or sale request, but it is not sent in any subsequent requests for a given invoice. If AVS or CSC verification fails on an initial request, Shift4 Payments will automatically void the transaction.   Therefore, to retry AVS and CSC verification with new data, a new transaction must be started.  \n\nHowever, if an interface sends \"POSHANDLEAVSFAIL\" in apiOptions for the initial authorization or sale request for a transaction, Shift4 Payments will not void the transaction in the case of AVS or CSC failure.  At that point the interface can query the <samp>avs</samp> object to obtain further detail regarding the reason for the failure and proceed according to the merchant's or vendor's business practices.\n\nImportantly, AVS and CSC verification are completed separately from transaction authorization. This means that even though a bank may approve a transaction, the AVS or CSC verification may fail. A merchant can also have their account set to return a declined response whenever AVS or CSC is invalid.\n\n### AVS (Address Verification System)\n\nProcessors use AVS data, including the name, street number and/or postal code, to validate the identity of the consumer against the information on file with the card issuer. Using AVS helps a merchant achieve better interchange and/or discount rates.\n\n### One and Two Pass Verification\n\n#### Understanding One and Two Pass Verification\n\nThere are two methods to verify the cardholder’s AVS information:\n- One Pass Verification\n- Two Pass Verification\n\n#### One Pass Verification\n\nWith One Pass Verification, Shift4 goes out to the processor and requests the full amount at the same time the AVS/CSC is being verified. If the AVS or CSC is invalid, then the full amount is put on authorization hold. Shift4 Payments automatically performs a void to release the authorization hold on the customer’s card. Depending on the amount requested, the cardholder’s Open to Buy balance can be significantly affected. The balance on the customer card will be reduced by the amount being held as an authorization until the void is fully processed. Even with real-time reversals, it could take several hours until the authorization hold is released.  If the authorization hold is for a large enough amount, the cardholder may be declined for insufficient funds when attempting to make purchases elsewhere.\n\n##### Note: If an interface sends the API Option \"POSHANDLEAVSFAIL\" for an initial authorization or sale, Shift4 Payments will not automatically void a One Pass transaction which has an AVS or CSC failure.\n\n\n#### Two Pass Verification\n\nWith Two Pass Verification Shift4 first goes out to the processor to verify the AVS and CSC using a $0 or $1 authorization. If the AVS and CSC are valid then Shift4 goes out to the processor to authorize the full amount requested. If the AVS or CSC is invalid then an ‘f’ code is returned in the <samp>responseCode</samp> field, and the transaction will be automatically voided by the gateway. The major advantage of Two Pass Verification is evident when a Two Pass verification fails, the full amount requested is not subject to an authorization hold. Despite financial institutions supporting real-time reversals, it may still take several hours or a day for the authorization hold on the funds to be removed. Since the authorization is for $1 or $0, the potential impact to the customer’s Open to Buy balance is minimized.\n\n#### How One and Two Pass Verification Works at the Merchant Level\n\nWhen a merchant account is created, Shift4 Payments staff will set a dollar threshold that controls whether One Pass or Two Pass is utilized. Transactions for an amount at or below the threshold will use One Pass Verification, while transactions for an amount higher than the threshold will use Two Pass. For example, if the threshold is set at $100.00, then transactions for an amount at or below $100.00 will use One Pass Verification, while transactions for an amount higher than $100.00 will use Two Pass Verification. As another example, if the threshold is set at $0, then all transactions will use Two Pass. If the threshold is set to $999,999.99, then all transactions will use One Pass. The merchant should let Shift4 Payments staff know what value best suits their business practices.\n"
    },
    {
      "name": "Preventing Double Charges on Amended Transactions",
      "description": "\nThere are certain circumstances that require a sales transaction to be amended by the merchant. When a [Capture](#operation/capture) or [Sale/Purchase](#operation/sale) request is submitted, Shift4 Payments' Gateway searches the current batch for the invoice number specified. If the specified invoice is not found, a new transaction with the specified invoice number is created. For Food and Beverage (F&B) merchants, this may create potential double charge scenarios when a transaction has been marked as settled or captured, and a tip adjustment is made for the transaction after batch closing.\n\nFor example, an F&B merchant may send an Authorization for a total of $10 on Invoice 123, then a Capture half an hour later for $15 (including the tip) on Invoice 123.  Five hours later, the batch containing Invoice 123 is closed.  Afterward, an employee realizes that the tip was entered incorrectly, so they send a Capture for $13 on Invoice 123 intending to correct it.  However, since the batch containing the original invoice has already been closed, a new invoice is created and the customer is charged both the original $15 and the $13 from the second invoice, for a total of $28.\n\nTo avoid this, the INVMUSTEXIST API Option can be used when attempting to amend a transaction.  This option prevents a double charge from occurring by triggering an error when the original invoice is not found, instead of automatically creating a new invoice. Your interface should include this API Option for only F&B transactions using [Capture](#operation/capture) or [Sale/Purchase](#operation/sale).\n"
    },
    {
      "name": "Offline Processing",
      "description": "\nThe RESTful API is designed to allow most merchants to connect directly to the data centers of Shift4 Payments.  However, depending on the devices or flows a merchant plans to use, an interface may need to send requests to a locally installed UTG in order to control the devices. Using a local UTG has another advantage -- the UTG software has a few capabilities that make it simple for your interface to support offline transaction processing when a merchant’s internet connection goes down.  <b>The following section applies only to those who are using locally installed UTGs.</b>\n\n\nOffline mode mimics online transaction processing by locally tokenizing CHD and returning an ‘R’ (referral) response when a card is swiped, tapped, or manually entered. While offline, the merchant can use their backup voice referral procedures to obtain a referral code for all of the transactions that they process (since a [Get Merchant Information](#operation/getmerchant) request won’t work offline). For added security, the UTG will hold the tokenized CHD in an encrypted file until connectivity is reestablished. \n\nShift4 Payments’ Secure Offline Stand-In® (SOS) feature provides advanced offline processing by allowing a merchant to set a threshold (a maximum dollar value) below which they are comfortable issuing automatic “stand-in” authorizations without requesting voice authorizations. All transactions above this amount will prompt for voice authorization.\n\n\n##### <b>WARNING! Not all transactions processed using SOS may be approved once the UTG comes back online. Also, transactions processed using SOS will not qualify as EMV transactions in a card-present environment. However, the benefits of being able to accept transactions while offline may be worth the risk for some merchant environments.</b>\n\n\nAn interface can determine that the UTG was offline for a transaction by checking the <samp>transaction.authSource</samp> field in the response.  A value of \"O\" indicates an offline transaction, while a value of \"E\" indicates an online transaction.  Once the merchant’s internet connectivity is restored, the UTG will transmit the transaction data and acquire authorizations (when required), and normal processing can continue.\n\n\nDuring the certification process, you may be asked to run a few tests to make sure that you can support offline processing. You can learn how to configure offline mode and SOS by following the steps in the \"UTG Offline Mode with Stand-in\" document located in the [Documentation Corner](https://myportal.shift4.com/index.cfm?action=support.doc). Your API analyst will tell you how to set your UTG Stand Alone to test in offline mode when you’re ready to do so.\n"
    },
    {
      "name": "Partial Approval",
      "description": "\nThe card brands require certain industries to support partial approval, or the ability to approve a transaction for less than the amount requested. Instead of a decline, the card issuer returns an approval for the available funds. The merchant will then request an additional form of payment for the remaining balance.\n\n\nWhile partial approval support is required in some industries, it is optional in others, such as e-commerce and lodging. This is based on the merchant category code (MCC), which is assigned by the merchant’s processor. Some merchants choose to support partial approval when it’s not required to prevent consumer dissatisfaction and potential lost revenue.\n\n\nTo enable merchants to accept partial approval, your interface must include the ALLOWPARTIALAUTH API Option in authorization, sale, and capture requests. When doing so, your interface will need to interrogate the amount in the <samp>amount.total</samp> field in the transaction response (comparing it to the amount requested) to determine if a transaction is partially approved. Your interface must be able to capture the remaining balance with a new invoice number and as a new transaction.\n\n\n### Use Case 7: Partial Approval\n\n##### Actors: Interface, Clerk, Consumer\n\n##### Preconditions: A merchant supports partial approval.\n\n##### Main Flow: This flow illustrates a partial approval response, resulting in a second transaction using a separate payment card.\n\n1. A [Sale/Purchase](#operation/sale) request is sent for the full transaction amount. The request must include the API Option ALLOWPARTIALAUTH.\n\n2. Response Code ‘P’ is received with no error codes, and both merchant and consumer receipts are generated. The amount returned in the <samp>amount.total</samp> field is less than the requested transaction amount.\n\n3. The clerk informs the consumer that the transaction was partially approved and requests another form of payment for the remaining amount.\n\n4. The consumer provides another payment card.\n\n5. A [Sale/Purchase](#operation/sale) request is sent for the remaining transaction amount using a new invoice number. The request must include the API Options ALLOWPARTIALAUTH.\n\n6. Response Code ‘A’ is received with no error codes, and the <samp>amount.total</samp> field is equal to the remaining transaction amount.\n\n7. Receipts are generated.\n\n\n##### Alternate Flow 1: This flow illustrates a partial approval resulting in a second transaction using cash.\n\n4. Starting at step 4 of Main Flow: The consumer provides cash.\n\n5. The clerk follows the merchant’s procedures for processing cash transactions.\n\n6. Both merchant and consumer receipts are generated.\n\n\n##### Exception Flow 1: This flow illustrates a partial approval resulting in a void.\n\n4. Starting at step 4 of Main Flow: The consumer cannot provide another form of payment.\n\n5. Follow steps in Use Case 13: Voiding an Invoice.\n\n\n##### Exception Flow 2: This flow illustrates a partial approval when services that have already been rendered and another form of payment cannot be obtained.\n\n4. Starting at step 4 of Main Flow: The clerk has captured a partial payment for services, but the consumer cannot provide another form of payment.\n\n5. The clerk follows the merchant’s procedures for notifying the auditor of the loss.\n\n\n##### Post Conditions: An approved transaction awaits settlement at the end of the day.    \n"
    },
    {
      "name": "Split-Tender Transactions",
      "description": "\nSplit-tender transactions occur when a payment is split between multiple tenders at the request of the consumer(s). For example, after a group of three friends eat dinner together, they may prefer to split the bill. Split tender allows merchants to accommodate these requests by processing multiple transactions to make up the full amount of the bill.\n\n\nTo process a split-tender transaction, each payment should be treated as an individual transaction request with a unique invoice number.\n"
    },
    {
      "name": "Capturing Sales",
      "description": "\nThere are two common flows used to capture sales: “Authorization and Capture” or “Straight Capture.” The capture method used depends on the merchant’s business model and/or your interface’s design.\n\n\n### Authorization and Capture\n\nAn Authorization and Capture flow is used when the final amount of the transaction is unknown at the time of authorization or when a merchant needs to guarantee funds before completing a transaction. Below are some common examples of Authorization and Capture scenarios:\n\n- A guest checks in to a hotel and the final amount of the bill is unknown because the length of stay may change and incidental charges may occur. When the guest checks out, the sale is captured for the final amount.\n\n- A consumer makes an e-commerce purchase for an item that has yet to be shipped. Due to industry regulations, the merchant will authorize the transaction amount to guarantee the funds for the purchase and then capture the sale when it’s prepared for shipment.\n\n- A consumer makes a purchase at a food and beverage establishment and the tip is unknown, so the merchant will authorize the check before requesting a tip and capturing the sale.\n\n\nThere are two basic steps to an Authorization and Capture flow prior to settlement:\n\n- An [Authorization](#operation/authorization) request is sent to Shift4 Payments' Gateway to request a hold be placed on the cardholder’s funds.\n\n- When appropriate, a [Capture](#operation/capture) request captures the transaction. This can happen one of two ways: Trickle Flow or Batch Flow:\n\n  - In a Trickle Flow, each sale is captured by the interface on an individual basis after authorization, such as when an item is shipped, a rental car is returned, or a hotel guest checks out.\n\n  - In a Batch Flow, the sales are captured in groups. This is usually done at the end of the business day or at shift changes. This is sometimes performed by a centralized auditing account or corporate location instead of the interface.\n\n\n##### Note: Not every card type supports an Authorization and Capture flow. For example, debit authorizations are not supported for an Authorization and Capture flow because the funds are immediately captured.\n\n\n### Straight Capture\n\nA Straight Capture flow is used when a merchant knows the final amount of the sale at the time of the request. Below are some common examples of Straight Capture scenarios:\n\n- A consumer makes a purchase at a retail location and leaves the store with their merchandise (e.g., a shoe store).\n\n- A consumer makes an e-commerce purchase, such as a software download, that is immediately fulfilled.\n\n- A consumer makes a purchase at a food and beverage establishment where a tip is known in advance, the PIN pad will prompt for a tip, or no tip is expected (e.g., fast food).\n\n\nIn a Straight Capture flow, a [Sale/Purchase](#operation/sale) immediately captures the transaction and gets approval for it. At the time of approval, the transaction is ready for settlement.\n\n### Settlement\n\nSettlement is the last step to complete before a sale is finalized with the banks. When a merchant’s batch is closed, all of the captured transactions completed during the specified date range are sent to the processor. This triggers the movement of funds from the cardholders’ banks to the merchant’s bank account as well as the calculation of processing fees. There are three ways in which a batch can be closed.\n\n#### Lighthouse Transaction Manager\n\nA merchant's auditor can log in to [Lighthouse Transaction Manager](https://ltm.shift4test.com/) and view the transactions awaiting settlement.  The auditor chooses a date range and then can perform any review process the merchant has requested.  Once satisfied with the transactions' status, the auditor can close the batch.\n\n#### Automatic batch close by Shift4 Payments\n\nA merchant can notify Shift4 Payments staff which days/times they wish their batches to close automatically.  Shift4's systems will close the batches at the specified times for that merchant.\n\n#### Programmatic batch close by an interface\n\nAn interface can send the [Submit Batch](#operation/batchessubmit) request to initiate a batch close.\n\n### Use Cases for Capturing Sales\n\nThe following use cases demonstrate capturing sales. For incremental authorizations, please see the Incremental Authorizations section under [Understanding Invoices](#tag/Understanding-Invoices) in this document.\n\n\n##### Note: The use cases provided below are examples and do not replace the flows outlined in your Shift4 Payments Integration Plan.\n\n\n##### Note: By including [API Options](#tag/API-Options) in a request, many of the flows illustrated below will be altered; for example, the ability to manually enter a card can be forced or restricted.\n\n\n##### <b>WARNING! To improve card data security, Shift4 Payments strongly recommends that all merchants use a P2PE device for all card-present transactions.</b>\n\n\n### Use Case 8: Authorization\n\n##### Actors: Consumer, Merchant\n\n##### Preconditions: A merchant is ready to send an [Authorization](#operation/authorization) request for a transaction that will later be captured as a [Capture](#operation/capture) request.\n\n##### Main Flow: This flow illustrates an approval response.\n\n1. The consumer’s card is captured or a previously stored card token is retrieved.\n\n2. An [Authorization](#operation/authorization) is sent.\n\n3. The request is sent to the processor.\n\n4. A response indicating approval is returned.\n\n\n##### Alternate Flow 1: This flow illustrates a decline response. (Main Flow; Step 4.)\n\nNo further action is required.  Shift4 Payments automatically voids transactions that receive a 'D' response.\n\n\n##### Alternate Flow 2: This flow illustrates a referral response. (Main Flow; Step 4.)\n\nFollow the steps in Use Case 6: Handling Voice Referrals.\n\n\n##### Post Conditions: An approved authorization awaits settlement at the end of the day.\n\n\n### Use Case 9: Authorization with a UTG-Controlled PIN Pad\n\n##### Actors: Consumer, Merchant\n\n##### Preconditions: A merchant is ready to process an [Authorization](#operation/authorization) request for a payment using a UTG-controlled PIN pad. The transaction will later be captured as a [Capture](#operation/capture) request.\n\n##### Main Flow: This flow illustrates an approval response.\n\n1. An [Authorization](#operation/authorization) request is sent.\n\n2. The PIN pad prompts the consumer to insert, swipe, tap, or key the card and walks the consumer through the steps to complete the transaction.\n\n3. The request is sent to the processor.\n\n4. A response indicating approval is returned.\n\n\n##### Alternate Flow 1: This flow illustrates a decline response. (Main Flow; Step 4.)\n\nNo further action is required.  Shift4 Payments automatically voids transactions that receive a 'D' response.\n\n##### Alternate Flow 2: This flow illustrates a referral response. (Main Flow; Step 4.)\n\nFollow the steps in Use Case 6: Handling Voice Referrals.\n\n\n##### Post Conditions: An approved authorization awaits settlement at the end of the day.    \n\n\n### Use Case 10: Capturing a Previous Authorization\n\n##### Actors: Consumer, Merchant\n\n##### Preconditions: A merchant is ready to capture a sale for a previously authorized amount.\n\n##### Main Flow: This flow illustrates an approval response.\n\n1. A [Capture](#operation/capture) is sent with the invoice number for the previously authorized amount. The previously stored card token is specified in the <samp>card.token.value</samp> field.\n\n2. The invoice is updated in Shift4 Payments' Gateway.\n\n3. A response indicating an approval is returned.\n\n##### Post Conditions: An approved transaction awaits settlement.\n\n### Use Case 11: Straight Capture\n\n##### Actors: Consumer, Merchant\n\n##### Preconditions: A merchant is ready to process a [Sale/Purchase](#operation/sale) request for a retail purchase, straight F&B purchase, or an e-commerce transaction that will be immediately fulfilled.\n\n##### Main Flow: This flow illustrates an approval response.\n\n1. The consumer’s card is swiped or keyed, or a previously stored card token is retrieved.\n\n2. A [Sale/Purchase](#operation/sale) request is sent.\n\n3. A response indicating approval is returned.\n\n\n##### Alternate Flow 1: This flow illustrates a decline response. (Main Flow; Step 3.)\n\nNo further action is required.  Shift4 Payments automatically voids transactions that receive a 'D' response.\n\n\n##### Alternate Flow 2: This flow illustrates a referral response. (Main Flow; Step 3.)\n\nFollow the steps in Use Case 6: Handling Voice Referrals.\n\n\n##### Post Conditions: An approved transaction awaits settlement.    \n\n\n### Use Case 12: Straight Capture with a UTG-Controlled PIN Pad\n\n##### Actors: Consumer, Merchant\n\n##### Preconditions: A merchant is ready to capture a straight sale.\n\n##### Main Flow: This flow illustrates an approval response.\n\n1. A [Sale/Purchase](#operation/sale) is sent.\n\n2. The PIN pad prompts the consumer to insert, swipe, tap, or key the card and walks the consumer through the steps to complete the transaction.\n\n3. The request is sent to the processor.\n\n4. A response indicating an approval is returned.\n\n\n##### Alternate Flow 1: This flow illustrates a decline response. (Main Flow; Step 4.)\n\nNo further action is required.  Shift4 Payments automatically voids transactions that receive a 'D' response.\n\n\n##### Alternate Flow 2: This flow illustrates a referral response. (Main Flow; Step 4.)\n\nFollow the steps in Use Case 6: Handling Voice Referrals.\n\n\n##### Post Conditions: An approved transaction awaits settlement.\n\n\n### Use Case 13: Voiding an Invoice\n\n##### Actors: Interface, Shift4 Payments\n\n##### Preconditions: A merchant has an invoice that needs to be voided.\n\n##### Main Flow: This flow illustrates voiding an entire invoice.\n\n1. The interface sends a [Void](#operation/void) request.\n\n2. The entire invoice is voided in Shift4 Payments' Gateway.\n\n3. A response is received with an HTTP status code equal to ‘200’.\n\n\n##### Exception Flow: This flow illustrates an error response. (Main Flow; Step 3.)\n\nFollow the [Transaction Flow Diagram](#tag/Transaction-Flow-Diagram) to determine the proper resolution.\n\n\n##### Post Conditions: The requested transaction has been successfully voided.\n"
    },
    {
      "name": "Restaurant Authorization and Settlement Flow",
      "description": "\nFor partners servicing the restaurant industry, Shift4's recommended flow for the following stages of transaction processing should be as listed below:\n\n1. Initial and Incremental Authorizations while the guest is in house (for example, pre authorization, initial authorization, and running tabs). use the  [Authorization](#operation/authorization) endpoint.\n  \n  - If the authorization results in a decline response, you will need to obtain a different\n    form of payment, or you can finalize the transaction for the amount for which you have\n    obtained authorization using the [Manual Sale](#operation/manualsale) endpoint.\n\n\n2. Check Finalization with/without tips\n\n  - For merchants who do not accept tips, or who do not wish to authorize tips\n    that exceed typical card brand allowances of 20% over the check total: Use\n    the [Manual Sale](#operation/manualsale) endpoint.\n\n    <b>NOTE</b>: Finalizing a check with a tip amount that exceeds the tolerance\n    amount allowed by the card brands, without obtaining authorization, could put\n    merchants at risk of customer initiated chargebacks, resulting in loss of funding\n    for the tip amount. In practice, this is rare.\n  \n  - For merchants that wish to authorize for tips that exceed the typical 20% tolerances\n    allowed by the card brands, use the [Capture](#operation/capture) endpoint.\n\n    - If the Capture results in a declines response, you have two options:\n      - Send a [Capture](#operation/capture) request for the amount for which you have\n        authorization. The merchant will not receive funding for the tip.\n\n      - Send a [Capture](#operation/capture) request for the amount you have authorized\n        plus the tolerance amount allowed by the card brands - currently 20%.\n"
    },
    {
      "name": "Processing Refunds",
      "description": "\nThere are several options for processing refunds, and there are several factors to consider when choosing how to process refunds, including:\n\n- The fees that the merchant will incur\n\n- The consumer’s available funds\n\n- The card type used for the sale\n\nUse the information below to determine which option for processing refunds best fits your current business model.\n\n\n### Refunds for Debit and Gift Cards\n\nSales for debit and gift cards are processed in real time, so when a purchase is completed, the amount of the transaction is immediately deducted from the consumer’s account. Because of this, issuers do not always support issuing refunds to these card types. The best practice is to refund these transactions in cash, as a gift card, or store credit.\n"
    },
    {
      "name": "Transaction Flow Diagram",
      "description": "\nFor [Authorization](#operation/authorization) and [Sale/Purchase](#operation/sale) transactions, the diagram below outlines the transaction flow. For other types of requests, the HTTP response code and the <samp>error</samp> object can be checked to see if the transaction was processed successfully.\n\n<img src=\"/downloads/documentation/api/resources/trans_flow.png\" />\n"
    },
    {
      "name": "Using the Notes Field",
      "description": "\nShift4 Payments has a <samp>notes</samp> field that’s displayed within an individual transaction record in Shift4 Payments' Gateway. This is a free-form field that supports the use of HTML tags. The <samp>notes</samp> field is primarily used for the merchant’s reference and is not passed on to the processor. Escaped quotation marks should not be used in the <samp>notes</samp> field.\n\n\nThe merchant’s auditor can use the <samp>notes</samp> field to review data about a transaction, such as to determine the cause of a problem transaction or for chargeback defense. Depending on your interface design and/or the merchant’s desired use of the <samp>notes</samp> field, it can contain data such as the workstation used, items purchased, clerk notes, order number, or receipt details.\n\n\nIn a payment flow where multiple requests are sent, the <samp>notes</samp> field will be overwritten with the value sent in the last request.\n"
    },
    {
      "name": "Level 2 Purchasing Card Data",
      "description": "\nLevel 2 purchasing card data provides enhanced transaction information as compared to the basic (i.e., level 1) data. Level 2 data includes the following fields for a given transaction: <samp>amount.tax</samp>, <samp>transaction.purchaseCard.customerReference</samp>, <samp>transaction.purchaseCard.destinationPostalCode</samp>, and <samp>transaction.purchaseCard.productDescriptors</samp>.\n\n\nBy providing level 2 purchasing card data to the processor, merchants can improve their discount and interchange rates. Because this information is available to auditors in [Lighthouse Transaction Manager](https://ltm.shift4test.com/), it can also be very useful for chargeback defense.\n\n\nHistorically, the payment card industry has used enhanced transaction data specifically for corporate and government purchasing cards. However, it is now common for card issuers to provide enhanced transaction data for all payment cards to help prevent cardholders from requesting unnecessary chargebacks.\n\n##### <b>Important: To help merchants improve their chargeback defense and achieve the best discount and interchange rates, Shift4 Payments recommends level 2 purchasing card data for all certifications. This data is sent in the <samp>amount</samp> and <samp>transaction.purchaseCard</samp> objects during the request.</b>\n"
    },
    {
      "name": "Card On File Transactions",
      "description": "\nVisa and Mastercard require additional information to be sent when a card is being stored on file, or when a card on file is being used for a transaction. Merchants who send the required information will experience higher authorization approval rates, and card issuers will have greater visibility into the risk level of transactions.\n\nThe information can be transmitted via the transaction.cardOnFile object defined in the following endpoints:\n\n\n  - Authorization\n\n  - Capture\n\n  - Sale\n\nFor approved transactions, Shift4 Payments will include a cardOnFile.transactionId in the response. That transactionId should be stored with the card.token, and used in all future Authorization or Sale requests for that card when used as a card on file. Additionally, the cardOnFile.indicator, cardOnFile.usageIndicator, and cardOnFile.scheduledIndicator fields should be sent with the appropriate values per the definitions in the cardOnFile object.\n\nNote: For best practices, the first cardOnFile.transactionId returned for a given card should be stored and used for all future card on file transactions for that card.\n"
    },
    {
      "name": "Citcon, WeChat Pay, Alipay",
      "description": "\nShift4 Payments supports WeChat Pay and Alipay through Citcon.  For an overview, check the \"WeChat Pay and Alipay\" section of the [Documentation Corner](https://myportal.shift4.com/index.cfm?action=support.doc).\n"
    },
    {
      "name": "Using the Surcharge Field",
      "description": "\nSometimes merchants charge an extra fee when a consumer wants to use a credit or debit card to make a purchase. This helps merchants recoup some of the costs for processing credit and debit card transactions.\n\n\nWhen a merchant adds a surcharge to a transaction, the processors require that they use a surcharge field to identify the surcharge amount to the processors. This helps the merchant avoid experiencing unnecessary chargebacks from consumers who may not remember that an extra fee was included in their final transaction amount.\n\n\nTo use the surcharge field, your interface should populate the <samp>amount.surcharge</samp> field and increase the value in the <samp>amount.total</samp> field accordingly. For example, if a transaction at an antique store is $100 and there is a $5 surcharge for the transaction, the POS application will send 5 in the <samp>amount.surcharge</samp> field and 105 in the <samp>amount.total</samp> field.\n"
    },
    {
      "name": "Printing Receipts",
      "description": "\nShift4 Payments provides the data necessary for your interface to build receipts for both EMV and non-EMV transactions.  Shift4 Payments' receipt data is based on the processors’ specifications for both format and content. \n\nFederal law requires all businesses to truncate credit card information on receipts. Make sure your receipt does not display the card’s expiration date and only displays the last four digits of the card number. See the example below:\n\nACCTXXXXXXXXXXXX1234\n\n\nFor more information, see: https://www.ftc.gov/tips-advice/business-center/guidance/slip-showing-federal-law-requires-all-businesses-truncate\n\n\n### Presenting Receipts\n\nYour interface will be required to properly handle generating receipts for both the consumer and merchant (or in card-not-present transactions, for only the consumer). The presentation method (e.g., digital or on paper) is based on the processor’s requirements, merchant’s policies, and/or consumer’s preference. Detailed information about the requirements for consumer receipts and merchant receipts is provided below.\n\n\n\n#### Consumer Receipts\n\nHow and when in the payment flow a receipt is presented to the consumer varies based on the merchant’s industry and processing flow. Below are some examples of specific requirements:\n\n- Lodging merchants are required to present receipts to consumers at two points: when the billing terms are printed on the folio at check in and when the final invoice is printed on the folio at check out.\n\n- For card-not-present transactions, such as e-commerce and MO/TO (mail order/telephone order), an invoice that contains the customer-receipt text should be provided to the consumer. Depending on the merchant’s operational practices, this invoice may be provided via email, a statement on an online portal, or printed and shipped with purchased goods.\n\n- Refund receipts should never include a tip line.\n\n\n#### Merchant Receipts\n\nYour interface must provide copies of receipts for the merchant’s record and use in chargeback defense. Merchant-receipt copies can be generated and stored electronically when a signature is digitally captured. If a signature is not digitally captured for a card-present transaction, a paper record of the consumer’s signature is required.\n\n\n\n### EMV Receipts\n\nFederal law requires all businesses to truncate credit card information on receipts. Make sure your receipt does not display the card’s expiration date and only displays the last four digits of the card number. See the example below:\n\nACCTXXXXXXXXXXXX1234\n\n\nFor more information, see: https://www.ftc.gov/tips-advice/business-center/guidance/slip-showing-federal-law-requires-all-businesses-truncate\n\n\nThe processors require merchants processing EMV payments to print receipts.  The scenarios in which a receipt must be printed varies depending on the country:\n\nCountry | Scenarios requiring receipts\n--------|--------------------------------------------\nUS      | approvals (sale or authorization), declines      \nCanada  | approvals (sale or authorization), declines, referrals, errors, refunds, and voids of previously approved transactions.\n\nThis API provides receipt data in one of two formats.\n\n#### Formatted Receipts\n\nWhen a formatted receipt is requested by the interface, Shift4 Payments will not return the raw tags in the receipt array.  Instead, the returned receipt array will have just two items, merchantText and customerText, each of which will contain pre-formatted receipt text which is compliant with the processor's requirements.  Using formatted receipts can greatly speed up development time at the cost of flexibility.  In order to receive a formatted receipt in the response, your interface will need to send the <samp>receiptColumns</samp> field.\n\nBelow is a sample of a formatted receipt for a non-EMV transaction.\n\n\n                CREDIT CARD\n                   SALE\n                  \n    06/21/2018                    08:29:04\n    CARD TYPE                         VISA\n    ENTRY METHOD                     KEYED\n    CARD #                XXXXXXXXXXXX2257\n    INVOICE                     6263175163\n    CLERK                            62626\n    APPROVED                        OK959Z\n\n\n    AMOUNT                      USD $12.35\n\n    I AGREE TO PAY ABOVE TOTAL AMOUNT \n    ACCORDING TO CARD ISSUER AGREEMENT OR \n    MERCHANT AGREEMENT IF CREDIT VOUCHER\n\n    Jane Doe\n\n               CARDHOLDER COPY\n\n\n\n#### Raw Tags\n\nWhen a formatted receipt is not requested by the interface, the receipt elements are returned as an array of Receipt objects. An interface that builds receipts based on this raw information has great flexibility in the receipt format, but choosing this route may significantly increase development time.  Each Receipt object consists of up to three properties:\n\nProperty   | Description\n-----------|----------------\nkey        | The identifier the interface vendor can use to programatically determine where to print a specific value.\nprintName  | The label that relates to the <samp>printValue</samp> field. When present in the response, this must be printed to the left of the <samp>printValue</samp>.\nprintValue | The value that relates to the <samp>printName</samp> field. This must be printed to the right of the <samp>printName</samp>.\n\n\nWhen printing EMV receipts, the following elements must be grouped together and printed in the following order:\n\n1. ApplicationIdentifier\n\n2. TerminalVerificationResults\n\n3. IssuerApplicationData\n\n4. TransactionStatusIndicator\n\n5. AuthorizationResponseCode\n\nThe exact list of tags that will be returned in production will vary.  Generally speaking, all other tags returned in the receipt array should be printed on the receipt.  However, each processor has its own set of rules, so ISVs building their own receipts are advised to check the requirements for each of the processor(s) they wish to be compliant with.\n\nKey                           | Print Name Example | Print Value Example | Notes\n------------------------------|--------------------|---------------------|-----------------------\nTransactionType               |                    | PURCHASE            |\nTransactionResponse           | Response           | APPROVED            |\nCardholderVerificationMethod  | CVM                | PIN VERIFIED        |\nApplicationIdentifier         | AID                | A0000000031010      | \nTerminalVerificationResults   | TVR                | 0000008000          |\nIssuerApplicationData         | IAD                | 06010A03A40002      |\nTransactionStatusIndicator    | TSI                | E800                |\nAuthorizationResponseCode     | ARC                | 00                  | \nTransactionCurrencyCode       |                    | USD$                | Must be printed on the total amount line.\nApplicationLabel              |                    | CREDITO DE VISA     | \nMaskedPAN                     |                    | XXXXXXXXXXXX1119    | \nCardEntryMode                 | ENTRY METHOD       | CHIP                |\nPANSequenceNumber             | 5F34               | 01                  |\nApplicationInterchangeProfile | 82                 | 5400                | \nTransactionDate               | 9A                 | 180702              |\nTransactionTime               | 9C                 | 115528              |\nAmountAuthorized              | 9F02               | 000000040000        | \nOtherAmount                   | 9F03               | 000000002000        |\nApplicationUsageControl       | 9F07               | 1234                |\nIssuerActionCodeDefault       | 9F0D               | 1234567890          |\nIssuerActionCodeDenial        | 9F0E               | 1234567890          |\nIssuerActionCodeOnline        | 9F0F               | 1234567890          |\nTerminalCountryCode           | 9F1A               | 0840                |\nApplicationCryptogram         | 9F26               | 75D0FE1CFCA55605    |\nCryptogramInformationData     | 9F27               | 00                  |\nCVMResults                    | 9F34               | 1E0300              |\nApplicationTransactionData    | 9F36               | 0002                |\nUnpredictableNumber           | 9F37               | B8FD22D7            | \nTerminalActionCodeDefault     | TAC Default        | DC4000A800          | Shift4 will not return this, but it needs to be included on the receipt.\nTerminalActionCodeDenial      | TAC Denial         | 0010000000          | Shift4 will not return this, but it needs to be included on the receipt.\nTerminalActionCodeOnline      | TAC Online         | DC4004F800          | Shift4 will not return this, but it needs to be included on the receipt.\n\nBelow is a sample of a receipt for an approved EMV transaction that might be built from the raw tags.\n\n             Sample Store\n            123 Great Road\n          Las Vegas, NV 89144\n             702-555-5555\n    \n    06/21/2018             09:21:14\n    MID: XXXXXXXXXXXX9137\n    TID: XXX2946\n    \n                  Purchase\n           \n    Mastercard Credit    ************6405\n    Entry Mode:                      CHIP\n    CVM:                     PIN VERIFIED\n    \n    Invoice                        192029\n    Clerk                              16\n    \n    Total Amount             USD$   12.95\n    \n    Response:                    APPROVED\n    Auth Code:                     217983\n    \n    AID:                   A0000000041010\n    TVR:                       0820000000\n    IAD:                     092B302A9104\n    TSI:                             C800\n    ARC:                               00\n    \n              CUSTOMER COPY\n\n\n#### Supporting Built-In Receipt Printing Capability on Devices\n\nIf you support devices with built-in receipt printers, you can print receipts by sending a [Print Receipt](#/operation/devicesprint) request along with the text to be printed in the <samp>receiptText</samp> field following a transaction that requires a printed receipt. (For information regarding which transactions require printed receipts, please see the [Printing Receipts](#tag/Printing-Receipts) section of this document.) This request also includes the ability to print scannable bar codes on receipts.\n\n\nThe receipt text will automatically wrap when using a device's built-in receipt printer. However, the following tags may be included in the <samp>ReceiptText</samp> field to modify how the receipt text will be displayed:\n\n\nStart Tag     | End Tag       | Description\n--------------|---------------|------------\n<$Cut>        |               | Advances the receipt a few lines so that it can be torn off.\n<$Bold>       | <Bold$>       | Bolds the text between two tabs.\n<$Reverse>    | <Reverse$>    | Prints white text on a black background.\n<$DoubleChar> | <DoubleChar$> | Prints double-wide characters.\n<$BigChar>    | <BigChar$>    | Prints text in a very large font.\n\nAs an example of using these tags to change how the text may be displayed, if you want to print “Groceries” in bold, it would be sent as:\n\n  \"<$Bold>Groceries<Bold$>\"\n\n\n##### Printing Bar Codes\n\nTo print scannable bar codes on a receipt, send the desired bar code tags from the list below with the receipt text in the <samp>ReceiptText</samp> field.\n\nStart                 | Tag End    | Tag Description\n----------------------|------------|----------------\n<$BarCode>            | <BarCode$> | Prints a bar code from the data between thetags.\n<$BarCode39>          |            | Switches to Code 39 format for bar code printing (default).\n<$BarCode39>          |            | Switches to Code 39 format for bar code printing (default).\n<$BarCode128>         |            | Switches to Code 128 format for bar code printing.\n<$BarCode25>          |            | Switches to Code 25 format for bar code printing.\n<$BarCodeEAN8>        |            | Switches to EAN-8 format (7 digits) for bar code printing.\n<$BarCodeEAN13>       |            | Switches to EAN-13 format (12 digits) for bar code printing.\n<$BarCodeHeightNNN>   |            | Configures the height of the bar code in pixels where NNN is the 3-digit value for the pixel width.\n<$BarCodeWidthNNN>    |            | Configures the width of the bar code in pixels where NNN is the 3-digit value for the pixel width.\n<$BarCodeHorizontal>  |            | Switches the bar code to a horizontal layout.\n<$BarCodeVertical>    |            | Switches the bar code to a vertical layout.\n<$BarCodeAlignCenter> |            | Prints the bar code in the middle of the receipt.\n<$BarCodeAlignLeft>   |            | Prints the bar code on the left side of the receipt.\n<$BarCodeAlignRight>  |            | Prints the bar code on the right side of the receipt.\n\n\nThese tags can be chained. For example, if you want to left align a vertical bar code of “123456” using format 39, then you would send the following: \n\n  \"<$BarCode39><$BarCodeVertical><$BarCodeAlignLeft><$BarCode>123456<BarCode$>\"\n\n\nNote: Some devices apply the bar code settings that were last used. Therefore, Shift4 Payments recommends sending the format, including the height, width, and layout configuration (i.e., horizontal or vertical), and alignment for each bar code in the <samp>ReceiptText</samp> field to ensure that it is printed as desired.\n"
    }
  ]
}