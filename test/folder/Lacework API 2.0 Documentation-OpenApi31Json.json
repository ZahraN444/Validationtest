{
  "openapi": "3.1.0",
  "info": {
    "title": "Lacework API 2.0 Documentation Testinggggggggggggggggggggggggggggggg",
    "description": "The Lacework API documentation is available directly from your Lacework Application at the following URI:\n`https://YourLacework.lacework.net/api/v2/docs`, where `YourLacework` is your Lacework Application.\n\nNo login to the Lacework Console is required. However, there is a link to the Lacework API 2.0 documentation from the\nLacework Console. From the **Help** drop-down, select **API 2.0 Documentation**.\n\nYou can run the Lacework APIs using your favorite REST API tools such as curl or Postman. Example curl commands are listed in the API 2.0 documentation provided by the **Help** > **API** 2.0 Documentation menu option in the Lacework Console.\n\nYou can also run the Lacework API from the Lacework CLI command. For more information, see the \n[CLI Documentation](https://github.com/lacework/go-sdk/wiki/CLI-Documentation).",
    "contact": {},
    "version": "1.0"
  },
  "jsonSchemaDialect": "https://json-schema.org/draft/2020-12/schema",
  "servers": [
    {
      "url": "https://www.example.com/api/v2",
      "variables": {}
    }
  ],
  "paths": {
    "/access/tokens": {
      "post": {
        "tags": [
          "ACCESS_TOKENS"
        ],
        "summary": "GenerateAccessTokens",
        "description": "Get access tokens for the API requests aby invoking the following endpoint:\n\n  > `POST https://YourLacework.lacework.net/api/v2/access/tokens`\n\n  After creating a secret key, administrators can generate Temporary API access (bearer) tokens that are used by clients  and client applications to access the Lacework API. Temporary API access (bearer) tokens are created by invoking the `POST https://YourLacework.lacework.net/api/v2/access/tokens` endpoint.",
        "operationId": "GenerateAccessTokens",
        "parameters": [
          {
            "name": "X-LW-UAKS",
            "in": "header",
            "description": "YourSecretKey",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "X-LW-UAKS96"
              ]
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "application/json"
              ]
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateAccessTokensRequest"
              },
              "example": {
                "keyId": "keyId96",
                "expiryTime": 221
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "A temporary access (bearer) token is returned.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response_201"
                },
                "example": {
                  "expiresAt": "expiresAt96",
                  "token": "token86"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/schemas/{type}/{subtype}": {
      "get": {
        "tags": [
          "SCHEMAS"
        ],
        "summary": "SchemaDetailsofSubtype",
        "description": "Get details about a Lacework schema by specifying a schema type and subtype  when invoking the endpoint.\n\n  > `GET https://YourLacework.lacework.net/api/v2/schemas/{type}/{subtype}` \n\n  Here is an example invocation: \n\n  > `GET https://YourLacework.lacework.net/api/v2/schemas/AlertChannels/SlackChannel`",
        "operationId": "SchemaDetailsofSubtype",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "the schema type",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "AlertChannels"
              ]
            }
          },
          {
            "name": "subtype",
            "in": "path",
            "description": "the subtype",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "SlackChannel"
              ]
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer AccessToken",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "Authorization96"
              ]
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "application/json",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/Content-Type"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "application/json"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No Error (see example: schema of /api/v2/AlertChannels/SlackChannel)",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Response_2001"
                  },
                  "description": "",
                  "examples": [
                    [
                      {
                        "required": [
                          "type",
                          "enabled",
                          "name",
                          "data"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "minLength": 1
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "SlackChannel"
                            ]
                          },
                          "enabled": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 1
                          },
                          "data": {
                            "properties": {
                              "slackUrl": {
                                "type": "string",
                                "pattern": "^https://hooks.slack.com([/][a-zA-Z0-9#-_]+)+$"
                              }
                            },
                            "required": [
                              "slackUrl"
                            ],
                            "additionalProperties": false,
                            "type": "object"
                          }
                        }
                      }
                    ]
                  ],
                  "contentMediaType": "application/json"
                },
                "example": [
                  {
                    "required": [
                      "type",
                      "enabled",
                      "name",
                      "data"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "minLength": 1
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "SlackChannel"
                        ]
                      },
                      "enabled": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 1
                      },
                      "data": {
                        "properties": {
                          "slackUrl": {
                            "type": "string",
                            "pattern": "^https://hooks.slack.com([/][a-zA-Z0-9#-_]+)+$"
                          }
                        },
                        "required": [
                          "slackUrl"
                        ],
                        "additionalProperties": false,
                        "type": "object"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "parameters": []
    },
    "/schemas/{type}": {
      "get": {
        "tags": [
          "SCHEMAS"
        ],
        "summary": "SchemaDetails",
        "description": "Get a list of available Lacework schema types by invoking the following endpoint:\n\n  > `GET https://YourLacework.lacework.net/api/v2/schemas` \n\n  Get details about a Lacework schema by invoking the following endpoint: \n\n  > `GET https://YourLacework.lacework.net/api/v2/schemas/{type}`\n\n  Here is an example invocation:\n\n  > `GET https://YourLacework.lacework.net/api/v2/schemas/AuditLogs`",
        "operationId": "SchemaDetails",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "The schema type, or empty for a list of all schema types",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "AuditLogs"
              ]
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer AccessToken",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "Authorization96"
              ]
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "application/json",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/Content-Type"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "application/json"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No Error (see example: schema of AuditLogs)",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Response_200"
                  },
                  "description": "",
                  "examples": [
                    [
                      {
                        "name": "accountName",
                        "type": "string"
                      },
                      {
                        "name": "createdTime",
                        "type": "integer"
                      },
                      {
                        "name": "eventDescription",
                        "type": "string"
                      },
                      {
                        "name": "eventName",
                        "type": "string"
                      },
                      {
                        "name": "userAction",
                        "type": "string"
                      },
                      {
                        "name": "userName",
                        "type": "string"
                      }
                    ]
                  ],
                  "contentMediaType": "application/json"
                },
                "example": [
                  {
                    "name": "accountName",
                    "type": "string"
                  },
                  {
                    "name": "createdTime",
                    "type": "integer"
                  },
                  {
                    "name": "eventDescription",
                    "type": "string"
                  },
                  {
                    "name": "eventName",
                    "type": "string"
                  },
                  {
                    "name": "userAction",
                    "type": "string"
                  },
                  {
                    "name": "userName",
                    "type": "string"
                  }
                ]
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "parameters": []
    },
    "/AgentAccessTokens/{id}": {
      "patch": {
        "tags": [
          "AgentAccessTokens"
        ],
        "summary": "UpdateAgentAccessToken",
        "description": "Optionally update the `tokenEnabled`, `tokenAlias`, or `description`  settings of the passed in agent access token.  Update these settings by invoking the following endpoint:\n\n  > `PATCH https://YourLacework.lacework.net/api/v2/AgentAccessTokens/{id}`\n\n  You can get the agent access token id by calling the  `GET /api/v2/AgentAccessTokens` endpoint.\n\n  Replace `{id}` with the long hexadecimal access token identifier returned in the `accessToken`  field of the `GET /api/v2/AgentAccessTokens` endpoint response.\n\n  Here is an example `body` payload:\n\n  > `{ \"tokenAlias\": \"Eng\", \"tokenEnabled\": \"1\", \"props\": {\"description\":\"Eng group\"} } }`\n\n",
        "operationId": "UpdateAgentAccessToken",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "AgentAccessTokens {id}",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "id96"
              ]
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer AccessToken",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "Authorization96"
              ]
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "application/json"
              ]
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAgentAccessTokenRequest"
              },
              "example": {
                "tokenEnabled": "tokenEnabled96"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "No Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response_2011"
                },
                "example": {
                  "data": {
                    "accessToken": "47d102752b57caa18b...",
                    "createdTime": "2020-12-16T16:43:37.915Z",
                    "props": "{\"CREATED_TIME\":1598530228648}",
                    "tokenAlias": "Ops Agent",
                    "tokenEnabled": "1",
                    "version": "0.1"
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "get": {
        "tags": [
          "AgentAccessTokens"
        ],
        "summary": "AgentAccessTokenDetails",
        "description": "Get details about an agent access token  by invoking the following endpoint:\n\n  > `GET https://YourLacework.lacework.net/api/v2/AgentAccessTokens/{id}`\n\n  You can get the `{id}` by invoking the `GET /api/v2/AgentAccessTokens` endpoint.  Replace `{id}` with the long hexadecimal access token identifier returned in the `accessToken`  field of the `GET /api/v2/AgentAccessTokens` endpoint response. ",
        "operationId": "AgentAccessTokenDetails",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Agent Access Token {id}",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "id96"
              ]
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer AccessToken",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "Authorization96"
              ]
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "application/json",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/Content-Type"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "application/json"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response_2011"
                },
                "example": {
                  "data": {
                    "accessToken": "47d102752b57caa18b...",
                    "createdTime": "2020-12-16T16:43:37.915Z",
                    "props": "{\"CREATED_TIME\":1598530228648}",
                    "tokenAlias": "Ops Agent",
                    "tokenEnabled": "1",
                    "version": "0.1"
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "parameters": []
    },
    "/AgentAccessTokens": {
      "post": {
        "tags": [
          "AgentAccessTokens"
        ],
        "summary": "CreateAgentAccessToken",
        "description": "Create a new agent access token that is used by an agent to connect and send data to your Lacework instance, by invoking the following endpoint:\n\n  > `POST https://YourLacework.lacework.net/api/v2/AgentAccessTokens`\n\n  Here is an example `body` payload:\n\n  > `{ \"tokenAlias\": \"qa\", \"props\": {\"description\":\"QA group\"} } }`\n\n  By default, if `tokenEnabled` is not set, the agent access token is enabled.",
        "operationId": "CreateAgentAccessToken",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer AccessToken",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "Authorization96"
              ]
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "application/json"
              ]
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAgentAccessTokenRequest"
              },
              "example": {
                "tokenEnabled": "tokenEnabled96",
                "tokenAlias": "tokenAlias86"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "No Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response_2011"
                },
                "example": {
                  "data": {
                    "accessToken": "47d102752b57caa18b...",
                    "createdTime": "2020-12-16T16:43:37.915Z",
                    "props": "{\"CREATED_TIME\":1598530228648}",
                    "tokenAlias": "Ops Agent",
                    "tokenEnabled": "1",
                    "version": "0.1"
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "get": {
        "tags": [
          "AgentAccessTokens"
        ],
        "summary": "ListAllAgentAccessTokens",
        "description": "Get a list of agent Access Tokens that are currently enabled in your Lacework instance, by invoking the following endpoint:\n\n  > `GET https://YourLacework.lacework.net/api/v2/AgentAccessTokens`",
        "operationId": "ListAllAgentAccessTokens",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer AccessToken",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "Authorization96"
              ]
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "application/json",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/Content-Type"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "application/json"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No Error (List of Agent Access Tokens)",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response_2002"
                },
                "example": {
                  "data": [
                    {
                      "accessToken": "47d102752b57caa18b...",
                      "createdTime": "2020-12-16T16:43:37.915Z",
                      "props": "{\"CREATED_TIME\":1598530228648}",
                      "tokenAlias": "Ops Agent",
                      "tokenEnabled": "1",
                      "version": "0.1"
                    },
                    {
                      "accessToken": "e2f32885791213cb41...",
                      "createdTime": "2020-12-10T18:14:05.754Z",
                      "props": "{\"CREATED_TIME\":1607624045577,\"DESCRIPTION\":\"testing agent\"}",
                      "tokenAlias": "Dev Agent",
                      "tokenEnabled": "1",
                      "version": "0.1"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "parameters": []
    },
    "/AgentAccessTokens/search": {
      "post": {
        "tags": [
          "AgentAccessTokens"
        ],
        "summary": "SearchAgentAccessTokens",
        "description": "Search all the enabled agent access tokens in your Lacework instance,  by invoking the following endpoint:\n\n  > `POST https://YourLacework.lacework.net/api/v2/AgentAccessTokens/search`\n\n  To limit the returned result, optionally specify one or more filters in the request `body`. For more information about using filters, see the [Simple & Advanced Search section](/api/v2/docs/#tag/OVERVIEW). \n\n  You can filter on the following fields:\n\n  * `accessToken`\n\n  * `createdTime`\n\n  * `tokenAlias`\n\n  * `tokenEnabled`\n\n  * `version`\n\n \n\n  Here is an example `body` payload:\n\n  > `{ \"filters\" : [ { \"expression\": \"eq\", \"field\": \"tokenAlias\", \"value\": \"Eng\" } ] } `\n\n",
        "operationId": "SearchAgentAccessTokens",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer AccessToken",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "Authorization96"
              ]
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "application/json"
              ]
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchAgentAccessTokensRequest"
              },
              "example": {
                "filters": [
                  {
                    "expression": "not_rlike",
                    "field": "field78",
                    "value": "value29",
                    "values": [
                      "values69"
                    ]
                  }
                ],
                "returns": [
                  "returns5"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "No Error (List of Agent Access Tokens)",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response_2002"
                },
                "example": {
                  "data": [
                    {
                      "accessToken": "47d102752b57caa18b...",
                      "createdTime": "2020-12-16T16:43:37.915Z",
                      "props": "{\"CREATED_TIME\":1598530228648}",
                      "tokenAlias": "Ops Agent",
                      "tokenEnabled": "1",
                      "version": "0.1"
                    },
                    {
                      "accessToken": "e2f32885791213cb41...",
                      "createdTime": "2020-12-10T18:14:05.754Z",
                      "props": "{\"CREATED_TIME\":1607624045577,\"DESCRIPTION\":\"testing agent\"}",
                      "tokenAlias": "Dev Agent",
                      "tokenEnabled": "1",
                      "version": "0.1"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "parameters": []
    },
    "/AlertChannels/search": {
      "post": {
        "tags": [
          "AlertChannels"
        ],
        "summary": "SearchAlertChannels",
        "description": "Search alert channels by invoking the following endpoint:\n\n  > `POST https://YourLacework.lacework.net/api/v2/AlertChannels/search`\n\n To limit the returned result, optionally specify one or more `filters` in the request `body`. For more information about using filters, see the [Simple & Advanced Search section](/api/v2/docs/#tag/OVERVIEW). \n\n  In the request body, optionally specify the list of fields to return in the response by specifying the list in the `returns` array, for example, `\"returns\":[ \"name\", \"type\", \"enabled\" ]`.",
        "operationId": "SearchAlertChannels",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer AccessToken",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "Authorization96"
              ]
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "application/json"
              ]
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchAgentAccessTokensRequest"
              },
              "example": {
                "filters": [
                  {
                    "expression": "not_rlike",
                    "field": "field78",
                    "value": "value29",
                    "values": [
                      "values69"
                    ]
                  }
                ],
                "returns": [
                  "returns5"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "No Error (List of Alert Channels)",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response_2006"
                },
                "example": {
                  "data": [
                    {
                      "name": "name96",
                      "type": "AwsS3",
                      "enabled": 0.788263630954671,
                      "data": {
                        "s3CrossAccountCredentials": {
                          "externalId": "externalId29",
                          "roleArn": "roleArn69",
                          "bucketArn": "bucketArn5"
                        }
                      },
                      "isOrg": 0,
                      "props": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "parameters": []
    },
    "/AlertChannels/{intgGuid}": {
      "get": {
        "tags": [
          "AlertChannels"
        ],
        "summary": "AlertChannelDetails",
        "description": "Get the details about an alert channel by invoking the following endpoint:\n\n  > `GET https://YourLacework.lacework.net/api/v2/AlertChannels/{intgGuid}`",
        "operationId": "AlertChannelDetails",
        "parameters": [
          {
            "name": "intgGuid",
            "in": "path",
            "description": "Alert Channel intgGuid",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "intgGuid96"
              ]
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer AccessToken",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "Authorization96"
              ]
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "application/json",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/Content-Type"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "application/json"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response_2012"
                },
                "example": {
                  "data": {
                    "name": "name96",
                    "type": "AwsS3",
                    "enabled": 0.788263630954671,
                    "data": {
                      "s3CrossAccountCredentials": {
                        "externalId": "externalId29",
                        "roleArn": "roleArn69",
                        "bucketArn": "bucketArn5"
                      }
                    },
                    "isOrg": 0,
                    "props": {}
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "patch": {
        "tags": [
          "AlertChannels"
        ],
        "summary": "UpdateAlertChannels",
        "description": "Update an alert channel by specifying parameters in the request body  when invoking the following endpoint: \n\n  > `PATCH https://YourLacework.lacework.net/api/v2/AlertChannels/{intgGuid}` \n\n  In the request body, only specify the parameter(s)  that you want to update, for example, `{ \"enabled\" : 0 }`.",
        "operationId": "UpdateAlertChannels",
        "parameters": [
          {
            "name": "intgGuid",
            "in": "path",
            "description": "Alert Channel intgGuid",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "intgGuid96"
              ]
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer AccessToken",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "Authorization96"
              ]
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "application/json"
              ]
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAlertChannelsRequest"
              },
              "example": {
                "name": "name96",
                "enabled": 0.788263630954671,
                "data": {
                  "s3CrossAccountCredentials": {
                    "externalId": "externalId29",
                    "roleArn": "roleArn69",
                    "bucketArn": "bucketArn5"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "No Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response_2012"
                },
                "example": {
                  "data": {
                    "name": "name96",
                    "type": "AwsS3",
                    "enabled": 0.788263630954671,
                    "data": {
                      "s3CrossAccountCredentials": {
                        "externalId": "externalId29",
                        "roleArn": "roleArn69",
                        "bucketArn": "bucketArn5"
                      }
                    },
                    "isOrg": 0,
                    "props": {}
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "delete": {
        "tags": [
          "AlertChannels"
        ],
        "summary": "DeleteAlertChannels",
        "description": "Delete an alert channel by invoking the following endpoint:\n\n  > `DELETE https://YourLacework.lacework.net/api/v2/AlertChannels/{intgGuid}`",
        "operationId": "DeleteAlertChannels",
        "parameters": [
          {
            "name": "intgGuid",
            "in": "path",
            "description": "Alert Channel intgGuid",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "intgGuid96"
              ]
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer AccessToken",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "Authorization96"
              ]
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "application/json",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/Content-Type"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "application/json"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No response content is returned and the request was successfully completed with no errors.",
            "headers": {},
            "content": {}
          },
          "404": {
            "description": "Not found",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response_404"
                },
                "example": {
                  "message": "message96"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "parameters": []
    },
    "/AlertChannels": {
      "post": {
        "tags": [
          "AlertChannels"
        ],
        "summary": "CreateAlertChannels",
        "description": "Create an alert channel by specifying parameters in the request body  when invoking the following endpoint:\n\n  > `POST https://YourLacework.lacework.net/api/v2/AlertChannels`",
        "operationId": "CreateAlertChannels",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer AccessToken",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "Authorization96"
              ]
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "application/json"
              ]
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAlertChannelsRequest"
              },
              "example": {
                "name": "name96",
                "type": "AwsS3",
                "enabled": 0.788263630954671,
                "data": {
                  "s3CrossAccountCredentials": {
                    "externalId": "externalId29",
                    "roleArn": "roleArn69",
                    "bucketArn": "bucketArn5"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "No Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response_2012"
                },
                "example": {
                  "data": {
                    "name": "name96",
                    "type": "AwsS3",
                    "enabled": 0.788263630954671,
                    "data": {
                      "s3CrossAccountCredentials": {
                        "externalId": "externalId29",
                        "roleArn": "roleArn69",
                        "bucketArn": "bucketArn5"
                      }
                    },
                    "isOrg": 0,
                    "props": {}
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "get": {
        "tags": [
          "AlertChannels"
        ],
        "summary": "ListAllAlertChannels",
        "description": "Get a list of alert channels for the current user by invoking the following endpoint:\n\n  > `GET https://YourLacework.lacework.net/api/v2/AlertChannels`",
        "operationId": "ListAllAlertChannels",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer AccessToken",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "Authorization96"
              ]
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "application/json",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/Content-Type"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "application/json"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No Error (List of Alert Channels)",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response_2006"
                },
                "example": {
                  "data": [
                    {
                      "name": "name96",
                      "type": "AwsS3",
                      "enabled": 0.788263630954671,
                      "data": {
                        "s3CrossAccountCredentials": {
                          "externalId": "externalId29",
                          "roleArn": "roleArn69",
                          "bucketArn": "bucketArn5"
                        }
                      },
                      "isOrg": 0,
                      "props": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "parameters": []
    },
    "/AlertChannels/{type}": {
      "get": {
        "tags": [
          "AlertChannels"
        ],
        "summary": "ListAlertChannelsbyType",
        "description": "Get a list of alert channels of the specified type by invoking the following endpoint:\n\n  > `GET https://YourLacework.lacework.net/api/v2/AlertChannels/{type}`\n\n  Here is an example invocation: \n\n  > `GET https://YourLacework.lacework.net/api/v2/AlertChannels/SlackChannel`",
        "operationId": "ListAlertChannelsbyType",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "Alert Channel Type",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "NewRelicInsights"
              ]
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer AccessToken",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "Authorization96"
              ]
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "application/json",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/Content-Type"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "application/json"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No Error (List of Alert Channels)",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response_2006"
                },
                "example": {
                  "data": [
                    {
                      "name": "name96",
                      "type": "AwsS3",
                      "enabled": 0.788263630954671,
                      "data": {
                        "s3CrossAccountCredentials": {
                          "externalId": "externalId29",
                          "roleArn": "roleArn69",
                          "bucketArn": "bucketArn5"
                        }
                      },
                      "isOrg": 0,
                      "props": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "parameters": []
    },
    "/AlertChannels/{intgGuid}/test": {
      "post": {
        "tags": [
          "AlertChannels"
        ],
        "summary": "TestAlertChannels",
        "description": "Test the integration of an alert channel by invoking the following endpoint:\n\n  > `POST https://YourLacework.lacework.net/api/v2/AlertChannels/{intgGuid}/test`",
        "operationId": "TestAlertChannels",
        "parameters": [
          {
            "name": "intgGuid",
            "in": "path",
            "description": "Alert Channel intgGuid",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "intgGuid96"
              ]
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer AccessToken",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "Authorization96"
              ]
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "application/json",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/Content-Type"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "application/json"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "headers": {},
            "content": {}
          },
          "404": {
            "description": "Not found",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response_404"
                },
                "example": {
                  "message": "message96"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "parameters": []
    },
    "/AlertRules/search": {
      "post": {
        "tags": [
          "AlertRules"
        ],
        "summary": "SearchAlertRules",
        "description": "Search alert rules by invoking the following endpoint:\n\n  > `POST https://YourLacework.lacework.net/api/v2/AlertRules/search`\n\n To limit the returned result, optionally specify one or more `filters` in the request `body`. For more information about using filters, see the [Simple & Advanced Search section](/api/v2/docs/#tag/OVERVIEW). \n\n  Here are some example `body` payloads:\n\n  * `{ \"filters\": [ { \"field\": \"mcGuid\", \"expression\": \"rlike\", \"value\": \"123ABC\" } ] } ` \n\n  * `{ \"filters\": [ { \"field\": \"mcGuid\", \"expression\": \"between\", \"values\": [ \"ABC_123\", \"DEC_456\" ] } ] }` \n\n  * `{ \"filters\": [ { \"field\": \"intgGuidList\", \"expression\": \"eq\", \"value\": \"ABC_123\" } ] } ` \n\n  * `{ \"filters\": [ { \"field\": \"intgGuidList\", \"expression\": \"in\", \"values\": [ \"ABC_123\", \"DEF_456\" ] } ] } ` \n\n  * `{ \"filters\": [ { \"field\": \"filters.name\", \"expression\": \"ilike\", \"value\": \"slack\" } ] } ` \n\n  * `{ \"filters\": [ { \"field\": \"filters.resourceGroups\", \"expression\": \"eq\", \"value\": \"ABC_123\" } ] } ` \n\n  * `{ \"filters\": [ { \"field\": \"filters.severity\", \"expression\": \"eq\", \"value\": \"5\" } ] } ` \n\n  * `{ \"filters\": [ { \"field\": \"filters.eventCategory\", \"expression\": \"eq\", \"value\": \"App\" } ] } ` \n\n  * `{ \"filters\": [ { \"field\": \"reportNotificationTypes.agentEvents\", \"expression\": \"eq\", \"value\": \"false\" } ] } ` \n\n  In the request body, optionally specify the list of fields to return in the response by specifying the list in the `returns` array.",
        "operationId": "SearchAlertRules",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer AccessToken",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "Authorization96"
              ]
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "application/json"
              ]
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchAlertRulesRequest"
              },
              "example": {
                "filters": [
                  {
                    "expression": "not_rlike",
                    "field": "field78",
                    "value": "value29",
                    "values": [
                      "values69"
                    ]
                  }
                ],
                "returns": [
                  "returns5"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "No Error (List of Alert Rules)",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response_20011"
                },
                "example": {
                  "data": [
                    {
                      "mcGuid": "QA42F6C8_97...",
                      "filters": {
                        "name": "Default Rule",
                        "description": "",
                        "createdOrUpdatedBy": "user@lacework.net",
                        "createdOrUpdatedTime": "2020-02-18T16:52:57.726Z",
                        "enabled": 1,
                        "resourcegroups": [
                          "QA402035_43.."
                        ],
                        "severity": [
                          1,
                          2,
                          3
                        ],
                        "eventcategory": [
                          "App",
                          "Compliance",
                          "Cloud",
                          "Aws",
                          "AzureActivityLog",
                          "GcpAuditTrail",
                          "User",
                          "Machine",
                          "File"
                        ]
                      },
                      "intgGuidList": [
                        "QA402035_66..."
                      ],
                      "type": "Event"
                    },
                    {
                      "mcGuid": "QA42F6C8_83...",
                      "filters": {
                        "name": "test",
                        "description": "",
                        "createdOrUpdatedBy": "user@lacework.net",
                        "createdOrUpdatedTime": "2020-01-15T07:07:21.989Z",
                        "enabled": 1,
                        "resourcegroups": [
                          "QA402035_EB...",
                          "QA402035_BA..."
                        ],
                        "severity": [
                          1,
                          2,
                          3
                        ],
                        "eventcategory": [
                          "User",
                          "Cloud",
                          "Aws",
                          "AzureActivityLog",
                          "GcpAuditTrail"
                        ]
                      },
                      "intgGuidList": [
                        "QA402035_01...",
                        "QA402035_A6..."
                      ],
                      "type": "Event"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "parameters": []
    },
    "/AlertRules/{mcGuid}": {
      "get": {
        "tags": [
          "AlertRules"
        ],
        "summary": "AlertRuleDetails",
        "description": "Get details about a Alert Rule  by invoking the following endpoint:\n\n  > `GET https://YourLacework.lacework.net/api/v2/AlertRules/{mcGuid}`\n\n  Replace `{mcGuid}` with the `mcGuide` value returned for a Alert Rule in the response when the  `GET /api/v2/AlertRules` endpoint is invoked.",
        "operationId": "AlertRuleDetails",
        "parameters": [
          {
            "name": "mcGuid",
            "in": "path",
            "description": "Alert Rule mcGuid",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "mcGuid96"
              ]
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer AccessToken",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "Authorization96"
              ]
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "application/json",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/Content-Type"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "application/json"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response_2013"
                },
                "example": {
                  "data": {
                    "mcGuid": "QA42F6C8_97...",
                    "filters": {
                      "name": "Default Rule",
                      "description": "",
                      "createdOrUpdatedBy": "user@lacework.net",
                      "createdOrUpdatedTime": "2020-02-18T16:52:57.726Z",
                      "enabled": 1,
                      "resourcegroups": [
                        "QA402035_43..."
                      ],
                      "severity": [
                        1,
                        2,
                        3
                      ],
                      "eventcategory": [
                        "App",
                        "Compliance",
                        "Cloud",
                        "Aws",
                        "AzureActivityLog",
                        "GcpAuditTrail",
                        "User",
                        "Machine",
                        "File"
                      ]
                    },
                    "intgGuidList": [
                      "QA402035_66..."
                    ],
                    "type": "Event"
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "delete": {
        "tags": [
          "AlertRules"
        ],
        "summary": "DeleteAlertRules",
        "description": "Delete an Alert Rule by invoking the following endpoint:\n\n  > `DELETE https://YourLacework.lacework.net/api/v2/AlertRule/{mcGuid}`\n \n  Replace `{mcGuid}` with the `mcGuid` value returned for a Alert Rule in the response when the  `GET /api/v2/AlertRules` endpoint is invoked.",
        "operationId": "DeleteAlertRules",
        "parameters": [
          {
            "name": "mcGuid",
            "in": "path",
            "description": "Alert Rules mcGuid",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "mcGuid96"
              ]
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer AccessToken",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "Authorization96"
              ]
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "application/json",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/Content-Type"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "application/json"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "headers": {},
            "content": {}
          },
          "404": {
            "description": "Not found",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response_404"
                },
                "example": {
                  "message": "message96"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "patch": {
        "tags": [
          "AlertRules"
        ],
        "summary": "UpdateAlertRules",
        "description": "Update an alert rules by specifying parameters in the request body when invoking the following endpoint: \n\n  > `PATCH https://YourLacework.lacework.net/api/v2/AlertRules/{mcGuid}`\n\n  Replace `{mcGuid}` with the `mcGuide` value returned for a Alert Rule in the response when the  `GET /api/v2/AlertRules` endpoint is invoked.  In the request body, only specify the parameter(s) that you want to update.",
        "operationId": "UpdateAlertRules",
        "parameters": [
          {
            "name": "mcGuid",
            "in": "path",
            "description": "Alert Rules mcGuid",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "mcGuid96"
              ]
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer AccessToken",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "Authorization96"
              ]
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "application/json"
              ]
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAlertRulesRequest"
              },
              "example": {
                "filters": {
                  "name": "name96",
                  "description": "description86",
                  "enabled": 0,
                  "resourceGroups": [
                    "any"
                  ],
                  "eventCategory": [
                    "Compliance"
                  ],
                  "severity": [
                    3
                  ]
                },
                "intgGuidList": [
                  "any"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "No Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response_2013"
                },
                "example": {
                  "data": {
                    "mcGuid": "QA42F6C8_97...",
                    "filters": {
                      "name": "Default Rule",
                      "description": "",
                      "createdOrUpdatedBy": "user@lacework.net",
                      "createdOrUpdatedTime": "2020-02-18T16:52:57.726Z",
                      "enabled": 1,
                      "resourcegroups": [
                        "QA402035_43..."
                      ],
                      "severity": [
                        1,
                        2,
                        3
                      ],
                      "eventcategory": [
                        "App",
                        "Compliance",
                        "Cloud",
                        "Aws",
                        "AzureActivityLog",
                        "GcpAuditTrail",
                        "User",
                        "Machine",
                        "File"
                      ]
                    },
                    "intgGuidList": [
                      "QA402035_66..."
                    ],
                    "type": "Event"
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "parameters": []
    },
    "/AlertRules": {
      "get": {
        "tags": [
          "AlertRules"
        ],
        "summary": "ListAllAlertRules",
        "description": "List all the alert rules in your Lacework instance,  by invoking the following endpoint:\n\n  > `GET https://YourLacework.lacework.net/api/v2/AlertRules`",
        "operationId": "ListAllAlertRules",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer AccessToken",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "Authorization96"
              ]
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "application/json",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/Content-Type"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "application/json"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No Error (List of Alert Rules)",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response_20011"
                },
                "example": {
                  "data": [
                    {
                      "mcGuid": "QA42F6C8_97...",
                      "filters": {
                        "name": "Default Rule",
                        "description": "",
                        "createdOrUpdatedBy": "user@lacework.net",
                        "createdOrUpdatedTime": "2020-02-18T16:52:57.726Z",
                        "enabled": 1,
                        "resourcegroups": [
                          "QA402035_43.."
                        ],
                        "severity": [
                          1,
                          2,
                          3
                        ],
                        "eventcategory": [
                          "App",
                          "Compliance",
                          "Cloud",
                          "Aws",
                          "AzureActivityLog",
                          "GcpAuditTrail",
                          "User",
                          "Machine",
                          "File"
                        ]
                      },
                      "intgGuidList": [
                        "QA402035_66..."
                      ],
                      "type": "Event"
                    },
                    {
                      "mcGuid": "QA42F6C8_83...",
                      "filters": {
                        "name": "test",
                        "description": "",
                        "createdOrUpdatedBy": "user@lacework.net",
                        "createdOrUpdatedTime": "2020-01-15T07:07:21.989Z",
                        "enabled": 1,
                        "resourcegroups": [
                          "QA402035_EB...",
                          "QA402035_BA..."
                        ],
                        "severity": [
                          1,
                          2,
                          3
                        ],
                        "eventcategory": [
                          "User",
                          "Cloud",
                          "Aws",
                          "AzureActivityLog",
                          "GcpAuditTrail"
                        ]
                      },
                      "intgGuidList": [
                        "QA402035_01...",
                        "QA402035_A6..."
                      ],
                      "type": "Event"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "post": {
        "tags": [
          "AlertRules"
        ],
        "summary": "CreateAlertRules",
        "description": "Create an alert rules by specifying parameters in the request `body` when invoking the following endpoint:\n\n  > `POST https://YourLacework.lacework.net/api/v2/AlertRules`",
        "operationId": "CreateAlertRules",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer AccessToken",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "Authorization96"
              ]
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "application/json"
              ]
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAlertRulesRequest"
              },
              "example": {
                "filters": {
                  "name": "name96",
                  "description": "description86",
                  "enabled": 0,
                  "resourceGroups": [
                    "any"
                  ],
                  "eventCategory": [
                    "Compliance"
                  ],
                  "severity": [
                    3
                  ]
                },
                "intgGuidList": [
                  "any"
                ],
                "type": "Event"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "No Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response_2013"
                },
                "example": {
                  "data": {
                    "mcGuid": "QA42F6C8_97...",
                    "filters": {
                      "name": "Default Rule",
                      "description": "",
                      "createdOrUpdatedBy": "user@lacework.net",
                      "createdOrUpdatedTime": "2020-02-18T16:52:57.726Z",
                      "enabled": 1,
                      "resourcegroups": [
                        "QA402035_43..."
                      ],
                      "severity": [
                        1,
                        2,
                        3
                      ],
                      "eventcategory": [
                        "App",
                        "Compliance",
                        "Cloud",
                        "Aws",
                        "AzureActivityLog",
                        "GcpAuditTrail",
                        "User",
                        "Machine",
                        "File"
                      ]
                    },
                    "intgGuidList": [
                      "QA402035_66..."
                    ],
                    "type": "Event"
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "parameters": []
    },
    "/AuditLogs/search": {
      "post": {
        "tags": [
          "AuditLogs"
        ],
        "summary": "SearchAuditLogs",
        "description": "Search the audit logs by invoking the following endpoint:\n\n  > `POST https://YourLacework.lacework.net/api/v2/AuditLogs/search` \n\n  Filters can be optionally specified in the request body. For more information about using filters, see the [Simple & Advanced Search section](/api/v2/docs/#tag/OVERVIEW). \n\n  For the `timeFilter` filter, these are the supported time formats:\n\n  * `yyyy-MM-dd` for example, `2020-12-18` \n\n  * `yyyy-MM-ddTHH` for example, `2020-12-18T08` \n\n  * `yyyy-MM-ddTHH:mm:ssZ` for example, `2020-12-18T08:00:00Z` \n\n  * `yyyy-MM-ddTHH:mm:ss.SSSZ`, for example, `2020-12-18T08:00:00.000Z`",
        "operationId": "SearchAuditLogs",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer AccessToken",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "Authorization96"
              ]
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "application/json"
              ]
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchAuditLogsRequest"
              },
              "example": {
                "timeFilter": {
                  "startTime": "startTime96",
                  "endTime": "endTime86"
                },
                "filters": [
                  {
                    "expression": "not_rlike",
                    "field": "field78",
                    "value": "value29",
                    "values": [
                      "values69"
                    ]
                  }
                ],
                "returns": [
                  "returns3"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "No Error (List of Audit Logs)",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response_20015"
                },
                "example": {
                  "data": [
                    {
                      "createdTime": 248,
                      "accountName": "accountName86",
                      "userName": "userName3",
                      "eventName": "eventName89",
                      "userAction": "userAction35",
                      "eventDescription": "eventDescription51"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "parameters": []
    },
    "/AuditLogs": {
      "get": {
        "tags": [
          "AuditLogs"
        ],
        "summary": "AuditLogs",
        "description": "Get Audit Logs by invoking the following endpoint:\n\n  > `GET https://YourLacework.lacework.net/api/v2/AuditLogs` \n\n  Optionally filter by specifying the `startTime` and `endTime` of a time range using the following formats:\n\n  * `yyyy-MM-dd` for example, `2020-12-18` \n\n  * `yyyy-MM-ddTHH` for example, `2020-12-18T08` \n\n  * `yyyy-MM-ddTHH:mm:ssZ` for example, `2020-12-18T08:00:00Z` \n\n  * `yyyy-MM-ddTHH:mm:ss.SSSZ` for example, `2020-12-18T08:00:00.000Z` \n\n\n  Here is an example invocation: \n\n  > `GET https://YourLacework.lacework.net/api/v2/AuditLogs?startTime=2020-12-11T08:00:00Z&endTime=2020-12-18T08:00:00Z`",
        "operationId": "AuditLogs",
        "parameters": [
          {
            "name": "startTime",
            "in": "query",
            "description": "Start time",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "examples": [
                "startTime96"
              ]
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "End time",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "examples": [
                "endTime96"
              ]
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer AccessToken",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "Authorization96"
              ]
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "application/json",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/Content-Type"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "application/json"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No Error (List of Audit Logs)",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response_20015"
                },
                "example": {
                  "data": [
                    {
                      "createdTime": 248,
                      "accountName": "accountName86",
                      "userName": "userName3",
                      "eventName": "eventName89",
                      "userAction": "userAction35",
                      "eventDescription": "eventDescription51"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "parameters": []
    },
    "/CloudAccounts": {
      "get": {
        "tags": [
          "CloudAccounts"
        ],
        "summary": "ListAllCloudAccounts",
        "description": "Get a list of cloud accounts for the current user by invoking the following endpoint:\n\n  > `GET https://YourLacework.lacework.net/api/v2/CloudAccounts`",
        "operationId": "ListAllCloudAccounts",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer AccessToken",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "Authorization96"
              ]
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "application/json",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/Content-Type"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "application/json"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No Error (List of Cloud Accounts)",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response_20017"
                },
                "example": {
                  "data": [
                    {
                      "name": "name96",
                      "type": "AwsCfg",
                      "enabled": 0.788263630954671,
                      "data": {
                        "crossAccountCredentials": {
                          "externalId": "externalId29",
                          "roleArn": "roleArn69"
                        },
                        "awsAccountId": "awsAccountId5"
                      },
                      "isOrg": 0,
                      "props": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "post": {
        "tags": [
          "CloudAccounts"
        ],
        "summary": "CreateCloudAccounts",
        "description": "Create a cloud account by specifying parameters in the request  body when invoking the following endpoint:\n\n  > `POST https://YourLacework.lacework.net/api/v2/CloudAccounts`",
        "operationId": "CreateCloudAccounts",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer AccessToken",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "Authorization96"
              ]
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "application/json"
              ]
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCloudAccountsRequest"
              },
              "example": {
                "name": "name96",
                "type": "AwsCfg",
                "enabled": 0.788263630954671,
                "data": {
                  "crossAccountCredentials": {
                    "externalId": "externalId29",
                    "roleArn": "roleArn69"
                  },
                  "awsAccountId": "awsAccountId5"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "No Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response_2014"
                },
                "example": {
                  "data": {
                    "name": "name96",
                    "type": "AwsCfg",
                    "enabled": 0.788263630954671,
                    "data": {
                      "crossAccountCredentials": {
                        "externalId": "externalId29",
                        "roleArn": "roleArn69"
                      },
                      "awsAccountId": "awsAccountId5"
                    },
                    "isOrg": 0,
                    "props": {}
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "parameters": []
    },
    "/CloudAccounts/{intgGuid}": {
      "delete": {
        "tags": [
          "CloudAccounts"
        ],
        "summary": "DeleteCloudAccounts",
        "description": "Delete a cloud account by invoking the following endpoint:\n\n  > `DELETE https://YourLacework.lacework.net/api/v2/CloudAccounts/{intgGuid}`",
        "operationId": "DeleteCloudAccounts",
        "parameters": [
          {
            "name": "intgGuid",
            "in": "path",
            "description": "Cloud Account intgGuid",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "intgGuid96"
              ]
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer AccessToken",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "Authorization96"
              ]
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "application/json",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/Content-Type"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "application/json"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "headers": {},
            "content": {}
          },
          "404": {
            "description": "Not found",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response_404"
                },
                "example": {
                  "message": "message96"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "get": {
        "tags": [
          "CloudAccounts"
        ],
        "summary": "CloudAccountsDetails",
        "description": "Get the details about a cloud account by invoking the following endpoint:\n\n  > `GET https://YourLacework.lacework.net/api/v2/CloudAccounts/{intgGuid}`",
        "operationId": "CloudAccountsDetails",
        "parameters": [
          {
            "name": "intgGuid",
            "in": "path",
            "description": "Cloud Account intgGuid",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "intgGuid96"
              ]
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer AccessToken",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "Authorization96"
              ]
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "application/json",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/Content-Type"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "application/json"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response_2014"
                },
                "example": {
                  "data": {
                    "name": "name96",
                    "type": "AwsCfg",
                    "enabled": 0.788263630954671,
                    "data": {
                      "crossAccountCredentials": {
                        "externalId": "externalId29",
                        "roleArn": "roleArn69"
                      },
                      "awsAccountId": "awsAccountId5"
                    },
                    "isOrg": 0,
                    "props": {}
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "patch": {
        "tags": [
          "CloudAccounts"
        ],
        "summary": "UpdateCloudAccounts",
        "description": "Update a cloud account by specifying parameters in the request body when invoking the following endpoint: \n\n  > `PATCH https://YourLacework.lacework.net/api/v2/CloudAccounts/{intgGuid}` \n\n  In the request body, only specify the parameter(s) that you want to update, for example, `{ \"enabled\" : 0 }`.",
        "operationId": "UpdateCloudAccounts",
        "parameters": [
          {
            "name": "intgGuid",
            "in": "path",
            "description": "Cloud Account intgGuid",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "intgGuid96"
              ]
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer AccessToken",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "Authorization96"
              ]
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "application/json"
              ]
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCloudAccountsRequest"
              },
              "example": {
                "name": "name96",
                "enabled": 0.788263630954671,
                "data": {
                  "awsAccountId": "awsAccountId29",
                  "crossAccountCredentials": {
                    "externalId": "externalId69",
                    "roleArn": "roleArn5"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "No Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response_2014"
                },
                "example": {
                  "data": {
                    "name": "name96",
                    "type": "AwsCfg",
                    "enabled": 0.788263630954671,
                    "data": {
                      "crossAccountCredentials": {
                        "externalId": "externalId29",
                        "roleArn": "roleArn69"
                      },
                      "awsAccountId": "awsAccountId5"
                    },
                    "isOrg": 0,
                    "props": {}
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "parameters": []
    },
    "/CloudAccounts/{type}": {
      "get": {
        "tags": [
          "CloudAccounts"
        ],
        "summary": "ListCloudAccountsbyType",
        "description": "Get a list of cloud accounts of the specified type by invoking the following endpoint:\n\n  > `GET https://YourLacework.lacework.net/api/v2/CloudAccounts/{type}`\n\n  Here is an example invocation: \n\n  > `GET https://YourLacework.lacework.net/api/v2/CloudAccounts/AwsCfg`",
        "operationId": "ListCloudAccountsbyType",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "Cloud Accounts Type",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "AzureAlSeq"
              ]
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer AccessToken",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "Authorization96"
              ]
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "application/json",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/Content-Type"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "application/json"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No Error (List of Cloud Accounts)",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response_20017"
                },
                "example": {
                  "data": [
                    {
                      "name": "name96",
                      "type": "AwsCfg",
                      "enabled": 0.788263630954671,
                      "data": {
                        "crossAccountCredentials": {
                          "externalId": "externalId29",
                          "roleArn": "roleArn69"
                        },
                        "awsAccountId": "awsAccountId5"
                      },
                      "isOrg": 0,
                      "props": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "parameters": []
    },
    "/CloudAccounts/search": {
      "post": {
        "tags": [
          "CloudAccounts"
        ],
        "summary": "SearchCloudAccounts",
        "description": "Search cloud accounts by invoking the following endpoint:\n\n  > `POST https://YourLacework.lacework.net/api/v2/CloudAccounts/search`\n\n To limit the returned result, optionally specify one or more `filters` in the request `body`. For more information about using filters, see the [Simple & Advanced Search section](/api/v2/docs/#tag/OVERVIEW). \n\n  In the request body, optionally specify the list of fields to return in the response by specifying the list in the `returns` array, for example, `\"returns\":[ \"name\", \"type\", \"enabled\" ]`.",
        "operationId": "SearchCloudAccounts",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer AccessToken",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "Authorization96"
              ]
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "application/json"
              ]
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchAlertRulesRequest"
              },
              "example": {
                "filters": [
                  {
                    "expression": "not_rlike",
                    "field": "field78",
                    "value": "value29",
                    "values": [
                      "values69"
                    ]
                  }
                ],
                "returns": [
                  "returns5"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "No Error (List of Cloud Accounts)",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response_20017"
                },
                "example": {
                  "data": [
                    {
                      "name": "name96",
                      "type": "AwsCfg",
                      "enabled": 0.788263630954671,
                      "data": {
                        "crossAccountCredentials": {
                          "externalId": "externalId29",
                          "roleArn": "roleArn69"
                        },
                        "awsAccountId": "awsAccountId5"
                      },
                      "isOrg": 0,
                      "props": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "parameters": []
    },
    "/CloudActivities": {
      "get": {
        "tags": [
          "CloudActivities"
        ],
        "summary": "CloudActivities",
        "description": "Get cloud activities details by invoking the following endpoint:\n\n  > `GET https://YourLacework.lacework.net/api/v2/CloudActivities` \n\n Optionally filter by specifying the `startTime` and `endTime` of a time range using the following formats:\n\n  * `yyyy-MM-dd` for example, `2020-12-18` \n\n  * `yyyy-MM-ddTHH` for example, `2020-12-18T08` \n\n  * `yyyy-MM-ddTHH:mm:ssZ` for example, `2020-12-18T08:00:00Z` \n\n  * `yyyy-MM-ddTHH:mm:ss.SSSZ` for example, `2020-12-18T08:00:00.000Z` \n\n\n  Here is an example invocation: \n\n  > `GET https://YourLacework.lacework.net/api/v2/CloudActivities?startTime=2020-12-11T08:00:00Z&endTime=2020-12-18T08:00:00Z`",
        "operationId": "CloudActivities",
        "parameters": [
          {
            "name": "startTime",
            "in": "query",
            "description": "Start time",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "examples": [
                "startTime96"
              ]
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "End time",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "examples": [
                "endTime96"
              ]
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer AccessToken",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "Authorization96"
              ]
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "application/json",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/Content-Type"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "application/json"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No Error (List of Cloud Activities)",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response_20022"
                },
                "example": {
                  "data": [
                    {
                      "startTime": 248,
                      "endTime": 221,
                      "eventType": "eventType3",
                      "eventId": 178.572675387176,
                      "eventModel": "eventModel5",
                      "eventActor": "eventActor91",
                      "entityMap": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "parameters": []
    },
    "/CloudActivities/search": {
      "post": {
        "tags": [
          "CloudActivities"
        ],
        "summary": "SearchCloudActivities",
        "description": "Search cloud activities by invoking the following endpoint:\n\n  > `POST https://YourLacework.lacework.net/api/v2/CloudActivities/search` \n\n  Filters can be optionally specified in the request body. For more information about using filters, see the [Simple & Advanced Search section](/api/v2/docs/#tag/OVERVIEW).\n\n  For the `timeFilter` filter, these are the supported time formats:\n\n  * `yyyy-MM-dd` for example, `2020-12-18` \n\n  * `yyyy-MM-ddTHH` for example, `2020-12-18T08` \n\n  * `yyyy-MM-ddTHH:mm:ssZ` for example, `2020-12-18T08:00:00Z` \n\n  * `yyyy-MM-ddTHH:mm:ss.SSSZ` for example, `2020-12-18T08:00:00.000Z`",
        "operationId": "SearchCloudActivities",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer AccessToken",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "Authorization96"
              ]
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "application/json"
              ]
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchCloudActivitiesRequest"
              },
              "example": {
                "timeFilter": {
                  "startTime": "startTime96",
                  "endTime": "endTime86"
                },
                "filters": [
                  {
                    "expression": "not_rlike",
                    "field": "field78",
                    "value": "value29",
                    "values": [
                      "values69"
                    ]
                  }
                ],
                "returns": [
                  "returns3"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "No Error (List of Cloud Activities)",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response_20022"
                },
                "example": {
                  "data": [
                    {
                      "startTime": 248,
                      "endTime": 221,
                      "eventType": "eventType3",
                      "eventId": 178.572675387176,
                      "eventModel": "eventModel5",
                      "eventActor": "eventActor91",
                      "entityMap": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "parameters": []
    },
    "/ContainerRegistries/{intgGuid}": {
      "get": {
        "tags": [
          "ContainerRegistries"
        ],
        "summary": "ContainerRegistryDetails",
        "description": "Get the details about a container registry by invoking the following endpoint:\n\n  > `GET https://YourLacework.lacework.net/api/v2/ContainerRegistries/{intgGuid}`",
        "operationId": "ContainerRegistryDetails",
        "parameters": [
          {
            "name": "intgGuid",
            "in": "path",
            "description": "Container Registry intgGuid",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "intgGuid96"
              ]
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer AccessToken",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "Authorization96"
              ]
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "application/json",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/Content-Type"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "application/json"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response_20024"
                },
                "example": {
                  "data": {
                    "name": "name96",
                    "type": "ContVulnCfg",
                    "enabled": 0.788263630954671,
                    "data": {
                      "crossAccountCredentials": {
                        "externalId": "externalId29",
                        "roleArn": "roleArn69"
                      },
                      "awsAuthType": "AWS_IAM",
                      "registryType": "AWS_ECR",
                      "registryDomain": "registryDomain29",
                      "limitNumImg": 5,
                      "limitByRep": "[]",
                      "limitByTag": "[]",
                      "limitByLabel": [
                        {
                          "kj": "kj89"
                        }
                      ]
                    },
                    "isOrg": 0,
                    "props": {}
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "delete": {
        "tags": [
          "ContainerRegistries"
        ],
        "summary": "DeleteContainerRegistries",
        "description": "Delete a container registry by invoking the following endpoint:\n\n  > `DELETE https://YourLacework.lacework.net/api/v2/ContainerRegistries/{intgGuid}`",
        "operationId": "DeleteContainerRegistries",
        "parameters": [
          {
            "name": "intgGuid",
            "in": "path",
            "description": "Container Registry intgGuid",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "intgGuid96"
              ]
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer AccessToken",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "Authorization96"
              ]
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "application/json",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/Content-Type"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "application/json"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "headers": {},
            "content": {}
          },
          "404": {
            "description": "Not found",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response_404"
                },
                "example": {
                  "message": "message96"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "patch": {
        "tags": [
          "ContainerRegistries"
        ],
        "summary": "UpdateContainerRegistries",
        "description": "Update a container registry by specifying parameters in the request body when invoking the following endpoint: \n\n  > `PATCH https://YourLacework.lacework.net/api/v2/ContainerRegistries/{intgGuid}` \n\n  In the request body, only specify the parameter(s) that you want to update, for example, `{ \"enabled\" : 0 }`.",
        "operationId": "UpdateContainerRegistries",
        "parameters": [
          {
            "name": "intgGuid",
            "in": "path",
            "description": "Container Registry intgGuid",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "intgGuid96"
              ]
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer AccessToken",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "Authorization96"
              ]
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "application/json"
              ]
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateContainerRegistriesRequest"
              },
              "example": {
                "name": "name96",
                "enabled": 0.788263630954671,
                "data": {
                  "crossAccountCredentials": {
                    "externalId": "externalId69",
                    "roleArn": "roleArn5"
                  },
                  "awsAuthType": "AWS_IAM",
                  "registryType": "AWS_ECR",
                  "registryDomain": "registryDomain69",
                  "limitNumImg": 10,
                  "limitByRep": "[]",
                  "limitByTag": "[]",
                  "limitByLabel": [
                    {
                      "kj": "kj35"
                    }
                  ]
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "No Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response_20024"
                },
                "example": {
                  "data": {
                    "name": "name96",
                    "type": "ContVulnCfg",
                    "enabled": 0.788263630954671,
                    "data": {
                      "crossAccountCredentials": {
                        "externalId": "externalId29",
                        "roleArn": "roleArn69"
                      },
                      "awsAuthType": "AWS_IAM",
                      "registryType": "AWS_ECR",
                      "registryDomain": "registryDomain29",
                      "limitNumImg": 5,
                      "limitByRep": "[]",
                      "limitByTag": "[]",
                      "limitByLabel": [
                        {
                          "kj": "kj89"
                        }
                      ]
                    },
                    "isOrg": 0,
                    "props": {}
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "parameters": []
    },
    "/ContainerRegistries": {
      "post": {
        "tags": [
          "ContainerRegistries"
        ],
        "summary": "CreateContainerRegistries",
        "description": "Create a container registry by specifying parameters in the request  body when invoking the following endpoint:\n\n  > `POST https://YourLacework.lacework.net/api/v2/ContainerRegistries`",
        "operationId": "CreateContainerRegistries",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer AccessToken",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "Authorization96"
              ]
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "application/json"
              ]
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateContainerRegistriesRequest"
              },
              "example": {
                "name": "name96",
                "type": "ContVulnCfg",
                "enabled": 0.788263630954671,
                "data": {
                  "crossAccountCredentials": {
                    "externalId": "externalId29",
                    "roleArn": "roleArn69"
                  },
                  "awsAuthType": "AWS_IAM",
                  "registryType": "AWS_ECR",
                  "registryDomain": "registryDomain29",
                  "limitNumImg": 5,
                  "limitByRep": "[]",
                  "limitByTag": "[]",
                  "limitByLabel": [
                    {
                      "kj": "kj35"
                    }
                  ]
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "No Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response_20024"
                },
                "example": {
                  "data": {
                    "name": "name96",
                    "type": "ContVulnCfg",
                    "enabled": 0.788263630954671,
                    "data": {
                      "crossAccountCredentials": {
                        "externalId": "externalId29",
                        "roleArn": "roleArn69"
                      },
                      "awsAuthType": "AWS_IAM",
                      "registryType": "AWS_ECR",
                      "registryDomain": "registryDomain29",
                      "limitNumImg": 5,
                      "limitByRep": "[]",
                      "limitByTag": "[]",
                      "limitByLabel": [
                        {
                          "kj": "kj89"
                        }
                      ]
                    },
                    "isOrg": 0,
                    "props": {}
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "get": {
        "tags": [
          "ContainerRegistries"
        ],
        "summary": "ListAllContainerRegistries",
        "description": "Get a list of container registries for the current user by invoking the following endpoint:\n\n  > `GET https://YourLacework.lacework.net/api/v2/ContainerRegistries`",
        "operationId": "ListAllContainerRegistries",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer AccessToken",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "Authorization96"
              ]
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "application/json",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/Content-Type"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "application/json"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No Error (List of Container Registries)",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response_20026"
                },
                "example": {
                  "data": [
                    {
                      "name": "name96",
                      "type": "ContVulnCfg",
                      "enabled": 0.788263630954671,
                      "data": {
                        "crossAccountCredentials": {
                          "externalId": "externalId29",
                          "roleArn": "roleArn69"
                        },
                        "awsAuthType": "AWS_IAM",
                        "registryType": "AWS_ECR",
                        "registryDomain": "registryDomain29",
                        "limitNumImg": 5,
                        "limitByRep": "[]",
                        "limitByTag": "[]",
                        "limitByLabel": [
                          {
                            "kj": "kj89"
                          }
                        ]
                      },
                      "isOrg": 0,
                      "props": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "parameters": []
    },
    "/ContainerRegistries/search": {
      "post": {
        "tags": [
          "ContainerRegistries"
        ],
        "summary": "SearchContainerRegistries",
        "description": "Search container registries by invoking the following endpoint:\n\n  > `POST https://YourLacework.lacework.net/api/v2/ContainerRegistries/search`\n\n To limit the returned result, optionally specify one or more `filters` in the request `body`. For more information about using filters, see the [Simple & Advanced Search section](/api/v2/docs/#tag/OVERVIEW).\n\n  In the request body, optionally specify the list of fields to return in the response by specifying the list in the `returns` array, for example, `\"returns\":[ \"name\", \"type\", \"enabled\" ]`.",
        "operationId": "SearchContainerRegistries",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer AccessToken",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "Authorization96"
              ]
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "application/json"
              ]
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchAlertRulesRequest"
              },
              "example": {
                "filters": [
                  {
                    "expression": "not_rlike",
                    "field": "field78",
                    "value": "value29",
                    "values": [
                      "values69"
                    ]
                  }
                ],
                "returns": [
                  "returns5"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "No Error (List of Container Registries)",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response_20026"
                },
                "example": {
                  "data": [
                    {
                      "name": "name96",
                      "type": "ContVulnCfg",
                      "enabled": 0.788263630954671,
                      "data": {
                        "crossAccountCredentials": {
                          "externalId": "externalId29",
                          "roleArn": "roleArn69"
                        },
                        "awsAuthType": "AWS_IAM",
                        "registryType": "AWS_ECR",
                        "registryDomain": "registryDomain29",
                        "limitNumImg": 5,
                        "limitByRep": "[]",
                        "limitByTag": "[]",
                        "limitByLabel": [
                          {
                            "kj": "kj89"
                          }
                        ]
                      },
                      "isOrg": 0,
                      "props": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "parameters": []
    },
    "/ContainerRegistries/{type}/{subtype}": {
      "get": {
        "tags": [
          "ContainerRegistries"
        ],
        "summary": "ListContainerRegistriesbyType",
        "description": "Get a list of container registries of the specified type by invoking the following endpoint:\n\n  > `GET https://YourLacework.lacework.net/api/v2/ContainerRegistries/{type}/{subtype}`\n\n  Here is an example invocation: \n\n  > `GET https://YourLacework.lacework.net/api/v2/ContainerRegistries/ContVulnCfg/AWS_ECR`",
        "operationId": "ListContainerRegistriesbyType",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "Container Registry Type",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "ContVulnCfg"
              ]
            }
          },
          {
            "name": "subtype",
            "in": "path",
            "description": "Container Registry Subtype",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "GHCR"
              ]
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer AccessToken",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "Authorization96"
              ]
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "application/json",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/Content-Type"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "application/json"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No Error (List of Container Registries)",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response_20026"
                },
                "example": {
                  "data": [
                    {
                      "name": "name96",
                      "type": "ContVulnCfg",
                      "enabled": 0.788263630954671,
                      "data": {
                        "crossAccountCredentials": {
                          "externalId": "externalId29",
                          "roleArn": "roleArn69"
                        },
                        "awsAuthType": "AWS_IAM",
                        "registryType": "AWS_ECR",
                        "registryDomain": "registryDomain29",
                        "limitNumImg": 5,
                        "limitByRep": "[]",
                        "limitByTag": "[]",
                        "limitByLabel": [
                          {
                            "kj": "kj89"
                          }
                        ]
                      },
                      "isOrg": 0,
                      "props": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "parameters": []
    },
    "/ContractInfo": {
      "get": {
        "tags": [
          "ContractInfo"
        ],
        "summary": "ContractInfo",
        "description": "Return contract details about the Lacework licenses found on the Lacework instance,  by invoking the following endpoint:\n\n  > `GET https://YourLacework.lacework.net/api/v2/ContractInfo`",
        "operationId": "ContractInfo",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer AccessToken",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "Authorization96"
              ]
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "application/json",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/Content-Type"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "application/json"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No Error (List of Contract Info)",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response_20029"
                },
                "example": {
                  "data": [
                    {
                      "objName": "CloudActivities",
                      "props": {
                        "contractStartUtc": "2020-12-01T00:00:00Z",
                        "renewalUtc": "2021-03-01T00:00:00Z",
                        "numPurchased": 1,
                        "dataRetentionInDay": 90
                      }
                    },
                    {
                      "objName": "AWSConfig",
                      "props": {
                        "contractStartUtc": "2020-12-01T00:00:00Z",
                        "renewalUtc": "2021-03-01T00:00:00Z",
                        "numPurchased": 1,
                        "dataRetentionInDay": 90
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "parameters": []
    },
    "/ReportRules": {
      "post": {
        "tags": [
          "ReportRules"
        ],
        "summary": "CreateReportRule",
        "description": "Create a Report Rule in your Lacework instance,  by invoking the following endpoint:\n\n  > `POST https://YourLacework.lacework.net/api/v2/ReportRules`\n\n You can get the unique identifiers for the alert channels (`intGuidList`) array by invoking the `GET /api/v2/ReportRules` endpoint.",
        "operationId": "CreateReportRule",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer AccessToken",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "Authorization96"
              ]
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "application/json"
              ]
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateReportRuleRequest"
              },
              "example": {
                "filters": {
                  "name": "name96",
                  "description": "description86",
                  "enabled": 0,
                  "resourceGroups": [
                    "any"
                  ],
                  "severity": [
                    1
                  ]
                },
                "intgGuidList": [
                  "any"
                ],
                "reportNotificationTypes": {
                  "agentEvents": true,
                  "awsCisS3": true,
                  "awsCloudtrailEvents": false,
                  "awsComplianceEvents": false,
                  "azureActivityLogEvents": true,
                  "azureCis": true,
                  "azureComplianceEvents": true,
                  "azurePci": false,
                  "azureSoc": true,
                  "gcpAuditTrailEvents": false,
                  "gcpCis": true,
                  "gcpComplianceEvents": true,
                  "gcpPci": true,
                  "gcpSoc": true,
                  "hipaa": false,
                  "iso2700": true,
                  "nist800-53Rev4": false,
                  "nist800-171Rev2": false,
                  "openShiftCompliance": true,
                  "openShiftComplianceEvents": true,
                  "pci": true,
                  "soc": true,
                  "awsSocRev2": false,
                  "trendReport": true
                },
                "type": "Report"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "No Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response_20031"
                },
                "example": {
                  "data": {
                    "mcGuid": "QA42F6C8_83...",
                    "filters": {
                      "name": "LW Rule 1",
                      "description": "",
                      "createdOrUpdatedBy": "info@lacework.net",
                      "createdOrUpdatedTime": "2021-01-12T23:16:08.418Z",
                      "enabled": 1,
                      "resourceGroups": [
                        "QA402035_BA..."
                      ],
                      "severity": [
                        1,
                        2,
                        3
                      ]
                    },
                    "intgGuidList": [
                      "QA402035_32..."
                    ],
                    "reportNotificationTypes": {
                      "gcpCis": false,
                      "gcpComplianceEvents": false,
                      "trendReport": false,
                      "azurePci": true,
                      "agentEvents\"": false,
                      "awsCisS3\"": false,
                      "gcpAuditTrailEvents\"": false,
                      "openShiftCompliance\"": false,
                      "openShiftComplianceEvents\"": false,
                      "azureSoc\"": true,
                      "awsComplianceEvents\"": false,
                      "azureComplianceEvents\"": false,
                      "azureCis\"": true,
                      "azureActivityLogEvents\"": false,
                      "awsCloudtrailEvents\"": false
                    },
                    "type": "Report"
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "get": {
        "tags": [
          "ReportRules"
        ],
        "summary": "ListAllReportRules",
        "description": "List all the report rules in your Lacework instance,  by invoking the following endpoint:\n\n  > `GET https://YourLacework.lacework.net/api/v2/ReportRules`",
        "operationId": "ListAllReportRules",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer AccessToken",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "Authorization96"
              ]
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "application/json",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/Content-Type"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "application/json"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No Error (List of Report Rules)",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response_20030"
                },
                "example": {
                  "data": [
                    {
                      "mcGuid": "QA42F6C8_83...",
                      "filters": {
                        "name": "LW Rule 1",
                        "description": "",
                        "createdOrUpdatedBy": "info@lacework.net",
                        "createdOrUpdatedTime": "2021-01-12T23:16:08.418Z",
                        "enabled": 1,
                        "resourceGroups": [
                          "QA402035_BA..."
                        ],
                        "severity": [
                          1,
                          2,
                          3
                        ]
                      },
                      "intgGuidList": [
                        "QA402035_32..."
                      ],
                      "reportNotificationTypes": {
                        "gcpCis": false,
                        "gcpComplianceEvents": false,
                        "trendReport": false,
                        "azurePci": false,
                        "agentEvents\"": false,
                        "awsCisS3\"": true,
                        "gcpAuditTrailEvents\"": false,
                        "openShiftCompliance\"": false,
                        "openShiftComplianceEvents\"": false,
                        "azureSoc\"": false,
                        "awsComplianceEvents\"": true,
                        "azureComplianceEvents\"": false,
                        "azureCis\"": false,
                        "azureActivityLogEvents\"": false,
                        "awsCloudtrailEvents\"": true
                      },
                      "type": "Report"
                    },
                    {
                      "mcGuid": "QA42F6C8_88...",
                      "filters": {
                        "name": "LW Rule 2",
                        "description": "",
                        "createdOrUpdatedBy": "info@lacework.net",
                        "createdOrUpdatedTime": "2021-01-12T23:18:08.418Z",
                        "enabled": 1,
                        "resourceGroups": [
                          "QA402035_BC..."
                        ],
                        "severity": [
                          1,
                          2,
                          3
                        ]
                      },
                      "intgGuidList": [
                        "QA402035_33..."
                      ],
                      "reportNotificationTypes": {
                        "gcpCis": false,
                        "gcpComplianceEvents": false,
                        "trendReport": false,
                        "azurePci": true,
                        "agentEvents\"": false,
                        "awsCisS3\"": false,
                        "gcpAuditTrailEvents\"": false,
                        "openShiftCompliance\"": false,
                        "openShiftComplianceEvents\"": false,
                        "azureSoc\"": true,
                        "awsComplianceEvents\"": false,
                        "azureComplianceEvents\"": false,
                        "azureCis\"": true,
                        "azureActivityLogEvents\"": false,
                        "awsCloudtrailEvents\"": false
                      },
                      "type": "Report"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "parameters": []
    },
    "/ReportRules/search": {
      "post": {
        "tags": [
          "ReportRules"
        ],
        "summary": "SearchReportRules",
        "description": "Search all the report rules in your Lacework instance,  by invoking the following endpoint:\n\n  > `POST https://YourLacework.lacework.net/api/v2/ReportRules/search`\n\n  To limit the returned result, optionally specify one or more filters in the request `body`. For more information about using filters, see the [Simple & Advanced Search section](/api/v2/docs/#tag/OVERVIEW).\n\n  Here are some example `body` payloads:\n\n  * `{ \"filters\": [ { \"expression\": \"eq\", \"field\": \"name\",  \"value\": \" Jane\" } ] } `\n\n  * `{ \"filters\": [ { \"field\": \"mcGuid\", \"expression\": \"rlike\", \"value\": \"123ABC\" } ] } `\n\n  * `{ \"filters\": [ { \"field\": \"mcGuid\", \"expression\": \"between\", \"values\": [ \"ABC_123\", \"DEC_456\" ] } ] }` \n\n  * `{ \"filters\": [ { \"field\": \"intgGuidList\", \"expression\": \"eq\", \"value\": \"ABC_123\" } ] } ` \n\n  * `{ \"filters\": [ { \"field\": \"intgGuidList\", \"expression\": \"in\", \"values\": [ \"ABC_123\", \"DEF_456\" ] } ] } ` \n\n  * `{ \"filters\": [ { \"field\": \"filters.name\", \"expression\": \"ilike\", \"value\": \"slack\" } ] } ` \n\n  * `{ \"filters\": [ { \"field\": \"filters.resourceGroups\", \"expression\": \"eq\", \"value\": \"ABC_123\" } ] } `\n\n  * `{ \"filters\": [ { \"field\": \"filters.severity\", \"expression\": \"eq\", \"value\": \"5\" } ] } ` \n\n  * `{ \"filters\": [ { \"field\": \"filters.eventCategory\", \"expression\": \"eq\", \"value\": \"App\" } ] } `\n\n  * `{ \"filters\": [ { \"field\": \"reportNotificationTypes.agentEvents\", \"expression\": \"eq\", \"value\": \"false\" } ] } `",
        "operationId": "SearchReportRules",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer AccessToken",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "Authorization96"
              ]
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "application/json"
              ]
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchAlertRulesRequest"
              },
              "example": {
                "filters": [
                  {
                    "expression": "not_rlike",
                    "field": "field78",
                    "value": "value29",
                    "values": [
                      "values69"
                    ]
                  }
                ],
                "returns": [
                  "returns5"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "No Error (List of Report Rules)",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response_20030"
                },
                "example": {
                  "data": [
                    {
                      "mcGuid": "QA42F6C8_83...",
                      "filters": {
                        "name": "LW Rule 1",
                        "description": "",
                        "createdOrUpdatedBy": "info@lacework.net",
                        "createdOrUpdatedTime": "2021-01-12T23:16:08.418Z",
                        "enabled": 1,
                        "resourceGroups": [
                          "QA402035_BA..."
                        ],
                        "severity": [
                          1,
                          2,
                          3
                        ]
                      },
                      "intgGuidList": [
                        "QA402035_32..."
                      ],
                      "reportNotificationTypes": {
                        "gcpCis": false,
                        "gcpComplianceEvents": false,
                        "trendReport": false,
                        "azurePci": false,
                        "agentEvents\"": false,
                        "awsCisS3\"": true,
                        "gcpAuditTrailEvents\"": false,
                        "openShiftCompliance\"": false,
                        "openShiftComplianceEvents\"": false,
                        "azureSoc\"": false,
                        "awsComplianceEvents\"": true,
                        "azureComplianceEvents\"": false,
                        "azureCis\"": false,
                        "azureActivityLogEvents\"": false,
                        "awsCloudtrailEvents\"": true
                      },
                      "type": "Report"
                    },
                    {
                      "mcGuid": "QA42F6C8_88...",
                      "filters": {
                        "name": "LW Rule 2",
                        "description": "",
                        "createdOrUpdatedBy": "info@lacework.net",
                        "createdOrUpdatedTime": "2021-01-12T23:18:08.418Z",
                        "enabled": 1,
                        "resourceGroups": [
                          "QA402035_BC..."
                        ],
                        "severity": [
                          1,
                          2,
                          3
                        ]
                      },
                      "intgGuidList": [
                        "QA402035_33..."
                      ],
                      "reportNotificationTypes": {
                        "gcpCis": false,
                        "gcpComplianceEvents": false,
                        "trendReport": false,
                        "azurePci": true,
                        "agentEvents\"": false,
                        "awsCisS3\"": false,
                        "gcpAuditTrailEvents\"": false,
                        "openShiftCompliance\"": false,
                        "openShiftComplianceEvents\"": false,
                        "azureSoc\"": true,
                        "awsComplianceEvents\"": false,
                        "azureComplianceEvents\"": false,
                        "azureCis\"": true,
                        "azureActivityLogEvents\"": false,
                        "awsCloudtrailEvents\"": false
                      },
                      "type": "Report"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "parameters": []
    },
    "/ReportRules/{mcGuid}": {
      "get": {
        "tags": [
          "ReportRules"
        ],
        "summary": "ReportRuleDetails",
        "description": "Get details about a Report Rule  by invoking the following endpoint:\n\n  > `GET https://YourLacework.lacework.net/api/v2/ReportRules/{mcGuid}`\n\n  Replace `{mcGuid}` with the `mcGuide` value returned for a Report Rule in the response when the  `GET /api/v2/ReportRules` endpoint is invoked.",
        "operationId": "ReportRuleDetails",
        "parameters": [
          {
            "name": "mcGuid",
            "in": "path",
            "description": "Report Rule mcGuid",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "mcGuid96"
              ]
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer AccessToken",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "Authorization96"
              ]
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "application/json",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/Content-Type"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "application/json"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response_20031"
                },
                "example": {
                  "data": {
                    "mcGuid": "QA42F6C8_83...",
                    "filters": {
                      "name": "LW Rule 1",
                      "description": "",
                      "createdOrUpdatedBy": "info@lacework.net",
                      "createdOrUpdatedTime": "2021-01-12T23:16:08.418Z",
                      "enabled": 1,
                      "resourceGroups": [
                        "QA402035_BA..."
                      ],
                      "severity": [
                        1,
                        2,
                        3
                      ]
                    },
                    "intgGuidList": [
                      "QA402035_32..."
                    ],
                    "reportNotificationTypes": {
                      "gcpCis": false,
                      "gcpComplianceEvents": false,
                      "trendReport": false,
                      "azurePci": true,
                      "agentEvents\"": false,
                      "awsCisS3\"": false,
                      "gcpAuditTrailEvents\"": false,
                      "openShiftCompliance\"": false,
                      "openShiftComplianceEvents\"": false,
                      "azureSoc\"": true,
                      "awsComplianceEvents\"": false,
                      "azureComplianceEvents\"": false,
                      "azureCis\"": true,
                      "azureActivityLogEvents\"": false,
                      "awsCloudtrailEvents\"": false
                    },
                    "type": "Report"
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "patch": {
        "tags": [
          "ReportRules"
        ],
        "summary": "UpdateReportRules",
        "description": "Update a report rule by specifying parameters in the request body when invoking the following endpoint: \n\n  > `PATCH https://YourLacework.lacework.net/api/v2/ReportRule/{mcGuid}`\n\n  Replace `{mcGuid}` with the `mcGuide` value returned for a Report Rule in the response, when the  `GET /api/v2/ReportRules` endpoint is invoked.",
        "operationId": "UpdateReportRules",
        "parameters": [
          {
            "name": "mcGuid",
            "in": "path",
            "description": "Report Rule mcGuid",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "mcGuid96"
              ]
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer AccessToken",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "Authorization96"
              ]
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "application/json"
              ]
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReportRulesRequest"
              },
              "example": {
                "filters": {
                  "name": "name96",
                  "description": "description86",
                  "enabled": 0,
                  "resourceGroups": [
                    "any"
                  ],
                  "severity": [
                    1
                  ]
                },
                "intgGuidList": [
                  "any"
                ],
                "reportNotificationTypes": {
                  "agentEvents": true,
                  "awsCisS3": true,
                  "awsCloudtrailEvents": false,
                  "awsComplianceEvents": false,
                  "azureActivityLogEvents": true,
                  "azureCis": true,
                  "azureComplianceEvents": true,
                  "azurePci": false,
                  "azureSoc": true,
                  "gcpAuditTrailEvents": false,
                  "gcpCis": true,
                  "gcpComplianceEvents": true,
                  "gcpPci": true,
                  "gcpSoc": true,
                  "hipaa": false,
                  "iso2700": true,
                  "nist800-53Rev4": false,
                  "nist800-171Rev2": false,
                  "openShiftCompliance": true,
                  "openShiftComplianceEvents": true,
                  "pci": true,
                  "soc": true,
                  "awsSocRev2": false,
                  "trendReport": true
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "No Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response_20031"
                },
                "example": {
                  "data": {
                    "mcGuid": "QA42F6C8_83...",
                    "filters": {
                      "name": "LW Rule 1",
                      "description": "",
                      "createdOrUpdatedBy": "info@lacework.net",
                      "createdOrUpdatedTime": "2021-01-12T23:16:08.418Z",
                      "enabled": 1,
                      "resourceGroups": [
                        "QA402035_BA..."
                      ],
                      "severity": [
                        1,
                        2,
                        3
                      ]
                    },
                    "intgGuidList": [
                      "QA402035_32..."
                    ],
                    "reportNotificationTypes": {
                      "gcpCis": false,
                      "gcpComplianceEvents": false,
                      "trendReport": false,
                      "azurePci": true,
                      "agentEvents\"": false,
                      "awsCisS3\"": false,
                      "gcpAuditTrailEvents\"": false,
                      "openShiftCompliance\"": false,
                      "openShiftComplianceEvents\"": false,
                      "azureSoc\"": true,
                      "awsComplianceEvents\"": false,
                      "azureComplianceEvents\"": false,
                      "azureCis\"": true,
                      "azureActivityLogEvents\"": false,
                      "awsCloudtrailEvents\"": false
                    },
                    "type": "Report"
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "delete": {
        "tags": [
          "ReportRules"
        ],
        "summary": "DeleteReportRules",
        "description": "Delete a Report Rule by invoking the following endpoint:\n\n  > `DELETE https://YourLacework.lacework.net/api/v2/ReportRules/{mcGuid}`\n\n  Replace `{mcGuid}` with the `mcGuid` value returned for a Report Rule in the response when the  `GET /api/v2/ReportRules` endpoint is invoked.",
        "operationId": "DeleteReportRules",
        "parameters": [
          {
            "name": "mcGuid",
            "in": "path",
            "description": "Report Rule mcGuid",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "mcGuid96"
              ]
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer AccessToken",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "Authorization96"
              ]
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "application/json",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/Content-Type"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "application/json"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "headers": {},
            "content": {}
          },
          "404": {
            "description": "Not found",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response_404"
                },
                "example": {
                  "message": "message96"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "parameters": []
    },
    "/ResourceGroups/{resourceGuid}": {
      "get": {
        "tags": [
          "ResourceGroups"
        ],
        "summary": "ResourceGroupsDetails",
        "description": "Get the details about a resource group by invoking the following endpoint:\n\n  > `GET https://YourLacework.lacework.net/api/v2/ResourceGroups/{resourceGuid}`",
        "operationId": "ResourceGroupsDetails",
        "parameters": [
          {
            "name": "resourceGuid",
            "in": "path",
            "description": "Resource Group resourceGuid",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "resourceGuid37"
              ]
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer AccessToken",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "Authorization37"
              ]
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "application/json",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/Content-Type26"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "application/json"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response_20034"
                },
                "example": {
                  "data": {
                    "resourceName": "resourceName37",
                    "resourceType": "AWS",
                    "props": {
                      "accountIds": [
                        "accountIds7"
                      ],
                      "updatedBy": "updatedBy14",
                      "lastUpdated": 107.38954366296,
                      "description": "description89"
                    },
                    "resourceGuid": "resourceGuid96",
                    "guid": "guid21",
                    "guidType": "guidType12",
                    "isDefault": 104.411318215733,
                    "enabled": 0
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "patch": {
        "tags": [
          "ResourceGroups"
        ],
        "summary": "UpdateResourceGroups",
        "description": "Update a resource group by specifying parameters in the request body  when invoking the following endpoint: \n\n  > `PATCH https://YourLacework.lacework.net/api/v2/ResourceGroups/{resourceGuid}` \n\n  In the request body, only specify the parameter(s) that you want to update, for example, `{ \"enabled\" : 0 }`.",
        "operationId": "UpdateResourceGroups",
        "parameters": [
          {
            "name": "resourceGuid",
            "in": "path",
            "description": "Resource Group resourceGuid",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "resourceGuid37"
              ]
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer AccessToken",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "Authorization37"
              ]
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "application/json"
              ]
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateResourceGroupsRequest"
              },
              "example": {
                "resourceName": "resourceName37",
                "enabled": 0,
                "props": {
                  "description": "description7",
                  "accountIds": [
                    "accountIds41"
                  ]
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "No Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response_20034"
                },
                "example": {
                  "data": {
                    "resourceName": "resourceName37",
                    "resourceType": "AWS",
                    "props": {
                      "accountIds": [
                        "accountIds7"
                      ],
                      "updatedBy": "updatedBy14",
                      "lastUpdated": 107.38954366296,
                      "description": "description89"
                    },
                    "resourceGuid": "resourceGuid96",
                    "guid": "guid21",
                    "guidType": "guidType12",
                    "isDefault": 104.411318215733,
                    "enabled": 0
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "delete": {
        "tags": [
          "ResourceGroups"
        ],
        "summary": "DeleteResourceGroups",
        "description": "Delete a resource group by invoking the following endpoint:\n\n  > `DELETE https://YourLacework.lacework.net/api/v2/ResourceGroups/{resourceGuid}`",
        "operationId": "DeleteResourceGroups",
        "parameters": [
          {
            "name": "resourceGuid",
            "in": "path",
            "description": "Resource Group resourceGuid",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "resourceGuid37"
              ]
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer AccessToken",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "Authorization37"
              ]
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "application/json",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/Content-Type26"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "application/json"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No response content is returned and the request was successfully completed with no errors.",
            "headers": {},
            "content": {}
          },
          "400": {
            "description": "Invalid data",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response_404"
                },
                "example": {
                  "message": "message37"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "parameters": []
    },
    "/ResourceGroups": {
      "post": {
        "tags": [
          "ResourceGroups"
        ],
        "summary": "CreateResourceGroup",
        "description": "Create a resource groups by specifying parameters in the request `body` when invoking the following endpoint:\n\n  > `POST https://YourLacework.lacework.net/api/v2/ResourceGroups`",
        "operationId": "CreateResourceGroup",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer AccessToken",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "Authorization37"
              ]
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "application/json"
              ]
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateResourceGroupRequest"
              },
              "example": {
                "resourceName": "resourceName37",
                "resourceType": "AWS",
                "props": {
                  "accountIds": [
                    "accountIds7"
                  ],
                  "description": "description14"
                },
                "enabled": 0
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "No Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response_20034"
                },
                "example": {
                  "data": {
                    "resourceName": "resourceName37",
                    "resourceType": "AWS",
                    "props": {
                      "accountIds": [
                        "accountIds7"
                      ],
                      "updatedBy": "updatedBy14",
                      "lastUpdated": 107.38954366296,
                      "description": "description89"
                    },
                    "resourceGuid": "resourceGuid96",
                    "guid": "guid21",
                    "guidType": "guidType12",
                    "isDefault": 104.411318215733,
                    "enabled": 0
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "get": {
        "tags": [
          "ResourceGroups"
        ],
        "summary": "ListAllResourceGroups",
        "description": "Get a list of all resource groups for the account by invoking the following endpoint:\n\n  > `GET https://YourLacework.lacework.net/api/v2/ResourceGroups`",
        "operationId": "ListAllResourceGroups",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer AccessToken",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "Authorization37"
              ]
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "application/json",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/Content-Type26"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "application/json"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No Error (List of Resource Groups)",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response_20036"
                },
                "example": {
                  "data": [
                    {
                      "resourceName": "resourceName37",
                      "resourceType": "AWS",
                      "props": {
                        "accountIds": [
                          "accountIds7"
                        ],
                        "updatedBy": "updatedBy14",
                        "lastUpdated": 107.38954366296,
                        "description": "description89"
                      },
                      "resourceGuid": "resourceGuid96",
                      "guid": "guid21",
                      "guidType": "guidType12",
                      "isDefault": 104.411318215733,
                      "enabled": 0
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "parameters": []
    },
    "/ResourceGroups/search": {
      "post": {
        "tags": [
          "ResourceGroups"
        ],
        "summary": "SearchResourceGroups",
        "description": "Search resource groups by invoking the following endpoint:\n\n  > `POST https://YourLacework.lacework.net/api/v2/ResourceGroups/search`\n\n To limit the returned result, optionally specify one or more `filters` in the request `body`. For more information about using filters, see the [Simple & Advanced Search section](/api/v2/docs/#tag/OVERVIEW). \n\n  In the request `body`, optionally specify the list of fields to return in the response by specifying the list in the `returns` array, for example, `\"returns\":[ \"name\", \"type\", \"enabled\" ]`.",
        "operationId": "SearchResourceGroups",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer AccessToken",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "Authorization37"
              ]
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "application/json"
              ]
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchAlertRulesRequest"
              },
              "example": {
                "filters": [
                  {
                    "expression": "not_rlike",
                    "field": "field78",
                    "value": "value29",
                    "values": [
                      "values69"
                    ]
                  }
                ],
                "returns": [
                  "returns5"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "No Error (List of Resource Groups)",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response_20036"
                },
                "example": {
                  "data": [
                    {
                      "resourceName": "resourceName37",
                      "resourceType": "AWS",
                      "props": {
                        "accountIds": [
                          "accountIds7"
                        ],
                        "updatedBy": "updatedBy14",
                        "lastUpdated": 107.38954366296,
                        "description": "description89"
                      },
                      "resourceGuid": "resourceGuid96",
                      "guid": "guid21",
                      "guidType": "guidType12",
                      "isDefault": 104.411318215733,
                      "enabled": 0
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "parameters": []
    },
    "/TeamMembers/{userGuid}": {
      "patch": {
        "tags": [
          "TeamMembers"
        ],
        "summary": "UpdateTeamMember",
        "description": "Optionally update the `userName` and`userEnabled` settings and the `props`  sub-settings of the passed in Team Member.  Update these settings by invoking the following endpoint:\n\n  > `PATCH https://YourLacework.lacework.net/api/v2/TeamMembers/{userGuid}`\n\n  Replace `{userGuid}` with the `userGuid` value returned for a Team Member in the response, when the  `GET /api/v2/TeamMembers` endpoint is invoked.\n\n  Here is an example `body` payload:\n\n  > `{ \"props\": {\"firstName\":\"Jane\"} }`\n\n",
        "operationId": "UpdateTeamMember",
        "parameters": [
          {
            "name": "userGuid",
            "in": "path",
            "description": "Team Member userGuid",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "userGuid37"
              ]
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer AccessToken",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "Authorization37"
              ]
            }
          },
          {
            "name": "Org-Access",
            "in": "header",
            "description": "Org account privileges",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "boolean",
              "examples": [
                false
              ]
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "application/json"
              ]
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTeamMemberRequest"
              },
              "example": {
                "props": {
                  "firstName": "firstName37",
                  "lastName": "lastName7",
                  "company": "company14",
                  "accountAdmin": false
                },
                "orgAdmin": false,
                "orgUser": false,
                "adminRoleAccounts": [
                  "adminRoleAccounts42"
                ],
                "userRoleAccounts": [
                  "userRoleAccounts87"
                ],
                "userEnabled": 1
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "No Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response_20038"
                },
                "example": {
                  "data": {
                    "props": {
                      "firstName": "firstName37",
                      "lastName": "lastName7",
                      "company": "company14",
                      "accountAdmin": false
                    },
                    "orgAdmin": false,
                    "orgUser": false,
                    "adminRoleAccounts": [
                      "adminRoleAccounts42"
                    ],
                    "userRoleAccounts": [
                      "userRoleAccounts87"
                    ],
                    "userEnabled": 1
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "delete": {
        "tags": [
          "TeamMembers"
        ],
        "summary": "DeleteTeamMember",
        "description": "Delete a Team Member by invoking the following endpoint:\n\n  > `DELETE https://YourLacework.lacework.net/api/v2/TeamMembers/{userGuid}`\n\n  Replace `{userGuid}` with the `userGuid` value returned for a Team Member in the response when the  `GET /api/v2/TeamMembers` endpoint is invoked.",
        "operationId": "DeleteTeamMember",
        "parameters": [
          {
            "name": "userGuid",
            "in": "path",
            "description": "Team Member userGuid",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "userGuid37"
              ]
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer AccessToken",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "Authorization37"
              ]
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "application/json",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/Content-Type26"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "application/json"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "headers": {},
            "content": {}
          },
          "404": {
            "description": "Not found",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response_404"
                },
                "example": {
                  "message": "message96"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "get": {
        "tags": [
          "TeamMembers"
        ],
        "summary": "TeamMemberDetails",
        "description": "Get details about a Team Member  by invoking the following endpoint:\n\n  > `GET https://YourLacework.lacework.net/api/v2/TeamMembers/{userGuid}`\n\n  Replace `{userGuid}` with the `userGuid` value returned for a Team Member in the response when the  `GET /api/v2/TeamMembers` endpoint is invoked.",
        "operationId": "TeamMemberDetails",
        "parameters": [
          {
            "name": "userGuid",
            "in": "path",
            "description": "Team Member userGuid",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "userGuid37"
              ]
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer AccessToken",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "Authorization37"
              ]
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "application/json",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/Content-Type26"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "application/json"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response_20039"
                },
                "example": {
                  "data": {
                    "props": {
                      "firstName": "firstName37",
                      "lastName": "lastName7",
                      "company": "company14",
                      "accountAdmin": false
                    },
                    "orgAdmin": false,
                    "orgUser": false,
                    "adminRoleAccounts": [
                      "adminRoleAccounts87"
                    ],
                    "userRoleAccounts": [
                      "userRoleAccounts22"
                    ],
                    "userName": "userName13",
                    "userEnabled": 1,
                    "userGuid": "userGuid81"
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "parameters": []
    },
    "/TeamMembers/search": {
      "post": {
        "tags": [
          "TeamMembers"
        ],
        "summary": "SearchTeamMembers",
        "description": "Search all the team members in your Lacework instance,  by invoking the following endpoint:\n\n  > `POST https://YourLacework.lacework.net/api/v2/TeamMembers/search`\n\n  To limit the returned result, optionally specify one or more filters in the request `body`. For more information about using filters, see the [Simple & Advanced Search section](/api/v2/docs/#tag/OVERVIEW).\n\n  You can filter on the following fields:\n\n  * `custGuid`\n\n  * `userGuid`\n\n  * `userName`\n\n  * `userEnabled`\n\n  Here is an example `body` payload:\n\n  > `{ \"filters\" : [ { \"expression\": \"eq\", \"field\": \"userName\",  \"value\": \"jane.smith@mycompany.com\" } ] } `\n\n",
        "operationId": "SearchTeamMembers",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer AccessToken",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "Authorization37"
              ]
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "application/json"
              ]
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchAlertRulesRequest"
              },
              "example": {
                "filters": [
                  {
                    "expression": "not_rlike",
                    "field": "field78",
                    "value": "value29",
                    "values": [
                      "values69"
                    ]
                  }
                ],
                "returns": [
                  "returns5"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "No Error (List of Team Members)",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response_20040"
                },
                "example": {
                  "data": [
                    {
                      "props": {
                        "firstName": "firstName37",
                        "lastName": "lastName7",
                        "company": "company14",
                        "accountAdmin": false
                      },
                      "orgAdmin": false,
                      "orgUser": false,
                      "adminRoleAccounts": [
                        "adminRoleAccounts87"
                      ],
                      "userRoleAccounts": [
                        "userRoleAccounts22"
                      ],
                      "userName": "userName13",
                      "userEnabled": 1,
                      "userGuid": "userGuid81"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "parameters": []
    },
    "/TeamMembers": {
      "get": {
        "tags": [
          "TeamMembers"
        ],
        "summary": "ListAllTeamMembers",
        "description": "Get a list of Team Members in your Lacework instance, by invoking the following endpoint:\n\n  > `GET https://YourLacework.lacework.net/api/v2/TeamMembers`",
        "operationId": "ListAllTeamMembers",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer AccessToken",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "Authorization37"
              ]
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "application/json",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/Content-Type26"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "application/json"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No Error (List of Team Members)",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response_20040"
                },
                "example": {
                  "data": [
                    {
                      "props": {
                        "firstName": "firstName37",
                        "lastName": "lastName7",
                        "company": "company14",
                        "accountAdmin": false
                      },
                      "orgAdmin": false,
                      "orgUser": false,
                      "adminRoleAccounts": [
                        "adminRoleAccounts87"
                      ],
                      "userRoleAccounts": [
                        "userRoleAccounts22"
                      ],
                      "userName": "userName13",
                      "userEnabled": 1,
                      "userGuid": "userGuid81"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "post": {
        "tags": [
          "TeamMembers"
        ],
        "summary": "CreateTeamMembers",
        "description": "Create a Team Member in your Lacework instance,  by invoking the following endpoint:\n\n  > `POST https://YourLacework.lacework.net/api/v2/TeamMembers`\n\n  Here is an example `body` payload:\n\n  > `{ \"userName\": \"jane.smith@mycompany.com\",  \"userEnabled\": 1,  \"props\": {  \"firstName\": \"Jane\",  \"lastName\": \"Smith\",  \"company\": \"myCompany\", \"accountAdmin\": true } \n  }`\n",
        "operationId": "CreateTeamMembers",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer AccessToken",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "Authorization37"
              ]
            }
          },
          {
            "name": "Org-Access",
            "in": "header",
            "description": "Org account privileges",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "boolean",
              "examples": [
                false
              ]
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "application/json"
              ]
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTeamMembersRequest"
              },
              "example": {
                "props": {
                  "firstName": "firstName37",
                  "lastName": "lastName7",
                  "company": "company14",
                  "accountAdmin": false
                },
                "orgAdmin": false,
                "orgUser": false,
                "adminRoleAccounts": [
                  "adminRoleAccounts87"
                ],
                "userRoleAccounts": [
                  "userRoleAccounts22"
                ],
                "userName": "userName13",
                "userEnabled": 1
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "No Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response_20039"
                },
                "example": {
                  "data": {
                    "props": {
                      "firstName": "firstName37",
                      "lastName": "lastName7",
                      "company": "company14",
                      "accountAdmin": false
                    },
                    "orgAdmin": false,
                    "orgUser": false,
                    "adminRoleAccounts": [
                      "adminRoleAccounts87"
                    ],
                    "userRoleAccounts": [
                      "userRoleAccounts22"
                    ],
                    "userName": "userName13",
                    "userEnabled": 1,
                    "userGuid": "userGuid81"
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "parameters": []
    },
    "/UserProfile": {
      "get": {
        "tags": [
          "UserProfile"
        ],
        "summary": "ListSub-accounts",
        "description": "List all the sub-accounts that are managed by the `YourLacework` account,  by invoking the following endpoint:\n\n  > `GET https://YourLacework.lacework.net/api/v2/UserProfile` \n\n For example if you specify the `IT20.MyCompany` organization account in  `YourLacework`, all the sub-accounts of the `IT20` account are listed.\n\n  Here is an example invocation:\n\n  > `GET https://IT20.MyCompany.lacework.net/api/v2/UserProfile`\n\n  Details about organization accounts and non-organization accounts are reported in the response.  In addition, details about authorization and privileges are also listed.",
        "operationId": "ListSub-accounts",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer AccessToken",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "Authorization37"
              ]
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "application/json",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/Content-Type26"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "examples": [
                "application/json"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Sub-accounts",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response_20042"
                },
                "example": {
                  "data": [
                    {
                      "username": "username37",
                      "orgAccount": false,
                      "accounts": [
                        {
                          "admin": false,
                          "accountName": "accountName14",
                          "custGuid": "custGuid42",
                          "userGuid": "userGuid87",
                          "userEnabled": 1
                        }
                      ],
                      "url": "url21",
                      "orgAdmin": false,
                      "orgUser": false
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "parameters": []
    }
  },
  "components": {
    "schemas": {
      "Response_2002": {
        "title": "Response_2002",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Data1"
            },
            "description": ""
          }
        },
        "examples": [
          {
            "data": [
              {
                "accessToken": "47d102752b57caa18b...",
                "createdTime": "2020-12-16T16:43:37.915Z",
                "props": "{\"CREATED_TIME\":1598530228648}",
                "tokenAlias": "Ops Agent",
                "tokenEnabled": "1",
                "version": "0.1"
              },
              {
                "accessToken": "e2f32885791213cb41...",
                "createdTime": "2020-12-10T18:14:05.754Z",
                "props": "{\"CREATED_TIME\":1607624045577,\"DESCRIPTION\":\"testing agent\"}",
                "tokenAlias": "Dev Agent",
                "tokenEnabled": "1",
                "version": "0.1"
              }
            ]
          }
        ]
      },
      "Name": {
        "title": "Name",
        "required": [
          "type",
          "minLength"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "minLength": {
            "type": "integer",
            "contentEncoding": "int32"
          }
        },
        "examples": [
          {
            "type": "string",
            "minLength": 1
          }
        ]
      },
      "GenerateAccessTokensRequest": {
        "title": "GenerateAccessTokensRequest",
        "required": [
          "keyId",
          "expiryTime"
        ],
        "type": "object",
        "properties": {
          "keyId": {
            "type": "string"
          },
          "expiryTime": {
            "type": "integer",
            "contentEncoding": "int32"
          }
        },
        "examples": [
          {
            "keyId": "keyId96",
            "expiryTime": 221
          }
        ]
      },
      "Response_200": {
        "title": "Response_200",
        "required": [
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "examples": [
          {
            "name": "accountName",
            "type": "string"
          }
        ]
      },
      "Response_201": {
        "title": "Response_201",
        "required": [
          "expiresAt",
          "token"
        ],
        "type": "object",
        "properties": {
          "expiresAt": {
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        },
        "examples": [
          {
            "expiresAt": "expiresAt96",
            "token": "token86"
          }
        ]
      },
      "Response_2001": {
        "title": "Response_2001",
        "required": [
          "required",
          "properties"
        ],
        "type": "object",
        "properties": {
          "required": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "properties": {
            "$ref": "#/components/schemas/Properties"
          }
        },
        "examples": [
          {
            "required": [
              "type",
              "enabled",
              "name",
              "data"
            ],
            "properties": {
              "name": {
                "type": "string",
                "minLength": 1
              },
              "type": {
                "type": "string",
                "enum": [
                  "SlackChannel"
                ]
              },
              "enabled": {
                "type": "number",
                "minimum": 0,
                "maximum": 1
              },
              "data": {
                "properties": {
                  "slackUrl": {
                    "type": "string",
                    "pattern": "^https://hooks.slack.com([/][a-zA-Z0-9#-_]+)+$"
                  }
                },
                "required": [
                  "slackUrl"
                ],
                "additionalProperties": false,
                "type": "object"
              }
            }
          }
        ]
      },
      "SlackUrl": {
        "title": "SlackUrl",
        "required": [
          "type",
          "pattern"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "pattern": {
            "type": "string"
          }
        },
        "examples": [
          {
            "type": "string",
            "pattern": "^https://hooks.slack.com([/][a-zA-Z0-9#-_]+)+$"
          }
        ]
      },
      "CreateAgentAccessTokenRequest": {
        "title": "CreateAgentAccessTokenRequest",
        "required": [
          "tokenEnabled",
          "tokenAlias"
        ],
        "type": "object",
        "properties": {
          "tokenEnabled": {
            "type": "string"
          },
          "tokenAlias": {
            "type": "string"
          }
        },
        "examples": [
          {
            "tokenEnabled": "tokenEnabled96",
            "tokenAlias": "tokenAlias86"
          }
        ]
      },
      "Response_2011": {
        "title": "Response_2011",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Data1"
          }
        },
        "examples": [
          {
            "data": {
              "accessToken": "47d102752b57caa18b...",
              "createdTime": "2020-12-16T16:43:37.915Z",
              "props": "{\"CREATED_TIME\":1598530228648}",
              "tokenAlias": "Ops Agent",
              "tokenEnabled": "1",
              "version": "0.1"
            }
          }
        ]
      },
      "Data6": {
        "title": "Data6",
        "required": [
          "s3CrossAccountCredentials"
        ],
        "type": "object",
        "properties": {
          "s3CrossAccountCredentials": {
            "$ref": "#/components/schemas/S3CrossAccountCredentials"
          }
        },
        "examples": [
          {
            "s3CrossAccountCredentials": {
              "externalId": "externalId29",
              "roleArn": "roleArn69",
              "bucketArn": "bucketArn5"
            }
          }
        ]
      },
      "Response_2006": {
        "title": "Response_2006",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Data7"
            },
            "description": ""
          }
        },
        "examples": [
          {
            "data": [
              {
                "name": "name96",
                "type": "AwsS3",
                "enabled": 0.788263630954671,
                "data": {
                  "s3CrossAccountCredentials": {
                    "externalId": "externalId29",
                    "roleArn": "roleArn69",
                    "bucketArn": "bucketArn5"
                  }
                },
                "isOrg": 0,
                "props": {}
              }
            ]
          }
        ]
      },
      "SearchAuditLogsRequest": {
        "title": "SearchAuditLogsRequest",
        "required": [
          "timeFilter",
          "filters",
          "returns"
        ],
        "type": "object",
        "properties": {
          "timeFilter": {
            "$ref": "#/components/schemas/TimeFilter"
          },
          "filters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Filters3"
            },
            "description": ""
          },
          "returns": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "examples": [
          {
            "timeFilter": {
              "startTime": "startTime96",
              "endTime": "endTime86"
            },
            "filters": [
              {
                "expression": "not_rlike",
                "field": "field78",
                "value": "value29",
                "values": [
                  "values69"
                ]
              }
            ],
            "returns": [
              "returns3"
            ]
          }
        ]
      },
      "TimeFilter": {
        "title": "TimeFilter",
        "required": [
          "startTime",
          "endTime"
        ],
        "type": "object",
        "properties": {
          "startTime": {
            "type": "string"
          },
          "endTime": {
            "type": "string"
          }
        },
        "examples": [
          {
            "startTime": "startTime96",
            "endTime": "endTime86"
          }
        ]
      },
      "CrossAccountCredentials": {
        "title": "CrossAccountCredentials",
        "required": [
          "externalId",
          "roleArn"
        ],
        "type": "object",
        "properties": {
          "externalId": {
            "type": "string"
          },
          "roleArn": {
            "type": "string"
          }
        },
        "examples": [
          {
            "externalId": "externalId29",
            "roleArn": "roleArn69"
          }
        ]
      },
      "CreateCloudAccountsRequest": {
        "title": "CreateCloudAccountsRequest",
        "required": [
          "name",
          "type",
          "enabled",
          "data"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "enabled": {
            "type": "number"
          },
          "data": {
            "$ref": "#/components/schemas/Data28"
          }
        },
        "examples": [
          {
            "name": "name96",
            "type": "AwsCfg",
            "enabled": 0.788263630954671,
            "data": {
              "crossAccountCredentials": {
                "externalId": "externalId29",
                "roleArn": "roleArn69"
              },
              "awsAccountId": "awsAccountId5"
            }
          }
        ]
      },
      "SearchCloudAccountsRequest": {
        "title": "SearchCloudAccountsRequest",
        "required": [
          "filters",
          "returns"
        ],
        "type": "object",
        "properties": {
          "filters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Filters3"
            },
            "description": ""
          },
          "returns": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "examples": [
          {
            "filters": [
              {
                "expression": "not_rlike",
                "field": "field78",
                "value": "value29",
                "values": [
                  "values69"
                ]
              }
            ],
            "returns": [
              "returns5"
            ]
          }
        ]
      },
      "SearchCloudActivitiesRequest": {
        "title": "SearchCloudActivitiesRequest",
        "required": [
          "timeFilter",
          "filters",
          "returns"
        ],
        "type": "object",
        "properties": {
          "timeFilter": {
            "$ref": "#/components/schemas/TimeFilter"
          },
          "filters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Filters3"
            },
            "description": ""
          },
          "returns": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "examples": [
          {
            "timeFilter": {
              "startTime": "startTime96",
              "endTime": "endTime86"
            },
            "filters": [
              {
                "expression": "not_rlike",
                "field": "field78",
                "value": "value29",
                "values": [
                  "values69"
                ]
              }
            ],
            "returns": [
              "returns3"
            ]
          }
        ]
      },
      "Props": {
        "title": "Props",
        "required": [
          "contractStartUtc",
          "renewalUtc",
          "numPurchased",
          "dataRetentionInDay"
        ],
        "type": "object",
        "properties": {
          "contractStartUtc": {
            "type": "string"
          },
          "renewalUtc": {
            "type": "string"
          },
          "numPurchased": {
            "type": "integer",
            "contentEncoding": "int32"
          },
          "dataRetentionInDay": {
            "type": "integer",
            "contentEncoding": "int32"
          }
        },
        "examples": [
          {
            "contractStartUtc": "2020-12-01T00:00:00Z",
            "renewalUtc": "2021-03-01T00:00:00Z",
            "numPurchased": 1,
            "dataRetentionInDay": 90
          }
        ]
      },
      "Data58": {
        "title": "Data58",
        "required": [
          "mcGuid",
          "filters",
          "intgGuidList",
          "reportNotificationTypes",
          "type"
        ],
        "type": "object",
        "properties": {
          "mcGuid": {
            "type": "string"
          },
          "filters": {
            "$ref": "#/components/schemas/Filters13"
          },
          "intgGuidList": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "reportNotificationTypes": {
            "$ref": "#/components/schemas/ReportNotificationTypes"
          },
          "type": {
            "type": "string"
          }
        },
        "examples": [
          {
            "mcGuid": "QA42F6C8_83...",
            "filters": {
              "name": "LW Rule 1",
              "description": "",
              "createdOrUpdatedBy": "info@lacework.net",
              "createdOrUpdatedTime": "2021-01-12T23:16:08.418Z",
              "enabled": 1,
              "resourceGroups": [
                "QA402035_BA..."
              ],
              "severity": [
                1,
                2,
                3
              ]
            },
            "intgGuidList": [
              "QA402035_32..."
            ],
            "reportNotificationTypes": {
              "gcpCis": false,
              "gcpComplianceEvents": false,
              "trendReport": false,
              "azurePci": false,
              "agentEvents\"": false,
              "awsCisS3\"": true,
              "gcpAuditTrailEvents\"": false,
              "openShiftCompliance\"": false,
              "openShiftComplianceEvents\"": false,
              "azureSoc\"": false,
              "awsComplianceEvents\"": true,
              "azureComplianceEvents\"": false,
              "azureCis\"": false,
              "azureActivityLogEvents\"": false,
              "awsCloudtrailEvents\"": true
            },
            "type": "Report"
          }
        ]
      },
      "Filters13": {
        "title": "Filters13",
        "required": [
          "name",
          "description",
          "createdOrUpdatedBy",
          "createdOrUpdatedTime",
          "enabled",
          "resourceGroups",
          "severity"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdOrUpdatedBy": {
            "type": "string"
          },
          "createdOrUpdatedTime": {
            "type": "string"
          },
          "enabled": {
            "type": "integer",
            "contentEncoding": "int32"
          },
          "resourceGroups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "severity": {
            "type": "array",
            "items": {
              "type": "integer",
              "contentEncoding": "int32"
            },
            "description": ""
          }
        },
        "examples": [
          {
            "name": "LW Rule 1",
            "description": "",
            "createdOrUpdatedBy": "info@lacework.net",
            "createdOrUpdatedTime": "2021-01-12T23:16:08.418Z",
            "enabled": 1,
            "resourceGroups": [
              "QA402035_BA..."
            ],
            "severity": [
              1,
              2,
              3
            ]
          }
        ]
      },
      "ReportNotificationTypes": {
        "title": "ReportNotificationTypes",
        "required": [
          "gcpCis",
          "gcpComplianceEvents",
          "trendReport",
          "azurePci",
          "agentEvents\"",
          "awsCisS3\"",
          "gcpAuditTrailEvents\"",
          "openShiftCompliance\"",
          "openShiftComplianceEvents\"",
          "azureSoc\"",
          "awsComplianceEvents\"",
          "azureComplianceEvents\"",
          "azureCis\"",
          "azureActivityLogEvents\"",
          "awsCloudtrailEvents\""
        ],
        "type": "object",
        "properties": {
          "gcpCis": {
            "type": "boolean"
          },
          "gcpComplianceEvents": {
            "type": "boolean"
          },
          "trendReport": {
            "type": "boolean"
          },
          "azurePci": {
            "type": "boolean"
          },
          "agentEvents\"": {
            "type": "boolean"
          },
          "awsCisS3\"": {
            "type": "boolean"
          },
          "gcpAuditTrailEvents\"": {
            "type": "boolean"
          },
          "openShiftCompliance\"": {
            "type": "boolean"
          },
          "openShiftComplianceEvents\"": {
            "type": "boolean"
          },
          "azureSoc\"": {
            "type": "boolean"
          },
          "awsComplianceEvents\"": {
            "type": "boolean"
          },
          "azureComplianceEvents\"": {
            "type": "boolean"
          },
          "azureCis\"": {
            "type": "boolean"
          },
          "azureActivityLogEvents\"": {
            "type": "boolean"
          },
          "awsCloudtrailEvents\"": {
            "type": "boolean"
          }
        },
        "examples": [
          {
            "gcpCis": false,
            "gcpComplianceEvents": false,
            "trendReport": false,
            "azurePci": false,
            "agentEvents\"": false,
            "awsCisS3\"": true,
            "gcpAuditTrailEvents\"": false,
            "openShiftCompliance\"": false,
            "openShiftComplianceEvents\"": false,
            "azureSoc\"": false,
            "awsComplianceEvents\"": true,
            "azureComplianceEvents\"": false,
            "azureCis\"": false,
            "azureActivityLogEvents\"": false,
            "awsCloudtrailEvents\"": true
          }
        ]
      },
      "Response_20034": {
        "title": "Response_20034",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Data63"
          }
        },
        "examples": [
          {
            "data": {
              "resourceName": "resourceName37",
              "resourceType": "AWS",
              "props": {
                "accountIds": [
                  "accountIds7"
                ],
                "updatedBy": "updatedBy14",
                "lastUpdated": 107.38954366296,
                "description": "description89"
              },
              "resourceGuid": "resourceGuid96",
              "guid": "guid21",
              "guidType": "guidType12",
              "isDefault": 104.411318215733,
              "enabled": 0
            }
          }
        ]
      },
      "UpdateResourceGroupsRequest": {
        "title": "UpdateResourceGroupsRequest",
        "required": [
          "resourceName",
          "enabled",
          "props"
        ],
        "type": "object",
        "properties": {
          "resourceName": {
            "type": "string"
          },
          "enabled": {
            "type": "integer",
            "contentEncoding": "int32"
          },
          "props": {
            "$ref": "#/components/schemas/Props2"
          }
        },
        "examples": [
          {
            "resourceName": "resourceName37",
            "enabled": 0,
            "props": {
              "description": "description7",
              "accountIds": [
                "accountIds41"
              ]
            }
          }
        ]
      },
      "SearchTeamMembersRequest": {
        "title": "SearchTeamMembersRequest",
        "required": [
          "filters",
          "returns"
        ],
        "type": "object",
        "properties": {
          "filters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Filters3"
            },
            "description": ""
          },
          "returns": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "examples": [
          {
            "filters": [
              {
                "expression": "not_rlike",
                "field": "field78",
                "value": "value29",
                "values": [
                  "values69"
                ]
              }
            ],
            "returns": [
              "returns5"
            ]
          }
        ]
      },
      "CreateTeamMembersRequest": {
        "title": "CreateTeamMembersRequest",
        "required": [
          "props",
          "orgAdmin",
          "orgUser",
          "adminRoleAccounts",
          "userRoleAccounts",
          "userName",
          "userEnabled"
        ],
        "type": "object",
        "properties": {
          "props": {
            "$ref": "#/components/schemas/Props8"
          },
          "orgAdmin": {
            "type": "boolean"
          },
          "orgUser": {
            "type": "boolean"
          },
          "adminRoleAccounts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "userRoleAccounts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "userName": {
            "type": "string"
          },
          "userEnabled": {
            "type": "integer",
            "contentEncoding": "int32"
          }
        },
        "examples": [
          {
            "props": {
              "firstName": "firstName37",
              "lastName": "lastName7",
              "company": "company14",
              "accountAdmin": false
            },
            "orgAdmin": false,
            "orgUser": false,
            "adminRoleAccounts": [
              "adminRoleAccounts87"
            ],
            "userRoleAccounts": [
              "userRoleAccounts22"
            ],
            "userName": "userName13",
            "userEnabled": 1
          }
        ]
      },
      "Response_20042": {
        "title": "Response_20042",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Data73"
            },
            "description": ""
          }
        },
        "examples": [
          {
            "data": [
              {
                "username": "username37",
                "orgAccount": false,
                "accounts": [
                  {
                    "admin": false,
                    "accountName": "accountName14",
                    "custGuid": "custGuid42",
                    "userGuid": "userGuid87",
                    "userEnabled": 1
                  }
                ],
                "url": "url21",
                "orgAdmin": false,
                "orgUser": false
              }
            ]
          }
        ]
      },
      "Type": {
        "title": "Type",
        "required": [
          "type",
          "enum"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "enum": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "examples": [
          {
            "type": "string",
            "enum": [
              "SlackChannel"
            ]
          }
        ]
      },
      "Data": {
        "title": "Data",
        "required": [
          "properties",
          "required",
          "additionalProperties",
          "type"
        ],
        "type": "object",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/Properties1"
          },
          "required": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "additionalProperties": {
            "type": "boolean"
          },
          "type": {
            "type": "string"
          }
        },
        "examples": [
          {
            "properties": {
              "slackUrl": {
                "type": "string",
                "pattern": "^https://hooks.slack.com([/][a-zA-Z0-9#-_]+)+$"
              }
            },
            "required": [
              "slackUrl"
            ],
            "additionalProperties": false,
            "type": "object"
          }
        ]
      },
      "Response_2012": {
        "title": "Response_2012",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Data7"
          }
        },
        "examples": [
          {
            "data": {
              "name": "name96",
              "type": "AwsS3",
              "enabled": 0.788263630954671,
              "data": {
                "s3CrossAccountCredentials": {
                  "externalId": "externalId29",
                  "roleArn": "roleArn69",
                  "bucketArn": "bucketArn5"
                }
              },
              "isOrg": 0,
              "props": {}
            }
          }
        ]
      },
      "Response_404": {
        "title": "Response_404",
        "required": [
          "message"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "examples": [
          {
            "message": "message96"
          }
        ]
      },
      "CreateAlertRulesRequest": {
        "title": "CreateAlertRulesRequest",
        "required": [
          "filters",
          "intgGuidList",
          "type"
        ],
        "type": "object",
        "properties": {
          "filters": {
            "$ref": "#/components/schemas/Filters1"
          },
          "intgGuidList": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "type": {
            "type": "string"
          }
        },
        "examples": [
          {
            "filters": {
              "name": "name96",
              "description": "description86",
              "enabled": 0,
              "resourceGroups": [
                "any"
              ],
              "eventCategory": [
                "Compliance"
              ],
              "severity": [
                3
              ]
            },
            "intgGuidList": [
              "any"
            ],
            "type": "Event"
          }
        ]
      },
      "Response_20015": {
        "title": "Response_20015",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Data25"
            },
            "description": ""
          }
        },
        "examples": [
          {
            "data": [
              {
                "createdTime": 248,
                "accountName": "accountName86",
                "userName": "userName3",
                "eventName": "eventName89",
                "userAction": "userAction35",
                "eventDescription": "eventDescription51"
              }
            ]
          }
        ]
      },
      "Response_2014": {
        "title": "Response_2014",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Data27"
          }
        },
        "examples": [
          {
            "data": {
              "name": "name96",
              "type": "AwsCfg",
              "enabled": 0.788263630954671,
              "data": {
                "crossAccountCredentials": {
                  "externalId": "externalId29",
                  "roleArn": "roleArn69"
                },
                "awsAccountId": "awsAccountId5"
              },
              "isOrg": 0,
              "props": {}
            }
          }
        ]
      },
      "Response_20022": {
        "title": "Response_20022",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Data41"
            },
            "description": ""
          }
        },
        "examples": [
          {
            "data": [
              {
                "startTime": 248,
                "endTime": 221,
                "eventType": "eventType3",
                "eventId": 178.572675387176,
                "eventModel": "eventModel5",
                "eventActor": "eventActor91",
                "entityMap": {}
              }
            ]
          }
        ]
      },
      "UpdateContainerRegistriesRequest": {
        "title": "UpdateContainerRegistriesRequest",
        "required": [
          "name",
          "enabled",
          "data"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "enabled": {
            "type": "number"
          },
          "data": {
            "$ref": "#/components/schemas/Data43"
          }
        },
        "examples": [
          {
            "name": "name96",
            "enabled": 0.788263630954671,
            "data": {
              "crossAccountCredentials": {
                "externalId": "externalId69",
                "roleArn": "roleArn5"
              },
              "awsAuthType": "AWS_IAM",
              "registryType": "AWS_ECR",
              "registryDomain": "registryDomain69",
              "limitNumImg": 10,
              "limitByRep": "[]",
              "limitByTag": "[]",
              "limitByLabel": [
                {
                  "kj": "kj35"
                }
              ]
            }
          }
        ]
      },
      "LimitByLabel": {
        "title": "LimitByLabel",
        "required": [
          "kj"
        ],
        "type": "object",
        "properties": {
          "kj": {
            "type": "string"
          }
        },
        "examples": [
          {
            "kj": "kj35"
          }
        ]
      },
      "Response_20026": {
        "title": "Response_20026",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Data44"
            },
            "description": ""
          }
        },
        "examples": [
          {
            "data": [
              {
                "name": "name96",
                "type": "ContVulnCfg",
                "enabled": 0.788263630954671,
                "data": {
                  "crossAccountCredentials": {
                    "externalId": "externalId29",
                    "roleArn": "roleArn69"
                  },
                  "awsAuthType": "AWS_IAM",
                  "registryType": "AWS_ECR",
                  "registryDomain": "registryDomain29",
                  "limitNumImg": 5,
                  "limitByRep": "[]",
                  "limitByTag": "[]",
                  "limitByLabel": [
                    {
                      "kj": "kj89"
                    }
                  ]
                },
                "isOrg": 0,
                "props": {}
              }
            ]
          }
        ]
      },
      "SearchReportRulesRequest": {
        "title": "SearchReportRulesRequest",
        "required": [
          "filters",
          "returns"
        ],
        "type": "object",
        "properties": {
          "filters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Filters3"
            },
            "description": ""
          },
          "returns": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "examples": [
          {
            "filters": [
              {
                "expression": "not_rlike",
                "field": "field78",
                "value": "value29",
                "values": [
                  "values69"
                ]
              }
            ],
            "returns": [
              "returns5"
            ]
          }
        ]
      },
      "Response_20030": {
        "title": "Response_20030",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Data58"
            },
            "description": ""
          }
        },
        "examples": [
          {
            "data": [
              {
                "mcGuid": "QA42F6C8_83...",
                "filters": {
                  "name": "LW Rule 1",
                  "description": "",
                  "createdOrUpdatedBy": "info@lacework.net",
                  "createdOrUpdatedTime": "2021-01-12T23:16:08.418Z",
                  "enabled": 1,
                  "resourceGroups": [
                    "QA402035_BA..."
                  ],
                  "severity": [
                    1,
                    2,
                    3
                  ]
                },
                "intgGuidList": [
                  "QA402035_32..."
                ],
                "reportNotificationTypes": {
                  "gcpCis": false,
                  "gcpComplianceEvents": false,
                  "trendReport": false,
                  "azurePci": false,
                  "agentEvents\"": false,
                  "awsCisS3\"": true,
                  "gcpAuditTrailEvents\"": false,
                  "openShiftCompliance\"": false,
                  "openShiftComplianceEvents\"": false,
                  "azureSoc\"": false,
                  "awsComplianceEvents\"": true,
                  "azureComplianceEvents\"": false,
                  "azureCis\"": false,
                  "azureActivityLogEvents\"": false,
                  "awsCloudtrailEvents\"": true
                },
                "type": "Report"
              },
              {
                "mcGuid": "QA42F6C8_88...",
                "filters": {
                  "name": "LW Rule 2",
                  "description": "",
                  "createdOrUpdatedBy": "info@lacework.net",
                  "createdOrUpdatedTime": "2021-01-12T23:18:08.418Z",
                  "enabled": 1,
                  "resourceGroups": [
                    "QA402035_BC..."
                  ],
                  "severity": [
                    1,
                    2,
                    3
                  ]
                },
                "intgGuidList": [
                  "QA402035_33..."
                ],
                "reportNotificationTypes": {
                  "gcpCis": false,
                  "gcpComplianceEvents": false,
                  "trendReport": false,
                  "azurePci": true,
                  "agentEvents\"": false,
                  "awsCisS3\"": false,
                  "gcpAuditTrailEvents\"": false,
                  "openShiftCompliance\"": false,
                  "openShiftComplianceEvents\"": false,
                  "azureSoc\"": true,
                  "awsComplianceEvents\"": false,
                  "azureComplianceEvents\"": false,
                  "azureCis\"": true,
                  "azureActivityLogEvents\"": false,
                  "awsCloudtrailEvents\"": false
                },
                "type": "Report"
              }
            ]
          }
        ]
      },
      "Response_20031": {
        "title": "Response_20031",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Data58"
          }
        },
        "examples": [
          {
            "data": {
              "mcGuid": "QA42F6C8_83...",
              "filters": {
                "name": "LW Rule 1",
                "description": "",
                "createdOrUpdatedBy": "info@lacework.net",
                "createdOrUpdatedTime": "2021-01-12T23:16:08.418Z",
                "enabled": 1,
                "resourceGroups": [
                  "QA402035_BA..."
                ],
                "severity": [
                  1,
                  2,
                  3
                ]
              },
              "intgGuidList": [
                "QA402035_32..."
              ],
              "reportNotificationTypes": {
                "gcpCis": false,
                "gcpComplianceEvents": false,
                "trendReport": false,
                "azurePci": true,
                "agentEvents\"": false,
                "awsCisS3\"": false,
                "gcpAuditTrailEvents\"": false,
                "openShiftCompliance\"": false,
                "openShiftComplianceEvents\"": false,
                "azureSoc\"": true,
                "awsComplianceEvents\"": false,
                "azureComplianceEvents\"": false,
                "azureCis\"": true,
                "azureActivityLogEvents\"": false,
                "awsCloudtrailEvents\"": false
              },
              "type": "Report"
            }
          }
        ]
      },
      "UpdateReportRulesRequest": {
        "title": "UpdateReportRulesRequest",
        "required": [
          "filters",
          "intgGuidList",
          "reportNotificationTypes"
        ],
        "type": "object",
        "properties": {
          "filters": {
            "$ref": "#/components/schemas/Filters15"
          },
          "intgGuidList": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "reportNotificationTypes": {
            "$ref": "#/components/schemas/ReportNotificationTypes2"
          }
        },
        "examples": [
          {
            "filters": {
              "name": "name96",
              "description": "description86",
              "enabled": 0,
              "resourceGroups": [
                "any"
              ],
              "severity": [
                1
              ]
            },
            "intgGuidList": [
              "any"
            ],
            "reportNotificationTypes": {
              "agentEvents": true,
              "awsCisS3": true,
              "awsCloudtrailEvents": false,
              "awsComplianceEvents": false,
              "azureActivityLogEvents": true,
              "azureCis": true,
              "azureComplianceEvents": true,
              "azurePci": false,
              "azureSoc": true,
              "gcpAuditTrailEvents": false,
              "gcpCis": true,
              "gcpComplianceEvents": true,
              "gcpPci": true,
              "gcpSoc": true,
              "hipaa": false,
              "iso2700": true,
              "nist800-53Rev4": false,
              "nist800-171Rev2": false,
              "openShiftCompliance": true,
              "openShiftComplianceEvents": true,
              "pci": true,
              "soc": true,
              "awsSocRev2": false,
              "trendReport": true
            }
          }
        ]
      },
      "ReportNotificationTypes2": {
        "title": "ReportNotificationTypes2",
        "required": [
          "agentEvents",
          "awsCisS3",
          "awsCloudtrailEvents",
          "awsComplianceEvents",
          "azureActivityLogEvents",
          "azureCis",
          "azureComplianceEvents",
          "azurePci",
          "azureSoc",
          "gcpAuditTrailEvents",
          "gcpCis",
          "gcpComplianceEvents",
          "gcpPci",
          "gcpSoc",
          "hipaa",
          "iso2700",
          "nist800-53Rev4",
          "nist800-171Rev2",
          "openShiftCompliance",
          "openShiftComplianceEvents",
          "pci",
          "soc",
          "awsSocRev2",
          "trendReport"
        ],
        "type": "object",
        "properties": {
          "agentEvents": {
            "type": "boolean"
          },
          "awsCisS3": {
            "type": "boolean"
          },
          "awsCloudtrailEvents": {
            "type": "boolean"
          },
          "awsComplianceEvents": {
            "type": "boolean"
          },
          "azureActivityLogEvents": {
            "type": "boolean"
          },
          "azureCis": {
            "type": "boolean"
          },
          "azureComplianceEvents": {
            "type": "boolean"
          },
          "azurePci": {
            "type": "boolean"
          },
          "azureSoc": {
            "type": "boolean"
          },
          "gcpAuditTrailEvents": {
            "type": "boolean"
          },
          "gcpCis": {
            "type": "boolean"
          },
          "gcpComplianceEvents": {
            "type": "boolean"
          },
          "gcpPci": {
            "type": "boolean"
          },
          "gcpSoc": {
            "type": "boolean"
          },
          "hipaa": {
            "type": "boolean"
          },
          "iso2700": {
            "type": "boolean"
          },
          "nist800-53Rev4": {
            "type": "boolean"
          },
          "nist800-171Rev2": {
            "type": "boolean"
          },
          "openShiftCompliance": {
            "type": "boolean"
          },
          "openShiftComplianceEvents": {
            "type": "boolean"
          },
          "pci": {
            "type": "boolean"
          },
          "soc": {
            "type": "boolean"
          },
          "awsSocRev2": {
            "type": "boolean"
          },
          "trendReport": {
            "type": "boolean"
          }
        },
        "examples": [
          {
            "agentEvents": true,
            "awsCisS3": true,
            "awsCloudtrailEvents": false,
            "awsComplianceEvents": false,
            "azureActivityLogEvents": true,
            "azureCis": true,
            "azureComplianceEvents": true,
            "azurePci": false,
            "azureSoc": true,
            "gcpAuditTrailEvents": false,
            "gcpCis": true,
            "gcpComplianceEvents": true,
            "gcpPci": true,
            "gcpSoc": true,
            "hipaa": false,
            "iso2700": true,
            "nist800-53Rev4": false,
            "nist800-171Rev2": false,
            "openShiftCompliance": true,
            "openShiftComplianceEvents": true,
            "pci": true,
            "soc": true,
            "awsSocRev2": false,
            "trendReport": true
          }
        ]
      },
      "Data63": {
        "title": "Data63",
        "required": [
          "resourceName",
          "resourceType",
          "props",
          "resourceGuid",
          "guid",
          "guidType",
          "isDefault",
          "enabled"
        ],
        "type": "object",
        "properties": {
          "resourceName": {
            "type": "string"
          },
          "resourceType": {
            "type": "string"
          },
          "props": {
            "$ref": "#/components/schemas/Props1"
          },
          "resourceGuid": {
            "type": "string"
          },
          "guid": {
            "type": "string"
          },
          "guidType": {
            "type": "string"
          },
          "isDefault": {
            "type": "number"
          },
          "enabled": {
            "type": "integer",
            "contentEncoding": "int32"
          }
        },
        "examples": [
          {
            "resourceName": "resourceName37",
            "resourceType": "AWS",
            "props": {
              "accountIds": [
                "accountIds7"
              ],
              "updatedBy": "updatedBy14",
              "lastUpdated": 107.38954366296,
              "description": "description89"
            },
            "resourceGuid": "resourceGuid96",
            "guid": "guid21",
            "guidType": "guidType12",
            "isDefault": 104.411318215733,
            "enabled": 0
          }
        ]
      },
      "CreateResourceGroupRequest": {
        "title": "CreateResourceGroupRequest",
        "required": [
          "resourceName",
          "resourceType",
          "props",
          "enabled"
        ],
        "type": "object",
        "properties": {
          "resourceName": {
            "type": "string"
          },
          "resourceType": {
            "type": "string"
          },
          "props": {
            "$ref": "#/components/schemas/Props2"
          },
          "enabled": {
            "type": "integer",
            "contentEncoding": "int32"
          }
        },
        "examples": [
          {
            "resourceName": "resourceName37",
            "resourceType": "AWS",
            "props": {
              "accountIds": [
                "accountIds7"
              ],
              "description": "description14"
            },
            "enabled": 0
          }
        ]
      },
      "UpdateTeamMemberRequest": {
        "title": "UpdateTeamMemberRequest",
        "required": [
          "props",
          "orgAdmin",
          "orgUser",
          "adminRoleAccounts",
          "userRoleAccounts",
          "userEnabled"
        ],
        "type": "object",
        "properties": {
          "props": {
            "$ref": "#/components/schemas/Props8"
          },
          "orgAdmin": {
            "type": "boolean"
          },
          "orgUser": {
            "type": "boolean"
          },
          "adminRoleAccounts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "userRoleAccounts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "userEnabled": {
            "type": "integer",
            "contentEncoding": "int32"
          }
        },
        "examples": [
          {
            "props": {
              "firstName": "firstName37",
              "lastName": "lastName7",
              "company": "company14",
              "accountAdmin": false
            },
            "orgAdmin": false,
            "orgUser": false,
            "adminRoleAccounts": [
              "adminRoleAccounts42"
            ],
            "userRoleAccounts": [
              "userRoleAccounts87"
            ],
            "userEnabled": 1
          }
        ]
      },
      "Response_20039": {
        "title": "Response_20039",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Data69"
          }
        },
        "examples": [
          {
            "data": {
              "props": {
                "firstName": "firstName37",
                "lastName": "lastName7",
                "company": "company14",
                "accountAdmin": false
              },
              "orgAdmin": false,
              "orgUser": false,
              "adminRoleAccounts": [
                "adminRoleAccounts87"
              ],
              "userRoleAccounts": [
                "userRoleAccounts22"
              ],
              "userName": "userName13",
              "userEnabled": 1,
              "userGuid": "userGuid81"
            }
          }
        ]
      },
      "Account": {
        "title": "Account",
        "required": [
          "admin",
          "accountName",
          "custGuid",
          "userGuid",
          "userEnabled"
        ],
        "type": "object",
        "properties": {
          "admin": {
            "type": "boolean"
          },
          "accountName": {
            "type": "string"
          },
          "custGuid": {
            "type": "string"
          },
          "userGuid": {
            "type": "string"
          },
          "userEnabled": {
            "type": "integer",
            "contentEncoding": "int32"
          }
        },
        "examples": [
          {
            "admin": false,
            "accountName": "accountName14",
            "custGuid": "custGuid42",
            "userGuid": "userGuid87",
            "userEnabled": 1
          }
        ]
      },
      "Content-Type": {
        "title": "Content-Type",
        "const": "Content-Type96",
        "type": "string",
        "examples": [
          "Content-Type96"
        ]
      },
      "Content-Type26": {
        "title": "Content-Type26",
        "const": "Content-Type37",
        "type": "string",
        "examples": [
          "Content-Type37"
        ]
      },
      "Filter": {
        "title": "Filter",
        "required": [
          "expression",
          "field",
          "value",
          "values"
        ],
        "type": "object",
        "properties": {
          "expression": {
            "type": "string"
          },
          "field": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "examples": [
          {
            "expression": "not_rlike",
            "field": "field78",
            "value": "value29",
            "values": [
              "values69"
            ]
          }
        ]
      },
      "CreateAlertChannelsRequest": {
        "title": "CreateAlertChannelsRequest",
        "required": [
          "name",
          "type",
          "enabled",
          "data"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "enabled": {
            "type": "number"
          },
          "data": {
            "$ref": "#/components/schemas/Data6"
          }
        },
        "examples": [
          {
            "name": "name96",
            "type": "AwsS3",
            "enabled": 0.788263630954671,
            "data": {
              "s3CrossAccountCredentials": {
                "externalId": "externalId29",
                "roleArn": "roleArn69",
                "bucketArn": "bucketArn5"
              }
            }
          }
        ]
      },
      "Data7": {
        "title": "Data7",
        "required": [
          "name",
          "type",
          "enabled",
          "data",
          "isOrg",
          "props"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "enabled": {
            "type": "number"
          },
          "data": {
            "$ref": "#/components/schemas/Data6"
          },
          "isOrg": {
            "type": "integer",
            "contentEncoding": "int32"
          },
          "props": {
            "type": "object"
          }
        },
        "examples": [
          {
            "name": "name96",
            "type": "AwsS3",
            "enabled": 0.788263630954671,
            "data": {
              "s3CrossAccountCredentials": {
                "externalId": "externalId29",
                "roleArn": "roleArn69",
                "bucketArn": "bucketArn5"
              }
            },
            "isOrg": 0,
            "props": {}
          }
        ]
      },
      "UpdateAlertChannelsRequest": {
        "title": "UpdateAlertChannelsRequest",
        "required": [
          "name",
          "enabled",
          "data"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "enabled": {
            "type": "number"
          },
          "data": {
            "$ref": "#/components/schemas/Data6"
          }
        },
        "examples": [
          {
            "name": "name96",
            "enabled": 0.788263630954671,
            "data": {
              "s3CrossAccountCredentials": {
                "externalId": "externalId29",
                "roleArn": "roleArn69",
                "bucketArn": "bucketArn5"
              }
            }
          }
        ]
      },
      "Response_20011": {
        "title": "Response_20011",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Data20"
            },
            "description": ""
          }
        },
        "examples": [
          {
            "data": [
              {
                "mcGuid": "QA42F6C8_97...",
                "filters": {
                  "name": "Default Rule",
                  "description": "",
                  "createdOrUpdatedBy": "user@lacework.net",
                  "createdOrUpdatedTime": "2020-02-18T16:52:57.726Z",
                  "enabled": 1,
                  "resourcegroups": [
                    "QA402035_43.."
                  ],
                  "severity": [
                    1,
                    2,
                    3
                  ],
                  "eventcategory": [
                    "App",
                    "Compliance",
                    "Cloud",
                    "Aws",
                    "AzureActivityLog",
                    "GcpAuditTrail",
                    "User",
                    "Machine",
                    "File"
                  ]
                },
                "intgGuidList": [
                  "QA402035_66..."
                ],
                "type": "Event"
              },
              {
                "mcGuid": "QA42F6C8_83...",
                "filters": {
                  "name": "test",
                  "description": "",
                  "createdOrUpdatedBy": "user@lacework.net",
                  "createdOrUpdatedTime": "2020-01-15T07:07:21.989Z",
                  "enabled": 1,
                  "resourcegroups": [
                    "QA402035_EB...",
                    "QA402035_BA..."
                  ],
                  "severity": [
                    1,
                    2,
                    3
                  ],
                  "eventcategory": [
                    "User",
                    "Cloud",
                    "Aws",
                    "AzureActivityLog",
                    "GcpAuditTrail"
                  ]
                },
                "intgGuidList": [
                  "QA402035_01...",
                  "QA402035_A6..."
                ],
                "type": "Event"
              }
            ]
          }
        ]
      },
      "Data20": {
        "title": "Data20",
        "required": [
          "mcGuid",
          "filters",
          "intgGuidList",
          "type"
        ],
        "type": "object",
        "properties": {
          "mcGuid": {
            "type": "string"
          },
          "filters": {
            "$ref": "#/components/schemas/Filters"
          },
          "intgGuidList": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "type": {
            "type": "string"
          }
        },
        "examples": [
          {
            "mcGuid": "QA42F6C8_97...",
            "filters": {
              "name": "Default Rule",
              "description": "",
              "createdOrUpdatedBy": "user@lacework.net",
              "createdOrUpdatedTime": "2020-02-18T16:52:57.726Z",
              "enabled": 1,
              "resourcegroups": [
                "QA402035_43.."
              ],
              "severity": [
                1,
                2,
                3
              ],
              "eventcategory": [
                "App",
                "Compliance",
                "Cloud",
                "Aws",
                "AzureActivityLog",
                "GcpAuditTrail",
                "User",
                "Machine",
                "File"
              ]
            },
            "intgGuidList": [
              "QA402035_66..."
            ],
            "type": "Event"
          }
        ]
      },
      "Response_2013": {
        "title": "Response_2013",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Data20"
          }
        },
        "examples": [
          {
            "data": {
              "mcGuid": "QA42F6C8_97...",
              "filters": {
                "name": "Default Rule",
                "description": "",
                "createdOrUpdatedBy": "user@lacework.net",
                "createdOrUpdatedTime": "2020-02-18T16:52:57.726Z",
                "enabled": 1,
                "resourcegroups": [
                  "QA402035_43..."
                ],
                "severity": [
                  1,
                  2,
                  3
                ],
                "eventcategory": [
                  "App",
                  "Compliance",
                  "Cloud",
                  "Aws",
                  "AzureActivityLog",
                  "GcpAuditTrail",
                  "User",
                  "Machine",
                  "File"
                ]
              },
              "intgGuidList": [
                "QA402035_66..."
              ],
              "type": "Event"
            }
          }
        ]
      },
      "Data25": {
        "title": "Data25",
        "required": [
          "createdTime",
          "accountName",
          "userName",
          "eventName",
          "userAction",
          "eventDescription"
        ],
        "type": "object",
        "properties": {
          "createdTime": {
            "type": "integer",
            "contentEncoding": "int32"
          },
          "accountName": {
            "type": "string"
          },
          "userName": {
            "type": "string"
          },
          "eventName": {
            "type": "string"
          },
          "userAction": {
            "type": "string"
          },
          "eventDescription": {
            "type": "string"
          }
        },
        "examples": [
          {
            "createdTime": 248,
            "accountName": "accountName86",
            "userName": "userName3",
            "eventName": "eventName89",
            "userAction": "userAction35",
            "eventDescription": "eventDescription51"
          }
        ]
      },
      "Data28": {
        "title": "Data28",
        "required": [
          "crossAccountCredentials",
          "awsAccountId"
        ],
        "type": "object",
        "properties": {
          "crossAccountCredentials": {
            "$ref": "#/components/schemas/CrossAccountCredentials"
          },
          "awsAccountId": {
            "type": "string"
          }
        },
        "examples": [
          {
            "crossAccountCredentials": {
              "externalId": "externalId29",
              "roleArn": "roleArn69"
            },
            "awsAccountId": "awsAccountId5"
          }
        ]
      },
      "Data43": {
        "title": "Data43",
        "required": [
          "crossAccountCredentials",
          "awsAuthType",
          "registryType",
          "registryDomain",
          "limitNumImg",
          "limitByRep",
          "limitByTag",
          "limitByLabel"
        ],
        "type": "object",
        "properties": {
          "crossAccountCredentials": {
            "$ref": "#/components/schemas/CrossAccountCredentials"
          },
          "awsAuthType": {
            "type": "string"
          },
          "registryType": {
            "type": "string"
          },
          "registryDomain": {
            "type": "string"
          },
          "limitNumImg": {
            "type": "integer",
            "contentEncoding": "int32"
          },
          "limitByRep": {
            "type": "string"
          },
          "limitByTag": {
            "type": "string"
          },
          "limitByLabel": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LimitByLabel"
            },
            "description": ""
          }
        },
        "examples": [
          {
            "crossAccountCredentials": {
              "externalId": "externalId69",
              "roleArn": "roleArn5"
            },
            "awsAuthType": "AWS_IAM",
            "registryType": "AWS_ECR",
            "registryDomain": "registryDomain69",
            "limitNumImg": 10,
            "limitByRep": "[]",
            "limitByTag": "[]",
            "limitByLabel": [
              {
                "kj": "kj35"
              }
            ]
          }
        ]
      },
      "Response_20024": {
        "title": "Response_20024",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Data44"
          }
        },
        "examples": [
          {
            "data": {
              "name": "name96",
              "type": "ContVulnCfg",
              "enabled": 0.788263630954671,
              "data": {
                "crossAccountCredentials": {
                  "externalId": "externalId29",
                  "roleArn": "roleArn69"
                },
                "awsAuthType": "AWS_IAM",
                "registryType": "AWS_ECR",
                "registryDomain": "registryDomain29",
                "limitNumImg": 5,
                "limitByRep": "[]",
                "limitByTag": "[]",
                "limitByLabel": [
                  {
                    "kj": "kj89"
                  }
                ]
              },
              "isOrg": 0,
              "props": {}
            }
          }
        ]
      },
      "Data44": {
        "title": "Data44",
        "required": [
          "name",
          "type",
          "enabled",
          "data",
          "isOrg",
          "props"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "enabled": {
            "type": "number"
          },
          "data": {
            "$ref": "#/components/schemas/Data43"
          },
          "isOrg": {
            "type": "integer",
            "contentEncoding": "int32"
          },
          "props": {
            "type": "object"
          }
        },
        "examples": [
          {
            "name": "name96",
            "type": "ContVulnCfg",
            "enabled": 0.788263630954671,
            "data": {
              "crossAccountCredentials": {
                "externalId": "externalId29",
                "roleArn": "roleArn69"
              },
              "awsAuthType": "AWS_IAM",
              "registryType": "AWS_ECR",
              "registryDomain": "registryDomain29",
              "limitNumImg": 5,
              "limitByRep": "[]",
              "limitByTag": "[]",
              "limitByLabel": [
                {
                  "kj": "kj89"
                }
              ]
            },
            "isOrg": 0,
            "props": {}
          }
        ]
      },
      "SearchContainerRegistriesRequest": {
        "title": "SearchContainerRegistriesRequest",
        "required": [
          "filters",
          "returns"
        ],
        "type": "object",
        "properties": {
          "filters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Filters3"
            },
            "description": ""
          },
          "returns": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "examples": [
          {
            "filters": [
              {
                "expression": "not_rlike",
                "field": "field78",
                "value": "value29",
                "values": [
                  "values69"
                ]
              }
            ],
            "returns": [
              "returns5"
            ]
          }
        ]
      },
      "Filters15": {
        "title": "Filters15",
        "required": [
          "name",
          "description",
          "enabled",
          "resourceGroups",
          "severity"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "enabled": {
            "type": "integer",
            "contentEncoding": "int32"
          },
          "resourceGroups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "severity": {
            "type": "array",
            "items": {
              "type": "integer",
              "contentEncoding": "int32"
            },
            "description": ""
          }
        },
        "examples": [
          {
            "name": "name96",
            "description": "description86",
            "enabled": 0,
            "resourceGroups": [
              "any"
            ],
            "severity": [
              1
            ]
          }
        ]
      },
      "CreateReportRuleRequest": {
        "title": "CreateReportRuleRequest",
        "required": [
          "filters",
          "intgGuidList",
          "reportNotificationTypes",
          "type"
        ],
        "type": "object",
        "properties": {
          "filters": {
            "$ref": "#/components/schemas/Filters15"
          },
          "intgGuidList": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "reportNotificationTypes": {
            "$ref": "#/components/schemas/ReportNotificationTypes2"
          },
          "type": {
            "type": "string"
          }
        },
        "examples": [
          {
            "filters": {
              "name": "name96",
              "description": "description86",
              "enabled": 0,
              "resourceGroups": [
                "any"
              ],
              "severity": [
                1
              ]
            },
            "intgGuidList": [
              "any"
            ],
            "reportNotificationTypes": {
              "agentEvents": true,
              "awsCisS3": true,
              "awsCloudtrailEvents": false,
              "awsComplianceEvents": false,
              "azureActivityLogEvents": true,
              "azureCis": true,
              "azureComplianceEvents": true,
              "azurePci": false,
              "azureSoc": true,
              "gcpAuditTrailEvents": false,
              "gcpCis": true,
              "gcpComplianceEvents": true,
              "gcpPci": true,
              "gcpSoc": true,
              "hipaa": false,
              "iso2700": true,
              "nist800-53Rev4": false,
              "nist800-171Rev2": false,
              "openShiftCompliance": true,
              "openShiftComplianceEvents": true,
              "pci": true,
              "soc": true,
              "awsSocRev2": false,
              "trendReport": true
            },
            "type": "Report"
          }
        ]
      },
      "Props1": {
        "title": "Props1",
        "required": [
          "accountIds",
          "updatedBy",
          "lastUpdated",
          "description"
        ],
        "type": "object",
        "properties": {
          "accountIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "updatedBy": {
            "type": "string"
          },
          "lastUpdated": {
            "type": "number"
          },
          "description": {
            "type": "string"
          }
        },
        "examples": [
          {
            "accountIds": [
              "accountIds7"
            ],
            "updatedBy": "updatedBy14",
            "lastUpdated": 107.38954366296,
            "description": "description89"
          }
        ]
      },
      "SearchResourceGroupsRequest": {
        "title": "SearchResourceGroupsRequest",
        "required": [
          "filters",
          "returns"
        ],
        "type": "object",
        "properties": {
          "filters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Filters3"
            },
            "description": ""
          },
          "returns": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "examples": [
          {
            "filters": [
              {
                "expression": "not_rlike",
                "field": "field78",
                "value": "value29",
                "values": [
                  "values69"
                ]
              }
            ],
            "returns": [
              "returns5"
            ]
          }
        ]
      },
      "Response_20038": {
        "title": "Response_20038",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Data68"
          }
        },
        "examples": [
          {
            "data": {
              "props": {
                "firstName": "firstName37",
                "lastName": "lastName7",
                "company": "company14",
                "accountAdmin": false
              },
              "orgAdmin": false,
              "orgUser": false,
              "adminRoleAccounts": [
                "adminRoleAccounts42"
              ],
              "userRoleAccounts": [
                "userRoleAccounts87"
              ],
              "userEnabled": 1
            }
          }
        ]
      },
      "Data69": {
        "title": "Data69",
        "required": [
          "props",
          "orgAdmin",
          "orgUser",
          "adminRoleAccounts",
          "userRoleAccounts",
          "userName",
          "userEnabled",
          "userGuid"
        ],
        "type": "object",
        "properties": {
          "props": {
            "$ref": "#/components/schemas/Props8"
          },
          "orgAdmin": {
            "type": "boolean"
          },
          "orgUser": {
            "type": "boolean"
          },
          "adminRoleAccounts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "userRoleAccounts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "userName": {
            "type": "string"
          },
          "userEnabled": {
            "type": "integer",
            "contentEncoding": "int32"
          },
          "userGuid": {
            "type": "string"
          }
        },
        "examples": [
          {
            "props": {
              "firstName": "firstName37",
              "lastName": "lastName7",
              "company": "company14",
              "accountAdmin": false
            },
            "orgAdmin": false,
            "orgUser": false,
            "adminRoleAccounts": [
              "adminRoleAccounts87"
            ],
            "userRoleAccounts": [
              "userRoleAccounts22"
            ],
            "userName": "userName13",
            "userEnabled": 1,
            "userGuid": "userGuid81"
          }
        ]
      },
      "Properties": {
        "title": "Properties",
        "required": [
          "name",
          "type",
          "enabled",
          "data"
        ],
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/Name"
          },
          "type": {
            "$ref": "#/components/schemas/Type"
          },
          "enabled": {
            "$ref": "#/components/schemas/Enabled"
          },
          "data": {
            "$ref": "#/components/schemas/Data"
          }
        },
        "examples": [
          {
            "name": {
              "type": "string",
              "minLength": 1
            },
            "type": {
              "type": "string",
              "enum": [
                "SlackChannel"
              ]
            },
            "enabled": {
              "type": "number",
              "minimum": 0,
              "maximum": 1
            },
            "data": {
              "properties": {
                "slackUrl": {
                  "type": "string",
                  "pattern": "^https://hooks.slack.com([/][a-zA-Z0-9#-_]+)+$"
                }
              },
              "required": [
                "slackUrl"
              ],
              "additionalProperties": false,
              "type": "object"
            }
          }
        ]
      },
      "Enabled": {
        "title": "Enabled",
        "required": [
          "type",
          "minimum",
          "maximum"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "minimum": {
            "type": "integer",
            "contentEncoding": "int32"
          },
          "maximum": {
            "type": "integer",
            "contentEncoding": "int32"
          }
        },
        "examples": [
          {
            "type": "number",
            "minimum": 0,
            "maximum": 1
          }
        ]
      },
      "Properties1": {
        "title": "Properties1",
        "required": [
          "slackUrl"
        ],
        "type": "object",
        "properties": {
          "slackUrl": {
            "$ref": "#/components/schemas/SlackUrl"
          }
        },
        "examples": [
          {
            "slackUrl": {
              "type": "string",
              "pattern": "^https://hooks.slack.com([/][a-zA-Z0-9#-_]+)+$"
            }
          }
        ]
      },
      "Data1": {
        "title": "Data1",
        "required": [
          "accessToken",
          "createdTime",
          "props",
          "tokenAlias",
          "tokenEnabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string"
          },
          "createdTime": {
            "type": "string"
          },
          "props": {
            "type": "string"
          },
          "tokenAlias": {
            "type": "string"
          },
          "tokenEnabled": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "examples": [
          {
            "accessToken": "47d102752b57caa18b...",
            "createdTime": "2020-12-16T16:43:37.915Z",
            "props": "{\"CREATED_TIME\":1598530228648}",
            "tokenAlias": "Ops Agent",
            "tokenEnabled": "1",
            "version": "0.1"
          }
        ]
      },
      "UpdateAgentAccessTokenRequest": {
        "title": "UpdateAgentAccessTokenRequest",
        "required": [
          "tokenEnabled"
        ],
        "type": "object",
        "properties": {
          "tokenEnabled": {
            "type": "string"
          }
        },
        "examples": [
          {
            "tokenEnabled": "tokenEnabled96"
          }
        ]
      },
      "SearchAgentAccessTokensRequest": {
        "title": "SearchAgentAccessTokensRequest",
        "required": [
          "filters",
          "returns"
        ],
        "type": "object",
        "properties": {
          "filters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Filter"
            },
            "description": ""
          },
          "returns": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "examples": [
          {
            "filters": [
              {
                "expression": "not_rlike",
                "field": "field78",
                "value": "value29",
                "values": [
                  "values69"
                ]
              }
            ],
            "returns": [
              "returns5"
            ]
          }
        ]
      },
      "S3CrossAccountCredentials": {
        "title": "S3CrossAccountCredentials",
        "required": [
          "externalId",
          "roleArn",
          "bucketArn"
        ],
        "type": "object",
        "properties": {
          "externalId": {
            "type": "string"
          },
          "roleArn": {
            "type": "string"
          },
          "bucketArn": {
            "type": "string"
          }
        },
        "examples": [
          {
            "externalId": "externalId29",
            "roleArn": "roleArn69",
            "bucketArn": "bucketArn5"
          }
        ]
      },
      "SearchAlertChannelsRequest": {
        "title": "SearchAlertChannelsRequest",
        "required": [
          "filters",
          "returns"
        ],
        "type": "object",
        "properties": {
          "filters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Filter"
            },
            "description": ""
          },
          "returns": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "examples": [
          {
            "filters": [
              {
                "expression": "not_rlike",
                "field": "field78",
                "value": "value29",
                "values": [
                  "values69"
                ]
              }
            ],
            "returns": [
              "returns5"
            ]
          }
        ]
      },
      "Filters": {
        "title": "Filters",
        "required": [
          "name",
          "description",
          "createdOrUpdatedBy",
          "createdOrUpdatedTime",
          "enabled",
          "resourcegroups",
          "severity",
          "eventcategory"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdOrUpdatedBy": {
            "type": "string"
          },
          "createdOrUpdatedTime": {
            "type": "string"
          },
          "enabled": {
            "type": "integer",
            "contentEncoding": "int32"
          },
          "resourcegroups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "severity": {
            "type": "array",
            "items": {
              "type": "integer",
              "contentEncoding": "int32"
            },
            "description": ""
          },
          "eventcategory": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "examples": [
          {
            "name": "Default Rule",
            "description": "",
            "createdOrUpdatedBy": "user@lacework.net",
            "createdOrUpdatedTime": "2020-02-18T16:52:57.726Z",
            "enabled": 1,
            "resourcegroups": [
              "QA402035_43.."
            ],
            "severity": [
              1,
              2,
              3
            ],
            "eventcategory": [
              "App",
              "Compliance",
              "Cloud",
              "Aws",
              "AzureActivityLog",
              "GcpAuditTrail",
              "User",
              "Machine",
              "File"
            ]
          }
        ]
      },
      "Filters1": {
        "title": "Filters1",
        "required": [
          "name",
          "description",
          "enabled",
          "resourceGroups",
          "eventCategory",
          "severity"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "enabled": {
            "type": "integer",
            "contentEncoding": "int32"
          },
          "resourceGroups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "eventCategory": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "severity": {
            "type": "array",
            "items": {
              "type": "integer",
              "contentEncoding": "int32"
            },
            "description": ""
          }
        },
        "examples": [
          {
            "name": "name96",
            "description": "description86",
            "enabled": 0,
            "resourceGroups": [
              "any"
            ],
            "eventCategory": [
              "Compliance"
            ],
            "severity": [
              3
            ]
          }
        ]
      },
      "SearchAlertRulesRequest": {
        "title": "SearchAlertRulesRequest",
        "required": [
          "filters",
          "returns"
        ],
        "type": "object",
        "properties": {
          "filters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Filters3"
            },
            "description": ""
          },
          "returns": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "examples": [
          {
            "filters": [
              {
                "expression": "not_rlike",
                "field": "field78",
                "value": "value29",
                "values": [
                  "values69"
                ]
              }
            ],
            "returns": [
              "returns5"
            ]
          }
        ]
      },
      "Filters3": {
        "title": "Filters3",
        "required": [
          "expression",
          "field",
          "value",
          "values"
        ],
        "type": "object",
        "properties": {
          "expression": {
            "type": "string"
          },
          "field": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "examples": [
          {
            "expression": "not_rlike",
            "field": "field78",
            "value": "value29",
            "values": [
              "values69"
            ]
          }
        ]
      },
      "UpdateAlertRulesRequest": {
        "title": "UpdateAlertRulesRequest",
        "required": [
          "filters",
          "intgGuidList"
        ],
        "type": "object",
        "properties": {
          "filters": {
            "$ref": "#/components/schemas/Filters1"
          },
          "intgGuidList": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "examples": [
          {
            "filters": {
              "name": "name96",
              "description": "description86",
              "enabled": 0,
              "resourceGroups": [
                "any"
              ],
              "eventCategory": [
                "Compliance"
              ],
              "severity": [
                3
              ]
            },
            "intgGuidList": [
              "any"
            ]
          }
        ]
      },
      "Response_20017": {
        "title": "Response_20017",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Data27"
            },
            "description": ""
          }
        },
        "examples": [
          {
            "data": [
              {
                "name": "name96",
                "type": "AwsCfg",
                "enabled": 0.788263630954671,
                "data": {
                  "crossAccountCredentials": {
                    "externalId": "externalId29",
                    "roleArn": "roleArn69"
                  },
                  "awsAccountId": "awsAccountId5"
                },
                "isOrg": 0,
                "props": {}
              }
            ]
          }
        ]
      },
      "Data27": {
        "title": "Data27",
        "required": [
          "name",
          "type",
          "enabled",
          "data",
          "isOrg",
          "props"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "enabled": {
            "type": "number"
          },
          "data": {
            "$ref": "#/components/schemas/Data28"
          },
          "isOrg": {
            "type": "integer",
            "contentEncoding": "int32"
          },
          "props": {
            "type": "object"
          }
        },
        "examples": [
          {
            "name": "name96",
            "type": "AwsCfg",
            "enabled": 0.788263630954671,
            "data": {
              "crossAccountCredentials": {
                "externalId": "externalId29",
                "roleArn": "roleArn69"
              },
              "awsAccountId": "awsAccountId5"
            },
            "isOrg": 0,
            "props": {}
          }
        ]
      },
      "UpdateCloudAccountsRequest": {
        "title": "UpdateCloudAccountsRequest",
        "required": [
          "name",
          "enabled",
          "data"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "enabled": {
            "type": "number"
          },
          "data": {
            "$ref": "#/components/schemas/Data28"
          }
        },
        "examples": [
          {
            "name": "name96",
            "enabled": 0.788263630954671,
            "data": {
              "awsAccountId": "awsAccountId29",
              "crossAccountCredentials": {
                "externalId": "externalId69",
                "roleArn": "roleArn5"
              }
            }
          }
        ]
      },
      "Data41": {
        "title": "Data41",
        "required": [
          "startTime",
          "endTime",
          "eventType",
          "eventId",
          "eventModel",
          "eventActor",
          "entityMap"
        ],
        "type": "object",
        "properties": {
          "startTime": {
            "type": "integer",
            "contentEncoding": "int32"
          },
          "endTime": {
            "type": "integer",
            "contentEncoding": "int32"
          },
          "eventType": {
            "type": "string"
          },
          "eventId": {
            "type": "number"
          },
          "eventModel": {
            "type": "string"
          },
          "eventActor": {
            "type": "string"
          },
          "entityMap": {
            "type": "object"
          }
        },
        "examples": [
          {
            "startTime": 248,
            "endTime": 221,
            "eventType": "eventType3",
            "eventId": 178.572675387176,
            "eventModel": "eventModel5",
            "eventActor": "eventActor91",
            "entityMap": {}
          }
        ]
      },
      "CreateContainerRegistriesRequest": {
        "title": "CreateContainerRegistriesRequest",
        "required": [
          "name",
          "type",
          "enabled",
          "data"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "enabled": {
            "type": "number"
          },
          "data": {
            "$ref": "#/components/schemas/Data43"
          }
        },
        "examples": [
          {
            "name": "name96",
            "type": "ContVulnCfg",
            "enabled": 0.788263630954671,
            "data": {
              "crossAccountCredentials": {
                "externalId": "externalId29",
                "roleArn": "roleArn69"
              },
              "awsAuthType": "AWS_IAM",
              "registryType": "AWS_ECR",
              "registryDomain": "registryDomain29",
              "limitNumImg": 5,
              "limitByRep": "[]",
              "limitByTag": "[]",
              "limitByLabel": [
                {
                  "kj": "kj35"
                }
              ]
            }
          }
        ]
      },
      "Response_20029": {
        "title": "Response_20029",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Data57"
            },
            "description": ""
          }
        },
        "examples": [
          {
            "data": [
              {
                "objName": "CloudActivities",
                "props": {
                  "contractStartUtc": "2020-12-01T00:00:00Z",
                  "renewalUtc": "2021-03-01T00:00:00Z",
                  "numPurchased": 1,
                  "dataRetentionInDay": 90
                }
              },
              {
                "objName": "AWSConfig",
                "props": {
                  "contractStartUtc": "2020-12-01T00:00:00Z",
                  "renewalUtc": "2021-03-01T00:00:00Z",
                  "numPurchased": 1,
                  "dataRetentionInDay": 90
                }
              }
            ]
          }
        ]
      },
      "Data57": {
        "title": "Data57",
        "required": [
          "objName",
          "props"
        ],
        "type": "object",
        "properties": {
          "objName": {
            "type": "string"
          },
          "props": {
            "$ref": "#/components/schemas/Props"
          }
        },
        "examples": [
          {
            "objName": "CloudActivities",
            "props": {
              "contractStartUtc": "2020-12-01T00:00:00Z",
              "renewalUtc": "2021-03-01T00:00:00Z",
              "numPurchased": 1,
              "dataRetentionInDay": 90
            }
          }
        ]
      },
      "Props2": {
        "title": "Props2",
        "required": [
          "description",
          "accountIds"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "accountIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "examples": [
          {
            "description": "description7",
            "accountIds": [
              "accountIds41"
            ]
          }
        ]
      },
      "Response_20036": {
        "title": "Response_20036",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Data63"
            },
            "description": ""
          }
        },
        "examples": [
          {
            "data": [
              {
                "resourceName": "resourceName37",
                "resourceType": "AWS",
                "props": {
                  "accountIds": [
                    "accountIds7"
                  ],
                  "updatedBy": "updatedBy14",
                  "lastUpdated": 107.38954366296,
                  "description": "description89"
                },
                "resourceGuid": "resourceGuid96",
                "guid": "guid21",
                "guidType": "guidType12",
                "isDefault": 104.411318215733,
                "enabled": 0
              }
            ]
          }
        ]
      },
      "Props8": {
        "title": "Props8",
        "required": [
          "firstName",
          "lastName",
          "company",
          "accountAdmin"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "company": {
            "type": "string"
          },
          "accountAdmin": {
            "type": "boolean"
          }
        },
        "examples": [
          {
            "firstName": "firstName37",
            "lastName": "lastName7",
            "company": "company14",
            "accountAdmin": false
          }
        ]
      },
      "Data68": {
        "title": "Data68",
        "required": [
          "props",
          "orgAdmin",
          "orgUser",
          "adminRoleAccounts",
          "userRoleAccounts",
          "userEnabled"
        ],
        "type": "object",
        "properties": {
          "props": {
            "$ref": "#/components/schemas/Props8"
          },
          "orgAdmin": {
            "type": "boolean"
          },
          "orgUser": {
            "type": "boolean"
          },
          "adminRoleAccounts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "userRoleAccounts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "userEnabled": {
            "type": "integer",
            "contentEncoding": "int32"
          }
        },
        "examples": [
          {
            "props": {
              "firstName": "firstName37",
              "lastName": "lastName7",
              "company": "company14",
              "accountAdmin": false
            },
            "orgAdmin": false,
            "orgUser": false,
            "adminRoleAccounts": [
              "adminRoleAccounts42"
            ],
            "userRoleAccounts": [
              "userRoleAccounts87"
            ],
            "userEnabled": 1
          }
        ]
      },
      "Response_20040": {
        "title": "Response_20040",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Data69"
            },
            "description": ""
          }
        },
        "examples": [
          {
            "data": [
              {
                "props": {
                  "firstName": "firstName37",
                  "lastName": "lastName7",
                  "company": "company14",
                  "accountAdmin": false
                },
                "orgAdmin": false,
                "orgUser": false,
                "adminRoleAccounts": [
                  "adminRoleAccounts87"
                ],
                "userRoleAccounts": [
                  "userRoleAccounts22"
                ],
                "userName": "userName13",
                "userEnabled": 1,
                "userGuid": "userGuid81"
              }
            ]
          }
        ]
      },
      "Data73": {
        "title": "Data73",
        "required": [
          "username",
          "orgAccount",
          "accounts",
          "url",
          "orgAdmin",
          "orgUser"
        ],
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "orgAccount": {
            "type": "boolean"
          },
          "accounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Account"
            },
            "description": ""
          },
          "url": {
            "type": "string"
          },
          "orgAdmin": {
            "type": "boolean"
          },
          "orgUser": {
            "type": "boolean"
          }
        },
        "examples": [
          {
            "username": "username37",
            "orgAccount": false,
            "accounts": [
              {
                "admin": false,
                "accountName": "accountName14",
                "custGuid": "custGuid42",
                "userGuid": "userGuid87",
                "userEnabled": 1
              }
            ],
            "url": "url21",
            "orgAdmin": false,
            "orgUser": false
          }
        ]
      }
    }
  },
  "tags": [
    {
      "name": "ACCESS_TOKENS",
      "description": "[Generate access tokens](https://support.lacework.com/hc/en-us//articles/360011403853)  for API requests. "
    },
    {
      "name": "SCHEMAS",
      "description": "Get details about the available Lacework schemas."
    },
    {
      "name": "AgentAccessTokens",
      "description": "To connect to the Lacework instance, Lacework agents require  an [agent access token](https://support.lacework.com/hc/en-us/articles/360005318133)."
    },
    {
      "name": "AlertChannels",
      "description": "Lacework combines [alert channels](https://support.lacework.com/hc/en-us/articles/360041773194)  with [alert rules](https://support.lacework.com/hc/en-us/articles/360042236733)  or [report rules](https://support.lacework.com/hc/en-us/articles/36004176675)  to provide a flexible method for routing alerts and reports.  <ul>  <li>For [alert channels](https://support.lacework.com/hc/en-us/articles/360041773194), you define where to  send alerts or reports, such as to Jira, Slack, or email.</li>  <li>For [alert rules](https://support.lacework.com/hc/en-us/articles/360042236733), you define information  about which alert types to send, such as critical and high severity compliance alerts.</li>  <li>For [report rules](https://support.lacework.com/hc/en-us/articles/36004176675), you define information about  which reports to send.</li>  </ul>"
    },
    {
      "name": "AlertRules",
      "description": "Lacework combines [alert channels](https://support.lacework.com/hc/en-us/articles/360041773194) and  [alert rules](https://support.lacework.com/hc/en-us/articles/360042236733) to provide a flexible method for  routing alerts.  For [alert channels](https://support.lacework.com/hc/en-us/articles/360041773194), you define information  about where to send alerts, such as to Jira, Slack, or email.  For [alert rules](https://support.lacework.com/hc/en-us/articles/360042236733), you define information  about which alert types to send, such as critical and high severity compliance alerts. "
    },
    {
      "name": "AuditLogs",
      "description": "Audit logs allow you to view the history of all actions performed within a Lacework account so you know who made changes to the system and when. For example, you can see who suppressed certain alerts, what time an authentication setting was modified, etc. For more information, see [Audit Logs](https://support.lacework.com/hc/en-us/articles/360042198473-Audit-Logs)."
    },
    {
      "name": "CloudAccounts",
      "description": "Cloud Accounts are integrations between Lacework and Cloud providers such as Amazon Web Services, Microsoft Azure, and Google Cloud Platform. "
    },
    {
      "name": "CloudActivities",
      "description": "Get information about cloud activities for the integrated AWS Cloud Accounts in your Lacework."
    },
    {
      "name": "ContainerRegistries",
      "description": "Lacework provides the ability to assess, identify, and report vulnerabilities found in the operating system software packages in a Docker container image. After integrating a container registry in Lacework, Lacework finds all container images in the registry repositories, assesses those container images for software packages with known vulnerabilities, and reports them."
    },
    {
      "name": "ContractInfo",
      "description": "Get Lacework contract information."
    },
    {
      "name": "ReportRules",
      "description": "Lacework combines [alert channels](https://support.lacework.com/hc/en-us/articles/360041773194)  and [report rules](https://support.lacework.com/hc/en-us/articles/36004176675) to provide a flexible method  for routing reports.  For [report rules](https://support.lacework.com/hc/en-us/articles/36004176675), you define information about  which reports to send.  For [alert channels](https://support.lacework.com/hc/en-us/articles/360041773194), you define where to send reports such as to Jira, Slack, or email."
    },
    {
      "name": "ResourceGroups",
      "description": ""
    },
    {
      "name": "TeamMembers",
      "description": "Team members can be granted access to multiple Lacework accounts and have different roles for each account. Team members can also be granted organization-level roles. For more information, see [Team Members](https://support.lacework.com/hc/en-us/articles/360039936974)."
    },
    {
      "name": "UserProfile",
      "description": "An organization can contain multiple accounts so you can also manage components such as alerts,  resource groups, team members, and audit logs at a more granular level inside an organization.  For more information, see [Organization Overview](https://support.lacework.com/hc/en-us/articles/360041727394)."
    }
  ]
}